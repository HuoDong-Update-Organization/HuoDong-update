'use strict';
game.import('extension',function(lib,game,ui,get,ai,_status){
return {
name:"活动武将",
editable:false,
content:function(config,pack){
//删除扩展
delete lib.extensionMenu['extension_活动武将'].delete;

//js/css文件的添加
lib.init.css(lib.assetURL+'extension/活动武将','extension');

//更新公告
game.bolShowNewPack=function(){
//更新告示
var HuoDong_update=[
'/setPlayer/',
'bugfix',
'名人堂武将平衡性调整',
'删除扩展内置序列帧特效显示',
'名称修改写法简化',
'添加欢杀武将：伊籍、公孙渊、牛马老仙、王桃',
'To be continued...',
];
//更新武将
var HuoDong_players=[
'bilibili_Emptycity','bilibili_shengxunyu','bilibili_Firewin','bilibili_suixingsifeng',
'Mbaby_xf_yiji','Mbaby_gongsunyuan','Mbaby_re_nanhualaoxian','Mbaby_wangtao',
];
//加载
var dialog=ui.create.dialog(
'<span class="text center">'+
'新人制作扩展，希望大家支持<br>新人技术不足，希望大家包涵'+
'<br>'+
'<a href="https://github.com/mengxinzxz/HuoDong-update.git">点击前往活动武将Github仓库</a>'+
'<br>'+
'活动武将 '+lib.extensionPack.活动武将.version+' 更新内容'+
'</span>','hidden');
for(var i=0;i<HuoDong_update.length;i++){
if(HuoDong_update[i]=='/setPlayer/'){
if(HuoDong_players.length) dialog.addSmall([HuoDong_players,'character']);
}
else{
var li=document.createElement('li');
li.innerHTML=HuoDong_update[i];
li.style.textAlign='left';
dialog.content.appendChild(li);
}
}
dialog.open();
var hidden=false;
if(!ui.auto.classList.contains('hidden')){
ui.auto.hide();
hidden=true;
}
game.pause();
var control=ui.create.control('确定',function(){
dialog.close();
control.close();
if(hidden) ui.auto.show();
game.resume();
});
};
lib.skill._HuoDongWuJiang_changeLog={
charlotte:true,
ruleSkill:true,
trigger:{global:[/*'chooseButtonBefore',*/'gameStart','gameDrawAfter','phaseBefore']},
filter:function(event,player){
//if(event.name=='chooseButton'&&event.parent.name!='chooseCharacter') return false;
return !lib.config.extension_活动武将_HDversion||lib.config.extension_活动武将_HDversion!=lib.extensionPack.活动武将.version;
},
direct:true,
priority:114+514-1919-810+Infinity,
content:function(){
game.saveConfig('extension_活动武将_HDversion',lib.extensionPack.活动武将.version);
game.bolShowNewPack();
},
};

//检测扩展是否存在的简化写法
game.TrueHasExtension=function(ext){
return lib.config.extensions&&lib.config.extensions.includes(ext);
};
game.HasExtension=function(ext){
return game.TrueHasExtension(ext)&&lib.config['extension_'+ext+'_enable'];
};

//十周年UI美化素材
if(game.HasExtension('十周年UI')&&game.getFileList&&game.readFile&&game.writeFile){
for(var img of ['leijin','bianzhen','mingzhi']) lib.card['zhengsu_'+img].fullskin=true;
game.getFileList('extension/十周年UI/image/card',(folders,files)=>{
//整肃
if(!files.includes('zhengsu_leijin.png')){
game.readFile('extension/活动武将/image/card/zhengsu_leijin.png',(data)=>{
game.writeFile(data,'extension/十周年UI/image/card','zhengsu_leijin.png',()=>{});
});
}
if(!files.includes('zhengsu_bianzhen.png')){
game.readFile('extension/活动武将/image/card/zhengsu_bianzhen.png',(data)=>{
game.writeFile(data,'extension/十周年UI/image/card','zhengsu_bianzhen.png',()=>{});
});
}
if(!files.includes('zhengsu_mingzhi.png')){
game.readFile('extension/活动武将/image/card/zhengsu_mingzhi.png',(data)=>{
game.writeFile(data,'extension/十周年UI/image/card','zhengsu_mingzhi.png',()=>{});
});
}
if(!files.includes('zhengsu_leijin.webp')){
game.readFile('extension/活动武将/image/card/zhengsu_leijin.webp',(data)=>{
game.writeFile(data,'extension/十周年UI/image/card','zhengsu_leijin.webp',()=>{});
});
}
if(!files.includes('zhengsu_bianzhen.webp')){
game.readFile('extension/活动武将/image/card/zhengsu_bianzhen.webp',(data)=>{
game.writeFile(data,'extension/十周年UI/image/card','zhengsu_bianzhen.webp',()=>{});
});
}
if(!files.includes('zhengsu_mingzhi.webp')){
game.readFile('extension/活动武将/image/card/zhengsu_mingzhi.webp',(data)=>{
game.writeFile(data,'extension/十周年UI/image/card','zhengsu_mingzhi.webp',()=>{});
});
}
//闪闪
if(!files.includes('bol_shanshan.png')){
game.readFile('extension/活动武将/image/card/bol_shanshan.png',(data)=>{
game.writeFile(data,'extension/十周年UI/image/card','bol_shanshan.png',()=>{});
});
}
if(!files.includes('bol_shanshan.webp')){
game.readFile('extension/活动武将/image/card/bol_shanshan.webp',(data)=>{
game.writeFile(data,'extension/十周年UI/image/card','bol_shanshan.webp',()=>{});
});
}
});
}

//Hidden--作者专属
if(lib.config.connect_nickname=='萌新（转型中）'){
lib.extensionMenu['extension_活动武将'].FenJieXianAuthor={
name:'<li>作者专属',
clear:true,
};
//检查公告
lib.extensionMenu['extension_活动武将'].HDcheckNew={
name:'检查更新公告',
clear:true,
onclick:function(bool){
game.bolShowNewPack();
},
};
//名称
lib.extensionMenu['extension_活动武将'].HDshowName={
name:'昵称显示',
intro:'打开此选项后，玩家武将牌上显示联机昵称',
init:true,
onclick:function(bool){
game.saveConfig('extension_活动武将_HDshowNamen',bool);
if(!bool&&ui._bol_show){
game._bol_show=true;
game.broadcastAll(function(){
ui._bol_show.delete();
});
}
if(bool&&game._bol_show){
game.broadcastAll(function(){
var push='<span style="-webkit-animation:bol_author 20s infinite;animation:bol_author 20s infinite;">'+lib.config.connect_nickname+'</span>';
ui._bol_show=ui.create.div('.bol_authorShow','<MARQUEE class="bol_authorShow1" direction=up behavior=alternate scrollAmount=0>'+push+'</MARQUEE>',game.me);
});
}
},
};
lib.skill._bol_show={
trigger:{global:['chooseButtonBefore','gameStart','gameDrawAfter','phaseBefore']},
filter:function(event,player){
if(event.name=='chooseButton'&&event.parent.name!='chooseCharacter') return false;
return !game._bol_anthorShow&&lib.config.extension_活动武将_HDshowName;
},
forced:true,
priority:114-514+19-19+810,
content:function(){
game._bol_anthorShow=true;
game.broadcastAll(function(){
var push='<span style="-webkit-animation:bol_author 20s infinite;animation:bol_author 20s infinite;">'+lib.config.connect_nickname+'</span>';
ui._bol_show=ui.create.div('.bol_authorShow','<MARQUEE class="bol_authorShow1" direction=up behavior=alternate scrollAmount=0>'+push+'</MARQUEE>',game.me);
});
},
};
var style=document.createElement('style');
style.innerHTML="@keyframes bol_author{"
for(var i=1;i<=20;i++){
var rand1=Math.floor(Math.random()*255),rand2=Math.floor(Math.random()*255),rand3=Math.floor(Math.random()*255),rand4=Math.random();
style.innerHTML+=i*5+'%{text-shadow: black 0 0 1px,rgba('+rand1+', '+rand2+', '+rand3+', 0.6) 0 0 2px,rgba('+rand1+', '+rand2+', '+rand3+', 0.6) 0 0 5px,rgba('+rand1+', '+rand2+', '+rand3+', 0.6) 0 0 10px,rgba('+rand1+', '+rand2+', '+rand3+', 0.6) 0 0 10px,rgba('+rand1+', '+rand2+', '+rand3+', 0.6) 0 0 20px,rgba('+rand1+', '+rand2+', '+rand3+', 0.6) 0 0 20px}';
}
style.innerHTML+="}";
document.head.appendChild(style);
//记牌器
//by cop
lib.skill._mx_cardRecord={
mark:true,
markimage:'image/card/handcard.png',
charlotte:true,
//trigger:{global:['gameStart','gameDrawAfter','phaseBefore','enterGame']},
filter:function(event,player){
if(_status.connectMode||player!=game.me) return false;
return game.hasPlayer(target=>!target.marks||!target.marks['_mx_cardRecord']);
},
firstDo:true,
direct:true,
priority:Infinity,
content:function(){
var targets=game.filterPlayer(target=>!target.marks||!target.marks['_mx_cardRecord']);
if(targets.includes(player)){
lib.skill._mx_cardRecord.localMark(player);
game.addVideo('markSkill',player,['_mx_cardRecord']);
}
targets.forEach(target=>target.send(lib.skill._mx_cardRecord.localMark,target));
},
localMark:function(player){
var name='_mx_cardRecord',info;
if(player.marks[name]) player.updateMarks();
if(lib.skill[name]) info=lib.skill[name].intro;
if(!info) return;
if(player.marks[name]) player.marks[name].info=info;
else player.marks[name]=player.mark(name,info);
player.updateMarks();
},
getInfoTranslation:function(name){
if(name.indexOf('sha')==0){
if(name=='shafire') return '火杀';
else if(name=='shathunder') return '雷杀';
else if(name=='shaice') return '冰杀';
else if(name=='shastab') return '刺杀';
}
return get.translation(name);
},
sort:function(a,b){
var suits=lib.suit.slice();
lib.suit.reverse();
var inda=suits.indexOf(a.slice(0,2)),indb=suits.indexOf(b.slice(0,2));
if(inda-indb!=0) return inda-indb;
else{
var getOrder=(num)=>{
var map={A:1,J:11,Q:12,K:13};
if(map[num]) return map[num];
return num*1;
};
return getOrder(a.slice(2))-getOrder(b.slice(2));
}
},
intro:{
name:'记牌器',
mark:function(dialog,storage,player){
dialog.addText('剩余牌数');
var map={};
var inpile=lib.inpile.slice();
var index=inpile.indexOf('sha');
var natures=lib.inpile_nature.slice();
if(index!=-1) inpile.splice(index+1,0,...natures.map(i=>'sha'+i));
inpile.forEach(name=>{
map[name]=[];
map[name][0]=0;
map[name][1]=[];
});
var infos=(ui.cardPile&&ui.cardPile.childNodes&&ui.cardPile.childNodes.length)?get.cardsInfo(Array.from(ui.cardPile.childNodes)):_status.cardPileInfos;
for(var info of infos){
var suit=info[0],number=info[1]*1,name=info[2],nature=info[3];
if(!nature) nature='';
if(map[name+nature]!==undefined){
map[name+nature][0]++;
map[name+nature][1].push(get.translation(suit)+get.strNumber(number));
}
}
var players=game.filterPlayer(i=>i!=player);
for(var target of players){
var cards=target.getCards('hsx');
if(map[name]!==undefined){
cards.forEach(card=>{
var suit=card.suit,number=card.number,name=card.name,nature=card.nature;
if(!nature) nature='';
if(map[name+nature]!==undefined){
map[name+nature][0]++;
map[name+nature][1].push(get.translation(suit)+get.strNumber(number));
}
});
}
}
for(var key in map){
map[key][1].sort(lib.skill._mx_cardRecord.sort);
}
var td,table=document.createElement('div');
table.classList.add('add-setting');
table.style.margin='0';
table.style.width='100%';
table.style.position='relative';
inpile.forEach(name=>{
td=ui.create.div('.menubutton.reduce_radius.pointerdiv.tdnode');
td.link=name;
table.appendChild(td);
td.innerHTML='<span class="yellowtext">'+lib.skill._mx_cardRecord.getInfoTranslation(name)+'</span>：剩余'+get.cnNumber(map[name][0])+'张';
td.addEventListener(lib.config.touchscreen?'touchend':'click',function(){
if(_status.dragged) return;
if(_status.justdragged) return;
var name=this.link;
var uiintro=ui.create.dialog('hidden','notouchscroll');
uiintro.add('<span class="yellowtext">'+lib.skill._mx_cardRecord.getInfoTranslation(name)+'</span>：剩余'+get.cnNumber(map[name][0])+'张');
var list=map[name][1],ind=0,strAll='';
list.forEach((i,_index)=>{
ind++;
strAll+=i+(_index==list.length-1?'':',');
if(ind>=7){
strAll+='<br>';
ind=0;
}
})
uiintro.addText(strAll);
uiintro.add(ui.create.div('.placeholder.slim'));
var rect=this.getBoundingClientRect();
console.log(uiintro);
var e={
clientX:(rect.left+20+uiintro.offsetWidth/2)*game.documentZoom,
clientY:(rect.top-10-uiintro.offsetHeight/2)*game.documentZoom
};
if(!uiintro) return;
uiintro.classList.add('popped');
uiintro.classList.add('static');
ui.window.appendChild(uiintro);
var layer=ui.create.div('.poplayer',ui.window);
var clicklayer=function(e){
if(_status.touchpopping) return;
delete _status.removePop;
uiintro.delete();
this.remove();
ui.historybar.style.zIndex='';
if(!ui.arena.classList.contains('menupaused')&&!uiintro.noresume) game.resume2();
if(e&&e.stopPropagation) e.stopPropagation();
if(uiintro._onclose){
uiintro._onclose();
}
return false;
}
layer.addEventListener(lib.config.touchscreen?'touchend':'click',clicklayer);
if(!lib.config.touchscreen) layer.oncontextmenu=clicklayer;
lib.placePoppedDialog(uiintro,e);
uiintro.style.zIndex=21;
var clickintro=function(){
if (_status.touchpopping) return;
delete _status.removePop;
layer.remove();
this.delete();
ui.historybar.style.zIndex='';
if(!ui.arena.classList.contains('menupaused')&&!uiintro.noresume) game.resume2();
if(uiintro._onclose){
uiintro._onclose();
}
};
var currentpop=this;
_status.removePop=function(node){
if(node==currentpop) return false;
layer.remove();
uiintro.delete();
delete _status.removePop;
return true;
};
if(uiintro.clickintro){
uiintro.listen(function(){
_status.clicked=true;
});
uiintro._clickintro=clicklayer;
}
else if(!lib.config.touchscreen){
uiintro.addEventListener('mouseleave',clickintro);
uiintro.addEventListener('click',clickintro);
}
else if(uiintro.touchclose) uiintro.listen(clickintro);
uiintro._close=clicklayer;
game.pause2();
return uiintro;
});
});
dialog.content.appendChild(table);
dialog.addText('<br>注：上述数量为除开自己区域内的牌（自己武将牌上的牌也被排除开来）和场上所有装备牌之外，得到的统计数字。点击每一栏可查看详情');
},
},
};
lib.translate._mx_cardRecord='记牌器';
}

//官方武将包保护机制
//添加
lib.config.all.sgscharacters.push('diy');
//检测
var openCharacterPack=lib.config.all.sgscharacters.filter(i=>lib.config.hiddenCharacterPack.includes(i));
if(openCharacterPack.length){
lib.config.hiddenCharacterPack.removeArray(openCharacterPack);
game.saveConfig('hiddenCharacterPack',lib.config.hiddenCharacterPack);
alert('检测到官方武将包'+get.translation(openCharacterPack)+'被隐藏，可能会使得部分技能函数无法读取从而导致问题，即将为您解除这些武将包的隐藏并重启游戏');
setTimeout(function(){
game.reload();
},2000);
}

//活动配件检测
if(lib.config.extensions){
var pjNum=((game.HasExtension('活动配件')&&lib.extensionPack['活动配件'].version)?lib.extensionPack['活动配件'].version:'0');
//更新配件版本
if(game.TrueHasExtension('活动配件')&&!game.HasExtension('活动配件')){
alert('检测到未开启活动配件，即将为您开启活动配件并重启游戏');
setTimeout(function(){
game.saveExtensionConfig('活动配件','enable',true);
game.reload();
},1000);
}
else if(!game.TrueHasExtension('活动配件')||pjNum!='0.0.9'){//配件版本precPeiJian
alert((!game.TrueHasExtension('活动配件')?'检测到未安装活动配件，将为您自动安装':'配件版本与现版本不一致，正在您自动更新活动配件')+'\n若长时间未完成导入，请将活动配件进行万能导入\n活动配件位于活动武将扩展文件的最外层');
window.HuoDongOpenLoading=function(){
var dialog=ui.create.div('.HuoDong-loading',document.body);
var text=ui.create.div('.HuoDong-loading-text',dialog);
dialog.subViews={text};
return dialog;
};
game.DaoRuPeiJian=function(){
var loading=window.HuoDongOpenLoading();
loading.subViews.text.innerHTML='正在导入配件，请稍后。。。。。。';
var fileToLoad='extension/活动武将/活动配件.zip';
if(game.readFile){
game.readFile(fileToLoad,function(data){
game.importExtension(data,function(){
alert('配件导入完成，游戏即将重启');
game.reload();
});
});
}
};
setTimeout(function(){
game.DaoRuPeiJian();
},1000);
}
}

//precBoss
//Boss模式编辑
if(get.mode()=='boss'){
//等阶设置（所有boss对战的等阶加成均为神武再世等阶加成方式）
if(!lib.config.extension_活动武将_Boss_TZ_level) lib.config.extension_活动武将_Boss_TZ_level='1';
if(!lib.config.extension_活动武将_Boss_YZ_level) lib.config.extension_活动武将_Boss_YZ_level='1';
lib.skill._boss_tz_level={
charlotte:true,
ruleSkill:true,
trigger:{global:'gameStart'},
firstDo:true,
priority:Infinity,
direct:true,
content:function(){
var num1=lib.config.extension_活动武将_Boss_TZ_level;
var num2=lib.config.extension_活动武将_Boss_YZ_level;
switch(player.identity){
case 'cai':
player.node.framebg.dataset.decoration='none';
switch(num1){
case '2':
player.directgain(get.cards(1));
break;
case '3':
player.directgain(get.cards(1));
player.addSkill('boss_tz_sha');
player.maxHp=player.maxHp+1;
player.hp=player.hp+1;
player.update();
player.node.framebg.dataset.decoration='bronze';
break;
case '4':
player.directgain(get.cards(2));
player.addSkill('boss_tz_sha');
player.addSkill('boss_tz_draw');
player.maxHp=player.maxHp+1;
player.hp=player.hp+1;
player.update();
player.node.framebg.dataset.decoration='silver';
break;
case '5':
player.directgain(get.cards(2));
player.addSkill('boss_tz_sha');
player.addSkill('boss_tz_draw');
player.addSkill('boss_tz_chongsheng');
player.maxHp=player.maxHp+2;
player.hp=player.hp+2;
player.update();
player.node.framebg.dataset.decoration='gold';
break;
}
player.node.framebg.dataset.auto=player.node.framebg.dataset.decoration;
break;
case 'zhu': case 'zhong':
if(game.boss_shenwuzaishi){
player.node.framebg.dataset.decoration='none';
switch(num2){
case '2':
player.directgain(get.cards(1));
player.addSkill('boss_yz_equip');
player.maxHp=player.maxHp+1;
player.hp=player.hp+1;
player.update();
break;
case '3':
player.directgain(get.cards(1));
player.addSkill('boss_yz_sha');
player.addSkill('boss_yz_shax');
player.maxHp=player.maxHp+2;
player.hp=player.hp+2;
player.update();
player.node.framebg.dataset.decoration='bronze';
break;
case '4':
player.directgain(get.cards(2));
player.addSkill('boss_yz_sha');
player.addSkill('boss_yz_draw');
player.maxHp=player.maxHp+3;
player.hp=player.hp+3;
player.update();
player.node.framebg.dataset.decoration='silver';
break;
case '5':
player.directgain(get.cards(2));
player.addSkill('boss_yz_sha');
player.addSkill('boss_yz_kunshou');
player.maxHp=player.maxHp+5;
player.hp=player.hp+5;
player.update();
player.node.framebg.dataset.decoration='gold';
break;
}
player.node.framebg.dataset.auto=player.node.framebg.dataset.decoration;
}
break;
}
},
};
//神武再世
lib.boss.boss_taowu.randchoice=function(name,list){
if(Math.random()>1/3) return name;
else{
var arr=['shen_caocao','shen_simayi','shen_guanyu','shen_zhugeliang','shen_zhaoyun','shen_zhouyu','shen_lvmeng','shen_lvbu','shen_liubei','shen_luxun','shen_ganning','ol_zhangliao','shen_zhenji','shen_caopi','key_kagari','key_shiki','db_key_hina','shen_sunquan','Mbaby_shen_zhangjiao'].filter(function(name){
return lib.character[name]&&(!lib.character[name][4]||!lib.character[name][4].includes('unseen'));
});
arr.removeArray(list);
return arr.randomGet();
}
};
lib.boss.boss_taowu.control=function(type,control){
if(type=='cancel'){
if(!control.classList.contains('glow')) return;
var dialog=control.dialog;
dialog.content.removeChild(control.backup1);
dialog.buttons.removeArray(control.backup2);

game.uncheck();
game.check();
}
else{
var control=ui.create.control('神将',function(){
if(ui.cheat2&&ui.cheat2.dialog==_status.event.dialog){
return;
}
var dialog=_status.event.dialog;
this.dialog=dialog;
if(this.classList.contains('glow')){
this.backup1.remove();
dialog.buttons.removeArray(this.backup2);
}
else{
var links=[];
for(var i=0;i<dialog.buttons.length;i++){
links.push(dialog.buttons[i].link);
}
for(var i=0;i<this.backup2.length;i++){
if(links.includes(this.backup2[i].link)){
this.backup2[i].style.display='none';
}
else{
this.backup2[i].style.display='';
}
}
dialog.content.insertBefore(this.backup1,dialog.buttons[0].parentNode);
dialog.buttons.addArray(this.backup2);
}
this.classList.toggle('glow');

game.uncheck();
game.check();
});
control.backup1=ui.create.div('.buttons');
control.backup2=ui.create.buttons(['shen_caocao','shen_simayi','shen_guanyu','shen_zhugeliang','shen_zhaoyun','shen_zhouyu','shen_lvmeng','shen_lvbu','shen_liubei','shen_luxun','shen_ganning','ol_zhangliao','shen_zhenji','shen_caopi','key_kagari','key_shiki','db_key_hina','shen_sunquan','Mbaby_shen_zhangjiao'].filter(function(name){
return lib.character[name]&&(!lib.character[name][4]||!lib.character[name][4].includes('unseen'));
}),'character',control.backup1);
return control;
}
};
lib.boss.boss_taowu.init=function(){
game.boss_shenwuzaishi=true;
game.addGlobalSkill('boss_shenwuzaishi');
game.addGlobalSkill('TheDayIBecomeAGod');
game.addGlobalSkill('thedayibecomeagod');
var list=['lebu','bingliang'];
for(var i=0;i<game.players.length;i++){
switch(game.players[i].name1){
case 'shen_guanyu':{
game.players[i].equip(game.createCard2('guilongzhanyuedao','spade',5));
lib.inpile.add('guilongzhanyuedao');
list.push('qinglong');
break;
}
case 'shen_zhugeliang':{
game.players[i].equip(game.createCard2('qimenbagua','spade',2));
list.push('bagua');
lib.inpile.add('qimenbagua');
break;
}
case 'shen_zhouyu':{
game.players[i].equip(game.createCard2('chiyanzhenhunqin','diamond',1));
list.push('zhuque');
lib.inpile.add('chiyanzhenhunqin');
break;
}
case 'shen_caocao':{
game.players[i].equip(game.createCard2('juechenjinge','spade',5));
list.push('jueying');
lib.inpile.add('juechenjinge');
break;
}
case 'shen_zhaoyun':{
game.players[i].equip(game.createCard2('chixueqingfeng','spade',6));
list.push('qinggang');
lib.inpile.add('chixueqingfeng');
break;
}
case 'shen_lvbu':{
game.players[i].equip(game.createCard2('xiuluolianyuji','diamond',12));
list.push('fangtian');
lib.inpile.add('xiuluolianyuji');
break;
}
case 'shen_simayi':{
game.players[i].equip(game.createCard2('xuwangzhimian','diamond',4));
lib.inpile.add('xuwangzhimian');
break;
}
case 'shen_liubei':{
game.players[i].equip(game.createCard2('longfenghemingjian','spade',2));
lib.inpile.add('longfenghemingjian');
list.push('cixiong');
break;
}
case 'shen_lvmeng':{
game.players[i].equip(game.createCard2('guofengyupao','diamond',3));
lib.inpile.add('guofengyupao');
break;
}
case 'shen_luxun':{
game.players[i].equip(game.createCard2('qicaishenlu','diamond',3));
lib.inpile.add('qicaishenlu');
break;
}
case 'shen_ganning':case 'key_iwasawa':{
game.players[i].equip(game.createCard2('jinwuluorigong','heart',5));
lib.inpile.add('jinwuluorigong');
list.push('qilin');
break;
}
case 'ol_zhangliao':case 'key_noda':{
game.players[i].equip(game.createCard2('xingtianpojunfu','diamond',5));
lib.inpile.add('xingtianpojunfu');
list.push('guanshi');
break;
}
case 'shen_zhenji':{
game.players[i].equip(game.createCard2('lingsheji','club',12));
lib.inpile.add('lingsheji');
break;
}
case 'shen_caopi':{
game.players[i].equip(game.createCard2('shanrangzhaoshu','spade',13));
lib.inpile.add('shanrangzhaoshu');
break;
}
case 'key_kagari':{
game.players[i].equip(game.createCard2('goujiangdesidai','heart',1));
lib.inpile.add('goujiangdesidai');
break;
}
case 'key_shiki':{
game.players[i].equip(game.createCard2('niaobaidaowenha','diamond',13));
lib.inpile.add('niaobaidaowenha');
break;
}
case 'db_key_hina':{
game.players[i].equip(game.createCard2('shenzhixiunvfu','spade',13));
lib.inpile.add('shenzhixiunvfu');
break;
}
case 'shen_sunquan':{
game.players[i].equip(game.createCard2('changandajian_equip4','heart',10));
break;
}
case 'Mbaby_shen_zhangjiao':{
game.players[i].equip(game.createCard2('bol_sanshou','diamond',12));
break;
}
}
}
lib.inpile.remove('wuzhong');
lib.inpile.remove('jiedao');
lib.inpile.add('sadouchengbing');
lib.inpile.add('yihuajiemu');
lib.inpile.add('gubuzifeng');
for(var i=0;i<ui.cardPile.childElementCount;i++){
var node=ui.cardPile.childNodes[i];
if(node.name=='wuzhong') node.init([node.suit,node.number,'sadouchengbing']);
else if(node.name=='jiedao') node.init([node.suit,node.number,'yihuajiemu']);
else if(list.includes(node.name)){
lib.inpile.remove(node.name);
node.remove();
}
}
var cards=[
game.createCard2('gubuzifeng','club',5),
game.createCard2('gubuzifeng','diamond',7)
];
while(cards.length>0){
ui.cardPile.insertBefore(cards.shift(),ui.cardPile.childNodes[get.rand(0,ui.cardPile.childElementCount-1)]);
}
lib.inpile.sort(lib.sort.card);
};
}

//precC
//对局机制优化
//整肃
if(lib.config.extension_活动武将_HD_zhengsu){
lib.rank.rarity.epic.addArray(['sp_huangfusong','sp_zhujun']);
lib.skill.zhengsu.subSkill.leijin={
mod:{
aiOrder:function(player,card,num){
if(typeof card.number!='number') return;
var history=player.getHistory('useCard',function(evt){
return evt.isPhaseUsing();
});
if(history.length==0) return num+10*(14-card.number);
var num=get.number(history[0].card);
if(!num) return;
for(var i=1;i<history.length;i++){
var num2=get.number(history[i].card);
if(!num2||num2<=num) return;
num=num2;
}
if(card.number>num) return num+10*(14-card.number);
},
},
mark:true,
trigger:{player:'useCard1'},
lastDo:true,
charlotte:true,
forced:true,
popup:false,
init:function(player){
var zsbgxx=document.querySelector('.zhengsubeijing1');
var zsbggg=document.querySelector('.zhengsubeijing2');
if(!zsbgxx){
player.storage.zhengsu_leijingua=ui.create.div('.zhengsubeijing1',ui.arena);
player.storage.zhengsu_leijingua.innerHTML='发起者为'+get.translation(player)+'<br>还需出3张牌'+'<br>出牌点数递增';
player.storage.zhengsu_leijingua2=true;
}
else if(!zsbggg){
player.storage.zhengsu_leijingua=ui.create.div('.zhengsubeijing2',ui.arena);
player.storage.zhengsu_leijingua.innerHTML='发起者为'+get.translation(player)+'<br>还需出3张牌'+'<br>出牌点数递增';
player.storage.zhengsu_leijingua3=true;
}
else{
player.storage.zhengsu_leijingua=ui.create.div('.zhengsubeijing3',ui.arena);
player.storage.zhengsu_leijingua.innerHTML='发起者为'+get.translation(player)+'<br>还需出3张牌'+'<br>出牌点数递增';
}
},
onremove:function(player){
var zsbgxx=document.querySelector('.zhengsubeijing1');
var zsbggg=document.querySelector('.zhengsubeijing2');
var zsbgxg=document.querySelector('.zhengsubeijing3');
if(zsbgxx) zsbgxx.parentNode.removeChild(zsbgxx);
if(zsbggg) zsbggg.parentNode.removeChild(zsbggg);
if(zsbgxg) zsbgxg.parentNode.removeChild(zsbgxg);
delete player.storage.zhengsu_leijin_markcount;
delete player.storage.zhengsu_leijingua2;
delete player.storage.zhengsu_leijingua3;
delete player.storage.zhengsu_leijin;
},
filter:function(event,player){
return player.isPhaseUsing()&&player.storage.zhengsu_leijin!==false;
},
content:function(){
var list=player.getHistory('useCard',function(evt){
return evt.isPhaseUsing(player);
});
var goon=true;
for(var i=0;i<list.length;i++){
var num=get.number(list[i].card);
if(typeof num!='number'){
goon=false;
break;
}
if(i>0){
var num2=get.number(list[i-1].card);
if(typeof num2!='number'||num2>=num){
goon=false;
break;
}
}
if(goon==true&&list.length<=2){
player.storage.zhengsu_leijingua.innerHTML='发起者为'+get.translation(player)+'<br>还需出'+(3-list.length)+'张牌'+'<br>出牌点数大于'+get.number(list[i].card);}else if(goon==true&&list.length>2){
player.storage.zhengsu_leijingua.innerHTML='发起者为'+get.translation(player)+'<br>出牌点数大于'+get.number(list[i].card);
}
}
if(!goon){
game.broadcastAll(function(player){
player.storage.zhengsu_leijin=false;
if(player.marks.zhengsu_leijin) player.marks.zhengsu_leijin.firstChild.innerHTML='╳';
delete player.storage.zhengsu_leijin_markcount;
if(player.storage.zhengsu_leijingua2){
var zsbgxx=document.querySelector('.zhengsubeijing1');
if(zsbgxx) zsbgxx.parentNode.removeChild(zsbgxx);
}
else if(player.storage.zhengsu_leijingua3){
var zsbggg=document.querySelector('.zhengsubeijing2');
if(zsbggg) zsbggg.parentNode.removeChild(zsbggg);
}
else{
var zsbgxg=document.querySelector('.zhengsubeijing3');
if(zsbgxg) zsbgxg.parentNode.removeChild(zsbgxg);
}
},player);
}
else{
if(list.length>2){
player.storage.zhengsu_leijin=true;
game.broadcastAll(function(player,num){
if(player.marks.zhengsu_leijin) player.marks.zhengsu_leijin.firstChild.innerHTML='○';
player.storage.zhengsu_leijin=true;
player.storage.zhengsu_leijin_markcount=num;
},player,num);
}
else game.broadcastAll(function(player,num){
player.storage.zhengsu_leijin_markcount=num;
},player,num);
}
player.markSkill('zhengsu_leijin');
},
intro:{content:'<li>条件：回合内所有于出牌阶段使用的牌点数递增且不少于三张。'},
};
lib.skill.zhengsu.subSkill.bianzhen={
mark:true,
trigger:{player:'useCard1'},
firstDo:true,
charlotte:true,
forced:true,
popup:false,
init:function(player){
var zsbgxx=document.querySelector('.zhengsubeijing1');
var zsbggg=document.querySelector('.zhengsubeijing2');
if(!zsbgxx){
player.storage.zhengsu_bianzhengua=ui.create.div('.zhengsubeijing1',ui.arena);
player.storage.zhengsu_bianzhengua.innerHTML='发起者为'+get.translation(player)+'<br>还需出2张牌'+'<br>出牌花色相同';
player.storage.zhengsu_bianzhengua2=true;
}
else if(!zsbggg){
player.storage.zhengsu_bianzhengua=ui.create.div('.zhengsubeijing2',ui.arena);
player.storage.zhengsu_bianzhengua.innerHTML='发起者为'+get.translation(player)+'<br>还需出2张牌'+'<br>出牌花色相同';
player.storage.zhengsu_bianzhengua3=true;
}
else{
player.storage.zhengsu_bianzhengua=ui.create.div('.zhengsubeijing3',ui.arena);
player.storage.zhengsu_bianzhengua.innerHTML='发起者为'+get.translation(player)+'<br>还需出2张牌'+'<br>出牌花色相同';
}
},
onremove:function(player){
var zsbgxx=document.querySelector('.zhengsubeijing1');
var zsbggg=document.querySelector('.zhengsubeijing2');
var zsbgxg=document.querySelector('.zhengsubeijing3');
if(zsbgxx) zsbgxx.parentNode.removeChild(zsbgxx);
if(zsbggg) zsbggg.parentNode.removeChild(zsbggg);
if(zsbgxg) zsbgxg.parentNode.removeChild(zsbgxg);
delete player.storage.zhengsu_bianzhen;
delete player.storage.zhengsu_bianzhengua2;
delete player.storage.zhengsu_bianzhengua3;
},
filter:function(event,player){
return player.isPhaseUsing()&&player.storage.zhengsu_bianzhen!==false;
},
content:function(){
var list=player.getHistory('useCard',function(evt){
return evt.isPhaseUsing();
});
var goon=true,suit=get.suit(list[0].card,false);
if(goon==true&&list.length<=1) player.storage.zhengsu_bianzhengua.innerHTML='发起者为'+get.translation(player)+'<br>还需出'+(2-list.length)+'张牌'+'<br>出牌花色为'+get.translation(suit);
else if(goon==true&&list.length>1) player.storage.zhengsu_bianzhengua.innerHTML='发起者为'+get.translation(player)+'<br>出牌花色为'+get.translation(suit);
if(suit=='none') goon=false;
else{
for(var i=1;i<list.length;i++){
if(get.suit(list[i])!=suit){
goon=false;
break;
}
if(goon==true&&list.length<=1) player.storage.zhengsu_bianzhengua.innerHTML='发起者为'+get.translation(player)+'<br>还需出'+(2-list.length)+'张牌'+'<br>出牌花色为'+get.translation(get.suit(list[i]));
else if(goon==true&&list.length>1) player.storage.zhengsu_bianzhengua.innerHTML='发起者为'+get.translation(player)+'<br>出牌花色为'+get.translation(get.suit(list[i]));
}
}
if(!goon){
game.broadcastAll(function(player){
player.storage.zhengsu_bianzhen=false;
if(player.marks.zhengsu_bianzhen) player.marks.zhengsu_bianzhen.firstChild.innerHTML='╳';
if(player.storage.zhengsu_bianzhengua2){
var zsbgxx=document.querySelector('.zhengsubeijing1');
if(zsbgxx) zsbgxx.parentNode.removeChild(zsbgxx);
}
else if(player.storage.zhengsu_bianzhengua3){
var zsbggg=document.querySelector('.zhengsubeijing2');
if(zsbggg) zsbggg.parentNode.removeChild(zsbggg);
}
else{
var zsbgxg=document.querySelector('.zhengsubeijing3');
if(zsbgxg) zsbgxg.parentNode.removeChild(zsbgxg);
}
},player);
}
else if(list.length>1){
game.broadcastAll(function(player){
if(player.marks.zhengsu_bianzhen) player.marks.zhengsu_bianzhen.firstChild.innerHTML='○';
player.storage.zhengsu_bianzhen=true;
},player);
}
},
intro:{content:'<li>条件：回合内所有于出牌阶段使用的牌花色相同且不少于两张。'},
ai:{
effect:{
player_use:function(card,player,target){
if(typeof card!='object'||!player.isPhaseUsing()) return;
var suitx=get.suit(card);
var history=player.getHistory('useCard');
if(!history.length){
var val=0;
if(player.hasCard(function(cardx){
return get.suit(cardx)==suitx&&card!=cardx&&(!card.cards||!card.cards.includes(cardx))&&player.hasValueTarget(cardx);
},'hs')) val=[2,0.1];
if(val) return val;
return;
}
var num=0;
var suit=false;
for(var i=0;i<history.length;i++){
var suit2=get.suit(history[i].card);
if(!lib.suit.includes(suit2)) return;
if(suit&&suit!=suit2) return;
suit=suit2;
num++;
}
if(suitx==suit&&num==1) return [1,0.1];
if(suitx!=suit&&(num>1||num<=1&&player.hasCard(function(cardx){
return get.suit(cardx)==suit&&player.hasValueTarget(cardx);
},'hs'))) return 'zeroplayertarget';
},
},
},
};
lib.skill.zhengsu.subSkill.mingzhi={
mark:true,
trigger:{player:'loseAfter'},
firstDo:true,
charlotte:true,
forced:true,
popup:false,
init:function(player){
var zsbgxx=document.querySelector('.zhengsubeijing1');
var zsbggg=document.querySelector('.zhengsubeijing2');
if(!zsbgxx){
player.storage.zhengsu_mingzhigua=ui.create.div('.zhengsubeijing1',ui.arena);
player.storage.zhengsu_mingzhigua.innerHTML='发起者为'+get.translation(player)+'<br>需弃置2张牌'+'<br>弃置花色不同';
player.storage.zhengsu_mingzhigua2=true;
}
else if(!zsbggg){
player.storage.zhengsu_mingzhigua=ui.create.div('.zhengsubeijing2',ui.arena);
player.storage.zhengsu_mingzhigua.innerHTML='发起者为'+get.translation(player)+'<br>需弃置2张牌'+'<br>弃置花色不同';
player.storage.zhengsu_mingzhigua3=true;
}
else{
player.storage.zhengsu_mingzhigua=ui.create.div('.zhengsubeijing3',ui.arena);
player.storage.zhengsu_mingzhigua.innerHTML='发起者为'+get.translation(player)+'<br>需弃置2张牌'+'<br>弃置花色不同';
}
},
onremove:function(player){
var zsbgxx=document.querySelector('.zhengsubeijing1');
var zsbggg=document.querySelector('.zhengsubeijing2');
var zsbgxg=document.querySelector('.zhengsubeijing3');
if(zsbgxx) zsbgxx.parentNode.removeChild(zsbgxx);
if(zsbggg) zsbggg.parentNode.removeChild(zsbggg);
if(zsbgxg) zsbgxg.parentNode.removeChild(zsbgxg);
delete player.storage.zhengsu_mingzhi_list;
delete player.storage.zhengsu_mingzhi;
delete player.storage.zhengsu_mingzhi_markcount;
delete player.storage.zhengsu_mingzhigua2;
delete player.storage.zhengsu_mingzhigua3;
},
filter:function(event,player){
if(player.storage.zhengsu_mingzhi===false||event.type!='discard') return false;
var evt=event.getParent('phaseDiscard');
return evt&&evt.player==player;
},
content:function(){
var goon=true,list=[];
player.getHistory('lose',function(event){
if(!goon||event.type!='discard') return false;
var evt=event.getParent('phaseDiscard');
if(evt&&evt.player==player){
for(var i of event.cards2){
var suit=get.suit(i,player);
if(list.includes(suit)){
goon=false;
break;
}
else list.push(suit);
}
}
});
if(!goon){
game.broadcastAll(function(player){
player.storage.zhengsu_mingzhi=false;
if(player.marks.zhengsu_mingzhi) player.marks.zhengsu_mingzhi.firstChild.innerHTML='╳';
if(player.storage.zhengsu_mingzhigua2){
var zsbgxx=document.querySelector('.zhengsubeijing1');
if(zsbgxx) zsbgxx.parentNode.removeChild(zsbgxx);
}
else if(player.storage.zhengsu_mingzhigua3){
var zsbggg=document.querySelector('.zhengsubeijing2');
if(zsbggg) zsbggg.parentNode.removeChild(zsbggg);
}
else{
var zsbgxg=document.querySelector('.zhengsubeijing3');
if(zsbgxg) zsbgxg.parentNode.removeChild(zsbgxg);
}
delete player.storage.zhengsu_mingzhi_list;
},player);
}
else{
if(list.length>1){
game.broadcastAll(function(player,list){
if(player.marks.zhengsu_mingzhi) player.marks.zhengsu_mingzhi.firstChild.innerHTML='○';
player.storage.zhengsu_mingzhi=true;
player.storage.zhengsu_mingzhi_list=list;
player.storage.zhengsu_mingzhi_markcount=list.length;
},player,list);
}
else game.broadcastAll(function(player,list){
player.storage.zhengsu_mingzhi_list=list;
player.storage.zhengsu_mingzhi_markcount=list.length;
},player,list);
}
player.markSkill('zhengsu_mingzhi');
},
intro:{content:'<li>条件：回合内所有于弃牌阶段弃置的牌花色均不相同且不少于两张。'},
};
lib.translate.spyanji_info='出牌阶段开始时，你可以进行'+get.ZhengSuInform()+'。若如此做，弃牌阶段结束时，若你整肃成功，你获得整肃奖励。';
lib.translate.spzhengjun_info='出牌阶段开始时，你可以进行'+get.ZhengSuInform()+'。若如此做，弃牌阶段结束时，若你整肃成功，你获得整肃奖励，然后你可以选择一名其他角色，令其也获得整肃奖励。';
lib.translate.houfeng_info='每轮限一次，一名其他角色的出牌阶段开始时，若其在你的攻击范围内，则你可以令其进行'+get.ZhengSuInform()+'。若如此做，其本回合弃牌阶段结束时，若其整肃成功，你与其获得整肃奖励。';
}
//仁库
if(lib.config.extension_活动武将_HD_renku){
game.updateRenku = function() {
game.broadcast(function(renku) {
_status.renku = renku;
}, _status.renku);
if (!window.rkbg) {
window.rkbg = ui.create.div('.renkubeijinggua', ui.arena);
if (lib.config.hdwj_renkuIndex) {
window.rkbg.style.setProperty('--l', Math.round(lib.config.hdwj_renkuIndex.x * document.body.offsetWidth) + 'px');
window.rkbg.style.setProperty('--t', Math.round(lib.config.hdwj_renkuIndex.y * document.body.offsetHeight) + 'px');
}
}
if (_status.renku.length < 6) {
window.rkbg.innerHTML = '仁' + _status.renku.length;
}
else {
window.rkbg.innerHTML = '仁' + '<b><font color=\"#FF5500\">' + _status.renku.length;
}
var flag = 0, ol = 0, ot = 0;
function defaultevent(e) {
e.preventDefault();
}
if (lib.config.touchscreen) {
window.rkbg.addEventListener('touchstart', function(e) {
var evt = e || window.event;
ol = evt.touches[0].clientX - window.rkbg.offsetLeft;
ot = evt.touches[0].clientY - window.rkbg.offsetTop;
document.addEventListener('touchmove', defaultevent, false);
});
window.rkbg.addEventListener('touchmove', function(e) {
var evt = e || window.event;
var oleft = evt.touches[0].clientX - ol;
var otop = evt.touches[0].clientY - ot;
window.rkbg.style.left = oleft + 'px';
window.rkbg.style.top = otop + 'px';
});
window.rkbg.addEventListener('touchend', function() {
if (!lib.config.hdwj_renkuIndex) {
lib.config.hdwj_renkuIndex = {
x: this.offsetLeft / document.body.offsetWidth,
y: this.offsetTop / document.body.offsetHeight,
}
} else {
lib.config.hdwj_renkuIndex.x = this.offsetLeft / document.body.offsetWidth;
lib.config.hdwj_renkuIndex.y = this.offsetTop / document.body.offsetHeight;
}
game.saveConfig('hdwj_renkuIndex', lib.config.hdwj_renkuIndex);
document.removeEventListener('touchmove', defaultevent);
});
} else {
window.rkbg.onmousedown = function(e) {
var evt = e || window.event;
if (document.setCapture) this.setCapture();
if (window.captureEvents) window.captureEvents(Event.MOUSEMOVE | Event.MOUSEUP);
flag = 1;
ol = evt.clientX - window.rkbg.offsetLeft;
ot = evt.clientY - window.rkbg.offsetTop;
}
document.onmousemove = function(e) {
var evt = e || window.event;
if (flag) {
window.rkbg.style.left = parseInt(evt.clientX - ol) + 'px';
window.rkbg.style.top = parseInt(evt.clientY - ot) + 'px';
} else {
return null;
}
}
window.rkbg.onmouseup = function() {
if (!lib.config.hdwj_renkuIndex) {
lib.config.hdwj_renkuIndex = {
x: this.offsetLeft / document.body.offsetWidth,
y: this.offsetTop / document.body.offsetHeight,
}
} else {
lib.config.hdwj_renkuIndex.x = this.offsetLeft / document.body.offsetWidth;
lib.config.hdwj_renkuIndex.y = this.offsetTop / document.body.offsetHeight;
}
game.saveConfig('hdwj_renkuIndex', lib.config.hdwj_renkuIndex);
if (document.releaseCapture) this.releaseCapture();
if (window.releaseEvents) window.releaseEvents(Event.MOUSEMOVE | Event.MOUSEUP); flag = 0;
}
}

if (_status.renku.length == 0) {
window.rkbg.remove(window.rkbg);
window.rkbg = null;
}
else window.rkbg.onclick = function() {
if (!window.dialogguagua) {
window.dialogguagua = ui.create.dialog('仁库', _status.renku);
window.rkbg.innerHTML = '❌';
}
else {
window.dialogguagua.remove();
window.dialogguagua = null;
if (_status.renku.length < 6) {
window.rkbg.innerHTML = '仁' + _status.renku.length;
}
else {
window.rkbg.innerHTML = '仁' + '<b><font color=\"#FF5500\">' + _status.renku.length;
}
}
}
}
}

//将键社神武将移至DIY包
if(lib.config.extension_活动武将_keymove){
delete lib.characterSort.extra.extra_key;
delete lib.characterPack.extra.key_kagari;
delete lib.characterPack.extra.key_shiki;
delete lib.characterPack.extra.db_key_hina;
delete lib.character.key_kagari;
delete lib.character.key_shiki;
delete lib.character.db_key_hina;
lib.characterSort.diy.bilibili_key=['key_kagari','key_shiki','db_key_hina'];
lib.characterPack.diy.key_kagari=['female','shen',3,['kagari_zongsi'],[]];
lib.characterPack.diy.key_shiki=['female','shen','3/5',['shiki_omusubi'],[]];
lib.characterPack.diy.db_key_hina=['female','key',3,['hina_shenshi','hina_xingzhi'],['doublegroup:key:shen']];
lib.translate.bilibili_key='论外';
if(lib.config.characters.includes('diy')){
lib.character.key_kagari=['female','shen',3,['kagari_zongsi'],[]];
lib.character.key_shiki=['female','shen','3/5',['shiki_omusubi'],[]];
lib.character.db_key_hina=['female','key',3,['hina_shenshi','hina_xingzhi'],['doublegroup:key:shen']];
}
}

//precGuoZhan(分界线，便于我搜过来)
game.bolLoadGuoZhan=function(){
//国战武将技能修复
if(get.config('onlyguozhan')){
//------------------------------删除武将------------------------------//
if(lib.config.extension_活动武将_keymove){
delete lib.characterPack.mode_guozhan.gz_key_ushio;
delete lib.character.gz_key_ushio;
lib.characterSort.diy.bilibili_key.push('key_ushio');
lib.characterPack.diy.key_ushio=['female','key',3,['ushio_huanxin','ushio_xilv'],['doublegroup:key:wei:shu:wu:qun:jin']];
if(lib.config.characters.includes('diy')) lib.character.key_ushio=['female','key',3,['ushio_huanxin','ushio_xilv'],['doublegroup:key:wei:shu:wu:qun:jin']];
lib.translate.key_ushio='冈崎汐';
}
//------------------------------删除武将------------------------------//

//------------------------------线上还原+增改武将------------------------------//
//国战武将补充
lib.characterSort.mode_guozhan.bilibili_GuoZhan=[];
lib.translate.bilibili_GuoZhan='国战补充';
//技能
var skill_guozhan={
//杜预
gzwuku:{
audio:'spwuku',
inherit:'spwuku',
filter:function(event,player){
if(get.type(event.card)!='equip') return false;
if(event.player.isFriendOf(player)) return false;
return player.countMark('spwuku')<2;
},
},
//司马伷
gznaxiang:{
audio:'naxiang',
inherit:'naxiang',
},
//卞夫人
gzwanwei:{
audio:'wanwei',
inherit:'fuwei',
},
};
for(var i in skill_guozhan){
lib.skill[i]=skill_guozhan[i];
}
//动态翻译
var dynamicTranslate_guozhan={
};
for(var i in dynamicTranslate_guozhan){
lib.dynamicTranslate[i]=dynamicTranslate_guozhan[i];
}
//翻译
var translate_guozhan={
gzwuku:'武库',
gzwuku_info:'锁定技，当有其他势力的角色使用装备牌时，若你的“武库”数小于2，则你获得一个“武库”。',
gznaxiang:'纳降',
gznaxiang_info:'锁定技，当你受到其他角色造成的伤害后，或你对其他角色造成伤害后，你对其发动〖才望〗时的“弃置”改为“获得”直到你的下回合开始。',
gzwanwei:'挽危',
};
for(var i in translate_guozhan){
lib.translate[i]=translate_guozhan[i];
}
//武将
var character_guozhan={
gz_sp_duyu:['male','qun',4,['gzwuku','spmiewu'],[]],
gz_simazhou:['male','jin',4,['caiwang','gznaxiang'],[]],
gz_dingfeng:['male','wu',4,['duanbing','fenxun'],['gzskin']],
gz_bianfuren:['female','wei',3,['gzwanwei','gzyuejian'],[]],
gz_lvfan:['male','wu',3,['gzdiaodu','gzdiancai'],[]],
gz_re_xushu:['male','shu',4,['gzqiance','gzjujian'],['gzskin']],
gz_gongsunyuan:['male','ye',4,['gzrehuaiyi','gzrezisui'],['gzskin']],
gz_wujing:['male','wu',4,['donggui','fengyang_old'],['gzskin']],
};
if(!lib.config.extension_活动武将_HD_gzbianfuren) delete character_guozhan.gz_bianfuren;
for(var i in character_guozhan){
if(character_guozhan[i][3].some(skill=>!lib.skill[skill])) continue;
lib.characterPack.mode_guozhan[i]=character_guozhan[i];
lib.character[i]=character_guozhan[i];
}
}
//------------------------------选项------------------------------//
//precGuozhan2
//左慈---后续
lib.skill.gzhuashen.drawCharacter=function(player,list){
game.broadcastAll(function(player,list){
var cards=[];
for(var i=0;i<list.length;i++){
var cardname='huashen_card_'+list[i];
lib.card[cardname]={
fullimage:true,
image:player.isUnderControl(true)?'character:'+list[i]:'ext:活动武将/image/card/huashen_unknown.jpg'
}
lib.translate[cardname]=player.isUnderControl(true)?get.rawName2(list[i]):' ';
cards.push(game.createCard(cardname,'',''));
}
player.$draw(cards,'nobroadcast');
},player,list);
};
lib.skill.yigui.group=['yigui_init','yigui_refrain','yigui_gzshan','yigui_gzwuxie'];
lib.translate.yigui_info='当你首次明置此武将牌时，你将剩余武将牌堆的两张牌置于武将牌上，称为“魂”；你可以展示一张武将牌上的“魂”并将其置入剩余武将牌堆，视为使用一张本回合内未以此法使用过的基本牌或普通锦囊牌。（此牌指定或响应的目标须为未确定势力的角色或野心家或与此“魂”势力相同的角色）';
//法正
lib.skill.gzxuanhuo.subSkill.others={
audio:'rexuanhuo',
forceaudio:true,
enable:'phaseUse',
filter:function(event,player){
return (!player.isUnseen())&&player.countCards('h')&&(player.countCards('he')>=2||!lib.config.extension_活动武将_HD_gzfazheng)&&game.hasPlayer(function(current){
return current!=player&&current.hasSkill('gzxuanhuo')&&player.isFriendOf(current);
});
},
prompt:function(){
var player=_status.event.player,list=[];
for(var current of game.players){
if(current!=player&&current.hasSkill('gzxuanhuo')&&player.isFriendOf(current)) list.push(current);
}
if(lib.config.extension_活动武将_HD_gzfazheng&&list.length) return '弃置一张手牌并交给'+get.translation(list)+(list.length>1?'中的一人':'')+'一张牌，然后获得以下技能中的一个：〖武圣〗〖咆哮〗〖龙胆〗〖铁骑〗〖烈弓〗〖狂骨〗';
return '弃置一张手牌，然后获得以下技能中的一个：〖武圣〗〖咆哮〗〖龙胆〗〖铁骑〗〖烈弓〗〖狂骨〗';
},
filterCard:function(card){
return ui.selected.cards.length||get.position(card)=='h';
},
selectCard:lib.config.extension_活动武将_HD_gzfazheng?2:1,
position:'he',
filterTarget:function(card,player,target){
if(lib.config.extension_活动武将_HD_gzfazheng) return target!=player&&target.hasSkill('gzxuanhuo')&&player.isFriendOf(target);
return false;
},
selectTarget:function(){
var player=_status.event.player,list=[];
for(var current of game.players){
if(current!=player&&current.hasSkill('gzxuanhuo')&&player.isFriendOf(current)) list.push(current);
}
if(lib.config.extension_活动武将_HD_gzfazheng&&list.length) return 1;
return -1;
},
check:function(card){
var player=_status.event.player;
if(player.hasSkill('gzpaoxiao',true)||player.getEquip('zhuge')) return 0;
if(player.countCards('h',function(cardx){
return cardx!=card&&cardx.name=='sha'&&player.hasUseTarget(cardx);
})<(player.getCardUsable('sha')+1)) return 0;
return 7-get.value(card);
},
usable:1,
discard:false,
delay:false,
content:function(){
'step 0'
player.discard(cards[0]);
if(target) target.gain(cards[1],player,'giveAuto');
'step 1'
var list=['new_rewusheng','gzpaoxiao','new_longdan','new_tieji','liegong','xinkuanggu'];
player.chooseControl(list).set('ai',function(){
if(list.includes('gzpaoxiao')) return 'gzpaoxiao';
return list.randomGet();
}).set('prompt','选择并获得一项技能直到回合结束');
'step 2'
player.popup(result.control);
player.addTempSkill('fz_'+result.control);
game.log(player,'获得了技能','#g【'+get.translation(result.control)+'】');
game.delay();
},
ai:{
order:8,
result:{player:1},
},
};
if(lib.config.extension_活动武将_HD_gzfazheng) lib.translate.gzxuanhuo_info='与你势力相同的其他角色的出牌阶段限一次，其可弃置一张手牌并交给你一张牌，然后选择获得以下一项技能直到回合结束：〖武圣〗、〖咆哮〗、〖龙胆〗、〖铁骑〗、〖烈弓〗、〖狂骨〗。';
//唐咨
lib.skill.gzxingzhao.derivation='xunxun';
lib.skill.gzxingzhao.subSkill.use={
audio:'gzxingzhao',
trigger:{player:'damageEnd'},
filter:function(event,player){
var num=lib.skill.gzxingzhao.getNum();
return num>=2&&event.source&&event.source.isIn()&&player.countCards('h')!=event.source.countCards('h');
},
logTarget:function(event,player){
return player.countCards('h')>event.source.countCards('h')?event.source:player;
},
forced:true,
content:function(){
lib.skill.gzxingzhao_use.logTarget(trigger,player).draw();
},
};
if(game.HasExtension('十周年UI')){
lib.skill.gzxingzhao.subSkill.xunxun={
trigger:{player:'phaseDrawBegin1'},
filter:function(event,player){
return lib.skill.gzxingzhao.getNum()>0;
},
prompt2:lib.translate.xunxun_info,
content:decadeUI.skill.xunxun.content,
};
}
lib.translate.gzxingzhao_info='锁定技，你根据场上存在受伤角色的势力数获得以下效果：1个或以上，你视为拥有〖恂恂〗；2个或以上，当你受到伤害后，你与伤害来源两者中手牌数唯一最少的角色摸一张牌；3个或以上，你的手牌上限+4；4个或以上，当你失去装备区的牌后，你摸一张牌。';
};
if(get.mode()=='guozhan') game.bolLoadGuoZhan();

//设置稀有度
if(lib.rank){
//鄙人用脚设置的稀有度，只图博君一笑
var rank={
rarity:{
//传说
legend:[
'bilibili_zhengxuan',
'old_zuoci',
'bilibili_guanning',
'bilibili_litiansuo',
'diy_lvmeng',
'golden_zuoci',
'BT_puyuan',
'lz_sufei',
'FD_huaxiong'
],
//史诗
epic:[
'NS_chenlong',
'NS_youji',
'FD_sunjian',
'FD_feixiongjunyou',
'FD_fengyaojun',
'NS_yinhu',
'NS_wuma',
'NS_zishu',
'lz_tangzi',
'lz_liuqi',
'bol_zhangxiu',
'bol_sunjian',
'FD_dongyue'
],
//稀有
rare:[
'bilibili_sp_xuyou',
'bol_liuyu',
'bol_liuxie',
'bol_zhanglu',
'GD_gaolan',
'FD_niufudongxie',
'FD_guosi',
'FD_lijue',
'NS_xugou',
'NS_weiyang',
'NS_sishe',
'NS_haizhu',
'NS_shenhou',
'lz_huangquan',
'FD_feixiongjunzuo'
],
//普通
common:[
],
//平凡
junk:[
'NS_chouniu',
'NS_maotu',
'FD_baolvejun'
],
},
//出场率
s:[
],
ap:[
],
a:[
],
am:[
],
bp:[
],
b:[
],
bm:[
],
c:[
],
d:[
],
};
for(var name of Object.keys(lib.characterPack['MiNikill'])){
if(!Object.keys(rank.rarity).some(rarity=>rank.rarity[rarity].includes(name))) rank.rarity.legend.push(name);
}
for(var name of Object.keys(lib.characterPack['WeChatkill'])){
if(!Object.keys(rank.rarity).some(rarity=>rank.rarity[rarity].includes(name))) rank.rarity.rare.push(name);
}
for(var name of Object.keys(lib.characterPack['huodongcharacter'])){
if(!Object.keys(rank.rarity).some(rarity=>rank.rarity[rarity].includes(name))){
if(['Chuodong','CDanJi','CSCS','CSCS2'].some(pack=>lib.characterSort.huodongcharacter[pack].includes(name))) rank.rarity.legend.push(name);
else rank.rarity.rare.push(name);
}
}
for(var name of Object.keys(lib.characterPack['hezongkangqincharacter'])){
if(!Object.keys(rank.rarity).some(rarity=>rank.rarity[rarity].includes(name))) rank.rarity.epic.push(name);
}
for(var name of Object.keys(lib.characterPack['decadeQiHuan'])){
if(!Object.keys(rank.rarity).some(rarity=>rank.rarity[rarity].includes(name))) rank.rarity.legend.push(name);
}
for(var name of Object.keys(lib.characterPack['decadeZhuoGui'])){
if(!Object.keys(rank.rarity).some(rarity=>rank.rarity[rarity].includes(name))) rank.rarity.legend.push(name);
}
for(var name of Object.keys(lib.characterPack['decadeKuiBa'])){
if(!Object.keys(rank.rarity).some(rarity=>rank.rarity[rarity].includes(name))) rank.rarity.legend.push(name);
}
for(var name of Object.keys(lib.characterPack['HD_chaoshikong'])){
if(!Object.keys(rank.rarity).some(rarity=>rank.rarity[rarity].includes(name))) rank.rarity.legend.push(name);
}
for(var name of Object.keys(lib.characterPack['NianShouCharacter'])){
if(!Object.keys(rank.rarity).some(rarity=>rank.rarity[rarity].includes(name))){
if(lib.characterSort.NianShouCharacter.NianShouCharacter2018.includes(name)) rank.rarity.legend.push(name);
if(lib.characterSort.NianShouCharacter.NianShouCharacter2019.includes(name)) rank.rarity.legend.push(name);
}
}
var addRank=function(rank){
if(!lib.rank)return;
for(var i in rank){
if(i=='rarity') continue;
lib.rank[i].addArray(rank[i]);
}
if(rank.rarity&&lib.rank.rarity){
for(var i in rank.rarity){
if(lib.rank.rarity[i]===undefined){
lib.rank.rarity[i]=[];
}
lib.rank.rarity[i].addArray(rank.rarity[i]);
}
}
};
addRank(rank);
}

//名称重置
if(lib.config.extension_活动武将_HD_REname){
var list=Object.keys(lib.translate);
var list2=['jsrg_zhenji','wolong_card','pcaudio_wolong_card'];//不修改名称的ID白名单
var list3=['卧龙凤雏'];//不修改名称的translate白名单
[['张机','张仲景'],['蔡琰','蔡文姬'],['卧龙','卧龙诸葛'],
['严虎','严白虎'],['甄宓','甄姬'],['伏寿','伏皇后'],
['吉本','吉平']].forEach(name=>{
list.filter(name2=>!list2.includes(name2)&&!lib.translate[name2].includes(list3)&&lib.translate[name2].includes(name[0])).forEach(name3=>{
var str=lib.translate[name3];
var num=str.indexOf(name[0]);
lib.translate[name3]=str.slice(0,num)+name[1]+str.slice(num+name[0].length,str.length);
});
});
}

//precA
//技能修饰调整
//万 恶 之 源
lib.skill.bolNoAudio={audio:false};

//引用国战配音
if(!lib.skill.yigui) lib.skill.yigui={audio:2};
if(!lib.skill.gzshilu) lib.skill.gzshilu={audio:2};
if(!lib.skill.gzxiongnve) lib.skill.gzxiongnve={audio:2};

//技能配音修正
lib.skill.moon_jushou.audio='xinjushou';
lib.skill.jushou.audio='xinjushou';
lib.skill.jiewei.audio='xinjiewei';
lib.skill.liangying.audio=false;
lib.skill.juntun.audio='ext:活动武将/audio/skill:true';
lib.skill.jiaojie.audio='ext:活动武将/audio/skill:true';
lib.skill.youdi.audio=2;
lib.skill.new_juexiang.audio='juexiang';
lib.skill.polu.subSkill.damage.audio='polu';
lib.skill.reyixiang.subSkill.card.audio='yixiang';
lib.skill.reyixiang.subSkill.card.audioname=['re_taoqian'];
lib.skill.jishi.subSkill.draw.audio='jishi';
lib.skill.xinhuangtian.audio='huangtian2';
lib.skill.huangtian2.audioname=['zhangjiao','re_zhangjiao'];
lib.skill.xinhuangtian.audioname=['zhangjiao','re_zhangjiao'];
lib.skill.xinhuangtian2.audioname=['zhangjiao','re_zhangjiao'];
lib.skill.dcfuxue.subSkill.draw.audio='dcfuxue';
lib.skill.sbhuangtian.subSkill.mark.audio='sbhuangtian';
lib.skill.fengxiang.subSkill.draw.audio='fengxiang';
lib.skill.tianze.subSkill.draw.audio='tianze';
lib.skill.spshidi.subSkill.use.audio='spshidi';
lib.skill.spshidi.subSkill.beused.audio='spshidi';
lib.skill.huaiyuan.subSkill.init.audio='huaiyuan';
lib.skill.huaiyuan.subSkill.die.audio='huaiyuan';
lib.skill.weishu.subSkill.discard.audio='weishu';
lib.skill.twhengjiang.audio='hengjiang';
lib.skill.jianhui.subSkill.draw.audio='jianhui';
lib.skill.reqiaobian.subSkill.jieshu.audio='reqiaobian';
lib.skill.yuzhang.subSkill.skip.audio='yuzhang';
lib.skill.dcliuzhuan.subSkill.gain.audio='dcliuzhuan';
lib.skill.yizan_use.audio='yizan_respond_shan';
lib.skill.splveying.subSkill.add.audio='splveying';
lib.skill.spyingwu.subSkill.add.audio='spyingwu';
lib.skill.fuping.subSkill.mark.audio='fuping';
lib.skill.scfuhai.subSkill.usea.audio='scfuhai';
lib.skill.scfuhai.subSkill.die.audio='scfuhai';
lib.skill.tianzuo.subSkill.remove.audio='tianzuo';
//武将配音audioname添加
lib.skill.biyue.audioname=['sp_diaochan'];

//武将配音audioname2添加
lib.skill.qiaoshui.audioname2={
re_jianyong:'reqiaoshui',
xin_jianyong:'xinqiaoshui'
};
lib.skill.rebiyue.audioname2={sp_diaochan:'biyue_sp_diaochan'};
lib.skill.xiaoji.audioname2={Mbaby_sp_sunshangxiang:'xiaoji_sp_sunshangxiang'};
lib.skill.reluanwu.audioname2={Mbaby_jiaxu:'luanwu_re_jiaxu'};
lib.skill.yaowu.audioname2={FD_huaxiong:'bolNoAudio'};
lib.skill.yinghun.audioname2.FD_sunjian='bolNoAudio';
lib.skill.gzyinghun.audioname2.FD_sunjian='bolNoAudio';
lib.skill.gzyinghun.audioname2.Mbaby_sunce='yinghun_sunce';
lib.skill.rezhiman.audioname2={Mbaby_guansuo:'zhiman_guansuo'};
lib.skill.reyingzi.audioname2={
Mbaby_sunce:'reyingzi_sunce',
Mbaby_re_sunyi:'reyingzi_re_sunyi',
};
lib.skill.rejizhi.audioname2={
Mbaby_lukang:'rejizhi_lukang',
old_shen_simayi:'jilue_jizhi',
};
lib.skill.new_repaoxiao.audioname2.wechat_xiahouba='paoxiao_xiahouba';
lib.skill.reyicong.audioname2={jsp_zhaoyun:'yicong_jsp_zhaoyun'};
lib.skill.yicong.audioname2={oldx_zhaoyun:'yicong_jsp_zhaoyun'};
lib.skill.yicong_jsp_zhaoyun={audio:2};
lib.skill.new_rejianxiong.audioname2={
old_shen_caopi:'rejianxiong_shen_caopi',
qin_lvbuwei:'bolNoAudio',
};
lib.skill.rerende.audioname2={
old_shen_caopi:'rerende_shen_caopi',
qin_lvbuwei:'bolNoAudio',
};
lib.skill.rezhiheng.audioname2={
old_shen_caopi:'rezhiheng_shen_caopi',
qin_lvbuwei:'bolNoAudio',
old_shen_simayi:'jilue_zhiheng',
};
lib.skill.olluanji.audioname2={old_shen_caopi:'olluanji_shen_caopi'};
lib.skill.olfangquan.audioname2={old_shen_caopi:'olfangquan_shen_caopi'};
lib.skill.rejijiang.audioname2={Mbaby_liushan:'jijiang1_liushan'};
lib.skill.rejijiang1.audioname2={Mbaby_liushan:'jijiang1_liushan'};
lib.skill.guidao.audioname2={Mbaby_zhangjiao:'guidao_sp_zhangjiao'};
lib.skill.yijin.audioname2={bilibili_litiansuo:'bolNoAudio'};
lib.skill.clandaojie.audioname2={
old_zu_xunshu:'clandaojie_clan_xunshu',
old_zu_xunchen:'clandaojie_clan_xunchen',
old_zu_xuncai:'clandaojie_clan_xuncai',
old_zu_xuncan:'clandaojie_clan_xuncan',
oldx_zu_xuncai:'clandaojie_clan_xuncai',
};
lib.skill.fangzhu.audioname2={old_shen_simayi:'jilue_fangzhu'};
lib.skill.reguicai.audioname2={old_shen_simayi:'jilue_guicai'};
lib.skill.rewansha.audioname2={old_shen_simayi:'wansha_shen_simayi'};
lib.skill.new_repaoxiao.audioname2.Mbaby_xiahouba='paoxiao_xiahouba';
lib.skill.retianxiang.audioname2={decade_daxiaoqiao:'tianxiang_daxiaoqiao'};
lib.skill.liuli.audioname2={decade_daxiaoqiao:'liuli_daxiaoqiao'};
lib.skill.retiaoxin.audioname2={
wechat_sp_jiangwei:'tiaoxin_sp_jiangwei',
wechat_xiahouba:'tiaoxin_xiahouba',
};
lib.skill.relianying.audioname2={wechat_lukang:'rejizhi_lukang'};
lib.skill.qingguo.audioname2={re_zhenji:'reqingguo'};
lib.skill.shangshi.audioname2={re_zhangchunhua:'reshangshi'};
lib.skill.wusheng.audioname2.bol_jsp_guanyu='wusheng_jsp_guanyu';
lib.skill.wusheng.audioname2.bolx_jsp_guanyu='wusheng_jsp_guanyu';
lib.skill.duanchang.audioname2={Mmiao_caiwenji:'minimiaoduanchang'};
lib.skill.juxiang1.audioname2={Mmiao_zhurong:'minimiaojuxiang'};

//技能修正
//范强张达
lib.skill.juesheng.subSkill.counter.direct=true;
//谋黄忠
if(game.HasExtension('十周年UI')) lib.skill.sbliegong.intro.markcount=()=>undefined;
lib.skill.sbliegong.subSkill.block.direct=true;
lib.skill.sbliegong.subSkill.count.direct=true;
lib.skill.sbliegong.subSkill.count.locked=false;
lib.skill._wanjunqushou_count={
charlotte:true,
trigger:{player:'sbliegong_countAfter'},
filter:function(event,player){
return player.storage.sbliegong&&game.HasExtension('十周年UI');
},
direct:true,
content:function(){
player.storage.sbliegong.sort((a,b)=>lib.suit.indexOf(b)-lib.suit.indexOf(a));
game.broadcastAll(function(player,skill){
if(player.marks[skill]) player.marks[skill].firstChild.innerHTML=player.getStorage(skill).reduce((str,suit)=>str+=get.translation(suit),'');
},player,'sbliegong');
},
};
//界吕蒙
if(game.HasExtension('十周年UI')) lib.skill.rebotu.subSkill.mark.intro.markcount=()=>undefined;
lib.skill._botu_count={
charlotte:true,
trigger:{player:'rebotu_markEnd'},
filter:function(event,player){
return player.storage.rebotu_mark&&game.HasExtension('十周年UI');
},
direct:true,
firstDo:true,
content:function(){
player.storage.rebotu_mark.sort((a,b)=>lib.suit.indexOf(b)-lib.suit.indexOf(a));
game.broadcastAll(function(player,skill){
if(player.marks[skill]) player.marks[skill].firstChild.innerHTML=player.getStorage(skill).reduce((str,suit)=>str+=get.translation(suit),'');
},player,'rebotu_mark');
},
};
//留赞
if(game.HasExtension('十周年UI')){
lib.skill.refenyin.subSkill.mark.intro.markcount=()=>undefined;
lib.skill.iwasawa_refenyin.subSkill.mark.intro.markcount=()=>undefined;
}
lib.skill._refenyin_count={
charlotte:true,
trigger:{player:['refenyinBegin','iwasawa_refenyinBegin']},
filter:function(event,player){
return game.HasExtension('十周年UI');
},
direct:true,
lastDo:true,
content:function(){
'step 0'
var suits=[];
game.getGlobalHistory('cardMove',function(evt){
if(suits.length>=4) return;
if(evt.name=='lose'){
if(evt.position==ui.discardPile){
for(var i of evt.cards) suits.add(get.suit(i,false));
}
}
else{
if(evt.name=='cardsDiscard'){
for(var i of evt.cards) suits.add(get.suit(i,false));
}
}
});
player.storage[trigger.name+'_mark']=suits.sort((a,b)=>lib.suit.indexOf(b)-lib.suit.indexOf(a));
player.addTempSkill(trigger.name+'_mark');
player.markSkill(trigger.name+'_mark');
'step 1'
game.broadcastAll(function(player,skill){
if(player.marks[skill]) player.marks[skill].firstChild.innerHTML=player.getStorage(skill).reduce((str,suit)=>str+=get.translation(suit),'');
},player,trigger.name+'_mark');
},
};
//陈式
if(game.HasExtension('十周年UI')) lib.skill.qingbei.subSkill.effect.intro.markcount=()=>undefined;
lib.skill._qingbeiSuit={
charlotte:true,
trigger:{player:'qingbeiEnd'},
filter:function(event,player){
return player.hasSkill('qingbei_effect')&&player.getStorage('qingbei_effect').length&&game.HasExtension('十周年UI');
},
direct:true,
firstDo:true,
content:function(){
game.broadcastAll(function(player,skill){
var suits=player.getStorage(skill).slice();
suits.sort((a,b)=>lib.suit.indexOf(b)-lib.suit.indexOf(a));
if(player.marks[skill]) player.marks[skill].firstChild.innerHTML=suits.reduce((str,suit)=>str+=get.translation(suit),'');
},player,'qingbei_effect');
},
};
//唐咨
lib.skill.xinfu_xingzhao.intro={
content:function(storage,player){
var num=game.countPlayer(function(current){
return current.isDamaged();
}),str='';
if(num==0) return '<li>当你造成伤害时，此伤害+1';
if(num>=1) str+='<li>视为拥有技能〖恂恂〗';
if(num>=2) str+='<br><li>使用装备牌时摸一张牌';
if(num>=3) str+='<br><li>跳过判定阶段和弃牌阶段';
if(num>=4) str+='<br><li>当你造成伤害时，此伤害+1';
return str;
},
};
//司马师
lib.skill.tairan.content=function(){
'step 0'
player.addSkill('tairan2');
player.storage.tairan2=0;
var num=player.maxHp-player.hp;
if(num>0){
player.storage.tairan2+=num;
player.recover(num);
}
'step 1'
if(player.countCards('h')<player.maxHp) player.drawTo(player.maxHp).gaintag=['tairan'];
};
//魅步
lib.skill.meibu.content=function(){
var target=trigger.player;
target.addTempSkill('meibu_range');
target.storage.meibu_range=player;
target.markSkillCharacter('meibu_range',player,'魅步','锦囊牌均视为【杀】且'+get.translation(player)+'视为在攻击范围内');
};
lib.skill.meibu.subSkill.range={
charlotte:true,
onremove:true,
mod:{
cardname:function(card){
if(get.itemtype(card)=='card'&&(get.type(card,null,false)=='trick'||get.type(card,null,false)=='delay')) return 'sha';
},
targetInRange:function(card,player,target){
if(!player.storage.meibu_range) return;
if(target==player.storage.meibu_range) return true;
},
},
};
//贾诩
lib.skill.weimu.filter=function(event,player){
var info=get.info(event.card.name);
if(event.player==player) return false;
if(get.color(event.card)!='black'||get.type(event.card)!='trick') return false;
return info.selectTarget&&info.selectTarget==-1&&!info.toself;
};
lib.skill._reweimu={
charlotte:true,
trigger:{global:'useCard1'},
filter:function(event,player){
var info=get.info(event.card.name);
if(!player.hasSkill('reweimu')||event.player==player) return false;
if(get.color(event.card)!='black'||get.type(event.card)!='trick') return false;
return info.selectTarget&&info.selectTarget==-1&&!info.toself;
},
priority:15,
direct:true,
content:function(){player.logSkill('reweimu')},
};
//周处
lib.skill._xianghai={
charlotte:true,
trigger:{player:['useCard1','respond']},
filter:function(event,player){
if(!player.hasSkill('xianghai')) return false;
return event.card.name=='jiu'&&!event.skill&&event.cards&&event.cards.length==1&&get.type(event.cards[0])=='equip';
},
priority:15,
direct:true,
content:function(){player.logSkill('xianghai')},
};
//刘辩
lib.skill._dushi={
charlotte:true,
trigger:{player:'dying'},
filter:function(event,player){
return player.hasSkill('dushi');
},
priority:15,
direct:true,
content:function(){player.logSkill('dushi')},
};
//暴怒战神
lib.skill._shenji={
charlotte:true,
trigger:{player:'useCard1'},
filter:function(event,player){
if(!player.hasSkill('shenji')) return false;
return event.card.name=='sha'&&(event.targets.length>1||player.countUsed('sha',true)>1);
},
priority:15,
direct:true,
content:function(){player.logSkill('shenji')},
};
//杜预
lib.skill.spwuku.filter=function(event,player){
if(get.type(event.card)!='equip') return false;
return player.countMark('spwuku')<3;
};
lib.skill.pkwuku.filter=function(event,player){
if(get.type(event.card)!='equip') return false;
return player.countMark('spwuku')<3;
};
//水淹七军
lib.card.shuiyanqijunx.filterTarget=function(card,player,target){
return target!=player&&(get.mode()=='single'&&['normal2']||target.countCards('e'));
};
//族吴苋
lib.skill.clanyirong.prompt=function(){
var player=_status.event.player;
var num1=player.countCards('h'),num2=player.getHandcardLimit();
var str='<span class="text center">';
if(num1>num2) str+=('弃置'+get.cnNumber(num1-num2)+'张牌，然后手牌上限+1。');
else str+=('摸'+get.cnNumber(num2-num1)+'张牌，然后手牌上限-1。');
str+=('<br>※当前手牌上限：'+num2);
str+='</span>';
return str;
};
lib.skill.clanyirong.content=function(){
'step 0'
if(cards.length){
lib.skill.chenliuwushi.change(player,1);
event.finish();
}
else{
var num1=player.countCards('h'),num2=player.getHandcardLimit();
if(num1<num2) player.draw(num2-num1);
}
'step 1'
lib.skill.chenliuwushi.change(player,-1);
};
//族吴班
lib.skill.clanzhanding.subSkill.effect.content=function(){
if(player.hasHistory('sourceDamage',evt=>evt.card==trigger.card)){
var num1=player.countCards('h'),num2=player.getHandcardLimit();
if(num1<num2) player.draw(num2-num1);
}
else if(trigger.addCount!==false){
trigger.addCount=false;
player.getStat().card.sha--;
}
};
//王粲
delete lib.skill.xinfu_denglou.marktext;
//神张角
delete lib.skill.yizhao.intro.markcount;
lib.skill.yizhao.filter=function(event,player){
return typeof get.number(event.card)=='number'&&(player.countMark('yizhao')<184||!lib.config.extension_活动武将_ShenZhangJiao);
};
lib.skill.yizhao.content=function(){
'step 0'
event.num=player.countMark('yizhao');
player.addMark('yizhao',Math.min(get.number(trigger.card),(lib.config.extension_活动武将_ShenZhangJiao?184-player.countMark('yizhao'):get.number(trigger.card))));
'step 1'
var num=Math.floor(num/10)%10,num2=Math.floor(player.countMark('yizhao')/10)%10;
if(num!=num2){
var card=get.cardPile2(card=>{
return get.number(card,false)==num2;
});
if(card) player.gain(card,'gain2');
else{
player.chat('无牌可得？！');
game.log('但是牌堆中已经没有点数为','#y'+num2,'的牌了！');
}
}
};
//族荀谌
lib.skill._sankuang_prompt={
charlotte:true,
ruleSkill:true,
trigger:{player:'clansankuangBegin'},
direct:true,
content:function(){
var func=function(){
game.countPlayer(function(target){
if(target!=player) target.prompt('三恇'+lib.skill.clansankuang.getNum(target));
});
};
if(event.player==game.me) func();
else if(event.isOnline()) player.send(func);
},
};
//卢氏
lib.skill._olzhuyan_prompt={
charlotte:true,
ruleSkill:true,
trigger:{player:'olzhuyanBegin'},
direct:true,
content:function(){
var func=function(){
game.countPlayer(function(target){
var str='';
str+='体力值';
if(player.getStorage('olzhuyan_false').includes(target)) str+='--<br>';
else{
var num=lib.skill.olzhuyan.getNum(target,false);
str+=((num>=0?'+':'')+num+'<br>');
}
str+='手牌数';
if(player.getStorage('olzhuyan_true').includes(target)) str+='--<br>';
else{
var num=lib.skill.olzhuyan.getNum(target,true);
str+=((num>=0?'+':'')+num+'<br>');
}
target.prompt(str);
});
};
if(event.player==game.me) func();
else if(event.isOnline()) player.send(func);
},
};
//陈琳
lib.skill.songci.selectTarget=function(){
var player=_status.event.player;
for(var target of game.filterPlayer()){
if(player.getStorage('songci').includes(target)) continue;
var bool=target.countCards('h')>target.hp;
target.prompt('<span class=\"texiaotext\" style=\"color:'+(bool?'#FF0000':'#00FF00')+'\">'+(bool?'弃牌':'摸牌')+'</span>');
}
return 1;
};
//神郭嘉
lib.skill.resghuishi.selectTarget=function(){
var player=_status.event.player;
if(player.maxHp>=game.players.length){
for(var target of game.filterPlayer()){
var list=target.getSkills(null,false,false).filter(function(skill){
var info=lib.skill[skill];
return info&&info.juexingji&&!target.awakenedSkills.includes(skill);
});
target.prompt(list.length?'可觉醒':'可摸牌');
}
}
return 1;
};
lib.skill.sghuishi.selectTarget=function(){
var player=_status.event.player;
for(var target of game.filterPlayer()){
if(player==target) continue;
var list=target.getSkills(null,false,false).filter(function(skill){
var info=lib.skill[skill];
return info&&info.juexingji&&!target.awakenedSkills.includes(skill);
});
target.prompt(list.length?'可觉醒':'可摸牌');
}
return 1;
};
//二曹
lib.skill.huamu.filter=function(event,player){
var color=get.color(event.card);
if(!player.hasHistory('lose',function(evt){
return evt.hs.length>0&&evt.getParent()==event;
})||!event.cards.filterInD('oe').length) return false;
var history=game.getGlobalHistory('useCard');
var index=history.indexOf(event);
if(index<1) return false;
var evt=history[index-1],color2=get.color(evt.card);
return color!=color2;
};
lib.skill.huamu.mod.aiOrder=function(player,card,num){
if(typeof card=='object'){
var history=game.getGlobalHistory('useCard');
if(!history.length) return;
var evt=history[history.length-1];
if(evt&&evt.card&&get.color(evt.card)!=get.color(card)) return num+4;
}
};
//左慈
lib.skill.rehuashen.drawCharacter=function(player,list){
game.broadcastAll(function(player,list){
player.$draw(list.map(function(name){
if(!player.isUnderControl(true)) return game.createCard('huashen_unknown',' ',' ');
var cardname='huashen_card_'+name;
lib.card[cardname]={
fullimage:true,
image:'character:'+name
}
lib.translate[cardname]=get.rawName2(name);
return game.createCard(cardname,' ',' ');
}),'nobroadcast');
},player,list);
};

//precG
//全局机制
},precontent:function(bilibilicharacter){
game.TrueHasExtension=function(ext){
return lib.config.extensions&&lib.config.extensions.includes(ext);
};
game.HasExtension=function(ext){
return game.TrueHasExtension(ext)&&lib.config['extension_'+ext+'_enable'];
};
//阵亡配音
lib.skill._HD_die={
charlotte:true,
ruleSkill:true,
trigger:{player:'dieBegin'},
filter:function(event,player){
return lib.config.background_speak&&event.player.name;
},
firstDo:true,
direct:true,
priority:-Infinity,
lasrDo:true,
content:function(){
var name=trigger.player.name;
game.broadcastAll(function(name){
//旧版宗族武将阵亡配音播报
if(name.indexOf('old_zu_')==0) game.playAudio('die','clan_'+name.slice(7));
else if(name.indexOf('oldx_zu_')==0) game.playAudio('die','clan_'+name.slice(8));
//普通扩展武将阵亡配音播报
else game.playAudio('..','extension','活动武将/audio/die',name);
},name);
},
};
//困难年兽体力上限和体力值为所有其他角色的体力上限和
lib.skill._YJplusmaxHp={
charlotte:true,
ruleSkill:true,
trigger:{global:'gameStart',player:'enterGame'},
filter:function(event,player){
return player.name=='NS_nianshouC'||player.name2=='NS_nianshouC';
},
priority:114514,//恶臭(划掉)
direct:true,
content:function(){
for(var i=0;i<game.players.length;i++){
if(game.players[i]==player) continue;
player.maxHp+=game.players[i].maxHp;
}
player.hp=player.maxHp;
player.update();
},
};
//一轮的结束
lib.skill._bilibili_roundEnd={
charlotte:true,
ruleSkill:true,
trigger:{player:['phaseAfter','phaseCancelled','phaseSkipped']},//伪·一轮的结束
filter:function(event,player){
return !event.skill&&player.next==_status.roundStart;
},
forceDie:true,
direct:true,
priority:-Infinity,
lastDo:true,
content:function(){
'step 0'
event.trigger('roundEnd');//End时机常用于技能结算
'step 1'
event.trigger('roundAfter');//After时机常用于效果清除
},
},
//合纵抗秦、官渡之战模式特殊规则
lib.skill._hzkq_shijian={
charlotte:true,
ruleSkill:true,
trigger:{global:'chooseButtonBefore'},
filter:function(event,player){
if(!lib.config.extension_活动武将_KQShiJian) lib.config.extension_活动武将_KQShiJian='off';
if(!lib.config.extension_活动武将_GDShiJian) lib.config.extension_活动武将_GDShiJian='off';
if(event.parent.name!='chooseCharacter'||get.mode()=='boss') return false;
return (lib.config.extension_活动武将_KQShiJian!='off'&&!game.hzkqshijianed)||(lib.config.extension_活动武将_GDShiJian!='off'&&!game.GDZZshijianed);
},
direct:true,
content:function(){
'step 0'
if(lib.config.extension_活动武将_KQShiJian!='off'&&!game.hzkqshijianed){
game.hzkqshijianed=true;
var evt=lib.config.extension_活动武将_KQShiJian;
if(['hzlh','cpzz','lscq','sqzb','zjzl','scth'].includes(evt)) game.addGlobalSkill(evt);
switch(evt){
case 'bftq':
game.bianfaed=true;
var list=[5,7,9];
for(var i=0;i<2;i++){
var card=game.createCard2('qin_shangyangbianfa','spade',list[i]);
ui.cardPile.insertBefore(card,ui.cardPile.childNodes[get.rand(0,ui.cardPile.childNodes.length)]);
game.broadcastAll(function(){lib.inpile.add('qin_zhenlongchangjian')});
}
game.updateRoundNumber();
game.log('商鞅变法已加入牌堆');
break;
case 'hzlh':
game.lianhenged=true;
break;
case 'cpzz':
_status._aozhan=true;
game.playBackgroundMusic();
break;
case 'hslh':
var list=[];
if(!lib.inpile.includes('qin_chuanguoyuxi')){
list.push('qin_chuanguoyuxi');
var card=game.createCard2('qin_chuanguoyuxi','heart',7);
ui.cardPile.insertBefore(card,ui.cardPile.childNodes[get.rand(0,ui.cardPile.childNodes.length)]);
game.broadcastAll(function(){lib.inpile.add('qin_chuanguoyuxi')});
}
if(!lib.inpile.includes('qin_zhenlongchangjian')){
list.push('qin_zhenlongchangjian');
var card=game.createCard2('qin_zhenlongchangjian','heart',2);
ui.cardPile.insertBefore(card,ui.cardPile.childNodes[get.rand(0,ui.cardPile.childNodes.length)]);
game.broadcastAll(function(){lib.inpile.add('qin_zhenlongchangjian')});
}
game.updateRoundNumber();
game.log(get.translation(list),'已加入牌堆');
game.hslh=true;
break;
case 'scth':
for(var name in lib.character){
if(lib.character[name][0]=='female'){
if(typeof lib.character[name][2]=='number') lib.character[name][2]=lib.character[name][2]+1;
else{
var hp=get.infoHp(lib.character[name][2]);
var maxHp=get.infoMaxHp(lib.character[name][2]);
var hujia=get.infoHujia(lib.character[name][2]);
if(hujia) lib.character[name][2]=(hp+1)+'/'+(maxHp+1)+'/'+(hujia+1);
else lib.character[name][2]=(hp+1)+'/'+(maxHp+1);
}
}
}
game.uncheck();
game.check();
break;
}
game.broadcastAll(function(evt){
if(get.is.phoneLayout()) ui.bolhzkqInfo=ui.create.div('.touchinfo.left',ui.window);
else ui.bolhzkqInfo=ui.create.div(ui.gameinfo);
ui.bolhzkqInfo.innerHTML='当前事件：'+get.translation(evt);
if(evt=='cpzz') ui.bolhzkqInfo.innerHTML+='/鏖战模式';
ui.bolhzkqInfo.innerHTML+='<br>事件内容：'+get.translation(evt+'_info');
},evt);
game.me.chooseControl('ok').set('prompt','###合纵抗秦特殊事件：'+get.translation(evt)+'###'+get.translation(evt+'_info'));
}
'step 1'
if(lib.config.extension_活动武将_GDShiJian!='off'&&!game.GDZZshijianed){
game.GDZZshijianed=true;
var evt=lib.config.extension_活动武将_GDShiJian;
game.addGlobalSkill(evt);
game.broadcastAll(function(evt){
if(get.is.phoneLayout()) ui.bolGuanDuInfo=ui.create.div('.touchinfo.left',ui.window);
else ui.bolGuanDuInfo=ui.create.div(ui.gameinfo);
ui.bolGuanDuInfo.innerHTML='当前事件：'+get.translation(evt);
ui.bolGuanDuInfo.innerHTML+='<br>事件内容：'+get.translation(evt+'_info');
},evt);
game.me.chooseControl('ok').set('prompt','###官渡之战特殊事件：'+get.translation(evt)+'###'+get.translation(evt+'_info'));
}
},
};
//嬴政装备传国玉玺和真龙长剑
lib.skill._qin_start={
charlotte:true,
ruleSkill:true,
trigger:{global:'gameStart'},
filter:function(event,player){
return game.hslh&&(player.name&&player.name=='qin_yingzheng')||(player.name2&&player.name2=='qin_yingzheng');
},
direct:true,
priority:1+1+4+5+1+4+1+9+1+9+8+1+0,
content:function(){
//传国玉玺
var card1=get.cardPile2(function(card1){
return card1.name=='qin_chuanguoyuxi';
});
if(card1) player.equip(card1);
//真龙长剑
var card2=get.cardPile2(function(card2){
return card2.name=='qin_zhenlongchangjian';
});
if(card2) player.equip(card2);
},
};
//闪闪节
lib.skill._bol_shanshan_put={
charlotte:true,
ruleSkill:true,
trigger:{global:['gameStart','gameDrawBegin','gameDrawAfter','phaseBefore','roundStart']},
filter:function(event,player){
return !game.shanshanPut&&lib.config.extension_活动武将_HD_shanshan;
},
direct:true,
priority:114514+1919810,
content:function(){
'step 0'
game.shanshanPut=true;
var list=[5,6,7];
for(var i=0;i<ui.cardPile.childNodes.length;i++){
var card=ui.cardPile.childNodes[i];
if(card.name=='shan'&&get.suit(card)=='diamond'&&list.includes(get.number(card))){
var cardx=game.createCard2('bol_shanshan','diamond',get.number(card));
ui.cardPile.insertBefore(cardx,ui.cardPile.childNodes[get.rand(0,ui.cardPile.childNodes.length)]);
card.remove();
list.remove(get.number(card));
game.log(card,'已被','#g移出','牌堆');
game.log(cardx,'已','#g加入','牌堆');
game.updateRoundNumber();
}
if(!list.length) break;
}
},
};
//座位号显示
lib.skill._firstPlayer={
charlotte:true,
ruleSkill:true,
trigger:{global:'phaseBefore'},
filter:function(event,player){
if(!lib.config.extension_活动武将_ShowSeatNum) return false;
return !game.firstPlayer&&game.phaseNumber==0;
},
direct:true,
priority:1145141919810,
content:function(){
game.firstPlayer=true;
for(var i of game.players){
if(i.getSeatNum()!=0) i.setNickname(get.cnNumber(i.getSeatNum(),true)+'号位');
}
},
};
//弃牌阶段相关技能
lib.skill._bilibili_phaseDiscard_audio={
charlotte:true,
ruleSkill:true,
trigger:{player:'phaseDiscardBegin'},
filter:function(event,player){
return player.countCards('h')>player.hp;
},
direct:true,
firstDo:true,
priority:15,
content:function(){
if(player.hasSkill('zongshi')) player.logSkill('zongshi');
if(player.hasSkill('rezongshi')) player.logSkill('rezongshi');
if(player.hasSkill('decadezongshi')) player.logSkill('decadezongshi');
if(player.hasSkill('huaibi')&&player.storage.yinlang&&game.hasPlayer(function(current){
return current.group==player.storage.yinlang;
})) player.logSkill('huaibi');
if(player.hasSkill('rehuaibi')&&player.storage.yaohu&&game.hasPlayer(function(current){
return current.group==player.storage.yaohu;
})) player.logSkill('rehuaibi');
if(player.hasSkill('sbxueyi')&&game.hasPlayer(current=>player!=current&&current.group=='qun')) player.logSkill('sbxueyi');
},
};
//获取手中的花色数
lib.element.player.getSuitNum=function(position){
var player=this,list=[];
if(!position) position='h';
return player.getCards(position).reduce(function(arr,card){
return arr.add(get.suit(card,player)),arr;
},[]).length;
};
//增减技能函数
if(!game.HasExtension('OLUI')){
//addSkill函数
var originAddSkill=lib.element.player.addSkill;
lib.element.player.addSkill=function(skill){
originAddSkill.apply(this,arguments);
if(_status.gameDrawed){
var next=game.createEvent('addSkill');
next.player=this;
if(!Array.isArray(skill)) next.skill=skill;
next.setContent('emptyEvent');
}
return skill;
};
//removeSkill函数
var originRemoveSkill=lib.element.player.removeSkill;
lib.element.player.removeSkill=function(skill){
originRemoveSkill.apply(this,arguments);
if(_status.gameDrawed){
var next=game.createEvent('removeSkill');
next.player=this;
if(!Array.isArray(skill)) next.skill=skill;
next.setContent('emptyEvent');
}
return skill;
};
}
//失去体力上限配音
lib.skill._bilibili_loseMaxHp={
charlotte:true,
ruleSkill:true,
trigger:{player:'loseMaxHpBegin'},
filter:function(event,player){
return lib.config.extension_活动武将_HDdamageAudio&&lib.config.background_audio;
},
direct:true,
priority:-Infinity,
lastDo:true,
content:function(){
game.broadcastAll(function(){
game.playAudio('..','extension','活动武将/audio/effect','bilibili_loseMaxHp');
});
},
};
//神张飞拼点彩蛋
lib.skill._bol_shenzhangfei_chat={
charlotte:true,
ruleSkill:true,
trigger:{player:['chooseToCompareAfter','compareMultipleAfter'],target:['chooseToCompareAfter','compareMultipleAfter']},
filter:function(event,player){
return (player.name=='shen_zhangfei'||player.name2=='shen_zhangfei')&&event.num1==event.num2;
},
priority:-3,
direct:true,
content:function(){
player.chat('俺也一样');
game.broadcastAll(function(){
if(lib.config.background_speak) game.playAudio('..','extension','活动武将/audio/effect','shen_zhangfei_anyeyiyang');
});
},
};
//神张飞俺颇有家资彩蛋
lib.skill._bol_shenzhangfei_use={
charlotte:true,
ruleSkill:true,
trigger:{player:'useCard'},
filter:function(event,player){
return (player.name=='shen_zhangfei'||player.name2=='shen_zhangfei')&&event.card.name=='wugu';
},
priority:-3,
direct:true,
content:function(){
player.chat('俺颇有家资');
game.broadcastAll(function(){
if(lib.config.background_speak) game.playAudio('..','extension','活动武将/audio/effect','shen_zhangfei_anpoyoujiazi');
});
},
};
//点击显示
//低配+仅限电脑版
get.bolInform=function(str1,str2){
return '<abbr title=\"'+str2+'\"><ins>'+str1+'</ins></abbr>';
};
//高配
//感谢 雷 的技术支持
game.getBolPhone=function(){
//获取浏览器navigator对象的userAgent属性（浏览器用于HTTP请求的用户代理头的值）
var info=navigator.userAgent;
//通过正则表达式的test方法判断是否包含“Mobile”字符串
var isPhone=/mobile|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|OperaMini/i.test(info);
//如果包含“Mobile”（是手机设备）则返回true
return isPhone;
};
get.bolskillTips=function(tipname,id){
var dibeijing=ui.create.div('.bol-dibeijing',document.body);
dibeijing.style.zIndex=16;
var skilltip=ui.create.div('.bol-skilltip',dibeijing);
skilltip.innerHTML=tipname;
var herf=document.getElementById(id);
if(herf){
var left=herf.getBoundingClientRect().left;
if(game.getBolPhone()) left+=herf.offsetParent.offsetLeft;
left+=document.body.offsetWidth*0.15;
skilltip.style.left=left+'px';
skilltip.style.top=(herf.getBoundingClientRect().top+30)+'px';
}
dibeijing.listen(function(e){
e.stopPropagation();
this.remove();
})
};
get.bolInformX=function(str1,str2){
var temp='',numx=1;
while(numx!=10000){
temp+=get.rand(1,9)/numx;
numx=numx*10;
}
return "<a id='"+temp+"' style='color:unset' href=\"javascript:get.bolskillTips('"+str2+"','"+temp+"');\">"+str1+"※</a>";
};
get.YunLvInform=()=>get.bolInformX('韵律技','韵律技分为平和仄两种状态，韵律技初始默认状态为平，满足转韵条件时韵律技会转成另一种状态并重置技能的发动次数');
get.RenWangInform=()=>get.bolInformX('仁望值','拥有涉及仁望值技能的角色于游戏开始时获得1点仁望值，且其出牌阶段结束时，其根据以下满足的条件数增加等量的仁望值：①本阶段有角色获得过累计两张牌；②本阶段有角色回复过体力；③本阶段未对其他角色造成过伤害。一名角色的仁望值上限为5。');
get.ZhengSuInform=()=>get.bolInformX('整肃','<li>技能发动者从“擂进”、“变阵”、“鸣止”三个选项中选择一个令目标执行，若其于其本回合弃牌阶段结束后达成选项条件，则选择整肃奖励。<br><li>整肃奖励：选择摸两张牌或回复1点体力<br><li>擂进：回合内所有于出牌阶段使用的牌点数递增且不少于三张。<br><li>变阵：回合内所有于出牌阶段使用的牌花色相同且不少于两张。<br><li>鸣止：回合内所有于弃牌阶段弃置的牌花色均不相同且不少于两张。');
get.MouLveInform=()=>get.bolInformX('谋略值','上限为5，拥有谋略值的角色可以发动技能【妙计】（每回合限一次，你可以：①失去1点谋略值，视为使用【过河拆桥】；②失去2点谋略值，视为使用【无懈可击】；③失去3点谋略值，视为使用【无中生有】）');
//----------------游戏播报·始----------------
lib.skill._OpenTheGame={
charlotte:true,
ruleSkill:true,
forceDie:true,
trigger:{global:'gameDrawAfter'},
filter:function(event,player,name){
game.TrueHasExtension=function(ext){
return lib.config.extensions&&lib.config.extensions.includes(ext);
};
game.HasExtension=function(ext){
return game.TrueHasExtension(ext)&&lib.config['extension_'+ext+'_enable'];
};
return lib.config.extension_活动武将_HDfightAudio&&player==game.me&&(!game.HasExtension('十周年UI')||!lib.config.extension_十周年UI_gameAnimationEffect);
},
direct:true,
firstDo:true,
priority:Infinity,
content:function(){
player.$fullscreenpop('游戏开始','fire');
game.broadcastAll(function(){
if(lib.config.background_audio) game.playAudio('..','extension','活动武将/audio/effect','bilibili_OpenTheGame');
});
},
},
lib.skill._bilibili_miaoshou={
charlotte:true,
ruleSkill:true,
trigger:{global:'xmiaoshou'},
filter:function(event,player){
return lib.config.extension_活动武将_HDfightAudio&&event.player==player;
},
direct:true,
firstDo:true,
forceDie:true,
content:function(){
trigger.player.$fullscreenpop('妙手回春','water');
game.broadcastAll(function(){
if(lib.config.background_audio) game.playAudio('..','extension','活动武将/audio/effect','bilibili_miaoshou');
});
},
},
lib.skill._bilibili_yishu={
charlotte:true,
ruleSkill:true,
trigger:{global:'xyishu'},
filter:function(event,player){
return lib.config.extension_活动武将_HDfightAudio&&event.player==player;
},
direct:true,
firstDo:true,
forceDie:true,
content:function(){
trigger.player.$fullscreenpop('医术高超','wood');
game.broadcastAll(function(){
if(lib.config.background_audio) game.playAudio('..','extension','活动武将/audio/effect','bilibili_yishu');
});
},
},
lib.skill._recovertrigger={
charlotte:true,
ruleSkill:true,
trigger:{global:'recoverEnd'},
filter:function(event,player){
if(_status.currentPhase!=player){
return lib.config.extension_活动武将_HDfightAudio&&event.player!=event.source&&event.source==player;
}
return true;
},
direct:true,
firstDo:true,
forceDie:true,
content:function(){
if(_status.currentPhase!=player) _status.event.trigger('xmiaoshou');
else{
if(player.storage.jstxyishugaochao==undefined) player.storage.jstxyishugaochao = trigger.num;
else player.storage.jstxyishugaochao+=trigger.num;
if(player.storage.jstxyishugaochao>=3){
player.storage.jstxyishugaochao-=3;
_status.event.trigger('xyishu');
}
}
},
group:'_recovertrigger_Delete',
subSkill:{
Delete:{
charlotte:true,
ruleSkill:true,
trigger:{player:'phaseEnd'},
direct:true,
lastDo:true,
forceDie:true,
content:function(){
delete player.storage.jstxyishugaochao;
},
},
},
},
lib.skill._jishaAudio={
charlotte:true,
ruleSkill:true,
trigger:{global:'dieBegin'},
filter:function(event,player){
return lib.config.extension_活动武将_HDkillAudio!='off'&&event.source==player&&event.player!=player;
},
direct:true,
firstDo:true,
content:function(){
'step 0'
if(!player.storage.bilibili_kill) player.storage.bilibili_kill=0;
player.storage.bilibili_kill++;
'step 1'
var list=['一血·卧龙出山','双杀·一战成名','三杀·举世皆惊','四杀·天下无敌','五杀·诛天灭地','六杀·癫狂杀戮','无双·万军取首'];
if(lib.config.extension_活动武将_HDkillAudio=='new') list=['一破·卧龙出山','双连·一战成名','三连·举世皆惊','四连·天下无敌','五连·诛天灭地','六连·诛天灭地','七连·诛天灭地'];
var num=Math.min(7,player.storage.bilibili_kill);
player.$fullscreenpop(list[num-1],['water','wood','thunder','fire'][Math.min(3,num-1)]);
game.broadcastAll(function(num,bool){
if(lib.config.background_audio) game.playAudio('..','extension','活动武将/audio/effect','bilibili_jisha'+num+(bool?'_new':''));
},num,lib.config.extension_活动武将_HDkillAudio=='new');
},
},
lib.skill._bilibili_HighDamageAudio={
charlotte:true,
ruleSkill:true,
trigger:{source:'damageBegin4'},
filter:function(event,player){
return lib.config.extension_活动武将_HDfightAudio&&event.player!=player&&event.num>=3;
},
direct:true,
lastDo:true,
priority:-Infinity,
content:function(){
if(trigger.num==3){
player.$fullscreenpop('癫狂屠戮','fire');
game.broadcastAll(function(){
if(lib.config.background_audio) game.playAudio('..','extension','活动武将/audio/effect','bilibili_diankuang');
});
}
else{
player.$fullscreenpop('无双<br>万军取首','fire');
game.broadcastAll(function(){
if(lib.config.background_audio) game.playAudio('..','extension','活动武将/audio/effect','bilibili_wanjun');
});
}
},
};
//skillAnimation技能配音播放
lib.element.player.trySkillAnimate=function(name,popname,checkShow){
if(!game.online&&lib.config.skill_animation_type!='off'&&lib.skill[name]&&lib.skill[name].skillAnimation){
if(lib.config.extension_活动武将_HDskillAnimateAudio){
game.broadcastAll(function(){
if(ui.backgroundMusic) ui.backgroundMusic.pause();
game.playAudio('..','extension','活动武将/audio/effect','spell_'+(lib.skill[name].juexingji?'wake':'limit'));
});
setTimeout(function(){
if(ui.backgroundMusic) ui.backgroundMusic.play();
},4000);
}
if(lib.config.skill_animation_type=='default'){
checkShow=checkShow||'main';
}
else{
checkShow=false;
}
if(lib.skill[name].textAnimation){
checkShow=false;
}
this.$skill(lib.skill[name].animationStr||lib.translate[name],lib.skill[name].skillAnimation,lib.skill[name].animationColor,checkShow);
return;
}
var player=this;
game.broadcast(function(player,name,popname){
player.trySkillAnimate(name,popname);
},player,name,popname);
if(lib.animate.skill[name]) lib.animate.skill[name].apply(this,arguments);
else{
if(popname!=name) this.popup(popname,'water',false);
else this.popup(get.skillTranslation(name,this),'water',false);
}
};
//对局BGM
game.bol_playAudio=function(){
ui.backgroundMusic.src=lib.assetURL+'extension/活动武将/audio/effect/bgm_1.mp3';
ui.backgroundMusic.volume=lib.config.volumn_background/8;
ui.backgroundMusic.addEventListener('ended',game.players.length>4?game.bol_playAudio:game.bol_playAudiox);
};
game.bol_playAudiox=function(){
game.bol_playAudio3=true;
ui.backgroundMusic.src=lib.assetURL+'extension/活动武将/audio/effect/bgm_2.mp3';
ui.backgroundMusic.volume=lib.config.volumn_background/8;
ui.backgroundMusic.addEventListener('ended',game.bol_playAudiox);
};
//选将
lib.skill._bol_playAudio1={
ruleSkill:true,
charlotte:true,
trigger:{global:'chooseButtonBefore'},
filter:function(event,player){
if(!lib.config.extension_活动武将_HD_bgmPlay||!game.zhu||game.zhu.identity!='zhu') return false;
return !game.bol_playAudio1&&event.parent.name=='chooseCharacter'&&get.mode()=='identity'&&_status.mode=='normal';
},
direct:true,
firstDo:true,
priority:Infinity+114-514,
content:function(){
'step 0'
lib.config.background_music='music_off';
game.playBackgroundMusic();
lib.onover.push(function(){
ui.backgroundMusic.src='';
});
game.bol_playAudio1=true;
'step 1'
ui.backgroundMusic.src=lib.assetURL+'extension/活动武将/audio/effect/bgm_0.mp3';
ui.backgroundMusic.volume=lib.config.volumn_background/8;
},
};
//开局、对局、残局
lib.skill._bol_playAudio2={
ruleSkill:true,
charlotte:true,
trigger:{global:['gameDrawAfter','phaseBefore']},
filter:function(event,player){
return game.bol_playAudio1&&!game.bol_playAudio2;
},
direct:true,
firstDo:true,
priority:Infinity+114-514,
content:function(){
game.bol_playAudio2=true;
var bgm=((game.zhu&&['wei','shu','wu','qun'].includes(game.zhu.group))?game.zhu.group:'qun');
ui.backgroundMusic.src=lib.assetURL+'extension/活动武将/audio/effect/bgm_'+bgm+'.mp3';
ui.backgroundMusic.volume=lib.config.volumn_background/8;
ui.backgroundMusic.addEventListener('ended',game.players.length>4?game.bol_playAudio:game.bol_playAudiox);
},
};
lib.skill._bol_playAudio3={
ruleSkill:true,
charlotte:true,
trigger:{global:'phaseBeginStart'},
filter:function(event,player){
return game.bol_playAudio2&&!game.bol_playAudio3&&game.players.length<=4;
},
direct:true,
firstDo:true,
priority:Infinity+114-514,
content:function(){
game.bol_playAudiox();
},
};
//----------------游戏播报·末----------------

//precS
if(bilibilicharacter.enable){
//技能修复+描述优化
//张华
lib.skill.olchuanwu={
//放个置于最前方的函数以后好用
unshiftArray:function(list1,list2){
list1.removeArray(list2);
for(var i=list2.length-1;i>=0;i--){
list1.unshift(list2[i]);
}
},
audio:2,
trigger:{player:'damageEnd',source:'damageSource'},
filter:function(event,player){
return player.getAttackRange()>0&&player.getStockSkills(false,true).length;
},
forced:true,
content:function(){
var skills=player.getStockSkills(false,true);
var num=Math.min(player.getAttackRange(),skills.length);
skills=skills.slice(0,num);
player.removeSkill(skills);
player.addTempSkill('olchuanwu_restore');
player.markAuto('olchuanwu_restore',skills.filter(skill=>!player.getStorage('olchuanwu_restore').includes(skill)));
var str='';
for(var i of skills){
str+='【'+get.translation(i)+'】、';
player.popup(i);
}
str=str.slice(0,-1);
game.log(player,'失去了技能','#g'+str);
player.draw(num);
},
subSkill:{
restore:{
charlotte:true,
onremove:function(player){
var skills=player.getStorage('olchuanwu_restore');
skills.sort(function(a,b){
var getNum=function(skill){
if(!player.getStockSkills(true,true).includes(skill)) return skills.length;
return player.getStockSkills(true,true).indexOf(skill);
};
return getNum(a)-getNum(b);
});
player.addSkill(skills);
game.broadcastAll(function(player,skills){
lib.skill.olchuanwu.unshiftArray(player.skills,skills);
},player,skills);
player.update();
var str='';
for(var i of skills){
str+='【'+get.translation(i)+'】、';
player.popup(i);
}
str=str.slice(0,-1);
game.log(player,'恢复了技能','#g'+str);
delete player.storage.olchuanwu_restore;
},
},
},
},
//诸葛瑾
lib.skill.olhongyuan={
audio:'hongyuan',
trigger:{player:'gainAfter',global:'loseAsyncAfter'},
filter:function(event,player){
var cards=event.getg(player);
return player.countCards('he')&&cards.length>=2&&!player.hasSkill('olhongyuan_blocker',null,null,false);
},
direct:true,
content:function(){
'step 0'
event.list=[];
'step 1'
player.chooseCardTarget({
prompt:get.prompt2('olhongyuan'),
filterCard:true,
position:'he',
filterTarget:function(card,player,target){
return target!=player&&!_status.event.list.includes(target);
},
ai1:function(card){
var player=_status.event.player;
var num=game.countPlayer(function(current){
return current!=player&&get.attitude(player,current)>0&&!current.hasSkillTag('nogain');
});
if(num<=ui.selected.cards.length) return -get.value(card);
if(!player.hasSkill('olmingzhe')) return 4-Math.max(player.getUseValue(card),get.value(card,player));
if(ui.selected.cards.length&&get.color(card)=='red') return 6-get.value(card);
return 4-Math.max(player.getUseValue(card),get.value(card,player));
},
ai2:function(target){
var player=_status.event.player,att=get.attitude(player,target);
var card=ui.selected.cards[0];
if(!card) return att;
var val=get.value(card,target);
if(val<0) return -att*Math.sqrt(-val);
return att*Math.sqrt(val+2);
},
}).set('list',event.list);
'step 2'
if(result.bool){
player.line(result.targets);
if(!event.list.length) player.logSkill('olhongyuan');
event.list.addArray(result.targets);
player.addTempSkill('olhongyuan_blocker',['phaseZhunbeiBefore','phaseJudgeBefore','phaseDrawBefore','phaseUseBefore','phaseDiscardBefore','phaseJieshuBefore','phaseBefore']);
result.targets[0].gain(result.cards,player,'give');
if(player.countCards('he')&&event.list.length<2&&game.hasPlayer(function(current){
return current!=player&&!event.list.includes(current);
})) event.goto(1);
}
},
ai:{threaten:0.8},
subSkill:{blocker:{charlotte:true}},
},
//徐庶
lib.skill.rezhuhai={
audio:2,
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
if(event.player==player||!event.player.getHistory('sourceDamage').length||!event.player.isIn()) return false;
for(var card of player.getCards('h')){
if(game.checkMod(card,player,'unchanged','cardEnabled2',player)!==false&&player.canUse(get.autoViewAs({name:'sha'},[card]),event.player,false)) return true;
if(game.checkMod(card,player,'unchanged','cardEnabled2',player)!==false&&player.canUse(get.autoViewAs({name:'guohe'},[card]),event.player,false)) return true;
}
return false;
},
direct:true,
content:function(){
'step 0'
var target=trigger.player;
var choiceList=['将一张手牌当作【杀】对其使用','将一张手牌当作【过河拆桥】对其使用'];
var bool=false,boolx=false,hs=player.getCards('h');
for(var i of hs){
if(game.checkMod(i,player,'unchanged','cardEnabled2',player)!==false&&player.canUse(get.autoViewAs({name:'sha'},[i]),target,false)) bool=true;
if(game.checkMod(i,player,'unchanged','cardEnabled2',player)!==false&&player.canUse(get.autoViewAs({name:'guohe'},[i]),target,false)) boolx=true;
if(bool&&boolx) break;
}
var choices=[];
if(bool) choices.push('选项一');
else choiceList[0]='<span style="opacity:0.5">'+choiceList[0]+'</span>';
if(boolx) choices.push('选项二');
else choiceList[1]='<span style="opacity:0.5">'+choiceList[1]+'</span>';
choices.push('cancel2');
player.chooseControl(choices).set('choiceList',choiceList).set('prompt',get.prompt('rezhuhai',target)).set('ai',function(){
var choices=_status.event.controls;
var eff1=0,eff2=0;
var player=_status.event.player,target=_status.event.getTrigger().player;
if(choices.includes('选项一')) eff1=get.effect(target,{name:'sha'},player,player);
if(choices.includes('选项二')) eff2=get.effect(target,{name:'guohe'},player,player);
if(eff1>0&&(player.hasSkill('xsqianxin')&&player.isDamaged()||eff1>eff2)) return '选项一';
if(eff2>0) return '选项二';
return 'cancel2';
});
'step 1'
if(result.control!='cancel2'){
event.bilibili=(result.control=='选项一'?'sha':'guohe');
player.chooseCard('h',true,function(card,player){
if(!game.checkMod(card,player,'unchanged','cardEnabled2',player)) return false;
return player.canUse(get.autoViewAs({name:event.bilibili},[card]),_status.event.getTrigger().player,false);
},'选择一张手牌当作【'+get.translation(event.bilibili)+'】对'+get.translation(trigger.player)+'使用').set('ai',function(card){
var player=_status.event.player;
return get.effect(_status.event.getTrigger().player,get.autoViewAs({name:event.bilibili},[hs]),player,player)/Math.max(1,get.value(card));
});
}
else event.finish();
'step 2'
if(result.bool) player.useCard({name:event.bilibili},result.cards,'rezhuhai',trigger.player,false);
},
},
//蔡阳YYDS!!!
lib.skill.yinka={
group:'yinka_view',
charlotte:true,
trigger:{global:['drawBegin','judgeBegin']},
filter:function(){
return ui.cardPile.childNodes.length>0;
},
direct:true,
firstDo:true,
content:function(){
'step 0'
if(trigger.name=='judge') player.chooseButton(['印卡：'+get.translation(trigger.player)+(player==trigger.player?'（你）':'')+'即将进行判定，请选择要置于牌堆'+(trigger.bottom?'底':'顶')+'的牌',Array.from(ui.cardPile.childNodes)],1).set('ai',function(botton){
var player=_status.event.player,js=trigger.player.getCards('j');
if(js.length){
var judge=get.judge(js[0]);
if(judge&&(judge(button.link)+0.01)*get.attitude(player,trigger.player)>0) return 20-get.value(button.link);
}
return 0;
});
else player.chooseButton(['印卡：'+get.translation(trigger.player)+(player==trigger.player?'（你）':'')+'即将从牌堆'+(trigger.bottom?'底':'顶')+'摸'+get.cnNumber(trigger.num)+'张牌，请选择要置于牌堆'+(trigger.bottom?'底':'顶')+'的牌（先选择的在上）',Array.from(ui.cardPile.childNodes)],[1,trigger.num]).set('ai',function(button){
var player=_status.event.player;
var att=get.attitude(player,trigger.player);
if(att>1) return get.value(button.link);
return 20-get.value(button.link);
});
'step 1'
if(result.bool){
while(result.links.length){
if(trigger.bottom){
var card=result.links.shift();
ui.cardPile.removeChild(card);
ui.cardPile.appendChild(card);
}
else{
var card=result.links.pop();
ui.cardPile.removeChild(card);
ui.cardPile.insertBefore(card,ui.cardPile.firstChild);
}
}
}
},
ai:{isLuckyStar:true},
subSkill:{
view:{
ai:{
viewHandcard:true,
skillTagFilter:function(player,arg,target){
return target!=player;
},
},
},
},
},
//许攸
lib.skill.spshicai={
onremove:function(player){
player.removeSkill('spshicai2');
},
audio:2,
enable:'phaseUse',
position:'he',
filter:function(event,player){
if(player.countCards('h',function(card){
return card.hasGaintag('spshicai');
})) return false;
return player.countCards('he');
},
filterCard:true,
prompt:function(){
var str='弃置一张牌，然后获得';
if(get.itemtype(_status.pileTop)=='card') str+=get.translation(_status.pileTop);
else str+='牌堆顶的一张牌';
return str;
},
check:function(card){
var player=_status.event.player;
var cardx=_status.pileTop;
if(get.itemtype(cardx)!='card') return 0;
var val=player.getUseValue(cardx,null,true);
if(!val) return 0;
var val2=player.getUseValue(card,null,true);
return (val-val2)/Math.max(0.1,get.value(card));
},
content:function(){
var card=get.cards()[0];
player.gain(card,'draw').gaintag.add('spshicai');
game.log(player,'获得了牌堆顶的一张牌');
},
group:'spshicai_mark',
ai:{
order:7,
result:{player:1},
},
mod:{
aiOrder:function(player,card,num){
if(get.itemtype(card)=='card'&&card.hasGaintag('spshicai')) return num+3;
},
},
},
lib.skill.spshicai2={
charlotte:true,
mod:{
cardEnabled2:function(card,player){
if(card.spshicai_top) return false;
},
},
group:'spshicai2_update',
init:function(player){
var card=ui.cardPile.childNodes[0];
if(card){
var fake=game.createCard(card);
fake.spshicai_top=card;
player.loseToSpecial([fake],'spshicai2_mark').set('visible',true)._triggered=null;
player.storage.spshicai2=card;
fake.classList.add('glow');
var hs=player.getCards('hs');
}
},
onremove:function(player){
delete player.storage.spshicai2;
var hs=player.getCards('s',function(card){
return card.spshicai_top;
});
if(hs.length) player.lose(hs)._triggered=null;
player.removeGaintag('spshicai');
},
mark:true,
intro:{
mark:function(dialog,content,player){
if(player!=game.me) return get.translation(player)+'观看牌堆中...';
if(get.itemtype(_status.pileTop)!='card') return '牌堆顶无牌';
dialog.add([_status.pileTop]);
},
},
subSkill:{
mark:{},
update:{
charlotte:true,
trigger:{global:['gainBegin','useSkillAfter','logSkill','useCard','respond','judge','judgeEnd']},
filter:function(event,player){
return !_status.pileTop||_status.pileTop!=player.storage.spshicai2;
},
direct:true,
priority:8,
content:function(){
'step 0'
var hs=player.getCards('s',function(card){
return card.spshicai_top;
});
if(hs.length) player.lose(hs)._triggered=null;
'step 1'
var card=ui.cardPile.childNodes[0];
if(card){
var fake=game.createCard(card);
fake.spshicai_top=card;
player.loseToSpecial([fake],'spshicai2_mark').set('visible',true)._triggered=null;
player.storage.spshicai2=card;
fake.classList.add('glow');
}
else delete player.storage.spshicai2;
},
},
},
},
//淳于琼
lib.skill.reliangying={
audio:2,
trigger:{player:'phaseDiscardBegin'},
direct:true,
content:function(){
'step 0'
var map={};
var list=[];
for(var i=1;i<=player.countMark('recangchu');i++){
var cn=get.cnNumber(i,true);
map[cn]=i;
list.push(cn);
}
list.push('cancel2');
event.map=map;
player.chooseControl(list).set('prompt',get.prompt('reliangying')).set('prompt2','摸至多'+get.cnNumber(player.countMark('recangchu'))+'张牌，然后交给等量的角色各一张牌').set('ai',function(){
var player=_status.event.player;
var num=Math.min(player.countMark('recangchu'),game.countPlayer(function(current){
return get.attitude(player,current)>0;
}));
if(num>0) return get.cnNumber(num,true);
return 'cancel2';
});
'step 1'
event.list=[];
if(result.control=='cancel2'){event.finish();return;}
player.logSkill('reliangying');
var num=event.map[result.control]||1;
event.num=num;
player.draw(num);
'step 2'
var num=Math.min(event.num,player.countCards('he'),game.players.length-1);
var next=player.chooseCardTarget({
prompt:'粮营：将'+get.cnNumber(num-1)+'至'+get.cnNumber(num)+'张牌交给其他角色',
position:'he',
animate:false,
filterCard:function(card){
for(var CT of _status.event.list){
if(CT.card==card) return false;
}
return true;
},
filterTarget:function(card,player,target){
for(var CT of _status.event.list){
if(CT.target==target) return false;
}
return target!=player;
},
ai1:function(card){
if(card.name=='shan') return 1;
return Math.random();
},
ai2:function(target){
var player=_status.event.player;
return get.attitude(player,target);
},
});
next.set('list',event.list);
if(num-event.list.length>1) next.set('forced',true);
'step 3'
if(result.bool){
var num=Math.min(event.num,player.countCards('he'),game.players.length-1);
var CT={
target:result.targets[0],
card:result.cards[0],
};
player.addGaintag(result.cards,'olsujian_given');
event.list.push(CT);
if(num-event.list.length>=1) event.goto(2);
}
else if(!event.list.length) event.finish();
'step 4'
var list=[];
var cards=[];
for(var obj of event.list){
cards.push(obj.card);
list.push([obj.target,obj.card]);
player.line(obj.target);
}
game.loseAsync({
gain_list:list,
player:player,
cards:cards,
giver:player,
animate:'giveAuto',
}).setContent('gaincardMultiple');
},
},
lib.skill.sushou={
audio:2,
trigger:{player:'phaseDiscardBegin'},
frequent:true,
content:function(){
'step 0'
var num=1;
if(player.countMark('cangchu')>0){
num+=player.countMark('cangchu');
}
player.draw(num);
if(!game.hasPlayer(function(target){
return player.getFriends().includes(target);
})){
event.finish();
return;
}
event.list=[];
'step 1'
player.chooseCardTarget({
prompt:'宿守：你可以交给友方角色各一张牌',
selectCard:1,
filterCard:function(card){
for(var i=0;i<_status.event.list.length;i++){
if(_status.event.list[i].card==card) return false;
}
return true;
},
position:'he',
selectTarget:1,
animate:false,
filterTarget:function(card,player,target){
if(!player.getFriends().includes(target)) return false;
for(var i=0;i<_status.event.list.length;i++){
if(_status.event.list[i].target==target) return false;
}
return true;
},
ai1:function(card){
if(card.name=='shan') return 1;
return Math.random();
},
ai2:function(target){
var player=_status.event.player;
return get.attitude(player,target);
},
}).set('list',event.list);
'step 2'
if(result.bool){
var CT={
target:result.targets[0],
card:result.cards[0],
};
player.addGaintag(result.cards,'olsujian_given');
event.list.push(CT);
if(game.hasPlayer(function(target){
for(var i=0;i<event.list.length;i++){
if(event.list[i].target==target) return false;
}
return player.getFriends().includes(target);
})) event.goto(1);
}
'step 3'
var list=[];
var cards=[];
for(var obj of event.list){
cards.push(obj.card);
list.push([obj.target,obj.card]);
player.line(obj.target);
}
game.loseAsync({
gain_list:list,
player:player,
cards:cards,
giver:player,
animate:'giveAuto',
}).setContent('gaincardMultiple');
},
},

//precT
//添加翻译或描述优化/修复
lib.translate.weipo='横虑';
lib.translate.spshicai2_mark='牌堆顶';
lib.translate.dcliuzhuan_tag='流转';
lib.translate.olchuanwu_info='锁定技。当你造成或受到伤害后，你失去武将牌上的前X个技能直到回合结束，然后你摸等同于你此次失去的技能数的牌（X为你的攻击范围）。';
lib.translate.clanyirong_info='出牌阶段限两次。你可以将你的手牌数摸至/弃至你的手牌上限，然后你的手牌上限-1/+1。';
lib.translate.clanzhanding_info='你可以将任意张牌当做【杀】使用并你令你的手牌上限-1。你以此法使用的【杀】结算结束后，若你因此【杀】造成过伤害，则你将手牌摸至手牌上限，否则你令此【杀】不计入次数限制。';
lib.translate.spwuku_info_guozhan='锁定技，当有角色使用装备牌时，若你的“武库”数小于3，则你获得一个“武库”。';
lib.translate.dcliuzhuan_info='锁定技，其他角色的回合内，其于摸牌阶段外获得的牌无法对你使用，这些牌本回合进入弃牌堆后，你获得之。';
lib.translate.rezhuhai_info='其他角色的回合结束时，若其本回合内造成过伤害，则你可以将一张手牌当作【杀】或【过河拆桥】对其使用。';
lib.translate.meibu_info='其他角色的出牌阶段开始时，若你不在其攻击范围内，你可以令该角色的锦囊牌均视为【杀】直到回合结束。若如此做，本回合你视为在其攻击范围内。';
lib.translate.zunwei_info='出牌阶段限一次，你可以：①将体力值回复至与一名其他角色相同；②将手牌数摸至与一名其他角色相同（至多摸五张）；③为空装备栏使用牌堆中的装备牌直至你装备区里的牌数与一名其他角色相等。（每个选项每局限选择一次）';
lib.translate.olpaoxiao_info='锁定技。①你使用【杀】无次数限制。②当你使用的【杀】被【闪】抵消后，你令本回合下一次因【杀】造成的伤害+X（X为造成伤害前的抵消次数）。';
lib.translate.sbliegong_info='若你的装备区内没有武器牌，则你手牌区内所有【杀】的属性视为无属性。当你使用牌时或成为其他角色使用牌的目标后，若此牌有花色且你未记录此牌的花色，你记录此牌的花色。当你使用【杀】指定唯一目标后，若〖烈弓〗存在记录花色，则你可亮出牌堆顶的X张牌（X为〖烈弓〗记录过的花色数-1），令此【杀】的伤害值基数+Y（Y为亮出牌中被〖烈弓〗记录过花色的牌的数量），且目标角色不能使用〖烈弓〗记录过花色的牌响应此【杀】。此【杀】使用结算结束后，你清除〖烈弓〗记录的的花色。';
lib.translate.tairan_info='锁定技，回合结束时，你将体力回复至体力上限，并将手牌摸至体力上限（获得的牌称为“泰然”牌）。然后你的下一个出牌阶段开始时，你失去上次以此法回复的体力值的体力，弃置所有“泰然”牌。';
lib.translate.shuiyanqijunx_info='出牌阶段，对一名'+((get.mode()=='single'&&['normal2'])?'':'装备区里有牌的')+'其他角色使用。目标角色选择一项：1、弃置装备区里的所有牌；2、受到你对其造成的1点雷电伤害。';
};
//设定势力+颜色显示
game.bolAddGroupNature=function(name,mapping,gradient,push){
var n,t;
if(!name) return;
if(typeof name=="string"){
n=name;
t=name
}
else if(Array.isArray(name)&&name.length==2&&typeof name[0]=="string"){
n=name[0];
t=name[1]
}
else return;
if(!mapping||!Array.isArray(mapping)||mapping.length!=3) mapping=[199,21,133];
var y="("+mapping[0]+","+mapping[1]+","+mapping[2];
var y1=y+",1)",y2=y+")";
var s=document.createElement('style');
var l;
l=".player .identity[data-color='diy"+n+"'],";
l+="div[data-nature='diy"+n+"'],";
l+="span[data-nature='diy"+n+"'] {text-shadow: black 0 0 1px,rgba"+y1+" 0 0 2px,rgba"+y1+" 0 0 5px,rgba"+y1+" 0 0 10px,rgba"+y1+" 0 0 10px}";
l+="div[data-nature='diy"+n+"m'],";
l+="span[data-nature='diy"+n+"m'] {text-shadow: black 0 0 1px,rgba"+y1+" 0 0 2px,rgba"+y1+" 0 0 5px,rgba"+y1+" 0 0 5px,rgba"+y1+" 0 0 5px,black 0 0 1px;}";
l+="div[data-nature='diy"+n+"mm'],";
l+="span[data-nature='diy"+n+"mm'] {text-shadow: black 0 0 1px,rgba"+y1+" 0 0 2px,rgba"+y1+" 0 0 2px,rgba"+y1+" 0 0 2px,rgba"+y1+" 0 0 2px,black 0 0 1px;}";
s.innerHTML=l;
document.head.appendChild(s);
if(gradient&&Array.isArray(gradient)&&Array.isArray(gradient[0])&&gradient[0].length==3){
var str="",st2=[];
for(var i=0;i<gradient.length;i++){
str+=",rgb("+gradient[i][0]+","+gradient[i][1]+","+gradient[i][2]+")";
if(i<2) st2[i]="rgb("+gradient[i][0]+","+gradient[i][1]+","+gradient[i][2]+")";
}
var tenUi=document.createElement('style');
tenUi.innerHTML=".player>.camp-zone[data-camp='"+n+"']>.camp-back {background: linear-gradient(to bottom"+str+");}";
tenUi.innerHTML+=".player>.camp-zone[data-camp='"+n+"']>.camp-name {text-shadow: 0 0 5px "+st2[0]+", 0 0 10px "+st2[1]+";}";
document.head.appendChild(tenUi);
}
if(push===true) lib.group.add(n);
lib.translate[n]=t;
lib.groupnature[n]="diy"+n;
};
//势力颜色
game.bolAddGroupNature(['daqin','秦'],[255,165,0]);
//武将包和卡包
if(bilibilicharacter.enable){
//武将包
game.import('character',function(){
var FaDongCharacter={
name:'FaDongCharacter',
connect:true,
characterSort:{
FaDongCharacter:{
FaDongCharacter1:['FD_guosi','FD_lijue','FD_niufudongxie','FD_fanchou','FD_dongyue','FD_zhangji'],
FaDongCharacter2:['FD_hubenjun','FD_baolvejun','FD_fengyaojun','FD_longxiangjun','FD_feixiongjunzuo','FD_feixiongjunyou'],
FaDongCharacter3:['FD_sunjian','FD_huaxiong'],
},
},
character:{
FD_guosi:['male','qun',4,['bilibili_yanglie','bilibili_mojun'],['character:guosi','die_audio']],
FD_lijue:['male','qun',6,['bilibili_yangwu','bilibili_mojun'],['character:lijue','die_audio']],
FD_fanchou:['male','qun',4,['cxy_FanGong','bilibili_mojun'],['character:fanchou']],
FD_dongyue:['male','qun',4,['bilibili_kuangxi','bilibili_mojun'],['die_audio']],
FD_niufudongxie:['double','qun',4,['bilibili_tunjun','cxy_JiaoXia','bilibili_mojun'],['character:tw_niufudongxie']],
FD_zhangji:['male','qun',4,['cxy_JieLve','bilibili_mojun'],['character:zhangji','die_audio']],
FD_hubenjun:['male','qun',5,['bilibili_huying'],['forbidai']],
FD_baolvejun:['male','qun',3,['cxy_BaoYing'],['forbidai']],
FD_fengyaojun:['female','qun',3,['bilibili_fengying'],['forbidai']],
FD_longxiangjun:['male','qun',4,['bilibili_longying'],['forbidai']],
FD_feixiongjunzuo:['male','qun',4,['bilibili_jingqi'],['forbidai']],
FD_feixiongjunyou:['male','qun',4,['cxy_RuiQi'],['forbidai']],
FD_sunjian:['male','qun',6,['gzyinghun','bilibili_polu'],['die_audio']],
FD_huaxiong:['male','qun',8,['bilibili_moqu','yaowu','bilibili_mojun'],['character:old_huaxiong','die_audio']],
},
characterIntro:{
dongyue:'董越，武威郡姑臧人也，东汉末年人，董卓手下东中郎将，与贾诩是同乡。曾被董卓派往渑池驻扎，抵御关东反董联军的进攻，董卓死后董越被董卓女婿牛辅所杀。',
},
perfectPair:{
},
skill:{
bilibili_jingqi:{
global:'bilibili_jingqi_distance',
ai:{threaten:1.5},
subSkill:{
distance:{
mod:{
globalFrom:function(from,to,distance){
if(game.hasPlayer(function(current){
if(get.mode()=='identity') return current.hasSkill('bilibili_jingqi')&&get.attitude(current,from)>0&&get.attitude(current,to)<0;
return current.hasSkill('bilibili_jingqi')&&from.isFriendOf(current)&&to.isEnemyOf(current);
})) return distance-1;
},
},
},
},
},
bilibili_fengying:{
global:'bilibili_fengying_use',
ai:{threaten:2.7},
subSkill:{
use:{
mod:{
targetEnabled:function(card,player,target){
if(game.hasPlayer(function(current){
if(!current.hasSkill('bilibili_fengying')) return false;
if(get.mode()=='identity') return get.attitude(current,target)>0;
return target.isFriendOf(current);
})){
if(((get.mode()=='identity'&&get.attitude(player,target)<0)||(get.mode()!='identity'&&target.isEnemyOf(player)))&&!game.hasPlayer(function(current){
return current!=target&&current.hp<=target.hp;
})) return false;
}
},
},
},
},
},
bilibili_mojun:{
trigger:{global:'damageEnd'},
filter:function(event,player){
if(!event.source||!event.source.isIn()||!event.card||event.card.name!='sha'||!event.notLink()) return false;
if(get.mode()=='identity') return get.attitude(player,event.source)>0;
return event.source.isFriendOf(player);
},
forced:true,
content:function(){
'step 0'
trigger.source.judge(function(card){
return get.color(card)=='black'?2:-2;
});
'step 1'
if(result.bool){
event.targets=game.filterPlayer(function(current){
if(get.mode()=='identity') return get.attitude(player,current)>0;
return current.isFriendOf(player);
});
event.targets.sort(lib.sort.seat);
game.asyncDraw(event.targets);
}
},
ai:{
expose:0.3,
threaten:2,
},
},
mojun_self:{
trigger:{source:'damageEnd'},
filter:function(event,player){
return event.card&&event.card.name=='sha';
},
forced:true,
content:function(){
'step 0'
player.judge(function(card){
return get.color(card)=='black'?2:-2;
});
'step 1'
if(result.bool) player.draw();
},
},
cxy_JieLve:{
trigger:{source:'damageEnd'},
filter:function(event,player){
if(!event.player.isIn()||event.player==player) return false;
return event.player.num('hej')>0;
},
logTarget:'player',
forced:true,
content:function(){
'step 0'
var num=0;
if(trigger.player.num('h')) num++;
if(trigger.player.num('e')) num++;
if(trigger.player.num('j')) num++;
if(num){
player.gainPlayerCard(trigger.player,'hej',num,true).set('filterButton',function(button){
for(var i=0;i<ui.selected.buttons.length;i++){
if(get.position(button.link)==get.position(ui.selected.buttons[i].link)) return false;
}
return true;
});
}
else event.finish();
'step 1'
player.loseHp();
},
},
bilibili_tunjun:{
trigger:{global:'roundStart'},
forced:true,
filter:function(event,player){
return player.maxHp>1;
},
content:function(){
player.loseMaxHp();
player.draw(player.maxHp);
},
},
cxy_FanGong:{
trigger:{target:'useCardToAfter'},
filter:function(event,player){
if(get.mode()=='identity') return get.attitude(player,event.player)<0;
return event.player.isEnemyOf(player);
},
direct:true,
content:function(){
player.chooseToUse(get.prompt2('cxy_FanGong',trigger.player),{name:'sha'}).set('filterTarget',function(card,player,target){
return target == _status.event.source;
}).set('selectTarget',-1).set('source',trigger.player).set('logSkill','cxy_FanGong');
},
},
cxy_JiaoXia:{
trigger:{global:'phaseDiscardBefore'},
filter:function(event,player){
if(get.mode()=='identity') return get.attitude(player,event.player)>0;
return event.player.isFriendOf(player);
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.addTempSkill('cxy_JiaoXia_buff','phaseDiscardAfter');
},
subSkill:{
buff:{
mod:{
ignoredHandcard:function(card,player){
if(get.color(card)=='black') return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&get.color(card)=='black') return false;
},
},
},
},
},
bilibili_kuangxi:{
enable:'phaseUse',
filter:function(event,player){
return !player.hasSkill('bilibili_kuangxi_silent');
},
filterTarget:lib.filter.notMe,
content:function(){
'step 0'
player.loseHp();
target.damage('nocard');
'step 1'
if(!target.In()||target.hasHistory('damage',function(evt){
return evt.getParent('bilibili_kuangxi')==event&&evt._dyinged;
})) player.addTempSkill('bilibili_kuangxi_silent');
},
ai:{
threaten:function(player,target){
if(!game.hasPlayer(function(current){
return player.getFriends().includes(current)&&current.hp<=target.hp;
})) return 1;
return 1+target.hp/2;
},
order:1,
result:{
target:function(player,target){
if(player.hp<=1&&!player.countCards('hs',{name:['tao','jiu']})) return 0;
var att=get.attitude(player,target),sgn=get.sgn(att);
return get.damageEffect(target,player,player)*sgn*(2-sgn);
},
},
},
subSkill:{silent:{charlotte:true}},
},
bilibili_yangwu:{
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
content:function(){
'step 0'
var targets=game.filterPlayer(current=>current!=player);
if(targets.length){
player.line(targets);
targets.forEach(target=>target.damage());
}
'step 1'
player.loseHp();
},
},
bilibili_yanglie:{
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
content:function(){
'step 0'
var targets=game.filterPlayer(current=>current.countGainableCards(player,'he'));
if(targets.length){
player.line(targets);
player.gainMultiple(targets,'he');
}
'step 1'
player.loseHp();
},
},
cxy_RuiQi:{
trigger:{global:'phaseDrawBegin2'},
filter:function(event,player){
if(get.mode()=='identity') return get.attitude(player,event.player)>0&&!event.numFixed;
return event.player.isFriendOf(player)&&!event.numFixed;
},
logTarget:'player',
forced:true,
content:function(){
trigger.num++;
},
ai:{threaten:2.5},
},
bilibili_huying:{
group:'choosejiangling',
derivation:'choosejiangling',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current=player.storage.myjiangling;
});
},
forced:true,
content:function(){
'step 0'
player.chooseCard('交给主帅一张【杀】，或失去1点体力，令其从牌堆获得一张【杀】',{name:'sha'}).ai=function(card){
if(player.countCards('h',{name:'sha'})<2){
if(player.hp<=2) return 1;
if(!game.hasPlayer(function(current){
return player.canUse({name:'sha'},current);
}))return 1;
return 0;
}
return 1;
};
'step 1'
var jiangling=player.storage.myjiangling;
if(result.bool){
jiangling.gain(result.cards[0],player);
player.$give(result.cards[0],jiangling);
}
else{
player.loseHp();
var card=get.cardPile('sha');
if(card) jiangling.gain(card,'gain2');
}
},
},
cxy_BaoYing:{
skillAnimation:true,
animationColor:'fire',
mark:true,
intro:{content:'limited'},
trigger:{global:'dying'},
filter:function(event,player){
if(get.mode()=='identity') return get.attitude(player,event.player)>0;
return event.player.isFriendOf(player);
},
logTarget:'player',
content:function(){
player.awakenSkill('cxy_BaoYing');
trigger.player.recover(1-trigger.player.hp);
},
},
bilibili_longying:{
group:'choosejiangling',
derivation:'choosejiangling',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
var jiangling=player.storage.myjiangling;
return jiangling&&jiangling.isIn()&&jiangling.isDamaged();
},
direct:true,
content:function(){
'step 0'
player.logSkill('bilibili_longying',player.storage.myjiangling);
player.loseHp();
'step 1'
var jiangling=player.storage.myjiangling;
jiangling.recover();
jiangling.draw();
},
},
choosejiangling:{
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
if(game.countPlayer()<=1) return false;
return event.name!='phase'||game.phaseNumber==0;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget('请选择你要跟随的将领',true,function(card,player,target){
return target!=player;
}).set('ai',function(target){
var att=get.attitude(_status.event.player,target);
if(att>0) return att+1;
if(att==0) return Math.random();
return att;
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.line(target,'fire');
player.storage.myjiangling=target;
game.log(player,'选择了',target,'作为自己的将领');
}
}
},
bilibili_moqu:{
group:'bilibili_moqu_discard',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
return player.countCards('h')<=player.hp;
},
forced:true,
content:function(){
player.draw(2);
},
subSkill:{
discard:{
audio:'bilibili_moqu',
trigger:{global:'damageEnd'},
filter:function(event,player){
if(event.player==player||!player.countCards('he')) return false;
if(get.mode()=='identity') return get.attitude(player,event.player)>0;
return event.player.isFriendOf(player);
},
forced:true,
content:function(){
player.chooseToDiscard('he',true);
},
},
},
},
bilibili_polu:{
trigger:{global:'die'},
filter:function(event,player){
if(event.player==player) return true;
if(!player.isIn()) return false;
if(get.mode()=='identity') return event.source&&get.attitude(player,event.player)<0&&get.attitude(player,event.source)>0;
return event.source&&event.player.isEnemyOf(player)&&event.source.isFriendOf(player);
},
forced:true,
forceDie:true,
content:function(){
'step 0'
var num=player.getAllHistory('useSkill',evt=>evt.skill=='bilibili_polu').length;
event.num=num;
var targets=game.filterPlayer(function(target){
if(get.mode()=='identity') return get.attitude(player,target)>0;
return target.isFriendOf(player);
}).sortBySeat();
event.targets=targets;
'step 1'
player.line(targets);
game.asyncDraw(targets,num);
},
},
},
translate:{
FaDongCharacter1:'诸侯伐董·将领',
FaDongCharacter2:'<span style="font-family: yuanli">随从分包默认AI禁选</span>'+
'<br>'+
'诸侯伐董·随从',
FaDongCharacter3:'诸侯伐董·特殊',
FD_lijue:'李傕·伐董',
FD_guosi:'郭汜·伐董',
FD_zhangji:'张济·伐董',
FD_fanchou:'樊稠·伐董',
FD_dongyue:'董越',
FD_niufudongxie:'牛辅董翓·伐董',
FD_hubenjun:'虎贲军',
FD_baolvejun:'豹掠军',
FD_fengyaojun:'凤瑶军',
FD_longxiangjun:'龙骧军',
FD_feixiongjunzuo:'飞熊军左',
FD_feixiongjunyou:'飞熊军右',
FD_sunjian:'孙坚·伐董',
FD_huaxiong:'华雄·伐董',
bilibili_mojun:'魔军',
mojun_self:'魔军',
cxy_JieLve:'劫掠',
bilibili_tunjun:'屯军',
cxy_FanGong:'反攻',
cxy_JiaoXia:'狡黠',
bilibili_kuangxi:'狂袭',
bilibili_yangwu:'扬武',
bilibili_yanglie:'扬烈',
cxy_JiaoXia_info:'锁定技，友方角色的黑色手牌不计入手牌上限。',
bilibili_yangwu_info:'锁定技，准备阶段开始时，你对所有其他角色造成1点伤害，然后你失去1点体力。',
bilibili_yanglie_info:'锁定技，准备阶段开始时，你获得所有其他角色区域里的一张牌，然后你失去1点体力。',
cxy_JieLve_info:'锁定技，当你对一名其他角色造成伤害后，你获得其区域内的各一张牌，然后失去1点体力。',
cxy_FanGong_info:'当你成为一名敌方角色使用牌的目标且该牌结算完成后，你可以对其使用一张【杀】（无距离限制）。',
bilibili_mojun_info:'锁定技，当友方角色使用【杀】对目标角色造成伤害后，其进行判定，若结果为黑色，友方角色各摸一张牌。',
mojun_self_info:'锁定技，当你使用【杀】对目标角色造成伤害后，进行一次判定，若结果为黑色，你摸一张牌。',
bilibili_tunjun_info:'锁定技，每轮游戏开始，若你的体力上限不为1，则你须扣减1点体力上限，然后摸X张牌（X为你的体力上限）。',
bilibili_kuangxi_info:'出牌阶段，你可以失去1点体力，然后对一名其他角色造成1点伤害，若其因受到此伤害而进入濒死状态，当此濒死结算结束后，此技能于此回合内无效。',
cxy_RuiQi:'锐骑',
bilibili_huying:'虎营',
cxy_BaoYing:'豹营',
bilibili_longying:'龙营',
bilibili_jingqi:'精骑',
bilibili_fengying:'凤营',
bilibili_jingqi_info:'锁定技，友方角色计算与敌方角色距离-1。',
bilibili_fengying_info:'锁定技，敌方角色不能使用牌指定体力值唯一最少的友方角色。',
cxy_RuiQi_info:'锁定技，友方角色摸牌阶段额外摸一张牌。',
cxy_BaoYing_info:'限定技，友方角色进入濒死状态时，你可以令其体力回复至1。',
bilibili_longying_info:'锁定技，出牌阶段开始时，若将领已受伤，则你失去1点体力，然后令其回复1点体力并摸一张牌。',
bilibili_huying_info:'锁定技，出牌阶段开始时，除非你将一张【杀】交给将领，否则失去1点体力并令将领随机获得牌堆中的一张【杀】。',
bilibili_longying_append:'<span style="font-family: yuanli"><li>游戏开始时，你选择一名其他角色作为你的将领</span>',
bilibili_huying_append:'<span style="font-family: yuanli"><li>游戏开始时，你选择一名其他角色作为你的将领</span>',
choosejiangling:'将领选择',
choosejiangling_info:'<br>游戏开始时，你选择一名其他角色作为你的将领。',
bilibili_moqu:'魔躯',
bilibili_polu:'破掳',
bilibili_polu_info:'锁定技，友方角色杀死一名敌方角色或你死亡时，你令友方角色各摸X张牌（X为此技能发动的次数）。',
bilibili_moqu_info:'锁定技，每名角色的回合结束时，若你的手牌数不大于当前体力值，你摸两张牌；其他友方角色受到伤害后，你弃置一张牌。',
},
dynamicTranslate:{
bilibili_longying:function(player){
if(!game.hasPlayer(function(current){
return current=player.storage.myjiangling;
})) return '你的将领呢？';
return '锁定技，出牌阶段开始时，若'+get.translation(player.storage.myjiangling)+'已受伤，则你失去1点体力，然后令其回复1点体力并摸一张牌。';
},
bilibili_huying:function(player){
if(!game.hasPlayer(function(current){
return current=player.storage.myjiangling;
})) return '你的将领呢？';
return '锁定技，出牌阶段开始时，除非你将一张【杀】交给'+get.translation(player.storage.myjiangling)+'，否则失去1点体力并令'+get.translation(player.storage.myjiangling)+'随机获得牌堆中的一张【杀】。';
},
},
};
for(var i in FaDongCharacter.character){
FaDongCharacter.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
}
return FaDongCharacter;
});
lib.config.all.characters.push('FaDongCharacter');
lib.config.all.sgscharacters.push('FaDongCharacter');
if(!lib.config.characters.includes('FaDongCharacter')) lib.config.characters.remove('FaDongCharacter');
lib.translate['FaDongCharacter_character_config']='<span style="font-family: xingkai">诸侯伐董</span>';
game.import('character',function(){
var NianShouCharacter={
name:'NianShouCharacter',
connect:true,
characterSort:{
NianShouCharacter:{
NianShouCharacterSX:['NS_zishu','NS_chouniu','NS_yinhu','NS_maotu','NS_chenlong','NS_sishe','NS_wuma','NS_weiyang','NS_shenhou','NS_youji','NS_xugou','NS_haizhu'],
NianShouCharacter2018:['NS_nianshouC','NS_nianshouB','NS_nianshouA'],
NianShouCharacter2019:['NS_nianshouyin','NS_nianshouyang'],
},
},
character:{
NS_zishu:['male','qun',3,['cxy_ZiShu'],[]],
NS_chouniu:['male','qun','1/5',['YJchouniu'],[]],
NS_yinhu:['male','qun',4,['cxy_YinHu'],[]],
NS_maotu:['female','qun',3,['YJmaotu'],[]],
NS_chenlong:['male','qun',4,['YJchenlong'],[]],
NS_sishe:['female','qun',3,['cxy_SiShe'],[]],
NS_wuma:['male','qun',4,['YJwuma'],[]],
NS_weiyang:['female','qun',3,['cxy_WeiYang'],[]],
NS_shenhou:['male','qun',3,['cxy_ShenHou'],[]],
NS_youji:['male','qun',3,['YJyouji'],[]],
NS_xugou:['male','qun',4,['cxy_XuGou'],[]],
NS_haizhu:['male','qun',5,['cxy_HaiZhu'],[]],

NS_nianshouA:['male','shen',6,['cxy_JiYuan','cxy_SuiZhongE','cxy_CuiKuE'],[]],
NS_nianshouB:['male','shen',8,['cxy_JiYuan','cxy_NianYi','cxy_SuiZhongN','cxy_CuiKuN'],[]],
NS_nianshouC:['male','shen',0,['cxy_JiYuan','cxy_NianYiD','cxy_SuiZhongN','cxy_CuiKuD'],[]],

NS_nianshouyang:['male','shen',6,['NSyangshou','NSbeimingyang','NSnuyan','NShundunyang'],[]],
NS_nianshouyin:['female','shen',6,['NSyinshou','NSbeimingyin','NShuihun','NShundunyin'],[]],
},
skill:{
cxy_ZiShu:{
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
usable:1,
selectTarget:1,
filterTarget:function(card,player,target){
return target!=player&&target.num('h')>player.num('h');
},
content:function(){
'step 0'
player.gainPlayerCard(target,'h',true);
if(!game.hasPlayer(function(current) {
return current!=player&&current.num('h')>player.num('h');
}))event.finish();
'step 1'
player.chooseTarget('子鼠：你可以获得手牌数大于你的其他角色一张手牌，然后你可以重复此流程直到你的手牌数为全场最多',function(card,player,target){
return target!=player&&target.num('h')>player.num('h');
}).set('ai',function(target){
var att=get.attitude(player,target);
if(target>0){
return -1;
}
return 2+Math.random();
});
'step 2'
if(result.bool){
player.line(result.targets[0]);
player.gainPlayerCard(result.targets[0],'h',true);
}
else event.finish();
'step 3'
if(game.hasPlayer(function(current) {
return current!=player&&current.num('h')>player.num('h');
})) event.goto(1);
},
ai:{
threaten:1.2,
order:1,
result:{
player:1,
target:-1,
},
},
},
YJchouniu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseEnd'},
filter:function(event,player){
return !game.hasPlayer(function(current){
return current!=player&&current.hp <= player.hp;
});
},
forced:true,
content:function(){
player.recover();
},
},
cxy_YinHu:{
init:function(player){
player.storage.cxy_YinHu=[];
player.storage.cxy_YinHu_type=[];
},
marktext:'虎',
intro:{
name:'弃置过的牌',
content:function(storage,player){return ''},
mark:function(dialog,content,player){
if(content.length){
dialog.addSmall([content,'vcard']);
}
},
markcount:function(storage,player){
return storage.length;
},
},
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
filter:function(event,player){
return !player.hasSkill('cxy_YinHu_filter')&&player.num('he');
},
filterCard:function(card,player){
return !player.storage.cxy_YinHu_type.includes(get.type(card));
},
filterTarget:lib.filter.notMe,
check:function(card){
return 8-get.value(card);
},
position:'he',
contentBefore:function(){
player.storage.cxy_YinHu_type.push(get.type(cards[0]));
player.storage.cxy_YinHu.push([get.translation(get.type(cards[0])),'',cards[0].name]);
player.markSkill('cxy_YinHu');
player.syncStorage('cxy_YinHu');
},
content:function(){
'step 0'
player.addSkill('cxy_YinHu_dying');
target.damage(player);
'step 1'
if(!player.hasSkill('cxy_YinHu_dying')) player.addTempSkill('cxy_YinHu_filter');
else player.removeSkill('cxy_YinHu_dying');
},
ai:{
threaten:1.8,
order:5,
result:{
target:function(player,target){
return get.damageEffect(target,player,target);
},
},
},
group:'cxy_YinHu_mark',
subSkill:{
mark:{
charlotte:true,
trigger:{player:'phaseUseAfter'},
direct:true,
content:function(){
player.storage.cxy_YinHu=[];
player.storage.cxy_YinHu_type=[];
player.unmarkSkill('cxy_YinHu');
},
},
filter:{charlotte:true},
dying:{
trigger:{global:'dying'},
priority:15,
direct:true,
filter:function(event,player){
return event.reason&&event.reason.getParent().name=='cxy_YinHu';
},
content:function(){
player.removeSkill('cxy_YinHu_dying');
},
},
},
},
YJmaotu:{
mod:{
targetEnabled:function(card,player,target){
if(!target.hasMark('YJmaotu')) return;
if(player!=target&&player.hp>=target.hp) return false;
},
},
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseBegin',global:'dieAfter'},
filter:function(event,player){
return event.name=='die'||player.countMark('YJmaotu')>0;
},
forced:true,
content:function(){
player[trigger.name=='die'?'addMark':'removeMark']('YJmaotu',1);
},
},
YJchenlong:{
audio:'ext:活动武将/audio/skill:true',
skillAnimation:true,
animationColor:'fire',
mark:true,
limited:true,
enable:'phaseUse',
filterTarget:lib.filter.notMe,
contentBefore:function(){
player.addSkill('YJchenlong_temp');
},
content:function(){
'step 0'
player.awakenSkill('YJchenlong');
var map={};
var list=[];
for(var i=1;i<=Math.min(5,player.hp);i++){
var cn=get.cnNumber(i,true);
map[cn]=i;
list.push(cn);
}
event.map=map;
player.chooseControl(list).set('prompt','失去任意点体力并对'+get.translation(target)+'造成等量的伤害').set('goon',list[list.length-1]).set('ai',()=>_status.event.goon);
'step 1'
var num=event.map[result.control]||player.hp;
player.loseHp(num);
target.damage(num,player);
},
contentAfter:function(){
player.removeSkill('YJchenlong_temp');
},
ai:{
order:1,
result:{target:-1},
},
subSkill:{
temp:{
charlotte:true,
trigger:{player:'dying'},
direct:true,
content:function(){
'step 0'
player.addMark('ChenLongMark',player.maxHp-1,false);
player.recover(1-player.hp);
'step 1'
player.loseMaxHp();
'step 2'
player.removeSkill('YJchenlong_temp');
},
},
},
},
cxy_SiShe:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd'},
filter:function(event,player){
return event.source&&event.source.isIn();
},
check:function(event,player){
return get.damageEffect(event.source,player,player)>0;
},
logTarget:'source',
content:function(){
trigger.source.damage(trigger.num,player);
},
ai:{
threaten:0.6,
maixie:true,
effect:{
target:function(card,player,target){
if(player.hasSkillTag('jueqing',false,target)) return [1,-1.5];
if(!target.hasFriend()) return;
if(get.tag(card,'damage')) return [1,0,0,-0.7];
},
},
},
},
YJwuma:{
init:function(player){
if(player.isTurnedOver()){
player.logSkill('YJwuma');
player.turnOver();
}
},
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToBegin'},
filter:function(event,player){
return event.player!=player&&['trick','delay'].includes(get.type(event.card));
},
forced:true,
content:function(){
player.draw();
},
group:['YJwuma_turn','YJwuma_skip'],
subSkill:{
turn:{
audio:'YJwuma',
trigger:{player:'turnOverBefore'},
filter:function(event,player){
return !player.isTurnedOver();
},
forced:true,
content:function(){
trigger.cancel();
},
},
skip:{
audio:'YJwuma',
trigger:{player:['phaseJudgeSkipped','phaseJudgeCancelled','phaseDrawSkipped','phaseDrawCancelled','phaseUseSkipped','phaseUseCancelled','phaseDiscardSkipped','phaseDiscardCancelled','phaseZhunbeiSkipped','phaseZhunbeiCancelled','phaseJieshuSkipped','phaseJieshuCancelled']},
forced:true,
content:function(){
game.log(player,'恢复了',trigger.name);
player[trigger.name]()._triggered=null;
},
},
},
},
cxy_WeiYang:{
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
usable:1,
selectCard:[1,Infinity],
filterCard:function(card,player){
for(var i=0;i<ui.selected.cards.length;i++){
if(get.type(card)==get.type(ui.selected.cards[i]))return false;
}
return true;
},
position:'he',
complexCard:true,
selectTarget:function(){
return ui.selected.cards.length;
},
filterTarget:function(card,player,target){
return target.hp<target.maxHp;
},
check:function(card){
var player=_status.event.player;
var count=game.filterPlayer(function(current){
return current.isDamaged() && get.attitude(player,current)>2;
}).length;
if(ui.selected.cards.length >= count)return -1;
return 8-get.value(card);
},
content:function(){
target.recover(player);
},
ai:{
threaten:1.2,
order:4,
result:{
target:1,
},
},
},
cxy_ShenHou:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'shaBefore'},
content:function(){
'step 0'
player.judge(function(card){
return get.color(card)=='red'?2:-2;
});
'step 1'
if(result.bool) trigger.cancel();
},
ai:{
effect:{
target:function(card,player,target){
if(card.name=='sha') return [1,0.4];
},
},
},
},
YJyouji:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseDrawBegin2'},
forced:true,
filter:function(event,player){
return game.roundNumber>0&&!event.numFixed;
},
content:function(){
trigger.num+=Math.min(5,game.roundNumber);
},
ai:{
threaten:function(player,target){
return 1+Math.min(5,game.roundNumber)/2;
},
},
},
cxy_XuGou:{
mod:{
targetInRange:function(card,player,target,now){
if(card.name=='sha'&&get.color(card)=='red') return true;
},
},
audio:'ext:活动武将/audio/skill:true',
trigger:{
source:'damageBegin',
},
filter:function(event,player){
return event.card&&(event.card.name=='sha'&&get.color(event.card)=='red')&&event.notLink();
},
forced:true,
content:function(){
trigger.num++;
},
ai:{
effect:{
player:function(card,player,target){
if(card.name=='sha'&&get.color(card)=='red'){
if(get.attitude(player,target)>0)return [1,-0.5];
return [1,0.8];
}
},
},
},
group:'cxy_XuGou_buff',
subSkill:{
buff:{
trigger:{target:'shaBefore'},
filter:function(event,player){
return get.color(event.card)=='red';
},
forced:true,
content:function(){
trigger.cancel();
},
ai:{
effect:{
target:function(card,player,target){
if(card.name=='sha'&&get.color(card)=='red') return 'zerotarget';
},
},
},
},
},
},
cxy_HaiZhu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'discardAfter'},
filter:function(event,player){
if(event.player==player) return false;
for(var i=0;i<event.cards.length;i++){
if(get.color(event.cards[i])=='black'&&get.position(event.cards[i])=='d'){
return true;
}
}
return false;
},
forced:true,
content:function(){
'step 0'
if(trigger.delay==false) game.delay();
'step 1'
var cards=[];
for(var i=0;i<trigger.cards.length;i++){
if(get.color(trigger.cards[i])=='black'&&get.position(trigger.cards[i])=='d'){
cards.push(trigger.cards[i]);
}
}
if(cards.length) player.gain(cards,'gain2');
},
group:'cxy_HaiZhu_buff',
subSkill:{
buff:{
audio:'cxy_HaiZhu',
trigger:{player:'phaseBegin'},
filter:function(event,player){
return !game.hasPlayer(function(current){
return current!=player&&current.num('h')>player.num('h');
});
},
forced:true,
content:function(){
player.loseHp();
},
},
},
},
YJjinzhu:{
mod:{
maxHandcard:function(player,num){
return num+1;
},
},
group:'YJjinzhu_fuhuo',
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseDrawBegin2'},
forced:true,
filter:function(event,player){
return !event.numFixed;
},
content:function(){
trigger.num++;
},
subSkill:{
fuhuo:{
audio:'YJjinzhu',
skillAnimation:true,
animationColor:'fire',
trigger:{player:'dieBegin'},
forced:true,
content:function(){
'step 0'
player.removeSkill('YJjinzhu');
if(player.hp<3) player.recover(3-player.hp);
'step 1'
trigger.cancel();
},
},
},
},
cxy_JiYuan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseJieshuBegin'},
forced:true,
content:function(){
player.draw(Math.round(player.maxHp/2));
},
},
cxy_SuiZhongE:{
unique:true,
skillAnimation:true,
animationColor:'fire',
mark:true,
intro:{content:'limited'},
trigger:{player:'dying'},
audio:'cxy_SuiZhongN',
filter:function(event,player){
return !player.storage.cxy_SuiZhongE;
},
content:function(){
'step 0'
player.storage.cxy_SuiZhongE=true;
player.awakenSkill('cxy_SuiZhongE');
player.recover(1-player.hp);
'step 1'
if(_status.dying.includes(player)) _status.dying.remove(player);
'step 2'
if(_status.currentPhase!=player){
var evt=_status.event.getParent('phase');
if(evt){
game.resetSkills();
_status.event=evt;
_status.event.finish();
}
}
},
},
cxy_CuiKuE:{
audio:'cxy_CuiKuD',
trigger:{global:['phaseBefore','roundStart']},
filter:function(event,player){
if(event.name!='phase') return game.roundNumber%6==0;
return game.phaseNumber==0;
},
forced:true,
content:function(){
'step 0'
player.chooseTarget('请选择〖摧枯〗的目标',lib.translate.cxy_CuiKuE_info,lib.filter.notMe,true).ai=function(target){
return 2-get.attitude(player,target);
};
'step 1'
player.line(result.targets[0]);
result.targets[0].damage(2,player);
},
},
cxy_NianYi:{
mod:{
targetInRange:function(card,player,target){
return true;
},
},
audio:'cxy_NianYiD',
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
filter:function(event,player){
return player.countCards('j')>0
},
content:function(){
player.discard(player.getCards('j').randomGet());
},
},
cxy_SuiZhongN:{
unique:true,
skillAnimation:true,
animationColor:'fire',
mark:true,
intro:{content:'limited'},
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'dying'},
filter:function(event,player){
return !player.storage.cxy_SuiZhongN;
},
content:function(){
'step 0'
player.storage.cxy_SuiZhongN=true;
player.awakenSkill('cxy_SuiZhongN');
player.recover(1-player.hp);
event.targets=game.filterPlayer(function(current){
return current!=player;
});
event.targets.sort(lib.sort.seat);
'step 1'
for(var i=0;i<event.targets.length;i++) event.targets[i].discard(event.targets[i].getCards('he'));
if(_status.currentPhase==player) event.finish();
'step 2'
if(_status.dying.includes(player)) _status.dying.remove(player);
'step 3'
var evt=_status.event.getParent('phase');
if(evt){
game.resetSkills();
_status.event=evt;
_status.event.finish();
}
},
},
cxy_CuiKuN:{
audio:'cxy_CuiKuD',
trigger:{global:['phaseBefore','roundStart']},
filter:function(event,player){
if(event.name!='phase') return game.roundNumber%6==0;
return game.phaseNumber==0;
},
forced:true,
content:function(){
'step 0'
player.chooseTarget('请选择〖摧枯〗的目标',lib.translate.cxy_CuiKuN_info,lib.filter.notMe,[1,2],true).ai=function(target){
return 2-get.attitude(player,target);
};
'step 1'
player.line(result.targets);
for(var i=0;i<result.targets.length;i++){
result.targets[i].damage(2,player);
}
},
},
cxy_NianYiD:{
mod:{
targetInRange:function(card,player,target){
return true;
},
},
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseBegin'},
forced:true,
filter:function(event,player){
return player.countCards('j')>0
},
content:function(){
player.discard(player.getCards('j').randomGet());
},
group:'cxy_NianYiD_buff',
subSkill:{
buff:{
forced:true,
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
if(_status.currentPhase==player) return false;
var num=0;
player.getHistory('lose',function(evt){
if(evt.cards2) num+=evt.cards2.length;
});
return num>=3;
},
content:function(){
'step 0'
event.targets=game.filterPlayer(function(current){
return current!=player;
});
event.targets.sort(lib.sort.seat);
player.logSkill('cxy_NianYiD',event.targets);
'step 1'
for(var i=0;i<event.targets.length;i++){
event.targets[i].damage(player);
}
},
},
},
},
cxy_CuiKuD:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:['phaseBefore','roundStart']},
filter:function(event,player){
if(event.name!='phase') return game.roundNumber%6==0;
return game.phaseNumber==0;
},
direct:true,
content:function(){
'step 0'
event.targets=game.filterPlayer(function(current){
return current!=player;
});
event.targets.sort(lib.sort.seat);
player.logSkill('cxy_CuiKuD',event.targets);
'step 1'
for(var i=0;i<event.targets.length;i++){
event.targets[i].damage(Math.floor(event.targets[i].hp/2));
}
'step 2'
var num=game.filterPlayer(function(current){
return current!=player&&current.maxHp%2!=0;
}).length;
player.draw(num);
},
},
NSyangshou:{
mod:{
judge:function(player,result){
if(_status.event.cardname=='lebu'||_status.event.cardname=='bingliang'){
if(result.bool==false) result.bool=true;
else result.bool=false;
}
},
},
group:['NSyangshou_damage','NSyangshou_draw'],
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'turnOverAfter'},
forced:true,
filter:function(event,player){
return player.isTurnedOver()&&game.hasPlayer(function(current){
return current.name=='NS_nianshouyin'&&current.isTurnedOver();
});
},
logTarget:function(event,player){
return game.filterPlayer(function(current){
return current.name=='NS_nianshouyin'&&current.isTurnedOver();
});
},
content:function(){
var targets=game.filterPlayer(function(current){
return current.name=='NS_nianshouyin'&&current.isTurnedOver();
});
for(var i of targets) i.turnOver();
},
subSkill:{
damage:{
audio:'ext:活动武将/audio/skill:true',
inherit:'shixin',
},
draw:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed;
},
forced:true,
content:function(){
trigger.num+=2;
},
},
},
},
NSyinshou:{
mod:{
judge:function(player,result){
if(_status.event.cardname=='lebu'||_status.event.cardname=='bingliang'){
if(result.bool==false) result.bool=true;
else result.bool=false;
}
},
},
group:['NSyinshou_damage','NSyinshou_draw'],
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'turnOverEnd'},
forced:true,
filter:function(event,player){
return player.isTurnedOver()&&game.hasPlayer(function(current){
return current.name=='NS_nianshouyang'&&current.isTurnedOver();
});
},
logTarget:function(event,player){
return game.filterPlayer(function(current){
return current.name=='NS_nianshouyang'&&current.isTurnedOver();
});
},
content:function(){
var targets=game.filterPlayer(function(current){
return current.name=='NS_nianshouyang'&&current.isTurnedOver();
});
for(var i of targets) i.turnOver();
},
subSkill:{
damage:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageBegin4'},
filter:function(event,player){
return event.hasNature('thunder');
},
forced:true,
content:function(){
trigger.cancel();
},
ai:{
nothunder:true,
effect:{
target:function(card,player,target,current){
if(get.tag(card,'thunderDamage')) return 'zerotarget';
},
},
},
},
draw:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseJieshuBegin'},
forced:true,
content:function(){
player.draw(2);
},
},
},
},
NSbeimingyang:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'die'},
filter:function(event,player){
return player.getEnemies().length>0;
},
forceDie:true,
forced:true,
skillAnimation:true,
animationColor:'orange',
content:function(){
'step 0'
event.players=get.players(player);
'step 1'
if(event.players.length){
var current=event.players.shift();
if(current.isEnemyOf(player)){
player.line(current,'fire');
current.damage('fire');
}
event.redo();
}
},
},
NSbeimingyin:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'die'},
filter:function(event,player){
return player.getEnemies().length>0;
},
forceDie:true,
forced:true,
skillAnimation:true,
animationColor:'thunder',
content:function(){
'step 0'
event.players=get.players(player);
'step 1'
if(event.players.length){
var current=event.players.shift();
if(current.isEnemyOf(player)){
player.line(current,'thunder');
current.damage('thunder');
}
event.redo();
}
},
},
NSnuyan:{
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
usable:1,
filter:function(event,player){
return player.countCards('h',{color:'red'})>0;
},
filterCard:function(card,player,target){
return get.color(card,player)=='red';
},
check:function(card){
return 7-get.value(card);
},
content:function(){
player.loseHp();
player.addTempSkill('NSnuyan_damage');
},
ai:{
order:10,
result:{
player:function(player,target){
if(player.countCards('h',function(card){
return get.tag(card,'damage')&&get.color(card)=='red';
})>2&&player.hp>1) return 1;
return 0;
},
},
},
subSkill:{
damage:{
audio:'NSnuyan',
trigger:{source:'damageBegin3'},
filter:function(event,player){
return event.card&&get.color(event.card,player)=='red';
},
forced:true,
content:function(){
game.setNature(trigger,'fire');
trigger.num++;
},
ai:{fireAttack:true},
},
},
},
NShuihun:{
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
usable:1,
filter:function(event,player){
return player.countCards('h',{color:'black'})>0&&game.hasPlayer(function(current){
return current.isDamaged();
});
},
filterTarget:function(card,player,target){
return target.isDamaged();
},
filterCard:function(card,player,target){
return get.color(card,player)=='black';
},
content:function(){
player.loseHp();
target.recover(2);
},
ai:{
order:1,
result:{
player:function(player,target){
if(player.hp>1||player.countCards('h',function(card){
return card.name=='tao'||card.name=='jiu';
})>0) return 1;
return 0;
},
target:1,
},
},
},
NShundunyang:{
group:'NShundunyang_die',
derivation:'NShuihun',
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
skillAnimation:true,
animationColor:'thunder',
juexingji:true,
unique:true,
filter:function(event,player){
return game.dieYinShou==true;
},
forced:true,
content:function(){
player.awakenSkill('NShundunyang');
player.gainMaxHp();
player.recover();
player.addSkillLog('NShuihun');
},
subSkill:{
die:{
charlotte:true,
trigger:{global:'dieAfter'},
filter:function(event,player){
return event.player.name=='NS_nianshouyin';
},
forceDie:true,
direct:true,
content:function(){
game.dieYinShou=true;
},
},
},
},
NShundunyin:{
group:'NShundunyin_die',
derivation:'NSnuyan',
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
skillAnimation:true,
animationColor:'fire',
juexingji:true,
unique:true,
filter:function(event,player){
return game.dieYangShou==true;
},
forced:true,
content:function(){
player.awakenSkill('NShundunyin');
player.gainMaxHp();
player.recover();
player.addSkillLog('NSnuyan');
},
subSkill:{
die:{
charlotte:true,
trigger:{global:'dieAfter'},
filter:function(event,player){
return event.player.name=='NS_nianshouyang';
},
forceDie:true,
direct:true,
content:function(){
game.dieYangShou=true;
},
},
},
},
},
translate:{
NianShouCharacterSX:'十二生肖',
NianShouCharacter2018:'年兽2018',
NianShouCharacter2019:'年兽2019',
'NS_zishu':'子鼠',
'NS_chouniu':'丑牛',
'NS_yinhu':'寅虎',
'NS_maotu':'卯兔',
'NS_chenlong':'辰龙',
'NS_sishe':'巳蛇',
'NS_wuma':'午马',
'NS_weiyang':'未羊',
'NS_shenhou':'申猴',
'NS_youji':'酉鸡',
'NS_xugou':'戌狗',
'NS_haizhu':'亥猪',
'NS_nianshouA':'简单年兽',
'NS_nianshouB':'普通年兽',
'NS_nianshouC':'困难年兽',
cxy_RuiShou:'瑞兽',
cxy_ZiShu:'子鼠',
YJchouniu:'丑牛',
cxy_YinHu:'寅虎',
YJmaotu:'卯兔',
YJmaotu2:'卯兔',
YJchenlong:'辰龙',
cxy_SiShe:'巳蛇',
YJwuma:'午马',
cxy_WeiYang:'未羊',
cxy_ShenHou:'申猴',
YJyouji:'酉鸡',
cxy_XuGou:'戌狗',
cxy_HaiZhu:'亥猪',
YJjinzhu:'金猪',
'cxy_RuiShou_info':' 锁定技，你只会受到与你势力相同的角色造成的伤害且你只能对其造成伤害；一名生肖死亡后，与该生肖势力相同的角色也能对你造成伤害。',
'cxy_ZiShu_info':'出牌阶段限一次，你可以获得手牌数大于你的其他角色一张手牌，你可以重复此流程直到你的手牌数为全场最多。',
'YJchouniu_info':'锁定技，结束阶段，若你的体力值为全场最小，则你回复1点体力。',
'cxy_YinHu_info':'出牌阶段，你可以弃置一张牌（以此法弃置的牌须类型各不相同），然后对一名其他角色造成1点伤害；若你以此法导致一名角色进入濒死状态，则此技能失效直到回合结束。',
'YJmaotu_info':'锁定技，其他角色死亡后，你获得1枚“卯兔”标记。若你拥有“卯兔”标记，则你不是体力值大于等于你的其他角色使用牌的合法目标。回合开始时，你失去1枚“卯兔”标记。',
'YJchenlong_info':'限定技，出牌阶段，你可以失去任意点体力（至多为5），然后对一名其他角色造成等量的伤害。若你以此法进入濒死状态，则你将体力值回复至1，然后减1点体力上限。',
'cxy_SiShe_info':'当你受到伤害后，你可以对伤害来源造成等量伤害。',
'YJwuma_info':'锁定技，你不能被翻面；你的阶段不会被跳过；当你成为其他角色使用锦囊牌的目标后，你摸一张牌。',
'cxy_WeiYang_info':'出牌阶段限一次，你可以弃置任意张不同类型的牌，然后令至多等量角色回复1点体力。',
'cxy_ShenHou_info':'当你成为【杀】的目标时，你可以进行判定，若结果为红色，则此【杀】对你无效。',
'YJyouji_info':'锁定技，摸牌阶段，你多摸X张牌（X为游戏轮数且X至多为5）。',
'cxy_XuGou_info':'锁定技，红色【杀】对你无效；你使用红色【杀】无距离限制且造成伤害+1。',
'cxy_HaiZhu_info':'锁定技，当其他角色的黑色牌因弃置而置入弃牌堆后，你获得这些牌。准备阶段，若你的手牌数为全场最多，你失去1点体力。',
'YJjinzhu_info':'锁定技，你的手牌上限和额定摸牌数+1。锁定技，当你死亡时，你失去技能〖金猪〗，复活并将体力回复至三点(其他区域的牌均不会发生改变)。',
cxy_JiYuan:'汲源',
cxy_SuiZhongN:'岁终',
cxy_SuiZhongE:'岁终',
cxy_CuiKuN:'摧枯',
cxy_CuiKuE:'摧枯',
cxy_CuiKuD:'摧枯',
cxy_NianYi:'年裔',
cxy_NianYiD:'年裔',
'dying_info':'',
'cxy_JiYuan_info':'锁定技，结束阶段，你摸X张牌（X为体力上限的一半，向上取整）。',
'cxy_SuiZhongN_info':'限定技，当你处于濒死状态时，你可以将体力值回复至1，然后令其他角色弃置所有牌，若当前回合角色不为你，则结束当前回合。',
'cxy_SuiZhongE_info':'限定技，当你处于濒死状态时，你可以将体力值回复至1，若当前回合角色不为你，则结束当前回合。',
'cxy_CuiKuN_info':'锁定技，游戏开始时或游戏每进行6轮时，你对至多2名其他角色造成2点伤害。',
'cxy_CuiKuE_info':'锁定技，游戏开始时或游戏每进行6轮时，你对至多1名其他角色造成2点伤害。',
'cxy_CuiKuD_info':'锁定技，游戏开始时或游戏每进行6轮时，你对所有其他角色造成X点伤害（X为其体力值一半，向下取整），然后每有一名体力上限为奇数的其他角色，你便摸一张牌。',
'cxy_NianYi_info':'锁定技，你使用牌无距离限制。准备阶段开始时，你随机弃置你判定区内的一张牌。',
'cxy_NianYiD_info':' 锁定技，你使用牌无距离限制。准备阶段开始时，你随机弃置你判定区内的一张牌。一名其他角色的回合结束后，若你于该回合内失去的牌不少于三张，则你对所有其他角色造成1点伤害。',
NS_nianshouyang:'年兽阳',
NS_nianshouyin:'年兽阴',
NSyangshou:'阳兽',
NSyangshou_info:'锁定技，当你因翻面导致武将牌背面朝上时，若年兽阴的武将牌背面朝上，年兽阴将武将牌翻至正面朝上；你的判定区中，【乐不思蜀】和【兵粮寸断】的判定效果反转；你免疫火属性伤害；摸牌阶段，你多摸两张牌。',
NSyinshou:'阴兽',
NSyinshou_info:'锁定技，当你因翻面导致武将牌背面朝上时，若年兽阳的武将牌背面朝上，年兽阳将武将牌翻至正面朝上；你的判定区中，【乐不思蜀】和【兵粮寸断】的判定效果反转；你免疫雷属性伤害；结束阶段，你摸两张牌。',
NSbeimingyang:'悲鸣',
NSbeimingyang_info:'锁定技，当你死亡时，你对所有敌方角色造成1点火属性伤害。',
NSbeimingyin:'悲鸣',
NSbeimingyin_info:'锁定技，当你死亡时，你对所有敌方角色造成1点雷属性伤害。',
NSnuyan:'怒焰',
NSnuyan_info:'出牌阶段限一次，你可以弃置一张红色手牌并失去1点体力，本回合你使用红色牌造成的伤害均视为火属性伤害，且伤害+1。',
NShuihun:'回魂',
NShuihun_info:'出牌阶段限一次，你可以弃置一张黑色手牌并失去1点体力，令一名角色回复2点体力。',
NShundunyang:'混沌',
NShundunyang_info:'觉醒技，出牌阶段开始时，若年兽阴已阵亡，你增加1点体力上限，回复1点体力，然后获得技能〖回魂〗。',
NShundunyin:'混沌',
NShundunyin_info:'觉醒技，出牌阶段开始时，若年兽阳已阵亡，你增加1点体力上限，回复1点体力，然后获得技能〖怒焰〗。',
},
};
for(var i in NianShouCharacter.character){
NianShouCharacter.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
}
return NianShouCharacter;
});
lib.config.all.characters.push('NianShouCharacter');
lib.config.all.sgscharacters.push('NianShouCharacter');
if(!lib.config.characters.includes('NianShouCharacter')) lib.config.characters.remove('NianShouCharacter');
lib.translate['NianShouCharacter_character_config']='<span style="font-family: xingkai">生肖&年兽</span>';
//合纵抗秦
game.import('character',function(){
var hezongkangqincharacter={
name:'hezongkangqincharacter',
connect:true,
characterSort:{
hezongkangqincharacter:{
hezong_jun:['qin_zhangyi','qin_zhaogao','qin_yingzheng','qin_shangyang','qin_baiqi','qin_miyue','qin_lvbuwei','qin_zhaoji'],
hezong_bing:['qin_nushou','qin_qibing','qin_bubing'],
},
},
character:{
qin_zhangyi:['male','daqin',4,['qin_lianheng','qin_xichu','qin_xiongbian','qin_qiaoshe'],['die_audio']],
qin_zhaogao:['male','daqin',3,['qin_zhilu','qin_gaizhao','qin_haizhong','qin_yuanli'],[]],
qin_yingzheng:['male','daqin',5,['qin_yitong','qin_shihuang','qin_zulong','qin_fenshu'],[]],
qin_shangyang:['male','daqin',4,['qin_bianfa','qin_limu','qin_kencao'],[]],
qin_nushou:['male','daqin',3,['qin_tongpao','qin_jinnu'],[]],
qin_qibing:['male','daqin',4,['qin_tongpao','qin_changjian','qin_liangju'],[]],
qin_bubing:['male','daqin',5,['qin_tongpao','qin_fangzhen','qin_changbing'],[]],
qin_baiqi:['male','daqin',5,['qin_wuan','qin_shashen','qin_fachu','qin_changsheng'],[]],
qin_miyue:['female','daqin',3,['qin_zhangzheng','qin_taihou','qin_youmie','qin_yintui'],[]],
qin_lvbuwei:['male','daqin',4,['qin_jugu','qin_qihuo','qin_chunqiu','qin_baixiang'],[]],
qin_zhaoji:['female','daqin',3,['qin_shanwu','qin_daqi','qin_xianji','qin_huoluan'],[]],
},
characterIntro:{
qin_shangyang:'商鞅（约公元前395年－公元前338年），姬姓，公孙氏，名鞅，卫国人。战国时期政治家、改革家、思想家，法家代表人物，卫国国君后代。商鞅辅佐秦孝公，积极实行变法，使秦国成为富裕强大的国家，史称“商鞅变法”。政治上，改革了秦国户籍、军功爵位、土地制度、行政区划、税收、度量衡以及民风民俗，并制定了严酷的法律；经济上，主张重农抑商、奖励耕战；军事上，统率秦军收复了河西之地，赐予商于十五邑，号为商君，史称为商鞅。公元前338年，秦孝公逝世后，商鞅被公子虔指为谋反，战败死于彤地，尸身车裂，全家被杀。',
qin_zhangyi:'张仪（？－前309年），姬姓，张氏，名仪，魏国安邑（今山西万荣县王显乡张仪村）人。魏国贵族后裔，战国时期著名的纵横家、外交家和谋略家。早年入于鬼谷子门下，学习纵横之术。出山之后，首创“连横”的外交策略，游说六国入秦。得到秦惠王赏识，封为相国，奉命出使游说各国，以“横”破“纵”，促使各国亲善秦国，受封为武信君。公元前310年，秦惠王死后，秦武王继位。张仪失去宠信，出逃魏国，担任相国，次年去世。',
qin_miyue:'宣太后（？―前265年），芈（mǐ）姓，出生地楚国丹阳（在今湖北省），又称芈八子、秦宣太后。战国时期秦国王太后，秦惠文王之妾，秦昭襄王之母。秦昭襄王即位之初，宣太后以太后之位主政，执政期间，攻灭义渠国，一举灭亡了秦国的西部大患。死后葬于芷阳骊山。',
qin_baiqi:'白起（？—公元前257年），秦国白氏，名起，郿邑（今陕西眉县常兴镇白家村）人。战国时期杰出的军事家、“兵家”代表人物。熟知兵法，善于用兵，交好秦宣太后，和穰侯魏冉的关系很好。辅佐秦昭王，屡立战功。伊阕之战，大破魏韩联军；伐楚之战，攻陷楚都郢城。长平之战，重创赵国主力。担任秦军主将30多年，攻城70余座，为秦国统一六国做出了巨大的贡献，受封为武安君。功高震主，得罪应侯，接连贬官。秦昭襄王五十年（前257年），赐死于杜邮。作为中国历史上继孙武、吴起之后又一个杰出的军事家、统帅，白起与廉颇、李牧、王翦并称为战国四大名将，并且被列为战国四大名将之首，名列武庙十哲。',
qin_zhaoji:'赵姬（？―公元前228年），秦始皇生母，秦庄襄王的王后，赵国邯郸人。一说原为吕不韦姬妾，被吕不韦献给秦国质子异人，一说为赵豪家女，于公元前259年生秦始皇嬴政，异人立其为夫人。其子嬴政即位为秦王，她成为王太后，秦始皇统一天下，追尊其为帝太后，与秦庄襄王合葬于芷阳。',
qin_lvbuwei:'吕不韦（？—前235年），姜姓，吕氏，名不韦，卫国濮阳（今河南省滑县）人。战国末年商人、政治家、思想家，秦国丞相，姜子牙23世孙。早年经商于阳翟，扶植秦国质子异人回国即位，成为秦庄襄王，拜为相国，封文信侯，食邑河南洛阳十万户。带兵攻取周国、赵国、卫国土地，分别设立三川郡、太原郡、东郡，对秦王嬴政兼并六国的事业作出重大贡献。庄襄王去世后，迎立太子嬴政即位，拜为相邦，尊称“仲父”，权倾天下。受到嫪毐集团叛乱牵连，罢相归国，全家流放蜀郡，途中饮鸩自尽。主持编纂《吕氏春秋》（又名《吕览》），包含八览、六论、十二纪，汇合了先秦诸子各派学说，“兼儒墨，合名法”，史称“杂家”。',
qin_yingzheng:'秦始皇嬴政（前259年—前210年），嬴姓，赵氏，名政（一说名“正”），又称赵政、祖龙等。秦庄襄王和赵姬之子。中国古代政治家、战略家、改革家，首次完成中国大一统的政治人物，也是中国第一个称皇帝的君主。秦始皇出生于赵国都城邯郸（今邯郸），后回到秦国。前247年，13岁时即王位。前238年，平定长信侯嫪毐的叛乱，之后又除掉权臣吕不韦，开始亲政。重用李斯、尉缭，自前230年至前221年，先后灭韩、赵、魏、楚、燕、齐六国，完成了统一中国大业，建立起一个中央集权的统一的多民族国家——秦朝。秦始皇认为自己的功劳胜过之前的三皇五帝，采用三皇之“皇”、五帝之“帝”构成“皇帝”的称号，是中国历史上第一个使用“皇帝”称号的君主，所以自称“始皇帝”。同时在中央实行三公九卿，管理国家大事。地方上废除分封制，代以郡县制，同时书同文，车同轨，统一度量衡。对外北击匈奴，南征百越，修筑万里长城，修筑灵渠，沟通水系。但是到了晚年，求仙梦想长生，苛政虐民，扼杀民智，动摇了秦朝统治的根基，前210年，秦始皇东巡途中驾崩于邢台沙丘。秦始皇奠定中国两千余年政治制度基本格局，被明代思想家李贽誉为“千古一帝”。',
qin_zhaogao:'赵高（？－前207年），嬴姓，赵氏。秦朝二世皇帝时丞相，任中车府令，兼行符玺令事，“管事二十余年”。秦始皇死后，赵高发动沙丘政变，他与丞相李斯合谋伪造诏书，逼秦始皇长子扶苏自杀，另立始皇幼子胡亥为帝，是为秦二世，并自任郎中令。他在任职期间独揽大权，结党营私，征役更加繁重，行政更加苛暴。公元前208年又设计害死李斯，继之为秦朝丞相。第三年他迫秦二世自杀，另立子婴为秦王。不久被子婴设计杀掉，诛夷三族。',
},
card:{
qin_qinnu:{
image:'ext:活动武将/image/card/qin_qinnu.jpg',
vanish:true,
type:'equip',
subtype:'equip1',
skills:['qin_qinnu_skill'],
destroy:'qin_nushou',
distance:{attackFrom:-8},
enable:true,
ai:{
basic:{
useful:2,
equipValue:1,
},
},
fullimage:true,
},
qin_shangyangbianfa:{
image:'ext:活动武将/image/card/qin_shangyangbianfa.jpg',
audio:true,
global:'qin_shangyangbianfa_dying',
type:'trick',
enable:true,
filterTarget:function(card,player,target){
return target!=player;
},
selectTarget:1,
content:function(){
'step 0'
var num=[1,2].randomGet();
target.damage(num).type='qin_shangyangbianfa';
},
ai:{
basic:{
order:5,
useful:1,
value:5.5,
},
result:{
target:-1.5,
},
tag:{
damage:1,
},
},
fullimage:true,
},
qin_zhenlongchangjian:{
type:'equip',
subtype:'equip1',
distance:{
attackFrom:-1,
},
ai:{
basic:{
equipValue:2,
},
},
skills:['qin_zhenlongchangjian_skill'],
image:'ext:活动武将/image/card/qin_zhenlongchangjian.jpg',
fullimage:true,
},
qin_chuanguoyuxi:{
image:'ext:活动武将/image/card/qin_chuanguoyuxi.jpg',
type:'equip',
subtype:'equip5',
ai:{
basic:{
equipValue:7.5,
},
},
skills:['qin_chuanguoyuxi_skill'],
fullimage:true,
},
},
skill:{
hzlh:{
charlotte:true,
trigger:{global:'roundStart'},
direct:true,
forceDie:true,
content:function(){
game.countPlayer(function(current){
current.link(true);
})
},
},
cpzz:{
charlotte:true,
mod:{
targetEnabled:function(card){
if(card.name=='tao'&&(card.isCard&&card.cardid||get.itemtype(card)=='card')) return false;
},
cardSavable:function(card){
if(card.name=='tao'&&(card.isCard&&card.cardid||get.itemtype(card)=='card')) return false;
},
},
group:['cpzz_gain','cpzz_sha','cpzz_shan'],
inherit:'wushuang1',
direct:true,
subSkill:{
gain:{
charlotte:true,
trigger:{player:'phaseBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current.name=='qin_baiqi'&&get.attitude(current,player)>0;
});
},
forced:true,
content:function(){
var card=get.cardPile(function(card){
return card.name=='tao';
});
if(card) player.gain(card,'gain2');
},
},
sha:{
enable:['chooseToUse','chooseToRespond'],
filterCard:{name:'tao'},
viewAs:{name:'sha'},
viewAsFilter:function(player){
if(!player.countCards('h','tao')) return false;
},
prompt:'将一张桃当杀使用或打出',
check:function(){return 1},
ai:{
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondSha')&&current<0) return 0.6
},
},
respondSha:true,
skillTagFilter:function(player){
if(!player.countCards('h','tao')) return false;
},
order:function(){
return get.order({name:'sha'})-0.1;
},
},
},
shan:{
enable:['chooseToRespond','chooseToUse'],
filterCard:{name:'tao'},
viewAs:{name:'shan'},
prompt:'将一张桃当闪打出',
check:function(){return 1},
viewAsFilter:function(player){
if(!player.countCards('h','tao')) return false;
},
ai:{
respondShan:true,
skillTagFilter:function(player){
if(!player.countCards('h','tao')) return false;
},
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondShan')&&current<0) return 0.6
},
},
},
},
},
},
scth:{
charlotte:true,
trigger:{player:'phaseBegin'},
filter:function(event,player){
return player.sex=='male'&&game.hasPlayer(function(current){
return current.name=='qin_miyue';
});
},
forced:true,
content:function(){
'step 0'
var target=game.findPlayer(function(current){
return current.name=='qin_miyue';
});
event.target=target;
if(target.isHealthy()) result.control='摸牌';
else player.chooseControl('摸牌','回血').set('prompt','始称太后：令芈月回复1点体力或摸一张牌').ai=function(){
if(get.attitude(player,target)>0) return '回血';
return '摸牌';
};
'step 1'
player.line(target);
target[result.control=='摸牌'?'draw':'recover']();
},
},
lscq:{
charlotte:true,
trigger:{player:['gainEnd','phaseDrawBegin']},
filter:function(event,player,name){
if(name=='phaseDrawBegin') return player.sex=='male';
return _status.currentPhase!=player&&player.name=='qin_lvbuwei'&&(event.animate=='draw'||
event.getParent().name=='draw')&&event.getParent(2).name!='lscq';
},
forced:true,
content:function(){
if(trigger.name=='phaseDraw') trigger.num++;
else player.draw('nodelay');
},
},
zjzl:{
charlotte:true,
trigger:{source:'damageBegin3'},
usable:1,
filter:function(event,player){
if(player.sex!='male') return false;
var target=game.findPlayer(function(current){
return current.name=='qin_zhaoji';
});
return !target||get.attitude(target,player)>0;
},
forced:true,
content:function(){
trigger.player.draw();
},
},
sqzb:{
charlotte:true,
trigger:{player:'die'},
forceDie:true,
forced:true,
filter:function(event,player){
return game.hasPlayer(function(current){
return current.name=='qin_zhaogao'||current.sex=='male';
})&&player.countCards('he');
},
content:function(){
var cards=player.getCards('he');
var zhaogao=game.findPlayer(function(current){
return current.name=='qin_zhaogao';
});
if(zhaogao) zhaogao.gain(cards,player,'giveAuto');
else{
var list=[];
var list2=[];
game.countPlayer(function(current){
if(current.sex=='male'){
list.push(current);
list2.push([]);
}
});
while(cards.length){
list2.randomGet().push(cards.shift());
}
while(list.length){
var current=list.shift();
var current2=list2.shift();
if(current2.length) current.gain(current2,player,'giveAuto');
}
}
},
},
qin_gaizhao:{
forbid:['identity'],
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToTarget'},
filter:function(event,player){
if(get.info(event.card).multitarget) return false;
if(event.card.name!='sha'&&get.type(event.card)!='trick') return false;
return game.hasPlayer(function(current){
return current.isFriendOf(player)&&!event.targets.includes(current);
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('qin_gaizhao'),'将'+get.translation(trigger.card)+'转移给其他友方角色',function(card,player,target){
var trigger=_status.event.getTrigger();
return target.isFriendOf(player)&&!trigger.targets.includes(target)&&lib.filter.targetEnabled2(trigger.card,trigger.player,target);
}).set('rawEffect',get.effect(player,trigger.card,trigger.player,player)).ai=function(target){
var trigger=_status.event.getTrigger();
return 0.1+get.effect(target,trigger.card,trigger.player,_status.event.player)-_status.event.rawEffect;
};
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill(event.name,target);
trigger.targets[trigger.targets.indexOf(player)]=target;
}
},
},
qin_haizhong:{
audio:'ext:活动武将/audio/skill:true',
marktext:'害',
intro:{content:'mark',name:'害忠',name2:'害'},
trigger:{global:'recoverEnd'},
filter:function(event,player){
return event.player!=player;
},
check:function(event,player){
return get.attitude(player,event.player)<0;
},
logTarget:'player',
content:function(){
'step 0'
var num=Math.max(1,trigger.player.countMark('qin_haizhong'));
event.num=num;
trigger.player.chooseToDiscard('害忠：弃置一张红色牌，或受到'+num+'点伤害','he',{color:'red'}).ai=lib.skill.qin_bianfa.check;
'step 1'
if(!result.bool) trigger.player.damage(num);
trigger.player.addMark('qin_haizhong',1);
},
},
qin_zhangzheng:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('qin_zhangzheng'),lib.filter.notMe,[1,game.players.length]).set('ai',function(current){
var player=_status.event.player;
return -get.attitude(player,current);
});
'step 1'
if(result.bool){
result.targets.sortBySeat();
player.logSkill('qin_zhangzheng',result.targets);
event.targets=result.targets;
}
else event.finish();
'step 2'
if(targets.length){
var target=targets.shift();
event.target=target;
if(target.countDiscardableCards(target,'h')) target.chooseToDiscard('h','掌政：弃置一张手牌或失去1点体力').ai=lib.skill.qin_bianfa.check;
else{
target.loseHp();
event.redo();
}
}
else event.finish();
'step 3'
if(!result.bool) target.loseHp();
event.goto(2);
},
},
qin_wuan:{
global:'qin_wuan_buff',
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'damageBegin1'},
filter:function(event,player){
return event.source&&event.card&&event.card.name=='sha'&&(event.source==player||(get.mode()!='identity'&&event.source.isFriendOf(player)));
},
forced:true,
content:function(){
if(trigger.player!=player) player.addExpose(0.25);
trigger.num++;
},
subSkill:{
buff:{
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+=game.countPlayer(function(current){
return current.hasSkill('qin_wuan')&&(current==player||(get.mode()!='identity'&&current.isFriendOf(player)));
});
},
},
},
},
},
qin_fachu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'dying'},
filter:function(event,player){
return player.isIn()&&event.source==player&&event.player!=player&&event.player.hasEnabledSlot();
},
check:function(event,player){
return get.attitude(player,event.player)<0;
},
content:function(){
var list=[];
for(var i=1;i<=5;i++){
if(trigger.player.hasEnabledSlot(i)) list.add(i);
}
trigger.player.disableEquip(list.randomGet());
},
},
qin_fenshu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCard'},
filter:function(event,player){
return event.player==_status.currentPhase&&event.player!=player&&get.type(event.card)=='trick';
},
check:function(event,player){
return get.attitude(player,event.player)<0;
},
usable:1,
logTarget:'player',
content:function(){
'step 0'
trigger.cancel();
game.broadcastAll(ui.clear);
'step 1'
game.delayx();
},
},
qin_kencao:{
audio:'ext:活动武将/audio/skill:true',
marktext:'功',
intro:{content:'mark',name:'垦草',name2:'功'},
trigger:{global:'damageAfter'},
filter:function(event,player){
return event.source&&event.source.isIn();
},
check:function(event,player){
if(get.attitude(player,event.source)>0) return true;
return false;
},
logTarget:'source',
content:function(){
trigger.source.addMark('qin_kencao',trigger.num);
if(trigger.source.countMark('qin_kencao')>=3){
trigger.source.removeMark('qin_kencao',trigger.source.countMark('qin_kencao'));
trigger.source.gainMaxHp();
trigger.source.recover();
}
},
},
qin_yitong:{
mod:{
targetInRange:function(card,player,target){
if(['shunshou','sha'].includes(card.name)) return true;
},
selectTarget:function(card,player,range){
if(['shunshou','guohe','sha','huogong'].includes(card.name)&&range[1]!=-1) range[1]=Infinity;
},
},
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard1'},
filter:function(event,player){
return ['shunshou','guohe','sha','huogong'].includes(event.card.name);
},
forced:true,
content:function(){},
},
qin_lianheng:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseBefore',player:['enterGame','phaseZhunbeiBegin']},
filter:function(event,player){
var list=game.filterPlayer(function(current){
if(current==player) return false;
return get.mode()=='identity'||current.isEnemyOf(player);
});
return list.length&&(event.name!='phase'||game.phaseNumber==0);
},
forced:true,
content:function(){
'step 0'
var targets=game.filterPlayer(function(current){
if(current==player) return false;
return get.mode()=='identity'||current.isEnemyOf(player);
});
event.targets=targets;
if(trigger.name=='phaseZhunbei'){
for(var target of game.players){
if(target.hasSkill('qin_lianheng_mark')){
player.line(target);
target.removeSkill('qin_lianheng_mark');
}
}
if(targets.length<2) event.finish();
}
'step 1'
var target=targets.randomGet();
player.line(target);
target.addSkill('qin_lianheng_mark');
},
subSkill:{
mark:{
init:(player)=>game.log(player,'获得了','#g“横”','标记'),
onremove:(player)=>game.log(player,'移去了','#g“横”','标记'),
charlotte:true,
mod:{
playerEnabled:function(card,player,target){
if(game.hasPlayer(function(current){
return current.hasSkill('qin_lianheng')&&((get.mode()=='identity'&&current==target)||(get.mode()!='identity'&&target.isFriendOf(current)));
})||(target.isLinked()&&game.lianhenged)) return false;
},
},
marktext:'横',
mark:true,
intro:{
content:function(){
if(get.mode()=='identity'){
if(game.lianhenged) return '不能对拥有【连横】的角色和已横置角色使用牌';
return '不能对拥有【连横】的角色使用牌';
}
else{
if(game.lianhenged) return '不能对拥有【连横】的角色的友方角色和已横置角色使用牌';
return '不能对拥有【连横】的角色的友方角色使用牌';
}
},
},
},
},
},
qin_zhilu:{
audio:'ext:活动武将/audio/skill:true',
group:'qin_zhilu2',
enable:['chooseToUse','chooseToRespond'],
viewAs:{name:'sha'},
filterCard:{color:'black'},
prompt:'将一张黑色手牌当作【杀】使用或打出。',
check:function(card){return 1/(get.value(card)||0.5)},
viewAsFilter:function(player){
return player.countCards('h',{color:'black'});
},
ai:{
respondSha:true,
skillTagFilter:function(player){
return player.countCards('h',{color:'black'});
},
},
},
qin_zhilu2:{
audio:'qin_zhilu',
enable:['chooseToUse','chooseToRespond'],
viewAs:{name:'shan'},
filterCard:{color:'red'},
prompt:'将一张红色手牌当作【闪】使用或打出。',
check:function(card){return 1/(get.value(card)||0.5)},
viewAsFilter:function(player){
return player.countCards('h',{color:'red'});
},
ai:{
respondShan:true,
skillTagFilter:function(player){
return player.countCards('h',{color:'red'});
},
},
},
qin_yuanli:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
forced:true,
content:function(){
var list=[];
for(var i=0;i<2;i++){
var cardx=get.cardPile2(function(card){
return get.type(card)=='trick'&&!list.includes(card)
});
if(cardx) list.push(cardx);
}
if(list.length) player.gain(list,'draw');
},
},
qin_xichu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToTarget'},
filter:function(event,player){
return event.card.name=='sha'&&game.hasPlayer(function(current){
return current!=player&&current!=event.player&&lib.filter.targetInRange(event.card,event.player,current);
});
},
forced:true,
logTarget:'player',
content:function(){
'step 0'
trigger.player.chooseToDiscard('戏楚：弃置一张点数为6的牌，或令'+get.translation(player)+'将此【杀】转移',function(card){
return get.number(card)==6;
}).ai=function(card){return 100-get.value(card)};
'step 1'
if(!result.bool){
player.chooseTarget(true,'将此【杀】转移给'+get.translation(trigger.player)+'攻击范围内的一名角色',true,function(card,player,target){
var trigger=_status.event.getTrigger();
return target!=player&&target!=trigger.player&&!trigger.targets.includes(target)&&lib.filter.targetInRange(trigger.card,trigger.player,target)
}).ai=function(target){
var trigger=_status.event.getTrigger();
return get.effect(target,trigger.card,trigger.player,_status.event.player);
};
}
else event.finish();
'step 2'
if(result.bool){
player.line(result.targets[0]);
trigger.targets[trigger.targets.indexOf(player)]=result.targets[0];
}
},
ai:{
effect:{
target:function(card,player,target){
if(card.name=='sha'&&!player.countCards('h',{number:6})&&game.hasPlayer(function(current){
return current!=player&&current!=target&&lib.filter.targetInRange(card,trigger.player,current)&&get.effect(current,card,player,player)<0;
})) return 0;
},
},
},
},
qin_xiongbian:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return get.type(event.card)=='trick';
},
forced:true,
content:function(){
'step 0'
player.judge(function(result){
if(result.number==6) return 1;
return -1;
}).set('no6',get.attitude(player,trigger.player)>0);
'step 1'
if(result.bool) trigger.getParent().cancel();
game.broadcastAll(ui.clear);
},
},
qin_qiaoshe:{
audio:'ext:活动武将/audio/skill:true',
trigger:{
global:'judge',
},
direct:true,
content:function(){
'step 0'
var card=trigger.player.judging[0];
var judge0=trigger.judge(card);
var judge1=0;
var choice=trigger.no6&&card.number==6?'+1':'cancel2';
var attitude=get.attitude(player,trigger.player);
var list=[];
for(var i=-3;i<4;i++){
if(i==0) continue;
list.push((i>0?'+':'')+i);
if(!trigger.no6){
var judge2=(trigger.judge({
name:get.name(card),
suit:get.suit(card),
number:get.number(card)+i,
nature:get.nature(card),
})-judge0)*attitude;
if(judge2>judge1){
choice=(i>0?'+':'')+i;
judge1=judge2;
}
}
}
list.push('cancel2');
player.chooseControl(list).set('ai',function(){
return _status.event.choice;
}).set('choice',choice).prompt=get.prompt2(event.name);
'step 1'
if(result.control!='cancel2'){
player.logSkill(event.name,trigger.player);
game.log(trigger.player,'判定结果点数','#g'+result.control);
player.popup(result.control,'fire');
if(!trigger.fixedResult) trigger.fixedResult={};
if(!trigger.fixedResult.number) trigger.fixedResult.number=get.number(trigger.player.judging[0]);
trigger.fixedResult.number+=parseInt(result.control);
}
},
},
qin_shihuang:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseAfter'},
filter:function(event,player){
var num=game.roundNumber/100*6;
if(num>1) num=1;
return event.player!=player&&Math.random()<=num;
},
forced:true,
content:function(){
player.insertPhase();
},
},
qin_zulong:{
derivation:['qin_chuanguoyuxi','qin_zhenlongchangjian'],
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
content:function(){
var list=[],draw=true;
var card1=get.cardPile(function(card){
return card.name=='qin_zhenlongchangjian';
});
var card2=get.cardPile(function(card){
return card.name=='qin_chuanguoyuxi';
});
if(card1){
draw=false;
list.push(card1);
}
else{
var target1=game.findPlayer(function(current){
return current!=player&&current.countCards('hesjx',function(card){
return card.name=='qin_zhenlongchangjian';
});
});
if(target1){
draw=false;
player.gain(target1.getCards('hesjx',function(card){
return card.name=='qin_zhenlongchangjian';
}),target1,'give');
}
}
if(card2){
draw=false;
list.push(card2);
}
else{
var target2=game.findPlayer(function(current){
return current!=player&&current.countCards('hesjx',function(card){
return card.name=='qin_chuanguoyuxi';
});
});
if(target2){
draw=false;
player.gain(target2.getCards('hesjx',function(card){
return card.name=='qin_chuanguoyuxi';
}),target2,'give');
}
}
if(list.length){
draw=false;
player.gain(list,'gain2');
}
if(draw) player.draw(2);
},
},
qin_zhenlongchangjian_skill:{
trigger:{player:'useCard'},
filter:function(event,player){
return get.type(event.card)=='trick'&&player.getHistory('useCard',function(evt){
return get.type(evt.card)=='trick';
}).length==1;
},
forced:true,
content:function(){
trigger.nowuxie=true;
},
},
qin_chuanguoyuxi_skill:{
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
var list=['nanman','wanjian','taoyuan','wugu'];
player.chooseButton([get.prompt2('qin_chuanguoyuxi_skill'),[list,'vcard']]).set('ai',function(button){
var player=_status.event.player;
return player.getUseValue({name:button.link[2]});
});
'step 1'
if(result.bool) player.chooseUseTarget(result.links[0][2],true,false).logSkill='qin_chuanguoyuxi_skill';
},
},
qin_bianfa:{
derivation:'qin_shangyangbianfa',
audio:'ext:活动武将/audio/skill:true',
mod:{
selectTarget:function(card,player,range){
if(card.name=='qin_shangyangbianfa'&&range[1]!=-1&&game.bianfaed) range[1]++;
},
},
enable:'chooseToUse',
usable:1,
filterCard:function(card){
return get.type(card)=='trick';
},
viewAs:{name:'qin_shangyangbianfa'},
viewAsfilter:function(player){
if(!player.countCards('h',{type:'trick'})) return false;
},
prompt:'将一张普通锦囊牌当作【商鞅变法】使用',
check:function(card){
return 1/(get.value(card)||0.5);
},
ai:{
basic:{
order:10,
useful:1,
value:5.5,
},
result:{
target:-1.5,
},
tag:{
damage:1,
},
},
},
qin_limu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard'},
filter:function(event,player){
return get.type(event.card)=='trick';
},
forced:true,
content:function(){
trigger.nowuxie=true;
},
},
qin_shangyangbianfa_dying:{
trigger:{player:'dying'},
forced:true,
popup:false,
direct:true,
charlotte:true,
locked:true,
filter:function(event,player){
return event.getParent().type=='qin_shangyangbianfa';
},
content:function(){
'step 0'
player.judge(function(card){
return get.color(card)=='black'?-1:0;
})
'step 1'
if(result.color=='black'){
game.countPlayer(function(current){
if(current!=player) current.addTempSkill('qin_nosave','_saveAfter');
});
}
},
},
qin_nosave:{
charlotte:true,
mod:{cardSavable:()=>false},
},
qin_jinnu:{
derivation:'qin_qinnu',
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return !player.getEquip('qin_qinnu');
},
forced:true,
content:function(){
var card=game.createCard('qin_qinnu',Math.random()<0.5?'diamond':'club',1);
player.chooseUseTarget(card,true);
},
},
qin_qinnu_skill:{
inherit:'qinggang_skill',
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+1;
},
},
},
qin_changjian:{
audio:'ext:活动武将/audio/skill:true',
mod:{
attackFrom:function(from,to,distance){
return distance-1;
},
},
trigger:{player:'useCard2'},
filter:function(event,player){
return event.card&&event.card.name=='sha';
},
forced:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('qin_changjian'),'为'+get.translation(trigger.card)+'增加一个目标，或取消并令'+get.translation(trigger.card)+'伤害＋1',function(card,player,target){
return !_status.event.sourcex.includes(target)&&player.canUse('sha',target);
}).set('sourcex',trigger.targets).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'sha'},player,player);
});
'step 1'
if(result.bool){
if(!event.isMine()&&!_status.connectMode) game.delayx();
event.target=result.targets[0];
player.line(event.target);
trigger.targets.push(event.target);
}
else{
if(!trigger.baseDamage) ttrigger.baseDamage=1;
trigger.baseDamage++;
}
},
},
qin_liangju:{
group:'qin_liangju_judge',
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
return event.card.name=='sha';
},
forced:true,
content:function(){
'step 0'
trigger.target.judge(function(result){
if(get.suit(result)!='spade') return 1;
return -1;
}).set('judge2',function(result){
return result.bool==false?true:false;
});
'step 1'
if(result.suit=='spade') trigger.getParent().directHit.add(trigger.target);
},
subSkill:{
judge:{
audio:'qin_liangju',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return event.card.name=='sha';
},
forced:true,
content:function(){
'step 0'
player.judge(function(card){
return get.suit(card)=='heart'?2:-2;
});
'step 1'
if(result.suit=='heart') trigger.getParent().excluded.add(player);
},
},
},
},
qin_fangzhen:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
if(event.player==player) return false;
return (event.card.name=='sha'||get.type(event.card)=='trick')&&player.inRange(event.player);
},
check:function(event,player){
return get.attitude(player,event.player)<0;
},
content:function(){
'step 0'
player.judge(function(card){
return get.color(card)=='black'?1:-1;
});
'step 1'
if(result.judge>0) player.useCard({name:'sha'},trigger.player,false);
},
ai:{
threaten:0.5,
expose:0.25,
},
},
qin_changbing:{
audio:'ext:活动武将/audio/skill:true',
mod:{
attackFrom:function(from,to,distance){
return distance-2;
},
},
},
qin_tongpao:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCardAfter'},
filter:function(event,player){
return event.player!=player&&!player.getEquips(2).length&&get.subtype(event.card)=='equip2';
},
forced:true,
content:function(){
game.addGlobalSkill('qin_tongpao_destroy');
var card=game.createCard2(trigger.card.name,trigger.card.suit,trigger.card.number);
if(!_status.tongpaoList) _status.tongpaoList=[];
_status.tongpaoList.push(card);
player.$gain2(card);
game.delayx();
player.equip(card);
},
subSkill:{
destroy:{
charlotte:true,
trigger:{global:'loseEnd'},
filter:function(event,player){
if(!_status.tongpaoList) return false;
return event.cards.filter(function(card){
return _status.tongpaoList.includes(card);
}).length;
},
direct:true,
forceDie:true,
priority:Infinity,
content:function(){
if(!_status.tongpaodestory) _status.tongpaodestory={};
var list=[];
var cs=trigger.cards;
for(var i=0;i<cs.length;i++){
if(_status.tongpaoList.includes(cs[i])){
_status.tongpaodestory[cs[i].name]=false;
_status.tongpaoList.remove(cs[i]);
list.push(cs[i]);
}
}
game.log(list,'被销毁了');
game.cardsGotoSpecial(list);
},
},
},
},
qin_shashen:{
group:'qin_shashen_draw',
audio:'ext:活动武将/audio/skill:true',
enable:['chooseToUse','chooseToRespond'],
filterCard:true,
viewAs:{name:'sha'},
viewAsfilter:function(player){
if(!player.countCards('h')) return false;
},
prompt:'将一张手牌当作【杀】使用或打出',
check:function(card){
return 5-get.value(card);
},
ai:{
respondSha:true,
skillTagFilter:function(player){
if(!player.countCards('h')) return false;
},
},
subSkill:{
draw:{
audio:'qin_shashen',
trigger:{source:'damageSource'},
filter:function(event,player){
if(!event.card||event.card.name!='sha') return false;
var history=player.getHistory('useCard',function(evt){
return evt.card==event.card;
})[0];
return player.getHistory('useCard',function(evt){
return evt.card.name=='sha';
}).indexOf(history)==0;
},
forced:true,
locked:false,
content:function(){
player.draw();
},
},
},
},
qin_changsheng:{
audio:'ext:活动武将/audio/skill:true',
mod:{
targetInRange:function(card){
if(card.name=='sha') return true;
},
},
},
qin_taihou:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return event.player!=player&&event.player.sex=='male'&&event.card&&(event.card.name=='sha'||get.type(event.card)=='trick');
},
forced:true,
logTarget:'player',
content:function(){
'step 0'
var type=get.type2(trigger.card);
var eff=get.effect(player,trigger.card,trigger.player,trigger.player);
trigger.player.chooseToDiscard('弃置一张'+get.translation(type)+'牌，否则'+get.translation(trigger.card)+'对'+get.translation(player)+'无效',function(card){
 return get.type2(card)==type;
}).set('ai',function(card){
 if(_status.event.eff>0){
return 10-get.value(card);
}
return 0;
}).set('type',type).set('eff',eff);
'step 1'
if(!result.bool) trigger.getParent().excluded.add(player);
},
},
qin_youmie:{
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he');
},
discard:false,
prepare:'give',
position:'he',
filterCard:true,
filterTarget:true,
check:function(card){
if(get.position(card)=='e') return -1;
return 5-get.value(card);
},
usable:1,
prompt:'将一张牌交给一名角色，该角色于其回合外无法使用或打出牌直到你的下个回合开始',
content:function(){
target.gain(cards,player,'giveAuto');
target.addSkill('qin_youmie_debuff');
player.when('phaseBegin').vars({target:target}).then(()=>target.removeSkill('qin_youmie_debuff'));
},
ai:{
order:7,
result:{target:-1},
},
subSkill:{
debuff:{
charlotte:true,
onremove:true,
mark:true,
marktext:'灭',
mod:{
cardEnabled2:function(card,player,target){
if(_status.currentPhase!=player) return false;
},
},
intro:{content:'回合外不能使用或打出牌'},
//落 井 下 石
ai:{threaten:5},
},
},
},
qin_yintui:{
group:'qin_yintui_damage',
audio:'ext:活动武将/audio/skill:true',
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
if(player.countCards('h')) return false;
var evt=event.getl(player);
return evt&&evt.player==player&&evt.hs&&evt.hs.length>0;
},
forced:true,
content:function(){
player.turnOver();
},
ai:{
noh:true,
skillTagfilter:function(player,tag){
if(player.countCards('h')!=1) return false;
},
effect:{
target:function(card,player,target){
if(!target.isTurnedOver()) return;
if(player.hasSkillTag('jueqing',false,target)) return;
var num=get.tag(card,'damage');
if(num){
if(num>1) return 0.5;
return 0;
}
},
},
},
subSkill:{
damage:{
audio:'qin_yintui',
trigger:{player:'damageBegin3'},
filter:function(event,player){
return player.isTurnedOver();
},
forced:true,
content:function(){
trigger.num--;
player.draw();
},
},
},
},
qin_jugu:{
audio:'ext:活动武将/audio/skill:true',
audioname2:{bilibili_litiansuo:'bolNoAudio'},
inherit:'jugu',
},
qin_qihuo:{
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he');
},
usable:1,
chooseButton:{
dialog:function(event,player){
return ui.create.dialog('###奇货###'+lib.translate.qin_qihuo_info);
},
chooseControl:function(event,player){
var list=[];
for(var type2 of ['basic','trick','equip']){
if(player.countCards('he',{type:[type2].addArray(type2=='trick'?['delay']:[])})) list.push(type2);
}
list.push('cancel2');
return list;
},
check:function(event,player){
var map={};
player.getCards('he').forEach(function(card){
var type=get.type2(card);
if(!map[type]) map[type]=0;
map[type]++;
});
var list=Object.keys(map).sort((a,b)=>map[b]-map[a]);
return list[0];
},
backup:function(result,player){
return {
audio:'qin_qihuo',
type:result.control,
delay:0,
content:function(){
var cards=player.getCards('he',function(card){
return get.type2(card)==lib.skill.qin_qihuo_backup.type;
});
player.discard(cards);
player.draw(cards.length);
},
}
},
},
ai:{
order:1,
result:{player:1},
},
},
qin_chunqiu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:['useCard','respond']},
filter:function(event,player){
return player.getHistory('useCard').length+player.getHistory('respond').length==1;
},
forced:true,
content:function(){
player.draw();
},
},
qin_baixiang:{
audio:'ext:活动武将/audio/skill:true',
skillAnimation:true,
animationColor:'thunfer',
unique:true,
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
filter:function(event,player){
return player.countCards('h')>=player.hp*3;
},
derivation:['qin_zhongfu','new_rejianxiong','rerende','rezhiheng'],
content:function(){
player.awakenSkill('qin_baixiang');
var num=player.maxHp-player.hp;
if(num>0) player.recover(num);
player.addSkillLog('qin_zhongfu');
},
ai:{
maixie:true,
effect:{
target:function(card,player,target){
if(!target.hasFriend()) return;
if(get.tag(card,'damage')==1&&target.hp*3>target.countCards('h')&&(target.hp-1)*3<=target.countCards('h')&&target.hp>1&&!target.isTurnedOver()&&
_status.currentPhase!=target&&get.distance(_status.currentPhase,target,'absolute')<=3) return [0.5,1];
},
},
},
},
qin_zhongfu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
content:function(){
var skill=['new_rejianxiong','rerende','rezhiheng'].randomGet();
player.addTempSkill(skill,{player:'phaseBegin'});
player.popup(skill);
game.log(player,'获得了技能','#g【'+get.translation(skill)+'】');
},
},
qin_shanwu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCardToPlayered'},
forced:true,
filter:function(event,player){
return event.card.name=='sha';
},
content:function(){
'step 0'
player.judge(function(card){
return (get.color(card)=='black')?2:-2;
});
'step 1'
if(result.judge>0) trigger.getParent().directHit.add(trigger.target);
},
group:'qin_shanwu_judge',
subSkill:{
judge:{
audio:'qin_shanwu',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
if(event.player==player) return false;
if(event.card.name=='sha') return true;
return false;
},
forced:true,
content:function(){
'step 0'
player.judge(function(card){
return (get.color(card)=='red')?2:-2;
});
'step 1'
if(result.judge>0) trigger.getParent().excluded.add(player);
},
},
},
},
qin_daqi:{
audio:'ext:活动武将/audio/skill:true',
marktext:'期',
intro:{content:'mark',name:'大期',name2:'期'},
trigger:{player:['phaseZhunbeiBegin','qin_xianjiAfter']},
forced:true,
filter:function(event,player){
if(event.name=='qin_xianji') return true;
return player.countMark('qin_daqi')>=10;
},
content:function(){
player.removeMark('qin_daqi',player.countMark('qin_daqi'));
var hp=player.maxHp-player.hp;
var card=player.maxHp-player.countCards('h');
if(hp>0) player.recover(hp);
if(card>0) player.draw(card);
},
group:'qin_daqi_addmark',
subSkill:{
addmark:{
trigger:{player:['damageAfter','useCard','respond'],source:'damageSource'},
audio:'qin_daqi',
forced:true,
content:function(){
player.addMark('qin_daqi',trigger.num||1);
},
},
},
},
qin_xianji:{
unique:true,
mark:true,
limited:true,
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
filter:function(event,player){
return player.countMark('qin_daqi')>0;
},
check:function(event,player){
var hp=player.maxHp-player.hp;
var card=3-player.countCards('he');
if((hp+card)>0) return true;
return false;
},
skillAnimation:true,
animationColor:'thunder',
content:function(){
'step 0'
player.awakenSkill('qin_xianji');
'step 1'
var hs=player.getCards('he');
if(hs.length) player.discard(hs);
player.removeMark('qin_daqi',player.countMark('qin_daqi'));
player.loseMaxHp();
},
ai:{
order:1,
result:{
player:function(player,target){
var hp=player.maxHp-player.hp;
var card=player.maxHp-player.countCards('h');
return 0+hp+card;
},
},
},
},
qin_huoluan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:['useSkillAfter','logSkill']},
filter:function(event,player){
return event.skill=='qin_daqi';
},
forced:true,
content:function(){
var targets=game.filterPlayer().remove(player);
player.line(targets);
for(var i of targets) i.damage();
},
},
},
translate:{
daqin:'秦',
daqin2:'秦朝',
hezong_jun:'合纵抗秦·BOSS',
hezong_bing:'合纵抗秦·兵卒',
qin_yingzheng:'嬴政',
qin_shangyang:'商鞅',
qin_nushou:'秦军弩手',
qin_qibing:'秦军骑兵',
qin_bubing:'秦军步兵',
qin_baiqi:'白起',
qin_miyue:'芈月',
qin_lvbuwei:'吕不韦',
qin_zhaoji:'赵姬',
qin_zhaogao:'赵高',
qin_zhangyi:'张仪',
qin_lianheng:'连横',
qin_lianheng_info:'锁定技，游戏开始时，你令随机一名敌方角色获得「横」标记。拥有「横」标记的角色使用牌无法指定友方角色为目标。准备阶段，场上所有角色弃置「横」标记，然后若场上存活的敌方角色数大于1，则你令随机一名敌方角色获得「横」标记。',
qin_lianheng_info_identity:'锁定技，游戏开始时，你令随机一名其他角色获得“横”标记。拥有“横”标记的角色使用牌无法指定你为目标。准备阶段，场上所有角色弃置“横”标记，然后若场上存活的其角色数大于1，则你令随机一名其他角色获得“横”标记。',
qin_xichu:'戏楚',
qin_xichu_info:'锁定技，当你成为【杀】的目标时，若其攻击范围内有其他角色，则该角色需要弃置一张点数为6的牌，否则此【杀】的目标转移给其攻击范围内你指定的另一名角色。',
qin_xiongbian:'雄辩',
qin_xiongbian_info:'锁定技，当你成为普通锦囊牌的目标或之一时，你进行判定，若点数为6，你令此牌无效。',
qin_qiaoshe:'巧舌',
qin_qiaoshe_info:'当一名角色进行判定时，你可以令其判定牌的点数加减3以内的任意值。',
qin_yitong:'一统',
qin_yitong_info:'锁定技，你使用【杀】、【过河拆桥】、【顺手牵羊】、【火攻】无距离限制且可以指定任意名角色为目标，你使用【杀】和【顺手牵羊】无距离限制。',
qin_shihuang:'始皇',
qin_shihuang_info:'锁定技，其他角色的回合结束后，你有X%的几率获得一个额外的回合（X为当前轮数*6，且X最大为100）。',
qin_zulong:'祖龙',
qin_zulong_info:'锁定技，准备阶段，若本局游戏中有【传国玉玺】或【真龙长剑】且不在你的手牌区或装备区，你获得之；否则你摸两张牌。',
qin_fenshu:'焚书',
qin_fenshu_info:'其他角色于其回合内使用第一张普通锦囊牌时，你可令此牌无效。',
qin_zhenlongchangjian_skill:'真龙长剑',
qin_zhenlongchangjian_skill_info:'你于每回合使用的第一张非延时性锦囊无法被抵消。',
qin_chuanguoyuxi_skill:'传国玉玺',
qin_chuanguoyuxi_skill_info:'出牌阶段开始时，你可以从【南蛮入侵】、【万箭齐发】、【桃园结义】、【五谷丰登】中选择一张使用。',
qin_qinnu:'秦弩',
qin_qinnu_info:'锁定技。当你使用【杀】指定目标后，你令其防具无效；你的使用【杀】的次数上限+1；当你失去装备区里的【秦弩】，你令此牌销毁。',
qin_qinnu_skill:'秦弩',
qin_qinnu_skill_info:'当你使用【杀】指定一个目标后，你令其防具无效，你的出牌阶段内，可使用的【杀】数量+1；当你失去装备区里的【秦弩】，你令此牌销毁。',
qin_bianfa:'变法',
qin_bianfa_info:'出牌阶段限一次，你可以将任意一张普通锦囊牌当【商鞅变法】使用。',
qin_limu:'立木',
qin_limu_info:'锁定技，你使用的普通锦囊牌无法被【无懈可击】抵消。',
qin_kencao:'垦草',
qin_kencao_info:'场上有角色造成伤害后，你可以令其获得与伤害值数目相等的「功」标记，然后若其「功」标记数不小于三，则其弃置所有「功」标记，增加1点体力上限，并回复1点体力。',
qin_shangyangbianfa_dying:'商鞅变法',
qin_shangyangbianfa_dying_info:'造成随机1~2点伤害，若该角色进入濒死状态，则进行判定，若判定结果为黑色，则该角色本次濒死状态无法向其他角色求桃。',
qin_jinnu:'劲弩',
qin_jinnu_info:'锁定技，准备阶段，若你的装备区里没有【秦弩】，你使用一张【秦弩】。',
qin_changjian:'长剑',
qin_changjian_info:'锁定技。①你的攻击范围+1。②你使用【杀】指定目标后，须选择一项：①令一名角色成为此牌的额外目标；②令此【杀】伤害+1。',
qin_liangju:'良驹',
qin_liangju_info:'锁定技，当你使用【杀】指定目标后/当你成为【杀】的目标后，目标角色/你进行判定，若判定结果为黑桃/红桃，则其不可响应此【杀】/此【杀】对你无效。',
qin_fangzhen:'方阵',
qin_fangzhen_info:'当你成为其他角色使用【杀】或普通锦囊的目标后，若其在你的攻击范围内，你可以进行判定，若为黑色，则视为你对其使用一张【杀】。',
qin_changbing:'长兵',
qin_changbing_info:'锁定技，你的攻击范围+2。',
qin_tongpao:'同袍',
qin_tongpao_info:'锁定技，若你没有装备防具，其他角色使用防具牌时，你视为使用一张同名防具牌（通过〖同袍〗使用的防具牌离开装备区时销毁）。',
qin_wuan:'武安',
qin_wuan_info:'锁定技，友方角色使用【杀】的次数上限+1，使用【杀】造成的伤害+1。',
qin_wuan_info_identity:'锁定技，你使用【杀】的次数上限+1，使用【杀】造成的伤害+1。',
qin_shashen:'杀神',
qin_shashen_info:'你可以将一张手牌当作【杀】使用或打出。每回合你使用的第一张【杀】造成伤害后，你摸一张牌。',
qin_fachu:'伐楚',
qin_fachu_info:'当你对其他角色造成伤害而导致其进入濒死状态后，你可以随机废除其一个装备区。',
qin_changsheng:'常胜',
qin_changsheng_info:'锁定技，你使用【杀】无距离限制。',
qin_zhangzheng:'掌政',
qin_zhangzheng_info:'准备阶段，你可以选择任意名其他角色，这些角色依次选择一项：1.弃置一张手牌；2.失去1点体力。',
qin_taihou:'太后',
qin_taihou_info:'锁定技，男性角色对你使用【杀】或普通锦囊牌时，需要额外弃置一张同种类型的牌，否则此牌无效。',
qin_youmie:'诱灭',
qin_youmie_info:'出牌阶段限一次，你可以将一张牌交给一名角色，若如此做，直到你的下个回合开始，该角色于其回合外无法使用或打出牌。',
qin_yintui:'隐退',
qin_yintui_info:'锁定技，当你失去最后一张手牌时，你翻面。你的武将牌背面朝上时，若受到伤害，令此伤害-1，然后摸一张牌。',
qin_jugu:'巨贾',
qin_jugu_info:'锁定技，你的手牌上限+X；游戏开始时，你多摸X张牌（X为你的体力上限）。',
qin_qihuo:'奇货',
qin_qihuo_backup:'奇货',
qin_qihuo_info:'出牌阶段限一次，你可以弃置一种类型的牌，然后摸等量的牌。',
qin_chunqiu:'春秋',
qin_chunqiu_info:'锁定技，你于每个回合使用或打出第一张牌时，摸一张牌。',
qin_baixiang:'拜相',
qin_baixiang_info:'觉醒技，准备阶段，若你的手牌数不小于你当前体力值的三倍，则你将体力回复至体力上限，然后获得技能〖仲父〗。',
qin_zhongfu:'仲父',
qin_zhongfu_info:'锁定技，准备阶段，你随机获得『〖奸雄〗、〖仁德〗、〖制衡〗』中的一个直到你的下个回合开始。',
qin_shanwu:'善舞',
qin_shanwu_info:'锁定技。①你使用【杀】指定目标后，你进行判定，若为黑色，则目标角色不能使用【闪】。②当你成为【杀】的目标后，你进行判定，若为红色，则此【杀】无效。',
qin_daqi:'大期',
qin_daqi_info:'锁定技。①当你使用一张手牌时/打出一张手牌时/造成1点伤害后/受到1点伤害后，你获得1个“期”标记。②准备阶段，若你拥有的“期”标记不小于10个，则你失去所有的“期”标记，将体力回复至体力上限并将手牌补至体力上限。',
qin_xianji:'献姬',
qin_xianji_info:'限定技，出牌阶段，你可以弃置所有牌并移去所有的“期”标记，然后减1点体力上限并发动〖大期②〗。',
qin_huoluan:'祸乱',
qin_huoluan_info:'锁定技，当你发动〖大期②〗结算完毕后，你对所有其他角色造成1点伤害。',
qin_zhilu:'指鹿',
qin_zhilu2:'指鹿',
qin_zhilu_info:'你可以将一张黑色/红色手牌当作【杀】/【闪】使用或打出。',
qin_gaizhao:'改诏',
qin_gaizhao_info:'当你成为【杀】或除【借刀杀人】外的普通锦囊牌的目标后，你可以将此牌的目标改为其他不为此牌目标的一名友方角色。',
qin_haizhong:'害忠',
qin_haizhong_info:'其他角色回复体力时，你可以令其选择一项：①弃置一张红色牌；②受到你造成的X点伤害（X为该角色拥有的「害」标记且X至少为1），然后该角色获得1枚「害」标记。',
qin_yuanli:'爰历',
qin_yuanli_info:'锁定技，出牌阶段开始时，你获得两张普通锦囊牌。',
bftq:'变法图强',
bftq_info:'牌堆中加入三张【商鞅变法】。若商鞅在场，则商鞅使用【商鞅变法】可以额外指定一个目标。',
hzlh:'合纵连横',
hzlh_info:'每轮开始时，场上所有的角色进入横置状态。若张仪在场，拥有「横」标记的角色使用牌不能指定横置的角色为目标。',
cpzz:'长平之战',
cpzz_info:'游戏进入鏖战模式，且杀需要两张闪响应。若白起在场，则白起及其友方角色于摸牌阶段获得一张【桃】。',
hslh:'横扫六合',
hslh_info:'牌堆中加入【传国玉玺】和【真龙长剑】。若嬴政在场，则其装备之。',
lscq:'吕氏春秋',
lscq_info:'本局游戏中，所有男性角色摸牌阶段的摸牌数+1。若吕不韦在场，则吕不韦于回合外获得牌时，其额外摸一张牌。',
sqzb:'沙丘之变',
sqzb_info:'本局游戏中，阵亡角色的手牌和装备牌改为随机分配给场上所有的男性角色。若赵高在场，则改为赵高获得之。',
zjzl:'赵姬之乱',
zjzl_info:'本局游戏中，男性角色每回合第一次造成伤害时，受伤害角色摸一张牌。若赵姬在场，此效果的适用范围改为所有非秦势力角色。',
scth:'始称太后',
scth_info:'本局游戏中，女性角色的体力值和体力上限+1。若芈月在场，男性角色的回合开始时需令芈月回复1点体力或摸一张牌。',
qin_shangyangbianfa:'商鞅变法',
qin_shangyangbianfa_info:'出牌阶段，对一名其他角色使用。对其造成随机1~2点伤害，若该角色进入濒死状态，则进行判定，若判定结果为黑色，则该角色本次濒死状态无法向其他角色求桃。',
qin_zhenlongchangjian:'真龙长剑',
qin_zhenlongchangjian_info:'你于每回合使用的第一张非延时性锦囊无法被抵消。',
qin_chuanguoyuxi:'传国玉玺',
qin_chuanguoyuxi_info:'出牌阶段开始时，你可以从【南蛮入侵】、【万箭齐发】、【桃园结义】、【五谷丰登】中选择一张使用。',
},
};
for(var i in hezongkangqincharacter.character){
hezongkangqincharacter.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
}
return hezongkangqincharacter;
});
lib.config.all.characters.push('hezongkangqincharacter');
lib.config.all.sgscharacters.push('hezongkangqincharacter');
if(!lib.config.characters.includes('hezongkangqincharacter')) lib.config.characters.remove('hezongkangqincharacter');
lib.translate['hezongkangqincharacter_character_config']='<span style="font-family: xingkai">合纵抗秦</span>';
//戚宦之争——我补完了！！！
game.import('character',function(){
var decadeQiHuan={
name:'decadeQiHuan',
connect:true,
characterSort:{
decadeQiHuan:{
QH_qi:['QH_caocao','QH_yuanshao','QH_yuanshu','QH_guotufengji','QH_yanwen','QH_caoang','QH_caoren','QH_jushou','QH_xuyou'],
QH_huan:['QH_fengxu','QH_duangui','QH_caojie','QH_houlan','QH_jianshuo','QH_chengkuang','QH_xiayun','QH_guosheng','QH_zuofeng'],
QH_qi_boss:['QH_hejin','QH_hetaihou'],
QH_huan_boss:['QH_zhangrang','QH_zhaozhong'],
},
},
character:{
QH_fengxu:['male','qun',10,['QH_rehuanshi','QH_leixi','QH_huangjie'],['die_audio']],
QH_duangui:['male','qun',10,['QH_rehuanshi','QH_suxi','QH_chibi'],['die_audio']],
QH_caojie:['male','qun',15,['QH_rehuanshi','QH_huangbao'],['die_audio']],
QH_houlan:['male','qun',6,['QH_rehuanshi','QH_lancai','QH_jingshe'],['die_audio']],
QH_jianshuo:['male','qun',20,['QH_rehuanshi','QH_jibing'],['die_audio']],
QH_chengkuang:['male','qun',4,['QH_rehuanshi','QH_andu','QH_biri'],['die_audio']],
QH_xiayun:['male','qun',8,['QH_rehuanshi','QH_jifu'],['die_audio']],
QH_guosheng:['male','qun',10,['QH_rehuanshi','QH_heimu','QH_heizhi'],['die_audio']],
QH_hejin:['male','qun',20,['QH_zhenmou','QH_guiluan','QH_waixi','QH_quanba'],['die_audio']],
QH_hetaihou:['female','qun',20,['QH_zunqin','QH_chuhuan','QH_nongquan','QH_shexie'],['die_audio']],
QH_caocao:['male','wei',18,['rejianxiong','QH_lingba','GH_pozhan'],['character:caocao']],
QH_yuanshao:['male','qun',15,['luanji','QH_xueyi','qiluan'],['character:re_yuanshao']],
QH_yuanshu:['male','qun',16,['drlt_yongsi','QH_wangzun','QH_weidi'],['character:yl_yuanshu']],
QH_guotufengji:['male','qun',15,['rejigong','shifei','QH_chanmou'],['character:guotufengji']],
QH_yanwen:['male','qun',16,['shuangxiong','jianchu','QH_yongdou'],['character:yanwen']],
QH_caoang:['male','wei',15,['kaikang','wushuang','feiying'],['character:caoang']],
QH_caoren:['male','wei',18,['xinjushou','xinjiewei','xinshensu'],['character:caoren']],
QH_jushou:['male','qun',16,['jianying','shibei','zhaxiang'],['character:yj_jushou']],
QH_xuyou:['male','qun',16,['nzry_chenglve','nzry_shicai','reyingzi'],['character:xuyou']],
QH_zhangrang:['male','qun',20,['QH_rehuanshi','QH_huoluan','QH_yankong','QH_jiquan','QH_luanzheng'],['die_audio']],
QH_zhaozhong:['male','qun',20,['QH_rehuanshi','QH_duanzheng','QH_lianhuo','QH_huangkong','QH_luanzheng'],['character:zhaozhong','die_audio']],
QH_zuofeng:['male','qun',18,['QH_rehuanshi','QH_suohui','QH_huolu'],['die_audio']],
},
characterIntro:{
fengxu:'封谞，东汉末年宦官，汉灵帝中平元年为中常侍，信黄巾道，189年逝世。',
QH_caojie:'曹节（？―181年），字汉丰 ，南阳育阳（今河南省南阳市宛城区瓦店镇）人。东汉宦官。因事入宫，累迁西园骑。汉顺帝时期，迁小黄门。汉桓帝继位，迁中常侍，加任奉车都尉。拥戴汉灵帝有功，册封长安乡侯。联合长乐五官史朱瑀等矫朝诛杀窦武、陈蕃等人，升任长乐卫尉，进封育阳县侯。建宁二年（169年），加位特进、大长秋。权倾朝野，诬害勃海王刘悝，累迁尚书令。光和四年（181年），曹节去世，获赠车骑将军。',
houlan:'侯览（？—172年），山阳防东（今山东单县东北）人，东汉宦官。延熹年间赐爵为关内侯。因诛梁冀有功，进封高乡侯，后迁为长乐太仆。任官期间，专横跋扈，贪婪放纵，大肆抢掠官民财物。先后夺民田地一百一十八顷，宅第三百八十一所，模仿宫苑兴建府第十六处。他还掠夺妇女，肆虐百姓。为其母大起冢墓，督邮张俭破其家宅，藉没资财。侯览为了报复，诬张俭与长乐少府李膺、太仆杜密等为党人，造成历史上有名的党锢之祸，先后被杀被流放者三百余人，被囚禁者六、七百人。熹平元年（172年），有司举奏侯览专权骄奢，下诏收其印绶，随即自杀身亡。其阿附者皆免官。',
chengkuang:'程旷（？——189）东汉宦官，十常侍之一。演义虚构人物。',
zuofeng:'左丰，生平不详，三国演义第一回中出现。据演义记载，光和末年，黄巾四起，朝廷派遣中郎将卢植、皇甫嵩、朱儁领兵讨伐黄巾。当时黄巾张角的军队15万，与卢植的5万人相聚于广宗，数次交战，未见胜负。正值朝廷派黄门左丰前来考察军情，左丰挟公向卢植索取贿赂，但卢植说：“军粮尚缺，安有馀钱奉承天使？”于是左丰怀恨在心，回到朝廷后污蔑卢植故意按兵不动、怠慢军心。于是天颜大怒，派遣中郎将董卓代替卢植将兵。',
},
skill:{
QH_huanshi:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToBefore'},
filter:function(event,player){
return get.type(event.card)=='delay';
},
forced:true,
content:function(){
'step 0'
var func=function(result){
if(get.color(result)=='black') return 1;
return -1;
};
trigger.player.judge(func);
'step 1'
if(result.bool) trigger.cancel();
},
},
QH_rehuanshi:{
audio:'QH_huanshi',
trigger:{player:'useCardToPlayered',target:'useCardToTarget'},
filter:function(event,player,name){
if(player.hasSkill('QH_rehuanshi_'+name)) return false;
if(!game.hasPlayer(function(current){
if(!lib.skill.lztunjiang.filterx({player:current},player)) return false;
return current!=player&&current.hasSkill('QH_rehuanshi')&&current.countCards('he',card=>get.type2(card)==get.type2(event.card));
})) return false;
if(name=='useCardToTarget') return lib.skill.lztunjiang.filtery({player:event.player},player)&&event.targets.length==1;
return event.isFirstTarget&&event.targets.some(target=>lib.skill.lztunjiang.filtery({player:target},player));
},
forced:true,
content:function(){
player.addTempSkill('QH_rehuanshi_'+event.triggername);
var target=game.filterPlayer(function(current){
if(!lib.skill.lztunjiang.filterx({player:current},player)) return false;
return current!=player&&current.hasSkill('QH_rehuanshi')&&current.countCards('he',card=>get.type2(card)==get.type2(trigger.card));
}).randomGet();
target.discard(target.getCards('he',card=>card=>get.type2(card)==get.type2(trigger.card)).randomGets(1));
if(event.triggername=='useCardToTarget'){
trigger.getParent().targets.remove(player);
trigger.getParent().triggeredTargets2.remove(player);
}
else trigger.getParent().directHit.addArray(trigger.targets.some(target=>lib.skill.lztunjiang.filtery({player:target},player)));
},
subSkill:{
useCardToPlayered:{charlotte:true},
useCardToTarget:{charlotte:true},
},
},
QH_huangbao:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return player.getEnemies().length>0;
},
forced:true,
content:function(){
'step 0'
player.chooseUseTarget({name:'nanman'},true,[]);
'step 1'
if(!player.hasHistory('sourceDamage',function(evt){
var card=evt.card;
if(!card||card.name!='nanman') return false;
var evtx=evt.getParent('useCard');
return evtx.card==card&&evtx.getParent()==event;
})) player.draw(3);
},
},
QH_andu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseEnd'},
filter:function(event,player){
return player.getEnemies().includes(event.player)&&player.hp>=event.player.hp;
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.damage();
},
},
QH_biri:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageBegin4'},
filter:function(event,player){
return event.source&&player.getEnemies().includes(event.source);
},
forced:true,
logTarget:'source',
content:function(){
var num=trigger.source.countCards('h')
if(num>0) trigger.source.discard(trigger.source.getCards('h'));
if(num<player.hp) trigger.num--;
},
},
QH_suxi:{
audio:'ext:活动武将/audio/skill:true',
trigger:{source:'damageSource'},
filter:function(event,player){
return game.players.length>2&&player.countCards('he');
},
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
prompt:get.prompt2('QH_suxi'),
filterCard:true,
position:'he',
filterTarget:function(card,player,target){
return [_status.event.getTrigger().player.next,_status.event.getTrigger().player.previous].includes(target);
},
ai1:function(card){
return 7-get.value(card);
},
ai2:function(target){
return -get.attitude(_status.event.player,target)
}
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('QH_suxi',target);
player.discard(result.cards);
target.loseHp();
}
},
},
QH_chibi:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return !player.hasSha();
},
forced:true,
content:function(){
var cards=[];
for(var i=0;i<2;i++){
var card=get.cardPile2(function(card){
return card.name=='sha'&&!cards.includes(card);
});
if(card) cards.push(card);
}
if(cards.length) player.gain(cards,'gain2');
},
},
QH_leixi:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:['useCard','respond']},
filter:function(event,player){
return ['sha','shan'].includes(event.card.name)&&player!=_status.currentPhase;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('QH_leixi'),lib.filter.notMe).ai=function(target){
return get.damageEffect(target,_status.event.player,_status.event.player,'thunder')&&target.countCards('he');
};
'step 1'
if(result.bool){
player.logSkill('QH_leixi',result.targets);
event.target=result.targets[0];
event.target.judge();
}
else event.finish();
'step 2'
if(result.color=='red') player.discardPlayerCard(target,'he',2,true);
else target.damage(2,'thunder');
},
ai:{expose:0.2},
},
QH_huangjie:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard'},
filter:function(event,player){
var bool=true;
if(event.targets) for(var i of event.targets){
if(player.getEnemies().includes(i)) bool=false;
}
return player.isPhaseUsing()&&bool;
},
forced:true,
content:function(){
player.draw();
},
},
QH_heimu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCard'},
filter:function(event,player){
return (event.player==player||player.getEnemies().includes(event.player))&&get.color(event.card,event.player)=='black';
},
direct:true,
content:function(){
'step 0'
if(trigger.player==player){
var target=player.getEnemies(function(current){
return current.countCards('he');
}).randomGet();
if(target){
player.logSkill('QH_heimu',target);
target.discard(target.getCards('he').randomGet());
}
}
else{
player.logSkill('QH_heimu',trigger.player);
player.draw();
}
},
},
QH_heizhi:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'judgeEnd'},
preHidden:true,
filter:function(event,player){
return get.color(event.result.card,player)=='black';
},
forced:true,
content:function(){
for(var i of player.getEnemies()){
player.line(i,'fire');
i.damage();
}
},
},
QH_lancai:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return player.countCards('h')<player.maxHp;
},
forced:true,
content:function(){
player.draw(player.maxHp-player.countCards('h'));
},
},
QH_jingshe:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd'},
filter:function(event,player){
return player.getEnemies().includes(_status.currentPhase);
},
forced:true,
logTarget:function(event,player){
return _status.currentPhase;
},
content:function(){
var target=_status.currentPhase;
target.addTempSkill('drlt_wanglie2','phaseUseAfter');
if(trigger.num>1) player.recover();
},
},
QH_jibing:{
group:'QH_jibing_damage',
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseJieshuBegin'},
forced:true,
content:function(){
player.loseMaxHp();
},
subSkill:{
damage:{
trigger:{player:'loseMaxHpEnd'},
filter:function(event,player){
return player.getEnemies().length>0;
},
direct:true,
content:function(){
var target=player.getEnemies().randomGet();
player.logSkill('QH_jibing',target);
target.damage();
},
},
},
},
QH_jifu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return player.getEnemies().includes(current)&&current.countCards('h')>player.countCards('h');
});
},
forced:true,
content:function(){
'step 0'
player.chooseTarget('获得一名手牌数大于你的敌方角色一张手牌，然后重复此流程直到所有敌方角色的手牌数均小于等于你',true,function(card,player,target){
return player.getEnemies().includes(target)&&target.countCards('h')>player.countCards('h');
}).set('ai',function(target){
return target.countCards('h');
});
'step 1'
if(result.bool){
player.line(result.targets[0]);
player.gainPlayerCard(result.targets[0],'h',true);
}
else event.finish();
'step 2'
if(game.hasPlayer(function(current){
return player.getEnemies().includes(current)&&current.countCards('h')>player.countCards('h');
})) event.goto(0);
},
},
//何进
QH_zhenmou:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCard'},
filter:function(event,player){
if(!lib.skill.lztunjiang.filtery(event,player)||!event.player.isPhaseUsing()) return false;
var evt=event.getParent('phaseUse');
var history=event.player.getHistory('useCard',function(evt2){
return evt2.getParent('phaseUse')==evt&&get.type2(evt2.card)=='trick';
}),num=history.indexOf(event);
return num!=-1&&num<2;
},
forced:true,
logTarget:'player',
content:function(){
'step 0'
trigger.player.chooseToDiscard('he',2,'镇谋：弃置两张非锦囊牌',function(card,player){
return get.type2(card)!='trick';
}).set('ai',card=>lib.skill.zhiheng.check(card));
'step 1'
if(!result.bool){
trigger.cancel();
game.broadcastAll(ui.clear);
}
else event.finish();
'step 2'
game.delayx();
},
},
QH_guiluan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard'},
filter:function(event,player){
if(!['sha','juedou','guohe'].includes(event.card.name)) return false;
return game.hasPlayer(function(current){
return lib.skill.lztunjiang.filtery({player:current},player)&&!event.targets.includes(current)&&lib.filter.targetEnabled2(event.card,player,current);
});
},
forced:true,
usable:3,
logTarget:function(event,player){
return game.filterPlayer(function(current){
return lib.skill.lztunjiang.filtery({player:current},player)&&!event.targets.includes(current)&&lib.filter.targetEnabled2(event.card,player,current);
});
},
content:function(){
trigger.targets.addArray(lib.skill.QH_guiluan.logTarget(trigger,player));
},
},
QH_waixi:{
audio:'ext:活动武将/audio/skill:true',
trigger:{source:'damageSource'},
filter:function(event,player){
return _status.currentPhase&&_status.currentPhase==player;
},
forced:true,
usable:3,
content:function(){
'step 0'
player.draw(3);
'step 1'
var targets=game.filterPlayer(current=>current.countCards('h')<player.countCards('h')&&lib.skill.lztunjiang.filtery({player:current},player));
if(targets.length){
for(var target of targets) player.gainPlayerCard(target,'he',true);
}
},
},
QH_quanba:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCardToPlayered'},
filter:function(event,player){
if(!lib.skill.lztunjiang.filtery(event,player)||!_status.currentPhase||_status.currentPhase!=event.player) return false;
return event.isFirstTarget&&event.player.getHistory('useCard',evt=>evt.card.name=='sha').length>=3;
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.loseHp();
},
},
//何太后
QH_zunqin:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'cardsDiscardAfter'},
filter:function(event,player){
if(!event.cards.filterInD('d').length) return false;
var evt=event.getParent();
if(evt.name!='orderingDiscard') return false;
var evtx=(evt.relatedEvent||evt.getParent());
return evtx.player.hasHistory('useCard',function(evtxx){
return evtx.getParent()==(evtxx.relatedEvent||evtxx.getParent())&&evtxx.targets.includes(player)&&get.type2(evtxx.card)=='trick'&&get.color(evtxx.card,evtx.player)=='black';
});
},
usable:3,
forced:true,
logTarget:(event)=>(event.getParent().relatedEvent||event.getParent().getParent()).player,
content:function(){
player.gain(trigger.cards.filterInD('d'),'gain2');
},
},
QH_chuhuan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCardToPlayered',target:'useCardToTargeted'},
filter:function(event,player){
if(event.player==event.target) return false;
if(event.card.name=='sha'&&event.player==player) return true;
if(get.type(event.card)=='trick'&&event.target==player) return true;
return false;
},
logTarget:function(event,player){
return get.type(event.card)=='trick'?event.player:event.target;
},
forced:true,
content:function(){
var targets=[trigger.player,trigger.target];
for(var i of targets) i.loseHp();
},
},
QH_nongquan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd'},
filter:function(event,player){
return lib.skill.QH_nongquan.logTarget(event,player);
},
logTarget:function(event,player){
var targets=game.filterPlayer(current=>lib.skill.lztunjiang.filtery({player:current},player));
targets.sort((a,b)=>a.hp-b.hp);
return targets[0].hp!=targets[1].hp?targets[0]:false;
},
forced:true,
content:function(){
var target=lib.skill.QH_nongquan.logTarget(trigger,player);
target.damage(2);
target.discard(target.getCards('he').randomGets(2)).discarder=player;
},
},
QH_shexie:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'dying'},
filter:function(event,player){
if(!event.player.countCards('h')) return false;
return lib.skill.lztunjiang.filtery(event,player);
},
logTarget:'player',
forced:true,
content:function(){
player.gain(trigger.player.getCards('h').randomGets(2),trigger.player,'giveAuto');
},
},
//曹操
QH_lingba:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseBegin'},
filter:function(event,player){
return player.isMaxHandcard();
},
direct:true,
locked:true,
content:function(){
var targets=game.filterPlayer(current=>lib.skill.lztunjiang.filtery({player:current},player));
if(player.countCards('h')<player.hp*2) targets=targets.randomGets(1);
player.logSkill('QH_lingba',targets);
for(var i of targets) i.damage();
},
},
QH_pozhan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'drawEnd'},
filter:function(event,player){
return _status.currentPhase&&_status.currentPhase!=player&&player.canUse({name:'sha',isCard:true},_status.currentPhase,false);
},
check:function(event,player){
return get.effect(_status.currentPhase,{name:'sha',isCard:true},player,player)>0;
},
logTarget:()=>_status.currentPhase,
content:function(){
player.useCard({name:'sha',isCard:true},_status.currentPhase,false);
},
},
//袁绍
QH_xueyi:{
mod:{
maxHandcard:function(player,num){
return num+game.countPlayer(current=>current.group=='qun');
},
},
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed;
},
forced:true,
content:function(){
trigger.num=game.countPlayer(current=>current.group=='qun');
},
},
//袁术
QH_wangzun:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
if(!lib.skill.lztunjiang.filtery(event,player)) return false;
var num=0;
event.player.getHistory('sourceDamage',function(evt){
if(evt.player==player) num+=evt.num;
});
return num!=1;
},
logTarget:'player',
content:function(){
var num=0;
trigger.player.getHistory('sourceDamage',function(evt){
if(evt.player==player) num+=evt.num;
});
if(num==0) trigger.player.chooseToDiscard(2,'he',true);
else trigger.player.damage();
},
},
QH_weidi:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:['loseAfter','loseAsyncAfter']},
filter:function(event,player){
if(event.type!='discard') return false;
return game.hasPlayer(function(current){
if(current==player||current.group!='qun') return false;
var evt=event.getl(current);
return evt&&evt.cards2&&evt.cards2.filterInD('d').length;
});
},
forced:true,
content:function(){
var cards=[];
game.countPlayer(function(current){
if(current==player||current.group!='qun') return false;
var evt=event.getl(current);
if(evt&&evt.cards2&&evt.cards2.filterInD('d').length) cards.addArray(evt.cards2.filterInD('d'));
});
var card=cards.randomGet();
player.gain(card);
var targets=game.filterPlayer(function(current){
if(current==player||current.group!='qun') return false;
var evt=event.getl(current);
return evt&&evt.cards2&&evt.cards2.filterInD('d').length&&evt.cards2.filterInD('d').includes(card);
});
if(targets.length){
for(var i of targets) player.gain(i.getCards('hej').randomGets(1),i,'giveAuto');
}
},
},
//郭图逄纪
QH_chanmou:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
if(event.targets.length<=1) return false;
return event.targets.some(target=>target!=player&&target.countCards('he'));
},
usable:1,
content:function(){
var target=trigger.targets.filter(target=>target!=player&&target.countCards('he')).randomGet();
player.gain(target.getCards('he').randomGets(Math.min(target.countCards('he'),trigger.targets.length)),target,'giveAuto');
},
},
//颜良文丑
QH_yongdou:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'respond'},
filter:function(event,player){
if(!event.getParent(2).name!='juedou'||event.card.name!='sha') return false;
return (get.color(event.card,event.player)=='red'&&player.countDiscardableCards(player,'he'))||get.color(event.card,event.player)=='black';
},
forced:true,
logTarget:'player',
content:function(){
if(get.color(trigger.card,trigger.player)=='red') player.discard(player.getCards('he').randomGets(1));
else player.draw();
},
},
//张让
QH_huoluan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
forced:true,
content:function(){
var num=4;
while(num>0){
num--;
var card=get.cardPile(function(card){
return get.type2(card)=='trick'&&get.color(card,false)=='black'&&player.hasUseTarget(card);
});
if(card) player.chooseUseTarget(card,true,'nopopup');
else break;
}
},
},
QH_yankong:{
onremove:true,
intro:{content:'下次对敌方角色造成的伤害+#'},
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd',source:'damageBegin1'},
filter:function(event,player,name){
if(name=='damageEnd') return player.countMark('QH_yankong')<4;
return lib.skill.lztunjiang.filtery(event,player)&&player.hasMark('QH_yankong');
},
forced:true,
content:function(){
if(event.triggername=='damageEnd') player.addMark('QH_yankong',1,false);
else{
var num=player.countMark('QH_yankong');
player.removeMark('QH_yankong',num,false);
trigger.num+=player.countMark('QH_yankong');
}
},
},
QH_jiquan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
content:function(){
'step 0'
if(player.countCards('h')<10) player.drawTo(10);
'step 1'
if(player.isMaxHandcard()){
var targets=game.filterPlayer(current=>current.countCards('h')&&lib.skill.lztunjiang.filtery({player:current},player));
if(targets.length){
player.line(targets);
for(var i of targets) player.gain(i.getCards('h').randomGets(1),i,'giveAuto');
}
}
},
},
QH_luanzheng:{
audio:'ext:活动武将/audio/skill:true',
audioname2:{QH_zhaozhong:'QH_luanzheng_zhaozhong'},
trigger:{global:['gainAfter','loseAsyncAfter']},
filter:function(event,player){
return game.hasPlayer(function(current){
if(!lib.skill.lztunjiang.filtery({player:current},player)) return false;
return current.isPhaseUsing()&&event.getg(current).length>0&&current.countCards('h')>10;
});
},
forced:true,
logTarget:function(event,player){
return game.findPlayer(function(current){
if(!lib.skill.lztunjiang.filtery({player:current},player)) return false;
return current.isPhaseUsing()&&event.getg(current).length>0&&current.countCards('h')>10;
});
},
content:function(){
lib.skill.QH_luanzheng.logTarget(trigger,player).addSkill('drlt_wanglie2');
},
group:'QH_luanzheng_discard',
subSkill:{
discard:{
audio:'QH_luanzheng',
audioname2:{QH_zhaozhong:'QH_luanzheng_zhaozhong'},
trigger:{global:'useCardAfter'},
filter:function(event,player){
if(!event.isPhaseUsing()) return false;
var num=0;
player.getHistory('damage',evt=>num+=evt.num);
return num>=5&&lib.skill.lztunjiang.filtery(event,player)&&event.player.countCards('he');
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.discard(trigger.player.getCards('he').randomGets(1));
},
},
},
},
//赵忠
QH_duanzheng:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCard'},
filter:function(event,player){
if(!_status.currentPhase||_status.currentPhase!=event.player) return false;
if(!lib.skill.lztunjiang.filtery(event,player)) return false;
return event.player.getHistory('useCard').indexOf(event)==0;
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.discard(trigger.player.getCards('h',card=>get.suit(card,player)==get.suit(trigger.card,player)));
},
},
QH_lianhuo:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd'},
filter:function(event,player){
if(!game.hasPlayer(current=>lib.skill.lztunjiang.filtery({player:current},player))) return false;
return player.getHistory('damage').indexOf(event)<3;
},
forced:true,
content:function(){
var target=game.filterPlayer(current=>lib.skill.lztunjiang.filtery({player:current},player)).randomGet();
player.line(target);
target.loseHp();
},
},
QH_huangkong:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
if(event.targets.length!=1) return false;
if(player==_status.currentPhase) return false;
if(!player.isMinHandcard(true)) return false;
return event.card.name=='sha'||(get.type2(event.card)=='trick'&&get.tag(event.card,'damage'));
},
forced:true,
content:function(){
player.draw(4);
},
},
QH_luanzheng_zhaozhong:{audio:'ext:活动武将/audio/skill:true'},
//左丰
QH_suohui:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return event.player!=player;
},
forced:true,
content:function(){
'step 0'
if(!trigger.player.countCards('he')) event._result={bool:false};
else trigger.player.chooseCard('索贿：交给'+get.translation(player)+'一张牌，或令'+get.translation(player)+'摸两张牌','he').set('ai',function(card){
if(_status.event.goon) return 0;
return 5-get.value(card);
}).set('goon',get.attitude(trigger.player,player)>=0);
'step 1'
if(result.bool) player.gain(result.cards,trigger.player,'giveAuto');
else player.draw(2);
},
},
QH_huolu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return player.isMaxHandcard();
},
forced:true,
content:function(){
'step 0'
var target=game.findPlayer(current=>target.isMinHandcard());
var num=player.countCards('h')-target.countCards('h');
if(num>0) player.chooseToDiscard(num,'he',true);
'step 1'
var targets=game.filterPlayer(current=>lib.skill.lztunjiang.filtery({player:current},player));
if(targets.length){
var map={},num=5;
while(num>0){
num--;
var target=targets.randomGet();
if(!map[target.playerid]) map[target.playerid]=1;
else map[target.playerid]++;
}
targets=targets.filter(current=>map[current.playerid]);
for(var i of targets){
player.line(i);
i.damage(map[i.playerid]);
}
}
},
},
},
translate:{
QH_qi:'戚宦·外戚',
QH_huan:'戚宦·宦官',
QH_qi_boss:'BOSS·外戚',
QH_huan_boss:'BOSS·宦官',
QH_fengxu:'封谞',
QH_duangui:'段珪',
QH_caojie:'曹节',
QH_houlan:'侯览',
QH_jianshuo:'蹇硕',
QH_chengkuang:'程旷',
QH_xiayun:'夏恽',
QH_guosheng:'郭胜',
QH_huanshi:'宦势',
QH_huanshi_info:'锁定技，当你成为延时锦囊牌的目标后，进行一次判定，若结果为黑色，将此牌置入弃牌堆。',
QH_leixi:'雷袭',
QH_leixi_info:'当你于回合外使用或打出【杀】或【闪】时，你可以选择一名其他角色，令其进行判定，若结果为红色，弃置该角色两张牌；若结果为黑色，对其造成2点伤害。',
QH_huangjie:'黄结',
QH_huangjie_info:'锁定技，出牌阶段，你使用一张牌时，若此牌目标不是敌方角色，你摸一张牌。',
QH_suxi:'速袭',
QH_suxi_info:'当你造成伤害后，你可以弃置一张牌令受伤角色的上家或下家失去1点体力。',
QH_chibi:'持匕',
QH_chibi_info:'锁定技，出牌阶段结束时，若你手牌中没有杀，你从牌堆中获得两张【杀】。（没有不会获得，牌堆中若仅有一张则只获得一张）',
QH_huangbao:'荒暴',
QH_huangbao_info:'锁定技，出牌阶段开始时，视为对所有敌方角色使用一张【南蛮入侵】。若此【南蛮入侵】没有造成伤害，你摸三张牌。',
QH_lancai:'揽财',
QH_lancai_info:'锁定技，出牌阶段开始时，你将手牌摸至体力上限。',
QH_jingshe:'惊蛇',
QH_jingshe_info:'锁定技，当你受到伤害后，若此时为敌方角色的回合，该角色不能使用牌直到出牌阶段结束。若此伤害超过1点，你回复1点体力。',
QH_jibing:'集兵',
QH_jibing_info:'锁定技，回合结束时，你减少1点体力上限；当你的体力上限减少时，你对随机一名敌方角色造成1点伤害。',
QH_andu:'暗毒',
QH_andu_info:'锁定技，敌方角色的回合结束时，若其体力值小于等于你，你对其造成1点伤害。',
QH_biri:'蔽日',
QH_biri_info:'锁定技，当你受到敌方角色造成的伤害时，该角色弃置所有手牌；若其弃置的手牌数小于你的体力值，此伤害-1。',
QH_jifu:'嫉富',
QH_jifu_info:'锁定技，准备阶段，你获得手牌数大于你的敌方角色一张手牌。重复此步骤直到所有敌方角色手牌数都不大于你。',
QH_heimu:'黑幕',
QH_heimu_info:'锁定技，敌方角色使用黑色牌时，你摸一张牌。你使用黑色牌时，敌方随机一名角色随机弃置一张牌。',
QH_heizhi:'黑邸',
QH_heizhi_info:'锁定技，你的判定牌生效时，若结果为黑色，你对所有敌方角色造成1点伤害。',
QH_hejin:'何进',
QH_zhenmou:'镇谋',
QH_zhenmou_info:'锁定技，敌方角色于其出牌阶段使用前两张锦囊牌时，其需弃置两张非锦囊牌，否则此牌无效。',
QH_guiluan:'贵乱',
QH_guiluan_info:'锁定技，每回合限三次，当你使用【杀】、【决斗】、【过河拆桥】时，若场上有未成为目标的敌方角色，你令这些角色也成为此牌目标。',
QH_waixi:'外檄',
QH_waixi_info:'锁定技，每回合限三次，你的回合内，当你造成伤害后，你可以摸三张牌，然后依次获得所有手牌数小于你的敌方角色的各一张牌。',
QH_quanba:'权霸',
QH_quanba_info:'锁定技，敌方角色于其回合内使用【杀】指定目标后，若其本回合使用【杀】的次数不小于3，其失去1点体力。',
QH_hetaihou:'何太后',
QH_zunqin:'尊亲',
QH_zunqin_info:'锁定技，每回合限三次，以你为目标的黑色锦囊牌进入弃牌堆后，你获得之。',
QH_chuhuan:'除患',
QH_chuhuan_info:'锁定技。你使用【杀】指定目标后，你和目标角色各失去1点体力。其他角色使用普通锦囊牌指定你为目标后，你与使用者各失去1点体力。',
QH_nongquan:'弄权',
QH_nongquan_info:'锁定技，当你受到伤害后，你对敌方体力值唯一最小的角色造成2点伤害，然后你随机弃置其两张牌。',
QH_shexie:'蛇蝎',
QH_shexie_info:'锁定技，敌方角色进入濒死状态后，你随机获得其两张手牌。',
QH_caocao:'曹操',
QH_lingba:'凌霸',
QH_lingba_info:'锁定技，回合开始时，若你的手牌数为全场最多，你随机对一名敌方角色造成1点伤害，若你的手牌数不小于你的体力值的2倍，则改为所有敌方角色。',
QH_pozhan:'迫战',
QH_pozhan_info:'当你于回合外摸牌后，你可以视为对当前回合角色使用一张【杀】。',
QH_yuanshao:'袁绍',
QH_xueyi:'血裔',
QH_xueyi_info:'锁定技。①摸牌阶段，你改为摸X张牌。②你的手牌上限+X。（X为场上的群势力角色数）',
QH_yuanshu:'袁术',
QH_wangzun:'妄尊',
QH_wangzun_info:'锁定技，敌方角色的结束阶段开始时，若其本回合对你造成的伤害总数为：0，其弃置两张牌；大于1，你对其造成1点伤害。',
QH_weidi:'伪帝',
QH_weidi_info:'锁定技，其他群势力角色的牌因弃置进入弃牌堆后，你随机获得其中的一张，然后随机获得其区域内的一张牌。',
QH_guotufengji:'郭图逄纪',
QH_chanmou:'谗谋',
QH_chanmou_info:'每回合限一次，当你成为一张牌的目标后，若此牌目标不唯一，你可以随机获得一名其他目标角色的X张牌（X为此牌指定的目标数）。',
QH_yanwen:'颜良文丑',
QH_yongdou:'勇斗',
QH_yongdou_info:'锁定技，当一名角色使用【杀】响应决斗时，若此【杀】颜色为：红色，你随机弃置一张牌；黑色，你摸一张牌。',
QH_caoang:'曹昂',
QH_caoren:'曹仁',
QH_jushou:'沮授',
QH_xuyou:'许攸',
QH_rehuanshi:'宦势',
QH_rehuanshi_info:'锁定技，每回合每项各限一次：①当你成为敌方角色使用牌的唯一目标时，拥有〖宦势〗的一名其他友方角色随机弃置一张与此牌类别相同的牌，然后取消此牌的目标。②当你使用牌指定敌方角色后，拥有〖宦势〗的一名其他友方角色随机弃置一张与此牌类别相同的牌，然后令此牌不可被响应。',
QH_zhangrang:'张让',
QH_huoluan:'祸乱',
QH_huoluan_info:'锁定技，出牌阶段开始时，你随机使用牌堆中的四张可以使用的黑色锦囊牌。',
QH_yankong:'炎恐',
QH_yankong_info:'锁定技，当你受到伤害后，你下一次对敌方角色造成的伤害+X。',
QH_jiquan:'集权',
QH_jiquan_info:'锁定技，准备阶段，你将手牌数摸至十张，然后若你的手牌数为全场最多，你获得所有敌方角色的随机一张手牌。',
QH_luanzheng:'乱政',
QH_luanzheng_info:'锁定技。①敌方角色于出牌阶段获得牌后，若其手牌数超过十张，则其本回合不能再使用牌。②敌方角色于出牌阶段使用牌结算完毕后，若你本回合受到的伤害不小于5点，其随机弃置一张牌。',
QH_zhaozhong:'赵忠',
QH_duanzheng:'断政',
QH_duanzheng_info:'锁定技，敌方角色于其回合内使用第一张牌时，其弃置所有与此牌花色相同的手牌。',
QH_lianhuo:'连祸',
QH_lianhuo_info:'锁定技，当你受到伤害后，若此伤害为你本回合受到的前三次伤害，则令随机一名敌方角色失去1点体力。',
QH_huangkong:'惶恐',
QH_huangkong_info:'锁定技，当你于回合外成为【杀】或伤害类锦囊牌的目标后，若你的手牌数为全场唯一最少，则你摸四张牌。',
QH_zuofeng:'左丰',
QH_suohui:'索贿',
QH_suohui_info:'锁定技，当你成为其他角色使用牌的目标后，其选择一项：①交给你一张牌；②令你摸两张牌。',
QH_huolu:'祸赂',
QH_huolu_info:'锁定技，出牌阶段开始时，若你的手牌数为全场最多，你须将手牌数弃置至全场最少，然后将总共5点随机伤害分配给任意敌方角色。',
},
};
for(var i in decadeQiHuan.character){
decadeQiHuan.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
}
return decadeQiHuan;
});
lib.config.all.characters.push('decadeQiHuan');
lib.config.all.sgscharacters.push('decadeQiHuan');
if(!lib.config.characters.includes('decadeQiHuan')) lib.config.characters.remove('decadeQiHuan');
lib.translate['decadeQiHuan_character_config']='<span style="font-family: xingkai">戚宦之争</span>';
//捉鬼驱邪
game.import('character',function(){
var decadeZhuoGui={
name:'decadeZhuoGui',
connect:true,
characterSort:{
},
character:{
ZG_mengpo:['female','qun',8,['ZGguimei','ZGaotang','ZGyunju'],[]],
ZG_heiwuchang:['male','qun',4,['ZGguimei','ZGxixing','ZGtaiping','ZGduanhun'],[]],
ZG_baiwuchang:['male','qun',7,['ZGguimei','ZGbaolian','ZGqiangzheng','ZGmizui'],[]],
ZG_heibaiwuchang:['male','qun',12,['ZGxixing','ZGtaiping','ZGqiangzheng','ZGmizui'],[]],
ZG_niutou:['male','qun',6,['ZGguimei','ZGxiaoshou','ZGmanji'],[]],
ZG_mamian:['male','qun',6,['ZGguimei','ZGshiyu','ZGguizhao'],[]],
ZG_niutoumamian:['male','qun',12,['ZGxiaoshou','ZGmanji','ZGshiyu','ZGguizhao'],[]],
ZG_baowei:['male','qun',6,['ZGguimei','ZGyinsha','ZGeli'],[]],
ZG_niaozui:['male','qun',7,['ZGguimei','ZGbingyi','ZGsuoxue'],[]],
ZG_yusai:['male','qun',12,['ZGguimei','ZGguixi','ZGanchao'],[]],
ZG_huangfeng:['male','qun',5,['ZGguimei','ZGduzhen','ZGminchong'],[]],
ZG_yanluowang:['male','qun',12,['ZGtiemian','ZGdifu','ZGxingpan'],[]],
ZG_guiwang:['male','qun',30,['ZGtiemian','ZGjizhou','ZGdanshi','ZGchihu'],[]],
},
skill:{
//by染柒
ZGguimei:{
group:['ZGguimei1','ZGguimei2'],
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'turnOverBefore'},
filter:function(event,player){
return !player.isTurnedOver();
},
forced:true,
content:function(){
trigger.cancel();
},
},
ZGguimei1:{
audio:'ZGguimei',
trigger:{player:['phaseDrawSkipped','phaseDrawCancelled']},
forced:true,
content:function(){
player.draw()
},
},
ZGguimei2:{
audio:'ZGguimei',
trigger:{player:'phaseDiscardBefore'},
filter:function(event,player){
return player.getHistory('skipped').includes('phaseUse');
},
forced:true,
content:function(){
trigger.cancel();
},
},
ZGyunju:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
return player.getEnemies().includes(event.player)&&event.player.countCards('he');
},
forced:true,
logTarget:'player',
content:function(){
var hs=trigger.player.getCards('h');
if(hs.length){
trigger.player.discard(hs.randomGet());
}
var hs=trigger.player.getCards('e');
if(hs.length){
trigger.player.discard(hs.randomGet());
}
},
},
ZGxixing:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return game.hasPlayer(function(target){
return player!=target&&target.isLinked();
});
},
content:function(){
'step 0'
var target=game.filterPlayer(function(target){
return player!=target&&target.isLinked();
}).randomGet();
player.line(target);
target.damage('thunder');
'step 1'
player.recover();
},
},
ZGtaiping:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd'},
filter:function(event,player){
return event.source&&(player.getEnemies().includes(event.source));
},
forced:true,
logTarget:'source',
content:function(){
'step 0'
trigger.source.chooseToDiscard(2,function(card){
var suit=get.suit(card);
for(var i=0;i<ui.selected.cards.length;i++){
if(get.suit(ui.selected.cards[i])==suit) return false;
}
return true;
}).set('ai',function(card){
var player=_status.event.player;
return 10-player.hp-get.value(card);
});
'step 1'
if(!result.bool) trigger.source.loseHp();
},
ai:{
maixie_defend:true,
effect:{
target:function(card,player,target){
if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
return 0.8;
},
},
},
},
ZGaotang:{
onremove:true,
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
direct:true,
locked:true,
content:function(){
var target=game.filterPlayer(function(current){
return (get.mode()=='identity'&&get.attitude(player,current)<0)||(get.mode()!='identity'&&current.isEnemyOf(player));
}).randomGet();
player.logSkill('ZGaotang',target);
player.addSkill('ZGaotang_clear');
player.storage.ZGaotang_clear=target;
target.addSkill('ZGaotang_fengyin');
},
subSkill:{
clear:{
onremove:true,
charlotte:true,
trigger:{player:'phaseBegin'},
direct:true,
content:function(){
player.storage.ZGaotang_clear.removeSkill('ZGaotang_fengyin');
player.removeSkill('ZGaotang_clear');
},
},
fengyin:{
charlotte:true,
init:function(player,skill){
player.addSkillBlocker(skill);
},
onremove:function(player,skill){
player.removeSkillBlocker(skill);
},
skillBlocker:function(skill,player){
return skill!='ZGaotang_fengyin'&&!lib.skill[skill].charlotte;
},
mark:true,
intro:{
content:function(storage,player,skill){
var str='无失效技能';
var list=player.getSkills(null,false,false).filter(function(i){
return lib.skill.ZGaotang_fengyin.skillBlocker(i,player);
});
if(list.length) str=('失效技能：'+get.translation(list));
return str;
},
},
},
},
},
ZGduanhun:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageBegin3'},
filter:function(event,player){
return (!event.card||event.card.name!='sha')&&player.countCards('h')<2;
},
forced:true,
content:function(){
trigger.num--;
},
},
ZGqiangzheng:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return lib.skill.ZGqiangzheng.logTarget(event,player).length;
},
logTarget:function(event,player){
return game.filterPlayer(function(current){
return player.getEnemies().includes(current)&&current.countCards('h')==1;
});
},
content:function(){
for(var target of lib.skill.ZGqiangzheng.logTarget(trigger,player)) player.gain(target.getCards('h'),target,'giveAuto');
},
},
ZGbaolian:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.countCards('he')&&player.getEnemies().includes(current);
});
},
forced:true,
content:function(){
var targets=game.filterPlayer(function(current){
return current!=player&&current.countCards('he')&&player.getEnemies().includes(current);
}).sortBySeat();
for(var target of targets){
if(target.countCards('e')) player.gainPlayerCard(target,'e',true);
else if(target.countCards('h')) player.gain(target.getCards('h').randomGet(),target,'give');
}
},
},
ZGmizui:{
shaRelated:true,
audio:'ext:活动武将/audio/skill:true',
trigger:{source:'damageSource'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&(get.color(event.card)=='red'||lib.linked.includes(event.nature));
},
check:function(event,player){
return get.attitude(player,event.player)<0;
},
logTarget:'player',
content:function(){
player.discardPlayerCard(trigger.player,'he',true);
},
},
ZGxiaoshou:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current.hp>player.hp;
});
},
forced:true,
content:function(){
'step 0'
player.chooseTarget('请选择【枭首】的目标','对一名体力值大于你的其他角色造成2点伤害',true,function(card,player,target){
return target.hp>player.hp;
}).set('ai',function(target){
var player=_status.event.player;
return get.damageEffect(target,player,player);
});
'step 1'
if(result.bool){
player.logSkill('ZGxiaoshou',result.targets);
result.targets[0].damage(2);
}
},
},
ZGshiyu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseDrawBegin1'},
forced:true,
content:function(){
trigger.changeToZero();
var cards=[];
for(var suit of lib.suit){
var card=get.cardPile2(function(card){
return get.suit(card,false)==suit;
});
if(card) cards.push(card);
}
if(cards.length) player.gain(cards,'gain2');
},
},
ZGguizhao:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard'},
filter:function(event,player){
return player==_status.currentPhase&&!player.hasHistory('useCard',function(evt){
return evt.card!=event.card&&get.type2(evt.card)==get.type2(event.card);
});
},
forced:true,
content:function(){
player.draw();
},
},
ZGyinsha:{
trigger:{global:'phaseUseBegin'},
audio:'ext:活动武将/audio/skill:true',
filter:function(event,player){
return player.getEnemies().includes(event.player)&&event.player.countCards('h')>event.player.maxHp;
},
forced:true,
content:function(){
player.addTempSkill('ZGyinsha1');
},
},
ZGyinsha1:{
charlotte:true,
mark:true,
intro:{content:'不能成为【杀】的目标'},
mod:{
targetEnabled:function(card,player,target,now){
if(card.name=='sha') return false;
},
},
},
//by萌新（转型中）
ZGmanji:{
shaRelated:true,
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCardToPlayer'},
filter:function(event,player){
return event.card.name=='sha'&&event.targets.length==1&&event.target.countCards('h');
},
check:function(event,player){
return get.attitude(player,event.target)<=0;
},
logTarget:'target',
content:function(){
'step 0'
player.discardPlayerCard('h',trigger.target,true);
'step 1'
if(result.cards[0].name=='sha'){
var id=trigger.target.playerid;
var map=trigger.getParent().customArgs;
if(!map[id]) map[id]={};
if(typeof map[id].extraDamage!='number'){
map[id].extraDamage=0;
}
map[id].extraDamage++;
}
else player.gain(result.cards,'gain2');
},
},
ZGeli:{
derivation:'rewansha',
audio:'ext:活动武将/audio/skill:true',
triggeer:{source:'damageBegin2'},
filter:function(event,player){
return ((get.mode()=='identity'&&get.attitude(player,event.player)<0)||(get.mode()!='identity'&&event.player.isEnemyOf(player)))&&event.player.getAllHistory('damage').length==0;
},
forced:true,
logTarget:'player',
content:function(){
'step 0'
player.judge();
'step 1'
if(result.color=='red') trigger.num++;
else player.addTempSkill('rewansha');
},
},
ZGbingyi:{
audio:'ext:活动武将/audio/skill:true',
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
if(player.countCards('h')) return false;
var evt=event.getl(player);
return evt&&evt.player==player&&evt.hs&&evt.hs.length>0;
},
usable:1,
forced:true,
logTarget:function(event,player){
return game.filterPlayer(function(current){
if(get.mode()=='identity') return get.attitude(player,current)>0;
return player.getFriends().includes(current);
});
},
content:function(){
var list=lib.skill.ZGbingyi.logTarget(trigger,player);
for(var target of list) target.drawTo(6);
},
},
ZGsuoxue:{
shaRelated:true,
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCardToTargeted'},
check:function(event,player){
if(player.countCards('h')<event.target.countCards('h')) return true;
return get.attitude(player,event.target)<=0;
},
filter:function(event,player){
if(player.countCards('h')==event.target.countCards('h')) return false;
return event.card.name=='sha'&&event.targets.length==1;
},
logTarget:'target',
content:function(){
if(player.countCards('h')<trigger.target.countCards('h')) player.drawTo(trigger.target.countCards('h'));
else{
player.chooseToDiscard('h',true);
trigger.getParent().directHit.push(trigger.target);
}
},
},
ZGguixi:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd'},
forced:true,
content:function(){
'step 0'
player.judge(function(card){
if(get.suit(card)=='heart') return 2;
return -2;
}).judge2=function(result){
return result.bool?true:false;
};
'step 1'
if(result.suit=='heart') player.recover();
else player.loseHp();
},
},
ZGanchao:{
group:'ZGanchao_phase',
intro:{content:'mark',name:'暗潮'},
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
if(event.player.getHistory('sourceDamage').length&&event.player.countMark('ZGanchao')==0) return false;
return (get.mode()=='identity'&&get.attitude(player,event.player)>0)||(get.mode()!='identity'&&event.player.isFriendOf(player));
},
forced:true,
logTarget:'player',
content:function(){
if(!trigger.player.getHistory('sourceDamage').length) trigger.player.addMark('ZGanchao',1);
else trigger.player.removeMark('ZGanchao',trigger.player.countMark('ZGanchao'));
},
subSkill:{
phase:{
audio:'ZGanchao',
trigger:{global:'phaseZhunbeiBegin'},
filter:function(event,player){
if(event.player.countMark('ZGanchao')==0) return false;
return (get.mode()=='identity'&&get.attitude(player,event.player)>0)||(get.mode()!='identity'&&event.player.isFriendOf(player));
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.addTempSkill('ZGanchao_effect');
trigger.player.addMark('ZGanchao_effect',trigger.player.countMark('ZGanchao'),false);
},
},
effect:{
mark:true,
onremove:true,
charlotte:true,
intro:{content:'摸牌阶段多摸#张牌，对敌方角色造成的伤害+#'},
audio:'ZGanchao',
trigger:{player:'phaseDrawBegin2',source:'damageBegin2'},
filter:function(event,player){
if(event.name=='phaseDraw') return !event.numFixed;
return (get.mode()=='identity'&&get.attitude(player,event.player)<0)||(get.mode()!='identity'&&event.player.isEnemyOf(player));
},
forced:true,
logTarget:'player',
content:function(){
trigger.num+=player.countMark('ZGanchao_effect');
},
},
},
},
ZGduzhen:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
return player.isPhaseUsing()&&event.target.countCards('he')&&(get.mode()=='identity'&&get.attitude(player,event.target)<0)||(get.mode()!='identity'&&event.target.isEnemyOf(player))&&(event.card.name=='sha'||get.type2(event.card)=='trick');
},
forced:true,
logTarget:'target',
content:function(){
trigger.target.discard(trigger.target.getCards('he',function(card){
if(trigger.target.countCards('e')&&get.position(card)!='e') return false;
return true;
}).randomGet());
},
},
ZGminchong:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'die'},
forceDie:true,
skillAnimation:true,
animationColor:'gray',
logTarget:function(event,player){
return game.filterPlayer(function(current){
if(player==current) return false;
if(get.mode()=='identity') return get.attitude(player,current)>0;
return player.getFriends().includes(current);
});
},
filter:function(event,player){
return game.hasPlayer(function(current){
if(player==current) return false;
if(get.mode()=='identity') return get.attitude(player,current)>0;
return player.getFriends().includes(current);
});
},
forced:true,
content:function(){
var list=lib.skill.ZGbingyi.logTarget(trigger,player);
for(var target of list){
target.addSkillLog('ZGduzhen');
target.drawTo(target.getHandcardLimit());
}
},
},
ZGtiemian:{
audio:'ext:活动武将/audio/skill:true',
trigger:{target:'shaBefore'},
filter:function(event,player){
return event.card.name=='sha'&&get.color(event.card)=='red'&&Math.random()<=0.75;
},
forced:true,
content:function(){
trigger.cancel();
},
ai:{
effect:{
target:function(card,player,target){
if(card.name=='sha'&&get.color(card)=='red') return 0.25;
},
},
},
},
ZGdifu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseUseBegin'},
filter:function(event,player){
return event.player.countCards('h')>event.player.maxHp&&((get.mode()=='identity'&&get.attitude(player,event.player)<0)||(get.mode()!='identity'&&event.player.isEnemyOf(player)));
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.chooseToDiscard('h',trigger.player.countCards('h')-trigger.player.maxHp,true);
},
},
ZGxingpan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
forced:true,
content:function(){
'step 0'
player.judge();
'step 1'
var list=game.filterPlayer(function(current){
if(get.mode()=='guozhan') return current.isEnemyOf(player);
return get.attitude(player,current)<0;
});
if(result.color=='red'){
var target=game.findPlayer(function(current){
return list.includes(current)&&!game.hasPlayer(function(currentx){
return current!=currentx&&list.includes(currentx)&&currentx.countCards('h')>=current.countCards('h');
});
});
if(target){
event.target=target;
player.line(target);
if(target.countCards('h')>1) target.chooseCard('h',Math.floor(target.countCards('h')/2),'刑判：交给'+get.translation(player)+'一半的手牌（向下取整）',true);
else event.finish();
}
else event.finish();
}
else{
var targetx=game.findPlayer(function(current){
return list.includes(current)&&!game.hasPlayer(function(currentx){
return current!=currentx&&list.includes(currentx)&&currentx.hp>=current.hp;
});
});
if(targetx){
player.line(targetx);
targetx.loseHp();
}
event.finish();
}
'step 2'
player.gain(result.cards,target,'giveAuto');
},
},
ZGjizhou:{
audio:'ext:活动武将/audio/skill:true',
forced:true,
trigger:{global:'phaseUseEnd'},
filter:function(event,player){
return player.getEnemies().includes(event.player);
},
logTarget:'player',
content:function(){
'step 0'
player.judge();
'step 1'
var num=result.number;
var next=trigger.player.chooseToDiscard('疾咒：弃置任意张点数之和大于'+get.cnNumber(num)+'的牌，否则失去1点体力','he');
next.set('num',num);
next.set('complexCard',true);
next.set('selectCard',function(){
var num=0;
for(var i=0;i<ui.selected.cards.length;i++){
num+=get.number(ui.selected.cards[i]);
}
if(num>_status.event.num) return [ui.selected.cards.length,_status.event.player.countCards('he')];
return ui.selected.cards.length+2;
});
next.set('ai',function(card){
var player=_status.event.player;
var num=_status.event.num;
var numx=0;
for(var i of ui.selected.cards){
numx+=i.number;
}
if(numx>num&&_status.event.player.countCards('he')<3) return 0;
if(numx>num&&_status.event.player.countCards('he')>3&&ui.selected.cards.length>=3) return 0;
if(card.number+numx>num) return 15-get.value(card);
return Math.max(9-get.value(card),card.number);
});
'step 2'
if(result.bool){
if(result.cards.length>2) player.addMark('ZGdanshi',1);
}
else trigger.player.loseHp();
},
},
ZGdanshi:{
intro:{content:'下次受到的的伤害+#，然后移除一个标记'},
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageBegin1'},
filter:function(event,player){
return player.countMark('ZGdanshi')>0;
},
forced:true,
content:function(){
'step 0'
trigger.num+=player.countMark('ZGdanshi');
'step 1'
player.removeMark('ZGdanshi',1);
},
},
ZGchihu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseDrawBegin2',source:'damageBegin2'},
filter:function(event,player){
if(event.name=='damage') return !player.isMaxHp();
return !event.numFixed&&!player.isMaxHandcard();
},
forced:true,
content:function(){
trigger.num+=trigger.name=='damage'?1:2;
},
},
},
translate:{
ZG_mengpo:'孟婆',
ZG_heiwuchang:'黑无常',
ZG_baiwuchang:'白无常',
ZG_heibaiwuchang:'黑白无常',
ZG_niutou:'牛头',
ZG_mamian:'马面',
ZG_niutoumamian:'牛头马面',
ZG_baowei:'豹尾',
ZG_niaozui:'鸟嘴',
ZG_yusai:'鱼鳃',
ZG_huangfeng:'黄蜂',
ZG_yanluowang:'阎罗王',
ZG_guiwang:'鬼王',
ZGguimei:'鬼魅',
ZGguimei1:'鬼魅',
ZGguimei2:'鬼魅',
ZGguimei_info:'锁定技，你不会被翻面；你跳过摸牌阶段时，摸一张牌；你跳过出牌阶段时，本回合手牌无上限。',
ZGyunju:'云飓',
ZGyunju_info:'锁定技，敌方角色的回合结束时，该角色随机弃置一张手牌和一张装备区里的牌。',
ZGxixing:'吸星',
ZGxixing_info:'准备阶段，对任意一名横置的其他角色造成1点雷电伤害，然后回复1点体力。',
ZGtaiping:'太平',
ZGtaiping_info:'锁定技，当你受到敌方角色造成的伤害后，伤害来源需弃置两张花色不同的手牌，否则失去1点体力。',
ZGaotang:'熬汤',
ZGaotang_info:'锁定技，准备阶段，你令随机一名敌方角色遗忘所有武将技能直到你的下回合开始。',
ZGduanhun:'断魂',
ZGduanhun_info:'锁定技，若你的手牌数小于等于1，则当你受到不为【杀】造成的伤害时，此伤害-1。',
ZGqiangzheng:'强征',
ZGqiangzheng_info:'锁定技，结束阶段，若敌方有角色的手牌数为1，则你获得其手牌。',
ZGbaolian:'暴敛',
ZGbaolian_info:'锁定技，准备阶段，你放弃摸牌，改为获得每名敌方角色装备区里各一张牌。若有角色装备区里没有牌，则改为随机获得其一张手牌。',
ZGmizui:'迷醉',
ZGmizui_info:'你的红色【杀】或属性【杀】造成伤害后，你可以弃置受伤角色一张牌。',
ZGxiaoshou:'枭首',
ZGxiaoshou_info:'锁定技，准备阶段，对体力大于你的一名其他角色造成2点伤害。',
ZGshiyu:'施狱',
ZGshiyu_info:'锁定技，摸牌阶段，你放弃摸牌改为随机获得牌堆中每种花色的牌各一张。',
ZGguizhao:'诡招',
ZGguizhao_info:'锁定技，当你于回合内使用一张牌时，若此牌的类别是你本回合第一次使用，则你摸一张牌。',
ZGyinsha:'隐煞',
ZGyinsha1:'隐煞',
ZGyinsha_info:'锁定技，敌方角色的出牌阶段开始时，若其手牌数大于其体力上限，你本回合不能成为【杀】的目标。',
ZGmanji:'蛮击',
ZGmanji_info:'当你使用【杀】指定唯一目标时，你可以弃置该目标角色的一张手牌。若此牌为【杀】，你令此【杀】对其造成的伤害+1，否则你获得此牌。',
ZGeli:'恶力',
ZGeli_info:'锁定技，当你对一名敌方角色造成伤害时，若此伤害是该角色第一次受到伤害，你进行一次判定：若结果为红色，此伤害+1；若结果为黑色，你于本回合获得〖完杀〗。',
ZGbingyi:'病疑',
ZGbingyi_info:'锁定技，每回合限一次，当你失去最后的手牌时，己方所有角色将手牌摸至六张。',
ZGsuoxue:'索穴',
ZGsuoxue_info:'你使用【杀】指定单一目标后，若其手牌数大于你，你可将手牌摸至与该角色相同；若其手牌数小于你，你可弃置一张手牌令此【杀】不能抵消。',
ZGguixi:'鬼吸',
ZGguixi_info:'锁定技，当你受到伤害后，你进行一次判定，若结果为红桃，你回复1点体力；若结果不为红桃，你失去1点体力。',
ZGanchao:'暗潮',
ZGanchao_info:'锁定技，己方角色的回合结束时，若此回合该角色没有造成伤害，则获得1枚“暗潮”标记，若该角色造成过伤害，则移去所有“暗潮”标记。己方角色的准备阶段，若该角色有“暗潮”标记，则本回合摸牌阶段多摸X张牌且对敌方角色造成的伤害+X（X为其拥有的“暗潮”标记数）。',
ZGduzhen:'毒针',
ZGduzhen_info:'锁定技，你的回合内，当你使用【杀】或锦囊牌指定敌方角色为目标后，该角色随机弃置一张牌（优先装备区里的牌）。',
ZGminchong:'冥虫',
ZGminchong_info:'锁定技，你死亡时，若有其他己方角色存活，该角色获得技能“毒针”并将手牌摸至体力上限。',
ZGtiemian:'铁面',
ZGtiemian_info:'锁定技，红色【杀】有75%概率对你无效。',
ZGdifu:'地府',
ZGdifu_info:'锁定技，敌方角色的出牌阶段开始时，若其手牌数大于体力上限，则将手牌弃至与体力上限相同。',
ZGxingpan:'刑判',
ZGxingpan_info:'锁定技，出牌阶段开始时，你进行一次判定：若结果为红色，敌方唯一手牌最多的角色将一半数量的手牌交给你（向下取整）；若结果为黑色，敌方唯一体力最多的角色失去1点体力。',
ZGjizhou:'疾咒',
ZGjizhou_info:'锁定技，敌方角色的出牌阶段结束时，你进行一次判定，然后敌方角色选择一项：1.弃置任意张点数之和大于判定结果的牌（若弃置的牌超过两张，你获得1枚“噬”标记）；2.失去1点体力。',
ZGdanshi:'啖噬',
ZGdanshi_info:'锁定技，当你受到伤害时，此伤害+X（X为你拥有的“噬”标记数量），然后你移去1枚“噬”。',
ZGchihu:'赤虎',
ZGchihu_info:'锁定技，若你的手牌数不是全场最多的，摸牌阶段你多摸两张牌；若你的体力值不是全场最多的，你造成的伤害+1。',
},
};
for(var i in decadeZhuoGui.character){
decadeZhuoGui.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
}
return decadeZhuoGui;
});
lib.config.all.characters.push('decadeZhuoGui');
lib.config.all.sgscharacters.push('decadeZhuoGui');
if(!lib.config.characters.includes('decadeZhuoGui')) lib.config.characters.remove('decadeZhuoGui');
lib.translate['decadeZhuoGui_character_config']='<span style="font-family: xingkai">捉鬼驱邪</span>';
//魁拔
game.import('character',function(){
var decadeKuiBa={
name:'decadeKuiBa',
connect:true,
characterSort:{
decadeKuiBa:{
kuibakuiba:['kuiba_manji','kuiba_haiwenxiang','kuiba_youmikuang'],
kuibaqunying:['kuiba_kalaxiaokepan','kuiba_jingxin'],
kuibakuibajun:['kuiba_lingshoujun','kuiba_lingzhanjun','kuiba_lingxunjun','kuiba_lingluanjun'],
kuibaqunyingjun:['kuiba_shengdoujun','kuiba_shenghujun','kuiba_shengjiejun','kuiba_shengzhujun'],
},
},
character:{
kuiba_youmikuang:['male','qun',12,['kuiba_wuyao','kuiba_sanjian','kuiba_baizhan','kuiba_yiyou'],[]],
kuiba_haiwenxiang:['female','qun',10,['kuiba_linyao','kuiba_jinghong','kuiba_wenjia','kuiba_huanguang'],[]],
kuiba_kalaxiaokepan:['male','qun',12,['kuiba_wangjian','kuiba_tianyi','kuiba_zhuandui','kuiba_tianbian'],[]],
kuiba_manji:['male','qun',36,['kuiba_kuiqu','kuiba_juli','kuiba_kuiba'],[]],
kuiba_jingxin:['female','qun',12,['kuiba_tianshen','kuiba_guangshi','kuiba_guangmie'],[]],
kuiba_lingshoujun:['male','qun',8,['kuiba_lingshan','kuiba_lingshou'],[]],
kuiba_lingzhanjun:['male','qun',7,['kuiba_lingshan','kuiba_lingzhan'],[]],
kuiba_lingxunjun:['male','qun',7,['kuiba_lingshan','kuiba_lingxun'],[]],
kuiba_lingluanjun:['male','qun',7,['kuiba_lingshan','kuiba_lingluan'],[]],
kuiba_shengdoujun:['male','qun',7,['kuiba_shengmeng','kuiba_shengdou'],[]],
kuiba_shenghujun:['male','qun',8,['kuiba_shengmeng','kuiba_shenghu'],[]],
kuiba_shengjiejun:['male','qun',7,['kuiba_shengmeng','kuiba_shengjie'],[]],
kuiba_shengzhujun:['male','qun',7,['kuiba_shengmeng','kuiba_shengzhu'],[]],
},
skill:{
kuiba_wuyao:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageBegin4'},
filter:function(event,player){
return event.source&&event.num>0;
},
forced:true,
content:function(){
'step 0'
player.judge(function(card){
return get.color(card)=='black'?2:-2;
});
'step 1'
if(result.judge>0){
trigger.num--;
if(player.countCards('hs',{name:'sha'})){
player.discard(player.getCards('he',{name:'sha'}).randomGet());
player.useCard({name:'sha'},trigger.source,false,'noai');
}
}
},
},
kuiba_sanjian:{
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+1;
},
},
audio:'ext:活动武将/audio/skill:true',
trigger:{source:'damageSource'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.player.countCards('he');
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.chooseToDiscard('he',2,true);
},
},
kuiba_baizhan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
forced:true,
content:function(){
var cards=[];
for(var i=0;i<2;i++){
var card=get.cardPile(function(card){
return card.name=='sha'&&!cards.includes(card);
});
if(card) cards.push(card);
}
if(cards.length) player.gain(cards,'gain2');
},
},
kuiba_yiyou:{
derivation:['new_yijue','tianyi'],
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseBegin'},
forced:true,
content:function(){
'step 0'
player.judge().set('callback',function(){
var player=_status.event.player;
if(get.position(card,true)=='o') player.gain(card,'gain2');
});
'step 1'
player.addTempSkill(result.color=='red'?'new_yijue':'tianyi');
},
},
kuiba_linyao:{
mod:{
targetEnabled:function(card,player,target){
if(((get.mode()=='identity'&&get.attitude(player,target)<0)||(get.mode()!='identity'&&target.isEnemyOf(player)))&&get.color(card)=='red'&&get.type2(card)=='trick') return false;
},
},
audio:'ext:活动武将/audio/skill:true',
inherit:'shixin',
},
kuiba_jinghong:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard'},
filter:function(event,player){
return get.color(event.card,player)!='none'&&get.type2(event.card)=='trick';
},
forced:true,
content:function(){
var color=['red','black'];
color.remove(get.color(trigger.card,player));
color=color[0];
var card=get.cardPile(function(card){
return get.color(card)==color;
});
if(card) player.gain(card,'gain2');
},
},
kuiba_wenjia:{
derivation:['xinfu_wuniang','wushuang'],
intro:{content:'mark',name:'击毁'},
group:['kuiba_wenjia_yingzi','kuiba_wenjia_damage'],
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'dieAfter'},
forced:true,
content:function(){
player.addMark('kuiba_wenjia',1);
var num=player.countMark('kuiba_wenjia');
if(num==1) player.addSkillLog('xinfu_wuniang');
if(num==2) player.addSkillLog('wushuang');
},
subSkill:{
yingzi:{
audio:'kuiba_wenjia',
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed&&player.countMark('kuiba_wenjia')>0;
},
forced:true,
content:function(){
trigger.num+=player.countMark('kuiba_wenjia');
},
},
damage:{
audio:'kuiba_wenjia',
trigger:{source:'damageBegin1'},
filter:function(event,player){
return player.countMark('kuiba_wenjia')==3;
},
forced:true,
content:function(){
trigger.num++;
},
},
},
},
kuiba_huanguang:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard2'},
filter:function(event,player){
if(!player.isPhaseUsing()||get.type(event.card)!='trick'||player.getHistory('useCard',function(evt){
return get.type(evt.card)=='trick';
}).length>4) return false;
if(event.targets&&event.targets.length>0) return true;
var info=get.info(event.card);
if(info.allowMultiple==false) return false;
if(event.targets&&!info.multitarget){
if(game.hasPlayer(function(current){
return !event.targets.includes(current)&&lib.filter.targetEnabled2(event.card,player,current)&&lib.filter.targetInRange(event.card,player,current);
})) return true;
}
return false;
},
direct:true,
content:function(){
'step 0'
var prompt2='为'+get.translation(trigger.card)+'增加或减少一个目标';
player.chooseTarget(get.prompt('kuiba_huanguang'),function(card,player,target){
var player=_status.event.player;
if(_status.event.targets.includes(target)) return true;
return lib.filter.targetEnabled2(_status.event.card,player,target)&&lib.filter.targetInRange(_status.event.card,player,target);
}).set('prompt2',prompt2).set('ai',function(target){
var trigger=_status.event.getTrigger();
var player=_status.event.player;
return get.effect(target,trigger.card,player,player)*(_status.event.targets.includes(target)?-1:1);
}).set('targets',trigger.targets).set('card',trigger.card);
'step 1'
if(result.bool){
if(!event.isMine()&&!event.isOnline()) game.delayx();
event.targets=result.targets;
}
else event.finish();
'step 2'
if(event.targets){
player.logSkill('kuiba_huanguang',event.targets);
if(trigger.targets.includes(event.targets[0])) trigger.targets.removeArray(event.targets);
else trigger.targets.addArray(event.targets);
}
},
},
kuiba_wangjian:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCardToTargeted'},
filter:function(event){
return event.card.name=='sha';
},
forced:true,
logTarget:'target',
content:function(){
trigger.target.addTempSkill('qinggang2');
trigger.target.storage.qinggang2.add(trigger.card);
var id=trigger.target.playerid;
var map=trigger.getParent().customArgs;
if(!map[id]) map[id]={};
if(typeof map[id].extraDamage!='number') map[id].extraDamage=0;
map[id].extraDamage++;
},
ai:{
unequip_ai:true,
skillTagFilter:function(player,tag,arg){
if(arg&&arg.name=='sha') return true;
return false;
},
},
},
kuiba_tianyi:{
audio:'ext:活动武将/audio/skill:true',
inherit:'tianyi',
},
kuiba_zhuandui:{
group:['kuiba_zhuandui_use','kuiba_zhuandui_respond'],
audio:'ext:活动武将/audio/skill:true',
inherit:'zhuandui',
subSkill:{
use:{
audio:'kuiba_zhuandui',
inherit:'zhuandui_use',
},
respond:{
audio:'kuiba_zhuandui',
inherit:'zhuandui_respond',
},
},
},
kuiba_tianbian:{
audio:'ext:活动武将/audio/skill:true',
inherit:'tianbian',
},
kuiba_kuiqu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd'},
filter:function(event,player){
return event.num>0;
},
forced:true,
content:function(){
'step 0'
event.count=trigger.num;
'step 1'
event.count--;
player.draw();
if(trigger.source&&trigger.source.countCards('he')){
player.line(trigger.source);
trigger.source.discard(trigger.source.getCards('he').randomGet());
}
'step 2'
if(event.count>0&&player.hasSkill('kuiba_kuiqu')) event.goto(1);
},
},
kuiba_juli:{
group:'kuiba_juli_hit',
audio:'ext:活动武将/audio/skill:true',
trigger:{source:'damageBegin1'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&game.hasPlayer(function(current){
return current!=player&&get.distance(player,current)==1;
});
},
firstDo:true,
direct:true,
locked:true,
content:function(){
trigger.num+=(game.countPlayer(function(current){
return current!=player&&get.distance(player,current)==1;
})-1);
},
subSkill:{
hit:{
audio:'kuiba_juli',
shaRelated:true,
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
return event.card&&get.distance(event.target,player)>1;
},
forced:true,
logTarget:'target',
content:function(){
trigger.getParent().directHit.add(trigger.target);
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(get.distance(arg.target,player)<=1) return false;
},
},
},
},
},
kuiba_kuiba:{
group:['kuiba_kuiba_yingzi','kuiba_kuiba_damage'],
audio:'ext:活动武将/audio/skill:true',
trigger:{player:['useCard2','useCardToPlayer']},
filter:function(event,player){
return ['sha','juedou'].includes(event.card.name)&&game.hasPlayer(function(current){
return current!=player&&!event.targets.includes(current);
});
},
forced:true,
content:function(){
trigger.targets.addArray(game.filterPlayer(function(current){
return current!=player&&!trigger.targets.includes(current);
}));
player.line(trigger.targets);
},
subSkill:{
yingzi:{
audio:'kuiba_kuiba',
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed;
},
forced:true,
content:function(){
trigger.num+=2;
},
},
damage:{
audio:'kuiba_kuiba',
trigger:{source:'damageBegin1'},
filter:function(event,player){
return event.card&&['sha','juedou'].includes(event.card.name)&&player.inRange(event.player);
},
forced:true,
content:function(){
trigger.num++;
},
},
},
},
kuiba_tianshen:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageBegin4'},
filter:function(event,player){
return get.type2(event.card)=='trick';
},
forced:true,
content:function(){
trigger.cancel();
},
ai:{
notrick:true,
effect:{
target:function(card,player,target,current){
if(get.type(card)=='trick'&&get.tag(card,'damage')) return 'zeroplayertarget';}
},
},
},
kuiba_guangshi:{
intro:{content:'mark',name:'光势'},
audio:'ext:活动武将/audio/skill:true',
trigger:{player:['phaseJieshuBegin','damageEnd']},
filter:function(event,player,name){
var num=player.countMark('kuiba_guangshi');
if(name=='phaseJieshuBegin') return num<3;
return num>0;
},
forced:true,
content:function(){
if(event.triggername=='phaseJieshuBegin') player.addMark('kuiba_guangshi',3);
else player.removeMark('kuiba_guangshi',1);
},
},
kuiba_guangmie:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
limited:true,
skillAnimation:true,
animationColor:'thunder',
filter:function(event,player){
return player.countMark('kuiba_guangshi')>2;
},
check:function(event,player){
var friend=0,enemy=0;
for(var target of game.players){
if(target!=player){
if(get.attitude(player,target)>0) friend+=target.hp;
else enemy+=target.hp;
}
}
return enemy>=friend;
},
logTarget:function(event,player){
return game.filterPlayer(function(current){
return current!=player;
});
},
content:function(){
player.awakenSkill('kuiba_guangmie');
var num=player.countMark('kuiba_guangshi');
player.removeMark('kuiba_guangshi',num);
event.forceDie=true;
for(var target of game.players){
if(target!=player) target.loseHp(num);
}
},
ai:{combo:'kuiba_guangshi'},
},
kuiba_lingshan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageBegin4'},
filter:function(event,player){
return event.card&&['spade','diamond'].includes(get.suit(event.card,event.player));
},
forced:true,
content:function(){
trigger.num--;
},
ai:{
effect:{
target:function(card,player,target){
if(!['spade','diamond'].includes(get.suit(card,player))) return;
if(player.hasSkillTag('jueqing',false,target)) return;
var num=get.tag(card,'damage');
if(num){
if(num>1) return 0.5;
return 0;
}
},
},
},
},
kuiba_shengmeng:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageBegin4'},
filter:function(event,player){
return event.card&&['heart','club'].includes(get.suit(event.card,event.player));
},
forced:true,
content:function(){
trigger.num--;
},
ai:{
effect:{
target:function(card,player,target){
if(!['heart','club'].includes(get.suit(card,player))) return;
if(player.hasSkillTag('jueqing',false,target)) return;
var num=get.tag(card,'damage');
if(num){
if(num>1) return 0.5;
return 0;
}
},
},
},
},
kuiba_lingshou:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'damageBegin4'},
filter:function(event,player){
return event.player!=player&&((get.mode()=='identity'&&get.attitude(player,event.player)>0)||(get.mode()!='identity'&&event.player.isFriendOf(player)));
},
forced:true,
logTarget:'player',
content:function(){
trigger.num--;
player.loseHp();
if(trigger.source) trigger.source.chooseToDiscard(3,'he',true);
},
},
kuiba_lingzhan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'damageBegin2'},
usable:1,
filter:function(event,player){
return player.countCards('he')&&((get.mode()=='identity'&&get.attitude(player,event.source)>0)||(get.mode()!='identity'&&event.source.isFriendOf(player)));
},
forced:true,
logTarget:'source',
content:function(){
player.discard(player.getCards('he').randomGet());
trigger.num++;
},
},
kuiba_lingxun:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCardToTargeted'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.player.countCards('h')&&((get.mode()=='identity'&&get.attitude(player,event.target)>0)||(get.mode()!='identity'&&event.target.isFriendOf(player)))&&((get.mode()=='identity'&&get.attitude(player,event.player)<0)||(get.mode()!='identity'&&event.player.isEnemyOf(player)));
},
forced:true,
logTarget:'player',
content:function(){
player.gain(trigger.player.getCards('h').randomGet(),trigger.player,'giveAuto');
},
},
kuiba_lingluan:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
return event.player.countCards('he')&&((get.mode()=='identity'&&get.attitude(player,event.player)<0)||(get.mode()!='identity'&&event.player.isEnemyOf(player)));
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.chooseToDiscard(2,'he',true);
},
},
kuiba_shengdou:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCardToTargeted'},
filter:function(event,player){
return !event.card.kuiba_shengdou&&event.card&&event.card.name=='sha'&&player.countCards('he')&&((get.mode()=='identity'&&get.attitude(player,event.player)>0)||(get.mode()!='identity'&&event.player.isFriendOf(player)))&&game.hasPlayer(function(current){
return !event.targets.includes(current);
});
},
direct:true,
content:function(){
'step 0'
trigger.card.kuiba_shengdou=true;
player.chooseBool(get.prompt2('kuiba_shengdou',trigger.player));
'step 1'
if(result.bool){
player.logSkill('kuiba_shengdou',trigger.player);
player.discard(player.getCards('he').randomGet());
trigger.player.chooseTarget('为'+get.translation(trigger.card)+'增加一个目标',true,function(card,player,target){
var evt=_status.event.getTrigger(),player=trigger.player;
return !evt.targets.includes(target)&&lib.filter.filterTarget(evt.card,player,target);
}).set('ai',function(target){
var evt=_status.event.getTrigger(),eff=get.effect(target,evt.card,evt.player,evt.player);
return eff;
});
}
else event.finish();
'step 2'
if(result.bool){
var target=result.targets[0];
trigger.player.line(target);
game.log(target,'成为了',trigger.card,'的额外目标');
trigger.targets.push(target);
}
},
},
kuiba_shenghu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'damageBegin4'},
filter:function(event,player){
return event.player!=player&&((get.mode()=='identity'&&get.attitude(player,event.player)>0)||(get.mode()!='identity'&&event.player.isFriendOf(player)));
},
forced:true,
logTarget:'player',
content:function(){
trigger.num--;
player.loseHp();
game.asyncDraw([player,trigger.player]);
trigger.player.draw();
},
},
kuiba_shengjie:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCardToTargeted'},
filter:function(event,player){
if(event.getParent('useCard').kuiba_shengjie) return false;
return event.card&&get.type(event.card)=='trick'&&player.countCards('he')&&((get.mode()=='identity'&&get.attitude(player,event.target)>0)||(get.mode()!='identity'&&event.target.isFriendOf(player)))&&((get.mode()=='identity'&&get.attitude(player,event.player)<0)||(get.mode()!='identity'&&event.player.isEnemyOf(player)));
},
forced:true,
logTarget:'targets',
content:function(){
trigger.getParent('useCard').kuiba_shengjie=true;
player.discard(player.getCards('he').randomGet());
game.asyncDraw(trigger.targets,2);
},
},
kuiba_shengzhu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
return (get.mode()=='identity'&&get.attitude(player,event.player)>0)||(get.mode()!='identity'&&event.player.isFriendOf(player));
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.draw(2);
},
},
},
translate:{
kuibakuiba:'魁拔',
kuibaqunying:'群英',
kuibakuibajun:'魁拔军',
kuibaqunyingjun:'群英军',
kuiba_youmikuang:'幽弥狂',
kuiba_wuyao:'雾妖',
kuiba_wuyao_info:'锁定技，当你受到伤害时，你进行一次判定。若判定结果为黑色，则此伤害-1，然后如果你手中有【杀】，则你随机弃置其中的一张并视为对伤害来源使用一张【杀】。',
kuiba_sanjian:'伞剑',
kuiba_sanjian_info:'锁定技，你使用【杀】的次数上限+1；当你用【杀】造成伤害后，受伤角色弃置两张牌。',
kuiba_baizhan:'百战',
kuiba_baizhan_info:'锁定技，出牌阶段开始时，你从牌堆或弃牌堆中随机获得两张【杀】。',
kuiba_yiyou:'义友',
kuiba_yiyou_info:'锁定技，准备阶段，你进行一次判定并获得该判定牌。若判定结果为红色，本回合你视为拥有技能〖义绝〗；若判定结果为黑色，本回合你视为拥有技能〖天义〗。',
kuiba_haiwenxiang:'海问香',
kuiba_linyao:'粼妖',
kuiba_linyao_info:'锁定技，你无法成为敌方红色锦囊牌的目标；防止你受到的火焰伤害。',
kuiba_jinghong:'惊虹',
kuiba_jinghong_info:'锁定技，当你使用黑色/红色锦囊牌时，你从牌堆中随机获得一张红色/黑色牌。',
kuiba_wenjia:'纹甲',
kuiba_wenjia_info:'锁定技，其他角色死亡后，你获得1枚“击毁”标记。摸牌阶段，你多摸X张牌（X为你拥有的“击毁”标记数）。若你拥有1个“击毁”标记，你获得技能〖武娘〗；若你拥有2个“击毁”标记，你获得技能〖无双〗；若你拥有3个“击毁”标记，则当你造成伤害时，此伤害+1。',
kuiba_huanguang:'幻光',
kuiba_huanguang_info:'出牌阶段，你使用的前四张普通锦囊牌可以多指定一个目标或少指定一个目标。',
kuiba_kalaxiaokepan:'卡拉肖克潘',
kuiba_wangjian:'王剑',
kuiba_wangjian_info:'锁定技，你使用【杀】造成的伤害+1，且无视目标角色的防具。',
kuiba_tianyi:'天义',
kuiba_zhuandui:'专对',
kuiba_tianbian:'天辩',
kuiba_manji:'蛮吉',
kuiba_kuiqu:'魁躯',
kuiba_kuiqu_info:'锁定技，当你受到1点伤害后，你摸一张牌，伤害来源随机弃置一张牌。',
kuiba_juli:'巨力',
kuiba_juli_info:'锁定技，你的【杀】的基础伤害值等于你距离其为1的角色数。若其他角色与你的距离大于1，其不能响应你使用的牌。',
kuiba_kuiba:'魁拔',
kuiba_kuiba_info:'锁定技，摸牌阶段，你多摸两张牌；你使用【杀】和【决斗】均指定所有其他角色为目标（无距离限制），如果目标在你的攻击范围内，则其受到你使用【杀】和【决斗】对其造成的伤害+1。',
kuiba_jingxin:'镜心',
kuiba_tianshen:'天神',
kuiba_tianshen_info:'锁定技，当你受到锦囊牌造成的伤害时，防止此伤害。',
kuiba_guangshi:'光势',
kuiba_guangshi_info:'锁定技，回合结束时，若你的“光势”标记数小于3，你获得3个“光势”标记；当你受到伤害后，你失去1个“光势”标记。',
kuiba_guangmie:'光灭',
kuiba_guangmie_info:'限定技，准备阶段，若你的“光势”标记数大于2，你可以失去所有“光势”标记，且你每失去1枚“光势”标记，其他所有角色失去1点体力。',
kuiba_lingshan:'灵山',
kuiba_lingshan_info:'锁定技，当你受到黑桃牌和方片牌造成的伤害时，此伤害-1。',
kuiba_shengmeng:'圣盟',
kuiba_shengmeng_info:'锁定技，当你受到梅花牌和红桃牌造成的伤害时，此伤害-1。',
kuiba_lingshoujun:'灵守军',
kuiba_lingshou:'灵守',
kuiba_lingshou_info:'锁定技，己方其他角色受到伤害时，令此伤害-1，你失去1点体力，伤害来源弃置三张牌。',
kuiba_lingzhanjun:'灵战军',
kuiba_lingzhan:'灵战',
kuiba_lingzhan_info:'锁定技，己方角色回合内首次造成伤害时，你随机弃置一张牌令此伤害+1。',
kuiba_lingxunjun:'灵迅军',
kuiba_lingxun:'灵迅',
kuiba_lingxun_info:'锁定技，己方角色成为敌方角色使用【杀】的目标后，你获得该敌方角色的随机一张手牌。',
kuiba_lingluanjun:'灵乱军',
kuiba_lingluan:'灵乱',
kuiba_lingluan_info:'锁定技，敌方角色的结束阶段开始时，其须弃置两张牌。',
kuiba_shengdoujun:'圣斗军',
kuiba_shengdou:'圣斗',
kuiba_shengdou_info:'己方角色使用【杀】指定目标时，你可以随机弃置一张牌令此【杀】的目标上限+1。',
kuiba_shenghujun:'圣护军',
kuiba_shenghu:'圣护',
kuiba_shenghu_info:'锁定技，己方其他角色受到伤害时，你令该伤害-1，你失去1点体力，然后你摸一张牌，该角色摸两张牌。',
kuiba_shengjiejun:'圣捷军',
kuiba_shengjie:'圣捷',
kuiba_shengjie_info:'锁定技，己方角色成为敌方角色普通锦囊牌的目标后，你随机弃置一张牌并令此牌的所有目标各摸两张牌。',
kuiba_shengzhujun:'圣助军',
kuiba_shengzhu:'圣助',
kuiba_shengzhu_info:'锁定技，己方角色结束阶段开始时，其摸两张牌。',
},
};
for(var i in decadeKuiBa.character){
decadeKuiBa.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
}
return decadeKuiBa;
});
lib.config.all.characters.push('decadeKuiBa');
lib.config.all.sgscharacters.push('decadeKuiBa');
if(!lib.config.characters.includes('decadeKuiBa')) lib.config.characters.remove('decadeKuiBa');
lib.translate['decadeKuiBa_character_config']='<span style="font-family: xingkai">十周年魁拔</span>';
//超时空密探
game.import('character',function(){
var HD_chaoshikong={
name:'HD_chaoshikong',
connect:true,
characterSort:{
HD_chaoshikong:{
cike_mitan:['cike_wuliuqi','cike_meihuashisan','cike_mitan'],
cike_wei:['cike_caocao','cike_caopi','cike_caorui','cike_caomao','cike_caosong'],
cike_shu:['cike_liubei','cike_liushan','cike_liuchen','cike_liufeng','cike_liuyong'],
cike_wu:['cike_sunquan','cike_sunce','cike_sunliang','cike_sunxiu','cike_sunhao'],
cike_extra:['cike_lingju','cike_xugong'],
},
},
character:{
//密探
cike_wuliuqi:['male','qun',3,['cike_feijian','cike_yirong','cike_qingsuo','cike_xuefa'],[]],
cike_meihuashisan:['female','qun',3,['cike_meibiao','cike_biandao','cike_yingyue','cike_huti'],[]],
cike_mitan:['male','qun',3,['cike_zhibi'],['unseen']],
//魏国
cike_caocao:['male','wei',16,['new_rejianxiong','cike_hujia','feiying'],[]],
cike_caopi:['male','wei',10,['xingshang','fangzhu','cike_songwei','lxzhuixi','zhichi'],[]],
cike_caorui:['male','wei',18,['huituo','mingjian','cike_xingshuai'],[]],
cike_caomao:['male','wei',12,['cike_wenhui','cike_qintao','cike_xianggong'],['die_audio']],
cike_caosong:['male','wei',20,['cslilu','csyizheng','cike_taiwang'],[]],
//蜀国
cike_liubei:['male','shu',20,['rerende','cike_jijiang'],[]],
cike_liushan:['male','shu',18,['xiangle','fangquan','cike_ruoyu'],[]],
cike_liuchen:['male','shu',16,['zhanjue','cike_qinwang'],[]],
cike_liufeng:['male','shu',14,['xiansi','cike_suizhan'],[]],
cike_liuyong:['male','shu',12,['cike_zhuning','cike_fengxiang','cike_jitong'],[]],
//吴国
cike_sunquan:['male','wu',16,['rezhiheng','cike_jiuyuan'],[]],
cike_sunce:['male','wu',12,['cike_zhiba','jiang','reyingzi','yinghun'],[]],
cike_sunliang:['male','wu',20,['kuizhu','zhizheng','cike_lijun'],[]],
cike_sunxiu:['male','wu',14,['reyanzhu','rexingxue','cike_zhaofu'],[]],
cike_sunhao:['male','wu',18,['cike_canshi','chouhai','cike_guiming'],[]],
//特殊
cike_lingju:['female','qun',12,['jieyuan','cike_yinci'],[]],
cike_xugong:['male','wu',12,['biaozhao','yechou'],[]],
},
characterIntro:{
wuliuqi:'伍六七，动画《刺客伍六七》及其衍生作品中的主人公，失忆前是玄武国第一刺客，失忆后成了大保发廊的高级发型师，虽然经常接些乱七八糟的廉价任务，但是伍六七却是一个假贱贱、真温柔、热血的短裤男。<br>没有记忆，身世是个谜，在大保发廊做理发师，身体伪装成任何形态，为了寻找自己的过去，走上了刺客之路。',
meihuashisan:'梅花十三，动画《刺客伍六七》及其衍生作品中的女性角色，玄武国刺客，刺客排名37位，擅长使用双刀流和梅花镖，发辫上的短刃可以用于攻击。性格冷漠、好强，有着超越常人的果敢和强烈的使命感，内心其实很柔软。<br>小时候拜玄武国刺客青凤为师，长大后受命来到小鸡岛收集情报，意外认识了伍六七。起初，梅花十三因伍六七看到了自己脸，决定杀他灭口，但随着剧情的发展，二人的关系变得渐渐复杂起来。',
},
perfectPair:{
wuliuqi:['meihuashisan'],
},
skill:{
_cike_chooseskill_wuliuqi:{
forbid:['guozhan'],
unique:true,
trigger:{global:'gameStart',player:'enterGame'},
filter:function(event,player){
return player.name=='cike_meihuashisan'||player.name2=='cike_meihuashisan';
},
direct:true,
content:function(){
'step 0'
var list=['cike_biandao','cike_yingyue','cike_huti'];
event.videoId=lib.status.videoId++;
var func=function(skills,id){
var dialog=ui.create.dialog('forcebutton');
dialog.videoId=id;
dialog.add('选择保留一个梅花十三的专属技能');
for(var i=0;i<list.length;i++){
dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+get.translation(list[i])+'】</div><div>'+lib.translate[skills[i]+'_info']+'</div></div>');
}
dialog.addText(' <br> ');
}
if(player.isOnline()) player.send(func,list,event.videoId);
else if(player==game.me) func(list,event.videoId);
player.chooseControl(list).set('ai',function(){
if(game.players.length<4){
var list2=['cike_biandao','cike_huti'];
return list2.randomGet();
}
return list.randomGet();
});
'step 1'
game.broadcastAll('closeDialog',event.videoId);
var skills=['cike_biandao','cike_yingyue','cike_huti']
skills.remove(result.control);
player.removeSkill(skills);
player.popup(result.control);
game.log(player,'保留了技能','#g【'+get.translation(result.control)+'】');
},
},
_cike_chooseskill_meihuashishan:{
forbid:['guozhan'],
unique:true,
trigger:{global:'gameStart',player:'enterGame'},
filter:function(event,player){
return player.name=='cike_wuliuqi'||player.name2=='cike_wuliuqi';
},
direct:true,
content:function(){
'step 0'
var list=['cike_yirong','cike_qingsuo','cike_xuefa'];
event.videoId=lib.status.videoId++;
var func=function(skills,id){
var dialog=ui.create.dialog('forcebutton');
dialog.videoId=id;
dialog.add('选择保留一个伍六七的专属技能');
for(var i=0;i<list.length;i++){
dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+get.translation(list[i])+'】</div><div>'+lib.translate[skills[i]+'_info']+'</div></div>');
}
dialog.addText(' <br> ');
}
if(player.isOnline()) player.send(func,list,event.videoId);
else if(player==game.me) func(list,event.videoId);
player.chooseControl(list).set('ai',function(){
return 'cike_xuefa';
});
'step 1'
game.broadcastAll('closeDialog',event.videoId);
var skills=['cike_yirong','cike_qingsuo','cike_xuefa']
skills.remove(result.control);
player.removeSkill(skills);
player.popup(result.control);
game.log(player,'保留了技能','#g【'+get.translation(result.control)+'】');
},
},
_cike_gzchooseskill_wuliuqi:{
mode:['guozhan'],
unique:true,
trigger:{player:'showCharacterAfter'},
filter:function(event,player){
return event.toShow&&event.toShow.includes('cike_meihuashisan');
},
direct:true,
content:function(){
'step 0'
var list=['cike_biandao','cike_yingyue','cike_huti'];
event.videoId=lib.status.videoId++;
var func=function(skills,id){
var dialog=ui.create.dialog('forcebutton');
dialog.videoId=id;
dialog.add('选择保留一个梅花十三的专属技能');
for(var i=0;i<list.length;i++){
dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+get.translation(list[i])+'】</div><div>'+lib.translate[skills[i]+'_info']+'</div></div>');
}
dialog.addText(' <br> ');
}
if(player.isOnline()) player.send(func,list,event.videoId);
else if(player==game.me) func(list,event.videoId);
player.chooseControl(list).set('ai',function(){
if(game.players.length<4){
var list2=['cike_biandao','cike_huti'];
return list2.randomGet();
}
return list.randomGet();
});
'step 1'
game.broadcastAll('closeDialog',event.videoId);
var skills=['cike_biandao','cike_yingyue','cike_huti']
skills.remove(result.control);
player.removeSkill(skills);
player.popup(result.control);
game.log(player,'保留了技能','#g【'+get.translation(result.control)+'】');
},
},
_cike_gzchooseskill_meihuashishan:{
mode:['guozhan'],
unique:true,
trigger:{player:'showCharacterAfter'},
filter:function(event,player){
return event.toShow&&event.toShow.includes('cike_wuliuqi');
},
direct:true,
content:function(){
'step 0'
var list=['cike_yirong','cike_qingsuo','cike_xuefa'];
event.videoId=lib.status.videoId++;
var func=function(skills,id){
var dialog=ui.create.dialog('forcebutton');
dialog.videoId=id;
dialog.add('选择保留一个伍六七的专属技能');
for(var i=0;i<list.length;i++){
dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+get.translation(list[i])+'】</div><div>'+lib.translate[skills[i]+'_info']+'</div></div>');
}
dialog.addText(' <br> ');
}
if(player.isOnline()) player.send(func,list,event.videoId);
else if(player==game.me) func(list,event.videoId);
player.chooseControl(list).set('ai',function(){
return 'cike_xuefa';
});
'step 1'
game.broadcastAll('closeDialog',event.videoId);
var skills=['cike_yirong','cike_qingsuo','cike_xuefa']
skills.remove(result.control);
player.removeSkill(skills);
player.popup(result.control);
game.log(player,'保留了技能','#g【'+get.translation(result.control)+'】');
},
},
cike_shenghu:{
group:'cike_chooseskill',
derivation:'cike_chooseskill',
unique:true,
forced:true,
trigger:{global:'damageBegin4'},
filter:function(event,player){
return event.player!=player&&((get.mode()=='identity'&&get.attitude(player,event.player)>0)||(get.mode()!='identity'&&event.player.isFriendOf(player)));
},
logTarget:'player',
content:function(){
trigger.num--;
player.loseHp();
game.asyncDraw([player,trigger.player]);
},
},
cike_feijian:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return player.getEquips(1).length&&player.getHistory('sourceDamage',function(evt){
return evt.player!=player;
}).length;
},
forced:true,
logTarget:function(event,player){
return game.filterPlayer(function(current){
if(current==player) return false;
return player.getHistory('sourceDamage',function(evt){
return evt.player==current;
}).length;
}).sortBySeat();
},
content:function(){
'step 0'
player.discard(player.getEquips(1));
event.list=lib.skill.cike_feijian.logTarget(trigger,player);
'step 1'
var target=event.list.shift();
target.damage(get.rand(2,4));
if(event.list.length) event.redo();
},
},
cike_yirong:{
audio:'ext:活动武将/audio/skill:true',
trigger:{source:'damageBefore'},
filter:function(event,player){
return game.players.length>2;
},
usable:1,
forced:true,
content:function(){
var list=game.filterPlayer();
list.remove(player);
list.remove(trigger.player);
var target=list.randomGet();
player.logSkill('cike_yirong',target);
trigger.source=target;
},
},
cike_qingsuo:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd'},
filter:function(event,player){
return event.source!=player;
},
forced:true,
logTarget:'source',
content:function(){
player.turnOver();
trigger.source.turnOver();
},
},
cike_xuefa:{
audio:'ext:活动武将/audio/skill:true',
trigger:{source:'damageSource'},
filter:function(event,player){
return event.player!=player&&event.player.countCards('he');
},
forced:true,
content:function(){
trigger.player.discard(trigger.player.getCards('he').randomGets([1,2,3].randomGet()));
},
},
cike_lingshou:{
group:'cike_chooseskill',
derivation:'cike_chooseskill',
unique:true,
forced:true,
trigger:{global:'damageBegin4'},
filter:function(event,player){
return event.source&&event.player!=player&&((get.mode()=='identity'&&get.attitude(player,event.player)>0)||(get.mode()!='identity'&&event.player.isFriendOf(player)));
},
logTarget:'player',
content:function(){
trigger.num--;
player.loseHp();
trigger.source.chooseToDiscard('he',2,true);
},
},
cike_meibiao:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard'},
forced:true,
filter:function(event,player){
return get.suit(event.card)=='club';
},
content:function(){
trigger.directHit.addArray(game.filterPlayer(function(current){
return current!=player;
}));
if(get.tag(trigger.card,'damage')) trigger.baseDamage+=2;
},
},
cike_biandao:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return player.getHistory('sourceDamage').length==0;
},
logTarget:function(event,player){
return game.filterPlayer(function(current){
if(get.mode()=='guozhan') return current.isEnemyOf(player);
return get.attitude(player,current)<0;
});
},
forced:true,
content:function(){
'step 0'
event.list=game.filterPlayer(function(current){
if(get.mode()=='guozhan') return current.isEnemyOf(player);
return get.attitude(player,current)<0;
});
event.list.sort(lib.sort.seat);
'step 1'
var target=event.list.shift();
target.damage([1,2].randomGet());
if(event.list.length) event.redo();
},
},
cike_yingyue:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard2'},
filter:function(event,player){
if(player!=_status.currentPhase||!event.targets||event.targets.length!=1) return false;
return (event.card.name=='sha'||get.type(event.card)=='trick')&&game.hasPlayer(function(current){
return current!=player&&!event.targets.includes(current);
});
},
usable:1,
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('cike_yingyue'),'为'+get.translation(trigger.card)+'增加一个目标',function(card,player,target){
var evt=_status.event.getTrigger();
return !evt.targets.includes(target)&&lib.filter.filterTarget(evt.card,player,target);
}).set('ai',function(target){
var evt=_status.event.getTrigger(),eff=get.effect(target,evt.card,evt.player,evt.player);
return eff;
}).animate=false;
'step 1'
if(result.bool){
if(player!=game.me&&!player.isOnline()) game.delayx();
event.target=result.targets[0];
}
else event.finish();
'step 2'
player.logSkill('cike_yingyue',target);
trigger.targets.push(target);
game.log(target,'成为了',trigger.card,'的额外目标');
},
},
cike_huti:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageBegin4'},
filter:function(event,player){
return event.source&&event.source!=player&&!event.source.getHistory('sourceDamage').length;
},
forced:true,
usable:1,
content:function(){
trigger.cancel();
player.discard(player.getCards('he',function(card){
return lib.filter.cardDiscardable(card,player,'cike_huti');
}).randomGet());
},
},
cike_wenhui:{
mod:{
cardUsable:function(card,player){
if(!card.cards||!(game.online?player==_status.currentPhase:player.isPhaseUsing())) return;
for(var i of card.cards){
if(i.hasGaintag('cike_wenhui')) return Infinity;
}
},
},
trigger:{global:'loseAfter'},
forced:true,
locked:false,
filter:function(event,player){
var target=_status.currentPhase;
if(!target||player!=target||event.type!='discard'||player==event.player||event.getParent(2).player!=player) return false;
return event.cards2&&event.cards2.length>0;
},
content:function(){
player.addTempSkill('cike_wenhui_keep');
var cards=[],cardx=trigger.cards2;
for(var i=0;i<cardx.length;i++){
var card=get.cardPile2(function(card){
return !cards.includes(card)&&get.type2(card,false)==get.type2(cardx[i],false);
});
if(card) cards.push(card);
}
player.gain(cards,'gain2').gaintag.add('cike_wenhui');
player.draw(trigger.cards2.length-cards.length).gaintag=['cike_wenhui'];
},
subSkill:{
keep:{
charlotte:true,
onremove:function(player){
player.removeGaintag('cike_wenhui');
},
mod:{
ignoredHandcard:function(card,player){
if(card.hasGaintag('cike_wenhui')) return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&card.hasGaintag('cike_wenhui')) return false;
},
},
},
},
},
cike_qintao:{
shaRelated:true,
trigger:{player:'useCardAfter'},
filter:function(event,player){
return event.card.name=='sha'&&!player.getHistory('sourceDamage',function(evt){
return evt.card==event.card;
}).length&&event.targets.length==1;
},
check:function(event,player){
return player.hp>=2;
},
logTarget:'targets',
content:function(){
'step 0'
player.loseHp();
if(!trigger.targets[0].countCards('he')) result.index=0;
else trigger.targets[0].chooseControl().set('choiceList',['失去1点体力','令'+get.translation(player)+'弃置你两张牌']).set('ai',function(){
if(trigger.targets[0].hp>2&&trigger.targets[0].countCards('he')<2) return 0;
return 1;
});
'step 1'
if(result.index==0) trigger.targets[0].loseHp();
else player.discardPlayerCard(trigger.targets[0],'he',2,true);
},
},
cike_xianggong:{
trigger:{player:'damageEnd'},
filter:function(event,player){
return event.source&&event.source.countCards('he');
},
forced:true,
logTarget:'source',
content:function(){
'step 0'
var num=Math.min(player.getDamagedHp(),trigger.source.countCards('he'));
trigger.source.chooseToDiscard(num,'he',true);
'step 1'
trigger.source.draw();
},
},
//By 活动群群主--lonely patients
cike_zhibi: {
audio: 'ext:活动武将/audio/skill:true',
skillAnimation: true,
animationColor: 'wood',
limited: true,
mark: true,
init: function(player) {
player.storage.cike_zhibi = false;
},
enable: 'phaseUse',
filter: function(event, player) {
return !player.storage.cike_zhibi;
},
intro: {
content: 'limited'
},
filterTarget: function(card, player, target) {
if (get.mode() == 'guozhan') return target.isEnemyOf(player);
return get.attitude(player, target) < 0;
},
content:function(){
player.awakenSkill('cike_zhibi');
player.storage.cike_zhibi = true;
target.addTempSkill('cike_zhibi_block');
},
subSkill: {
block: {
init: function(player, skill) {
player.addSkillBlocker(skill);
},
onremove: function(player, skill) {
player.removeSkillBlocker(skill);
},
charlotte: true,
locked: true,
skillBlocker:function(skill,player){
return skill != 'cike_zhibi_block' && !lib.skill[skill].charlotte;
},
mark:true,
marktext: '锁',
intro: {
name: '知彼',
content: '本回合所有技能失效',
},
}
},
},
cike_hujia:{
audio: 'hujia',
trigger:{player:['chooseToRespondBegin','chooseToUseBegin']},
filter:function(event,player){
if(event.responded) return false;
if(event.cike_hujia) return false;
if(!event.filterCard||!event.filterCard({name:'shan'},player,event)) return false;
if(event.name=='chooseToRespond'&&!lib.filter.cardRespondable({name:'shan'},player,event)) return false;
var hs = _status.currentPhase.getCards('h');
if(hs.length<=0) return false;
return true;
},
forced: true,
content: function() {
"step 0"
trigger.cike_hujia = true;
var hs = _status.currentPhase.getCards('h');
if(hs.length>0){
event.card=hs.randomGet();
_status.currentPhase.discard(event.card);
}
else event.finish();
"step 1"
if (get.name(event.card)=='shan') {
trigger.untrigger();
trigger.set('responded', true);
trigger.result = { bool: true, card: { name: 'shan', isCard: true } }
}
},
},
cike_songwei:{
trigger:{global:'judgeEnd'},
forced:true,
audio:'songwei2',
filter:function(event,player){
var hs = event.player.getCards('he');
return event.player!=player && hs.length>0;
},
content:function(){
var hs = trigger.player.getCards('he');
if(hs.length>0){
var card = hs.randomGet();
player.line(trigger.player,'thunder');
player.gain(card,'gain2');
}
}
},
cike_xingshuai:{
audio:'xingshuai',
forced:true,
trigger:{player:'dyingAfter'},
content:function(){
event.list = game.filterPlayer(function(current) {
if (get.mode() == 'guozhan') return current.isEnemyOf(player);
return get.attitude(player, current) < 0;
});
if(event.list.length>0){
var target = event.list.randomGet();
target.loseHp();
}
}
},
cike_taiwang:{
forced:true,
usable:1,
trigger:{global:'damageEnd'},
filter:function(event,player){
return event.num >1;
},
content:function(){
player.gainMaxHp();
},
},
cike_jijiang:{
group:['cike_jijiang_refresh','cike_jijiang_clear','cike_jijiang_plus'],
audio:'jijiang1',
forced:true,
trigger:{player:['useCard','respond']},
filter:function(event,player){
return event.card.name=='sha';
},
init:function(player){
player.storage.nownum=0;
player.storage.nextnum=0;
},
content:function(){
'step 0'
player.draw();
'step 1'
event.card = result[0];
if(get.type(event.card)=='basic'){
player.storage.nextnum++;
}
},
mark:true,
intro:{
content:function(storage,player){
var str='';
if(player.storage.nownum!=0) str+='<span class=\"texiaotext\" style=\"color:#00FF00\">本次</span>出牌阶段可额外使用'+player.storage.nownum+'张【杀】。<br>';
if(player.storage.nextnum!=0) str+='<span class=\"texiaotext\" style=\"color:#FF8247\">下个</span>出牌阶段可额外使用'+player.storage.nextnum+'张【杀】。';
return str;
}
},
subSkill:{
refresh:{
trigger:{player:'phaseUseBefore'},
direct:true,
content:function(){
player.storage.nownum = player.storage.nextnum;
player.storage.nextnum = 0;
},
},
clear:{
trigger:{player:'phaseUseAfter'},
direct:true,
content:function(){
player.storage.nownum=0;
}
},
plus:{
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+player.storage.nownum;
}
},
}
},
},
cike_ruoyu:{
audio:'ruoyu',
forced:true,
trigger:{player:'phaseBefore'},
filter:function(event,player){
if(game.hasPlayer(function(current){
return current.hp<player.hp;
})) return false;
if(player.hp==player.maxHp) return false;
return true;
},
content:function(){
player.recover();
}
},
cike_qinwang: {
audio: 'qinwang1',
forced: true,
trigger: { global: 'useCard' },
filter: function(event, player) {
return event.card.name == 'juedou';
},
content: function() {
var card = get.cardPile2(function(card) {
return get.type(card, false) == 'basic';
});
if (card)
player.gain(card, 'gain2');
},
},
cike_suizhan: {
audio: 'ext:活动武将/audio/skill:true',
trigger: { player: 'phaseDrawBegin2' },
filter: function(event, player) {
return !event.numFixed;
},
forced: true,
content: function() {
trigger.num += player.getExpansions('xiansi').length;
},
},
cike_zhuning: {
audio:'zhuning',
trigger: { source: 'damageBegin1' },
frequent:true,
filter: function(event,player) {
return event.card && (event.card.name == 'sha') && event.notLink() && !player.getHistory('sourceDamage').length;
},
content: function() {
trigger.num++;
},
},
cike_fengxiang:{
audio:'fengxiang',
trigger:{player:'gainEnd'},
filter:function(event,player){
return event.source && event.source!=player && event.cards.length;
},
prompt:function(event,player){
return '封乡：是否将本次获得的'+get.translation(event.cards)+'当作【杀】使用？';
},
check:function(event,player){
var num = event.cards.length;
if(num==1) return true;
else if(num==2) return !player.hasHistory('useCard',function(evt){
return evt.card.name=='sha';
});
else return false;
},
content:function(){
'step 0'
player.chooseTarget('请选择使用【杀】的目标',function(card,player,target){
return player.canUse('sha',target,false);
}).set('ai',function(target){
return get.effect(target,{name:'sha'},player,player);
});
'step 1'
if(result.bool){
var target = result.targets[0];
var cards = trigger.cards;
var next = player.useCard({name:'sha'}, cards, target, false);
}
else event.finish();
}
},
cike_jitong:{
audio: 'ext:活动武将/audio/skill:true',
group:['cike_jitong_judge'],
direct:true,
trigger:{source:'damageSource'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.getParent().name=='sha'&&_status.currentPhase==player&&!player.hasSkill('cike_jitong_ban');
},
content:function(){
player.addTempSkill('cike_jitong_ban');
},
subSkill:{
ban:{
charlotte:true,
},
judge:{
forced:true,
trigger:{player:'phaseEnd'},
filter:function(event,player){
return !player.hasSkill('cike_jitong_ban') && !player.hasSkill('cike_jitong_pro');
},
content:function(){
player.addTempSkill('cike_jitong_pro',{player:'damageBegin4'});
},
},
pro:{
forced:true,
mark:true,
marktext:'护',
intro:{
content:'防止你受到的下次伤害',
},
trigger:{player:'damageBegin2'},
content:function(){
trigger.cancel();
player.removeSkill('cike_jitong_pro');
}
},
}
},
cike_jiuyuan:{
audio:'rejiuyuan',
forced:true,
usable:1,
trigger:{global:'useCardAfter'},
filter:function(event,player){
return event.player.isPhaseUsing()&&event.card.name=='tao'&&event.player!=player&&player.hp<player.maxHp;
},
content:function(){
player.recover();
},
},
cike_zhiba:{
forced:true,
audio:'zhiba2',
trigger:{global:['chooseToCompareAfter','compareMultipleAfter']},
filter:function(event,player){
return !get.owner(event.card1)||!get.owner(event.card2);
},
content:function(){
var cardsx = [];
if(!get.owner(trigger.card1)) cardsx.push(trigger.card1);
if(!get.owner(trigger.card2)) cardsx.push(trigger.card2);
if(cardsx.length>0) player.gain(cardsx,'gain2');
}
},
cike_lijun:{
audio:'nzry_lijun1',
trigger:{global:'loseAfter'},
filter:function(event,player){
return event.player!=player&& _status.currentPhase==player&&event.type=='discard';
},
forced:true,
content:function(){
player.gain(trigger.cards,'gain2');
},
},
cike_zhaofu: {
audio: 'zhaofu',
mark:true,
intro:{
onunmark: true,
content:'己方角色计算与其他角色距离为1。'
},
locked:true,
global:'cike_zhaofu_eff',
subSkill: {
eff: {
mod: {
globalFrom: function(from, to, distance) {
if (game.hasPlayer(function(current) {
return current.hasSkill('cike_zhaofu')&& (get.mode() == 'guozhan'? current.isFriendOf(from) : get.attitude(from, current) > 0);
})){
return -Infinity;
}
}
},
},
},
},
cike_canshi:{
audio:'canshi',
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed&&game.hasPlayer(function(current){
if(player.hasSkill('cike_guiming')&&current!=player) return true;
return current.isDamaged();
});
},
prompt:function(event,player){
var num=game.countPlayer(function(current){
if(player.hasSkill('cike_guiming')&&current!=player) return true;
return current.isDamaged();
});
return '残蚀：是否多摸'+get.cnNumber(num)+'张牌？';
},
content:function(){
var num=game.countPlayer(function(current){
if(player.hasSkill('cike_guiming')&&current!=player) return true;
return current.isDamaged();
});
trigger.num+=num;
player.addTempSkill('recanshi2');
},
},
cike_guiming:{
unique:true,
audio:'guiming',
trigger:{player:'cike_canshiBegin'},
forced:true,
content:function(){},
},
cike_yinci: {
trigger: { global: 'useCardToPlayered' },
filter: function(event, player) {
return event.target && event.card && (get.type(event.card) == 'trick' || get.type(event.card) == 'basic' && !['shan', 'tao', 'jiu', 'du'].includes(event.card.name))
&& event.target != event.player && get.distance(event.target, event.player) <= 1
&&(get.mode() == 'guozhan'? event.player.isFriendOf(player) : get.attitude(player, event.player) > 0);
},
forced: true,
content: function() {
trigger.directHit.add(trigger.target);
},
},
},
translate:{
cike_mitan:'<span style="font-family: yuanli">超时空密探特殊规则：</span>'+
'<br><span style="font-family: yuanli">游戏开始时须选择属于自己的三</span>'+
'<br><span style="font-family: yuanli">个专属技能中的一个保留</span>'+
'<br>'+
'超时空密探',
cike_wei:'魏国',
cike_shu:'蜀国',
cike_wu:'吴国',
cike_extra:'特殊',
cike_wuliuqi:'伍六七',
cike_meihuashisan:'梅花十三',
cike_chooseskill:'技能选择',
cike_chooseskill_info:'<li>游戏开始时，你选择保留一个对应特殊人物的专属技能，并失去其它技能。<br><li>伍六七：“易容”、“情锁”、“削发”。<br><li>梅花十三：“辫刀”、“映月”、“护体”。',
cike_shenghu:'圣护',
cike_lingshou_info:'锁定技，己方其他角色受到伤害时，令该伤害-1，你失去1点体力，伤害来源弃置两张牌。（玩家可以在“活动武将”扩展界面禁用此技能）',
//cike_shenghu_append:'<span style="font-family: yuanli">技能选择<br><li>游戏开始时，你选择保留一个伍六七的专属技能，并失去其它技能。<br><li>伍六七：“易容”、“情锁”、“削发”。</span>',
cike_feijian:'飞剪',
cike_feijian_info:'锁定技，出牌阶段结束时，若你的装备区中有武器牌且本回合对其他角色造成过伤害，则弃置该武器牌并对这些角色依次造成2~4点随机伤害。',
cike_yirong:'易容',
cike_yirong_info:'锁定技，你每回合首次造成伤害时，将伤害来源改为场上一名随机其他角色。',
cike_qingsuo:'情锁',
cike_qingsuo_info:'锁定技，其他角色对你造成伤害后，你与其将武将牌翻面。',
cike_xuefa:'削发',
cike_xuefa_info:'锁定技，当你对其他角色造成伤害后，你随机弃置其一至三张牌。',
cike_lingshou:'灵守',
cike_shenghu_info:'锁定技，己方其他角色受到伤害时，令该伤害-1，你失去1点体力，然后你与该己方角色各摸一张牌。（玩家可以在“活动武将”扩展界面禁用此技能）',
//cike_lingshou_append:'<span style="font-family: yuanli">技能选择<br><li>游戏开始时，你选择保留一个梅花十三的专属技能，并失去其它技能。<br><li>梅花十三：“辫刀”、“映月”、“护体”。</span>',
cike_meibiao:'梅镖',
cike_meibiao_info:'锁定技，你使用梅花牌无法被其他角色响应，且此牌造成的伤害+2。',
cike_biandao:'辫刀',
cike_biandao_info:'锁定技，你的出牌阶段结束时，若本回合未对其他角色造成过伤害，你对所有敌方角色依次造成1~2点随机伤害。',
cike_yingyue:'映月',
cike_yingyue_info:'你在出牌阶段使用首张指定单一目标的【杀】或普通锦囊牌时，可为此牌额外增加一个目标。',
cike_huti:'护体',
cike_huti_info:'锁定技，其他角色对你造成伤害时，若此伤害为该角色本回合首次造成的伤害，则你防止此伤害，然后随机弃置一张牌。',
_cike_chooseskill_wuliuqi:'技能选择',
_cike_chooseskill_meihuashishan:'技能选择',
_cike_gzchooseskill_wuliuqi:'技能选择',
_cike_gzchooseskill_meihuashishan:'技能选择',
cike_caomao:'密探·曹髦',
cike_wenhui:'文绘',
cike_wenhui_info:'当你于回合内弃置其他角色的牌后，你随机从牌堆中获得一张与此牌类别相同的牌（没有则改为摸一张牌）。你以此法获得的牌本回合不计入使用次数和手牌上限。',
cike_qintao:'亲讨',
cike_qintao_info:'若你使用的指定唯一目标的【杀】未造成伤害，结算完成后，你可以失去1点体力并令其选择一项：①失去1点体力；②令你弃置其两张牌。',
cike_xianggong:'乡公',
cike_xianggong_info:'锁定技，当你受到伤害后，伤害来源须弃置X张牌，然后摸一张牌。（X为你已损失的体力值）',
cike_mitan:'密探',
cike_zhibi:'知彼',
cike_zhibi_info:'限定技，出牌阶段，你可以选择一名敌方角色，该角色本回合所有技能失效。',
cike_caocao:'密探·曹操',
cike_hujia:'护驾',
cike_hujia_info:'锁定技，当你需要使用或打出一张【闪】时，当前回合角色随机弃置一张手牌，若此牌为【闪】，则视为你使用或打出了一张【闪】。',
cike_caopi:'密探·曹丕',
cike_songwei:'颂威',
cike_songwei_info:'锁定技，当其他角色的判定牌生效后，你随机获得其一张牌。',
cike_caorui:'密探·曹叡',
cike_xingshuai:'兴衰',
cike_xingshuai_info:'锁定技，当你脱离濒死状态时，你令随机一名敌方角色失去1点体力。',
cike_caosong:'密探·曹嵩',
cike_taiwang:'太王',
cike_taiwang_info:'锁定技，每回合限一次，当一名角色受到大于1点的伤害后，你加一点体力上限。',
cike_liubei:'密探·刘备',
cike_jijiang:'激将',
cike_jijiang_info:'锁定技，每当你使用或打出一张【杀】时，你摸一张牌，若此牌为基本牌，你下个出牌阶段使用【杀】的次数上限+1。',
cike_liushan:'密探·刘禅',
cike_ruoyu:'若愚',
cike_ruoyu_info:'锁定技，准备阶段，若你的体力值为全场最少，你回复1点体力。',
cike_liuchen:'密探·刘谌',
cike_qinwang:'勤王',
cike_qinwang_info:'锁定技，当一名角色使用【决斗】时，你从牌堆随机获得一张基本牌。',
cike_liufeng:'密探·刘封',
cike_suizhan:'随战',
cike_suizhan_info:'锁定技，摸牌阶段，你额外摸X张牌（X为你武将牌上“逆”的数量）。',
cike_liuyong:'密探·刘永',
cike_zhuning:'诛佞',
cike_zhuning_info:'当你使用【杀】造成伤害时，若这是你该回合造成的首次伤害，则此伤害+1。',
cike_fengxiang:'封乡',
cike_fengxiang_info:'每当你获得其他角色的牌后，你可以立即将这些牌当作无距离限制且不计次数的【杀】使用。',
cike_jitong:'继统',
cike_jitong_info:'锁定技，结束阶段，若你本回合内未使用【杀】造成过伤害，则防止你受到的下一次伤害。',
cike_sunquan:'密探·孙权',
cike_jiuyuan:'救援',
cike_jiuyuan_info:'锁定技，每回合限一次，当其他角色于其出牌阶段使用【桃】后，若你已受伤，则你回复1点体力。',
cike_sunce:'密探·孙策',
cike_zhiba:'制霸',
cike_zhiba_info:'锁定技，任意角色拼点结束后，你获得此次拼点的牌。',
cike_sunliang:'密探·孙亮',
cike_lijun:'立军',
cike_lijun_info:'锁定技，你的回合内，其他角色因弃置而失去牌后，你获得之。',
cike_sunxiu:'密探·孙休',
cike_zhaofu:'诏缚',
cike_zhaofu_info:'锁定技，己方角色计算与其他角色距离为1',
cike_sunhao:'密探·孙皓',
cike_canshi:'残蚀',
cike_canshi_info:'摸牌阶段开始时，你可以多摸X张牌（X为已受伤的角色数），若如此做，当你于此回合内使用【杀】或普通锦囊牌时，你弃置一张牌。',
cike_guiming:'归命',
cike_guiming_info:'锁定技，当你发动【残蚀】计算受伤角色数时，所有其他角色均视为已受伤。',
cike_lingju:'密探·灵雎',
cike_yinci:'隐刺',
cike_yinci_info:'锁定技，当一名友方角色使用牌指定与其距离为1的角色为目标时，目标角色不能响应此牌。',
cike_xugong:'密探·许贡',
},
};
for(var i in HD_chaoshikong.character){
if(HD_chaoshikong.translate[i]&&HD_chaoshikong.translate[i].indexOf('密探·')==0) HD_chaoshikong.translate[i+'_ab']=HD_chaoshikong.translate[i].slice(HD_chaoshikong.translate[i].indexOf('密探·')+3,HD_chaoshikong.translate[i].length);
HD_chaoshikong.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
}
return HD_chaoshikong;
});
lib.config.all.characters.push('HD_chaoshikong');
lib.config.all.sgscharacters.push('HD_chaoshikong');
if(!lib.config.characters.includes('HD_chaoshikong')) lib.config.characters.remove('HD_chaoshikong');
lib.translate['HD_chaoshikong_character_config']='<span style="font-family: xingkai">超时空密探</span>';
//欢乐三国杀
game.import('character',function(){
var MiNikill={
name:'MiNikill',
connect:true,
characterSort:{
MiNikill:{
MiNi_wei:['Mbaby_caohong','Mbaby_sb_caocao','Mbaby_guojia','Mbaby_sp_caoren','Mbaby_yinfuren','Mbaby_sp_jiaxu','Mbaby_wenqin','Mbaby_kuailiangkuaiyue','Mbaby_jsp_guanyu','Mbaby_wangji','Mbaby_chenqun','Mbaby_xiahoulingnv','Mbaby_wenyang','Mbaby_sp_pangde','Mbaby_caocao','Mbaby_caozhang','Mbaby_dufuren','Mbaby_simayi','Mbaby_yangxiu','Mbaby_zhangchangpu','Mbaby_zhonghui','Mbaby_sp_jiangwei','Mbaby_caoxiu','Mbaby_xunyou','Mbaby_lidian','Mbaby_zhongyao','Mbaby_caozhen','Mbaby_guohuanghou','Mbaby_xinxianying','Mbaby_xiahouyuan','Mbaby_xizhicai','Mbaby_caorui','Mbaby_xunyu','Mbaby_dengai','Mbaby_caozhi','Mbaby_sp_caiwenji','Mbaby_caoying','Mbaby_caopi','Mbaby_caoang','Mbaby_guojia','Mbaby_zhenji','Mbaby_caoren','Mbaby_wangyi','Mbaby_zhangchunhua','Mbaby_xiahoudun','Mbaby_xuzhu','Mbaby_zhangliao','Mbaby_guohuai','Mbaby_dianwei','Mbaby_zhanghe','Mbaby_yujin','Mbaby_xuhuang'],
MiNi_shu:['Mbaby_wolongfengchu','Mbaby_wangtao','Mbabysp_zhangfei','Mbaby_wangyue','Mbaby_xf_yiji','Mbaby_mizhu','Mbaby_mifuren','Mbaby_liuyong','Mbaby_ganfuren','Mbaby_sunqian','Mbaby_lvkai','Mbaby_zhoucang','Mbaby_huangyueying','Mbaby_yangwan','Mbaby_liuchen','Mbaby_liyan','Mbaby_chendao','Mbaby_yanyan','Mbaby_xiahouba','Mbaby_huaman','Mbaby_sp_zhugeliang','Mbaby_zhugeguo','Mbaby_jianyong','Mbaby_wangping','Mbaby_mayunlu','Mbaby_guansuo','Mbaby_xiahoushi','Mbaby_shamoke','Mbaby_wuxian','Mbaby_zhugezhan','Mbaby_qinmi','Mbaby_guanyinping','Mbaby_guanyu','Mbaby_zhugeliang','Mbaby_liubei','Mbaby_machao','Mbaby_zhurong','Mbaby_zhangfei','Mbaby_zhaoyun','Mbaby_huangzhong','Mbaby_weiyan','Mbaby_liaohua','Mbaby_pangtong','Mbaby_menghuo','Mbaby_jiangwei','Mbaby_liushan','Mbaby_fazheng','Mbaby_madai','Mbaby_guanping','Mbaby_liufeng','Mbaby_wuyi','Mbaby_zhangxingcai','Mbaby_dongyun','Mbaby_sp_sunshangxiang','Mbaby_xushu','Mbaby_masu'],
MiNi_wu:['Mbaby_sb_huanggai','Mbaby_xuezong','Mbaby_dc_sunru','Mbaby_dingfeng','Mbaby_panjun','Mbaby_sundeng','Mbaby_luji','Mbaby_zhoufang','Mbaby_zhangxuan','Mbaby_yanjun','Mbaby_zhuhuan','Mbaby_luyusheng','Mbaby_re_jsp_pangtong','Mbaby_sunhao','Mbabysp_daqiao','Mbaby_lukang','Mbaby_buzhi','Mbaby_xushi','Mbaby_zhugeke','Mbaby_zhoufei','Mbaby_zhangzhang','Mbaby_sunliang','Mbaby_ol_sunjian','Mbaby_zhuzhi','Mbaby_bulianshi','Mbaby_chengpu','Mbaby_daqiao','Mbaby_ganning','Mbaby_huanggai','Mbaby_lusu','Mbaby_luxun','Mbaby_lvmeng','Mbaby_sunce','Mbaby_sunluban','Mbaby_sunluyu','Mbaby_sunquan','Mbaby_sunshangxiang','Mbaby_taishici','Mbaby_wuguotai','Mbaby_xiaoqiao','Mbaby_xusheng','Mbaby_zhoutai','Mbaby_zhouyu','Mbaby_zhugejin','Mbaby_zumao','Mbabysp_xiaoqiao'],
MiNi_qun:['Mbaby_zhujun','Mbaby_gongsunyuan','Mbaby_sp_zhangliao','Mbaby_sp_ol_zhanghe','Mbaby_guotufengji','Mbaby_yanfuren','Mbaby_tangji','Mbaby_caojie','Mbaby_liangxing','Mbabysp_zhenji','Mbaby_caoxing','Mbaby_sp_menghuo','Mbaby_wangrong','Mbaby_hetaihou','Mbaby_sp_taishici','Mbaby_zhangji','Mbaby_dongbai','Mbaby_beimihu','Mbaby_chunyuqiong','Mbaby_zhangqiying','Mbaby_fuhuanghou','Mbaby_liuxie','Mbaby_quyi','Mbaby_jsp_huangyueying','Mbaby_sp_machao','Mbaby_lijue','Mbaby_panfeng','Mbaby_liuzhang','Mbaby_jiaxu','Mbaby_zhangbao','Mbaby_zhangliang','Mbaby_gaoshun','Mbaby_caifuren','Mbaby_xuyou','Mbaby_gongsunzan','Mbaby_pangde','Mbaby_jushou','Mbaby_liru','Mbaby_dongzhuo','Mbaby_zhangjiao','Mbaby_huatuo','Mbaby_lvbu','Mbaby_diaochan','Mbaby_sp_diaochan','Mbaby_huaxiong','Mbaby_yuji','Mbaby_yanwen','Mbaby_caiwenji','Mbaby_liubiao','Mbaby_yuanshao','Mbaby_yuanshu','Mbaby_chengong','Mbaby_zuoci'],
MiNi_shen:['Mbaby_shen_taishici','Mbaby_shen_diaochan','Mbaby_shen_daxiaoqiao','Mbaby_shen_zhenji','Mbaby_shen_guojia','Mbaby_shen_huatuo','Mbaby_shen_dianwei','Mbaby_shen_lvbu','Mbaby_shen_zhugeliang','Mbaby_shen_lvmeng','Mbaby_shen_zhouyu','Mbaby_shen_guanyu','Mbaby_shen_liubei','Mbaby_shen_caocao','Mbaby_shen_zhangliao','Mbaby_shen_sunquan','Mbaby_shen_simayi','Mbaby_shen_zhaoyun','Mbaby_shen_ganning','Mbaby_shen_luxun'],
MiNi_change:['Mbaby_re_nanhualaoxian','Mbaby_re_sunyi','Mbaby_zhaoxiang','Mbaby_xushao','Mbaby_shen_zhangjiao','Mbaby_baosanniang'],
MiNi_shengzhiyifa:['Mbaby_sunwukong','Mbaby_dalanmao','Mbaby_libai','Mbaby_change'],
MiNi_miaoKill:['Mmiao_caiwenji','Mmiao_diaochan','Mmiao_caifuren','Mmiao_zhangxingcai','Mmiao_zhurong','Mmiao_huangyueying','Mmiao_daqiao','Mmiao_wangyi','Mmiao_zhangchunhua','Mmiao_zhenji','Mmiao_sunshangxiang','Mmiao_xiaoqiao'],
},
},
character:{
//魏
Mbaby_caopi:['male','wei',3,['minixingshang','minifangzhu','songwei'],['zhu']],
Mbaby_caoang:['male','wei',4,['minikangkai'],[]],
Mbaby_zhenji:['female','wei',3,['miniluoshen','qingguo'],[]],
Mbaby_caoren:['male','wei',4,['minijushou','xinjiewei'],[]],
Mbaby_zhangchunhua:['female','wei',3,['jueqing','minishangshi'],[]],
Mbaby_xuzhu:['male','wei',4,['luoyi','minihuchi'],[]],
Mbaby_guohuai:['male','wei',4,['minijingce'],[]],
Mbaby_dianwei:['male','wei',4,['miniqiangxi'],[]],
Mbaby_zhanghe:['male','wei',4,['miniqiaobian'],[]],
Mbaby_yujin:['male','wei',4,['miniyizhong','decadezhenjun'],[]],
Mbaby_xuhuang:['male','wei',4,['duanliang','minijiezi'],[]],
Mbaby_xunyu:['male','wei',3,['miniquhu','minijieming'],['clan:颍川荀氏']],
Mbaby_dengai:['male','wei',4,['minituntian','zaoxian'],[]],
Mbaby_sp_caiwenji:['female','wei',3,['minichenqing','mozhi'],[]],
Mbaby_caozhi:['male','wei',3,['miniluoying','minijiushi'],[]],
Mbaby_caorui:['male','wei',3,['huituo','minimingjian','minixingshuai'],['zhu']],
Mbaby_xizhicai:['male','wei',3,['tiandu_xizhicai','xianfu','minichouce'],[]],
Mbaby_xiahouyuan:['male','wei',4,['minishensu','minishebian'],[]],
Mbaby_caoying:['female','wei',4,['minilingren','minifujian'],[]],
Mbaby_xinxianying:['female','wei',3,['minizhongjian','minicaishi'],[]],
Mbaby_xiahoudun:['male','wei',4,['reganglie','miniqingjian'],[]],
Mbaby_guohuanghou:['female','wei',3,['minijiaozhao','minidanxin'],[]],
Mbaby_caozhen:['male','wei',4,['minisidi'],[]],
Mbaby_zhongyao:['male','wei',3,['minihomo','minizuoding'],['clan:颍川钟氏']],
Mbaby_lidian:['male','wei',3,['minixunxun','wangxi'],[]],
Mbaby_zhangliao:['male','wei',4,['new_retuxi','minizhengbing'],[]],
Mbaby_xunyou:['male','wei',3,['miniqice','minizhiyu'],['clan:颍川荀氏']],
Mbaby_caoxiu:['male','wei',4,['qianju','miniqingxi'],[]],
Mbaby_sp_jiangwei:['male','wei',4,['minikunfen','minifengliang'],[]],
Mbaby_zhonghui:['male','wei',3,['miniquanji','paiyi'],['clan:颍川钟氏']],
Mbaby_zhangchangpu:['female','wei',3,['miniyanjiao','xingshen'],[]],
Mbaby_yangxiu:['male','wei',3,['danlao','minijilei'],[]],
Mbaby_simayi:['male','wei',3,['minifankui','miniguicai'],[]],
Mbaby_dufuren:['female','wei',3,['miniyise','minishunshi'],[]],
Mbaby_caozhang:['male','wei',4,['minijiangchi'],[]],
Mbaby_caocao:['male','wei',4,['minijianxiong','minihujia'],['zhu']],
Mbaby_sp_pangde:['male','wei',4,['minijuesi','miniyuma'],[]],
Mbaby_wenyang:['male','wei',5,['xinlvli','minichoujue'],[]],
Mbaby_xiahoulingnv:['female','wei',4,['fuping','miniweilie'],[]],
Mbaby_chenqun:['male','wei',3,['pindi','minifaen'],[]],
Mbaby_wangji:['male','wei',3,['miniqizhi','minijinqu'],[]],
Mbaby_jsp_guanyu:['male','wei',4,['minispwusheng','minidanji'],[]],
Mbaby_kuailiangkuaiyue:['male','wei',3,['nzry_jianxiang','minishenshi'],[]],
Mbaby_wenqin:['male','wei',4,['olguangao','minihuiqi'],[]],
Mbaby_sp_jiaxu:['male','wei',3,['zhenlue','minijianshu','miniyongdi'],[]],
Mbaby_yinfuren:['female','wei',3,['dcyingyu','miniyongbi'],[]],
Mbaby_sp_caoren:['male','wei',4,['miniweikui','minilizhan'],[]],
Mbaby_guojia:['male','wei',3,['tiandu','new_reyiji','minishenglun'],[]],
Mbaby_caohong:['male','wei',4,['miniyuanhu','twjuezhu'],[]],
Mbaby_sb_caocao:['male','wei',4,['minisbjianxiong','sbqingzheng','sbhujia'],['zhu','MXdelete']],
//蜀
Mbaby_guanyu:['male','shu',4,['minirewusheng','minituodao','jsrgguanjue'],[]],
Mbaby_zhugeliang:['male','shu',3,['miniguanxing','minikongcheng'],[]],
Mbaby_liubei:['male','shu',4,['minirerende','minijijiang'],['zhu']],
Mbaby_machao:['male','shu',4,['miniyuma','minitieji'],[]],
Mbaby_zhurong:['female','shu',4,['minijuxiang','minirelieren','changbiao'],[]],
Mbaby_zhangfei:['male','shu',4,['new_repaoxiao','minitishen'],[]],
Mbaby_zhaoyun:['male','shu',4,['ollongdan','miniyajiao'],[]],
Mbaby_huangzhong:['male','shu',4,['miniliegong'],[]],
Mbaby_weiyan:['male','shu',4,['minikuanggu','miniqimou'],[]],
Mbaby_liaohua:['male','shu',4,['minidangxian','minifuli'],[]],
Mbaby_pangtong:['male','shu',3,['minilianhuan','oldniepan'],[]],
Mbaby_menghuo:['male','shu',5,['minihuoshou','zaiqi'],[]],
Mbaby_jiangwei:['male','shu',4,['minitiaoxin','minizhiji'],[]],
Mbaby_liushan:['male','shu',4,['xiangle','minifangquan','miniruoyu'],['zhu']],
Mbaby_fazheng:['male','shu',3,['minienyuan','minixuanhuo'],[]],
Mbaby_madai:['male','shu',4,['mashu','miniqianxi'],[]],
Mbaby_guanping:['male','shu',4,['minilongyin','jiezhong'],[]],
Mbaby_liufeng:['male','shu',4,['minixiansi'],[]],
Mbaby_guanyinping:['female','shu',3,['xueji','minihuxiao','miniwuji'],[]],
Mbaby_dongyun:['male','shu',3,['minibingzheng','sheyan'],[]],
Mbaby_sp_sunshangxiang:['female','shu',3,['miniliangzhu','minifanxiang'],[]],
Mbaby_xushu:['male','shu',3,['xinwuyan','minijujian'],[]],
Mbaby_masu:['male','shu',3,['minisanyao','rezhiman'],[]],
Mbaby_qinmi:['male','shu',3,['jianzheng','minizhuandui','tianbian'],[]],
Mbaby_zhugezhan:['male','shu',3,['minizuilun','xinfu_fuyin'],[]],
Mbaby_zhangxingcai:['female','shu',3,['shenxian','miniqiangwu'],[]],
Mbaby_wuxian:['female','shu',3,['minifumian','minidaiyan'],['clan:陈留吴氏']],
Mbaby_shamoke:['male','shu',4,['minijili'],[]],
Mbaby_xiahoushi:['female','shu',3,['miniqiaoshi','miniyanyu'],[]],
Mbaby_guansuo:['male','shu',4,['minizhengnan','minixiefang'],[]],
Mbaby_mayunlu:['female','shu',4,['minifengpo','mashu'],[]],
Mbaby_wangping:['male','shu',4,['minifeijun','minibinglve'],[]],
Mbaby_jianyong:['male','shu',3,['miniqiaoshui','jyzongshi'],[]],
Mbaby_zhugeguo:['female','shu',3,['miniqirang','miniyuhua'],[]],
Mbaby_sp_zhugeliang:['male','shu',3,['minibazhen','minihuoji','olkanpo'],[]],
Mbaby_baosanniang:['female','shu',3,['decadewuniang','minixushen'],[]],
Mbaby_huaman:['female','shu',4,['hmmanyi','mansi','minisouying','minizhanyuan'],[]],
Mbaby_zhaoxiang:['female','shu',4,['refanghun','minifuhan'],[]],
Mbaby_xiahouba:['male','shu',4,['minibaobian'],[]],
Mbaby_yanyan:['male','shu',4,['minijuzhan'],[]],
Mbaby_chendao:['male','shu',4,['miniwanglie'],[]],
Mbaby_liyan:['male','shu',4,['miniduliang','fulin'],[]],
Mbaby_liuchen:['male','shu',4,['minizhanjue','miniqinwang'],['zhu']],
Mbaby_yangwan:['female','shu',3,['miniyouyan','zhuihuan'],[]],
Mbaby_huangyueying:['female','shu',3,['minirejizhi','minireqicai'],[]],
Mbaby_zhoucang:['male','shu',4,['minizhongyong','minidaopu'],[]],
Mbaby_lvkai:['male','shu',3,['minitunan','xinfu_bijing'],[]],
Mbaby_sunqian:['male','shu',3,['miniqianya','shuimeng'],[]],
Mbaby_ganfuren:['female','shu',3,['minishushen','minihuangsi'],[]],
Mbaby_liuyong:['male','shu',3,['zhuning','minifengxiang'],[]],
Mbaby_mizhu:['male','shu',3,['miniziyuan','minijugu'],[]],
Mbaby_mifuren:['female','shu',3,['miniguixiu','minicunsi'],[]],
Mbaby_wangyue:['female','shu',3,['minihuguan','minimingluan'],['MXdelete']],
Mbaby_xf_yiji:['male','shu',3,['minijijie','minijiyuan'],[]],
Mbabysp_zhangfei:['male','shu',4,['minisppaoxiao','minixvhe'],[]],
Mbaby_wolongfengchu:['male','shu',4,['miniyoulong','luanfeng'],['MXdelete']],
Mbaby_wangtao:['female','shu',3,['minihuguan','miniyaopei'],[]],
//吴
Mbaby_bulianshi:['female','wu',3,['minianxu','zhuiyi'],[]],
Mbaby_chengpu:['male','wu',4,['minilihuo','minichunlao'],[]],
Mbaby_daqiao:['female','wu',3,['miniguose','miniwanrong','liuli'],[]],
Mbaby_ganning:['male','wu',4,['miniqixi','minifenwei'],[]],
Mbaby_huanggai:['male','wu',4,['kurou','minizhaxiang'],[]],
Mbaby_lusu:['male','wu',3,['minihaoshi','dimeng'],[]],
Mbaby_luxun:['male','wu',3,['miniqianxun','lianying'],[]],
Mbaby_lvmeng:['male','wu',4,['minikeji','miniqinxue'],[]],
Mbaby_sunce:['male','wu',4,['minijiang','minihunzi','minizhiba'],['zhu']],
Mbaby_sunluban:['female','wu',3,['minizenhui','minijiaojin'],[]],
Mbaby_sunluyu:['female','wu',3,['minimeibu','remumu'],[]],
Mbaby_sunquan:['male','wu',4,['minirezhiheng','minijiuyuan'],['zhu']],
Mbaby_sunshangxiang:['female','wu',3,['minijieyin','xiaoji'],[]],
Mbaby_taishici:['male','wu',4,['minitianyi'],[]],
Mbaby_wuguotai:['female','wu',3,['miniganlu','minibuyi'],[]],
Mbaby_xiaoqiao:['female','wu',3,['minitianxiang','olhongyan'],[]],
Mbaby_xusheng:['male','wu',4,['minipojun'],[]],
Mbaby_zhoutai:['male','wu',4,['minirebuqu','fenji','miniqingchuang'],[]],
Mbaby_zhouyu:['male','wu',3,['reyingzi','minifanjian'],[]],
Mbaby_zhugejin:['male','wu',3,['huanshi','minihongyuan','mingzhe'],[]],
Mbaby_zumao:['male','wu',4,['miniyinbing','minijuedi'],[]],
Mbabysp_xiaoqiao:['female','wu',3,['minixingwu','miniluoyan','minihuimou'],[]],
Mbaby_zhuzhi:['male','wu',4,['minianguo'],[]],
Mbaby_ol_sunjian:['male','wu',4,['miniyinghun','miniwulie'],[]],
Mbaby_sunliang:['male','wu',3,['minikuizhu','minichezheng','minilijun'],['zhu']],
Mbaby_zhangzhang:['male','wu',3,['rezhijian','miniguzheng'],[]],
Mbaby_zhoufei:['female','wu',3,['miniliangyin','kongsheng'],[]],
Mbaby_zhugeke:['male','wu',3,['miniaocai','miniduwu'],[]],
Mbaby_xushi:['female','wu',3,['miniwengua','minifuzhu'],[]],
Mbaby_buzhi:['male','wu',3,['minihongde','minidingpan'],[]],
Mbaby_lukang:['male','wu',4,['drlt_qianjie','minijueyan','minihuairou'],[]],
Mbabysp_daqiao:['female','wu',3,['miniyanxiao','miniwanrong','minianxian'],[]],
Mbaby_sunhao:['male','wu',5,['minicanshi','minichouhai','guiming'],['zhu']],
Mbaby_re_jsp_pangtong:['male','wu',3,['miniguolun','minisongsang','xinfu_zhanji'],[]],
Mbaby_luyusheng:['female','wu',3,['minizhente','minizhiwei'],[]],
Mbaby_zhuhuan:['male','wu',4,['minifenli','minipingkou'],[]],
Mbaby_yanjun:['male','wu',3,['miniguanchao','minixunxian'],[]],
Mbaby_re_sunyi:['male','wu',5,['syjiqiao','minisyxiongyi'],[]],
Mbaby_zhangxuan:['female','wu',4,['tongli','minishezang'],[]],
Mbaby_zhoufang:['male','wu',3,['xinfu_duanfa','miniyoudi'],[]],
Mbaby_luji:['male','wu',3,['nzry_huaiju','nzry_yili','minizhenglun'],[]],
Mbaby_sundeng:['male','wu',4,['minikuangbi'],[]],
Mbaby_panjun:['male','wu',3,['miniguanwei','minigongqing'],[]],
Mbaby_dingfeng:['male','wu',4,['miniduanbing','minifenxun'],[]],
Mbaby_dc_sunru:['female','wu',3,['minixiecui','youxu'],['MXdelete']],
Mbaby_xuezong:['male','wu',3,['minifunan','minijiexun'],['MXdelete']],
Mbaby_sb_huanggai:['male','wu',4,['minisbkurou','minisbzhaxiang'],['MXdelete']],
//群
Mbaby_gaoshun:['male','qun',4,['minixianzhen','minijinjiu'],[]],
Mbaby_caifuren:['female','qun',3,['minireqieting','minirexianzhou'],[]],
Mbaby_lijue:['male','qun','5/6',['xinfu_langxi','xinfu_yisuan'],[]],
Mbaby_zuoci:['male','qun',3,['minishendao','minixinsheng'],['die_audio']],
Mbaby_xuyou:['male','qun',3,['minichenglve','nzry_shicai','nzry_cunmu'],[]],
Mbaby_gongsunzan:['male','qun',4,['miniqiaomeng','miniyicong'],[]],
Mbaby_pangde:['male','qun',4,['mashu','minijianchu'],[]],
Mbaby_jushou:['male','qun',3,['jianying','minishibei'],[]],
Mbaby_liru:['male','qun',3,['xinjuece','minimieji','xinfencheng'],[]],
Mbaby_dongzhuo:['male','qun',8,['minijiuchi','roulin','minibenghuai','baonue'],['zhu']],
Mbaby_zhangjiao:['male','qun',3,['minileiji','xinguidao','minihuangtian'],['zhu']],
Mbaby_huatuo:['male','qun',3,['minijijiu','minireqingnang'],[]],
Mbaby_lvbu:['male','qun',5,['wushuang'],['unseen']],
Mbaby_sp_diaochan:['female','qun',3,['minilihun','minibiyue'],[]],
Mbaby_huaxiong:['male','qun',6,['miniyaowu','miniyangwei'],[]],
Mbaby_yuji:['male','qun',4,['miniguhuo'],[]],
Mbaby_zhangliang:['male','qun',4,['minijijun','minifangtong'],[]],
Mbaby_zhangbao:['male','qun',4,['minizhoufu','miniyingbing'],[]],
Mbaby_yanwen:['male','qun',4,['minishuangxiong'],[]],
Mbaby_liubiao:['male','qun',3,['rezishou','rezongshi'],[]],
Mbaby_yuanshao:['male','qun',4,['miniluanji','minixueyi'],['zhu']],
Mbaby_yuanshu:['male','qun',4,['yongsi','miniweidi'],[]],
Mbaby_chengong:['male','qun',3,['minimingce','zhichi'],[]],
Mbaby_jiaxu:['male','qun',3,['miniwansha','luanwu','weimu'],[]],
Mbaby_liuzhang:['male','qun',4,['miniyinlang','minixiusheng','minihuaibi'],['zhu']],
Mbaby_panfeng:['male','qun',4,['minikuangfu'],[]],
Mbaby_sp_machao:['male','qun',4,['minizhuiji','minishichou'],[]],
Mbaby_diaochan:['female','qun',3,['minirelijian','minirebiyue'],[]],
Mbaby_jsp_huangyueying:['female','qun',3,['minijiqiao','minilinglong'],[]],
Mbaby_quyi:['male','qun',4,['minifuqi','minijiaozi'],[]],
Mbaby_liuxie:['male','qun',3,['minitianming','minimizhao'],[]],
Mbaby_caiwenji:['female','qun',3,['minibeige','duanchang'],[]],
Mbaby_fuhuanghou:['female','qun',3,['minizhuikong','miniqiuyuan'],[]],
Mbaby_zhangqiying:['female','qun',3,['xinfu_falu','minidianhua','minizhenyi'],[]],
Mbaby_chunyuqiong:['male','qun',4,['minicangchu','miniliangying','minishishou'],[]],
Mbaby_beimihu:['female','qun',4,['minizongkui','miniguju','bmcanshi'],[]],
Mbaby_dongbai:['female','qun',3,['minilianzhu','minixiahui'],[]],
Mbaby_zhangji:['male','qun',4,['minilveming','minitunjun'],[]],
Mbaby_sp_taishici:['male','qun',4,['minijixu'],[]],
Mbaby_xushao:['male','qun',4,['minipingjian'],[]],
Mbaby_hetaihou:['female','qun',3,['minizhendu','miniqiluan'],[]],
Mbaby_wangrong:['female','qun',3,['miniminsi','minijijing','zhuide'],[]],
Mbaby_sp_menghuo:['male','qun',4,['minimanwang'],[]],
Mbaby_caoxing:['male','qun',4,['miniliushi','zhanwan'],[]],
Mbabysp_zhenji:['female','qun',3,['minijinghong','minispluoshen'],['die_audio']],
Mbaby_liangxing:['male','qun',4,['minilulve','lxzhuixi'],[]],
Mbaby_caojie:['female','qun',3,['minishouxi','minihuimin'],[]],
Mbaby_tangji:['female','qun',3,['minikangge','minijielie'],[]],
Mbaby_libai:['male','qun',3,['minishixian'],['die_audio']],
Mbaby_guotufengji:['male','qun',3,['minijigong','minishifei'],[]],
Mbaby_re_nanhualaoxian:['male','qun',4,['minijinghe','minigongxiu'],[]],
Mbaby_yanfuren:['female','qun',3,['minichanni','mininifu'],[]],
Mbaby_gongsunyuan:['male','qun',4,['minihuaiyi'],[]],
Mbaby_sp_zhangliao:['male','qun',4,['minimubing','miniziqu','minidiaoling'],[]],
Mbaby_sp_ol_zhanghe:['male','qun',4,['minizhouxuan'],[]],
Mbaby_change:['female','shen','1/4',['minidaoyao','minibenyue'],[]],
Mbaby_zhujun:['male','qun',4,['minigongjian','kuimang','jsrgjuxiang'],['MXdelete']],
//神
Mbaby_shen_zhugeliang:['male','shen',3,['miniqixing','minikuangfeng','minidawu'],['shu']],
Mbaby_shen_lvbu:['male','shen',6,['miniwuqian','minishenfen'],['qun']],
Mbaby_shen_lvmeng:['male','shen',3,['minishelie','minigongxin'],['wu']],
Mbaby_shen_guanyu:['male','shen',5,['miniwushen','miniwuhun'],['shu']],
Mbaby_shen_zhouyu:['male','shen',4,['miniqinyin','miniyeyan'],['wu']],
Mbaby_shen_caocao:['male','shen',3,['miniguixin','feiying'],['wei']],
Mbaby_shen_liubei:['male','shen',6,['minilongnu','minijieying'],['shu']],
Mbaby_shen_zhangliao:['male','shen',4,['miniduorui','minizhiti'],['wei']],
Mbaby_shen_sunquan:['male','shen',4,['miniquantui','minishehu','minidingli'],['die_audio','wu']],
Mbaby_shen_simayi:['male','shen',3,['minirenjie','minijilve','lianpo'],['wei']],
Mbaby_shen_zhaoyun:['male','shen',2,['minijuejing','minilonghun'],['shu']],
Mbaby_shen_ganning:['male','shen','3/6',['minipoxi','drlt_jieying'],['wu']],
Mbaby_shen_dianwei:['male','shen',5,['minishenwei','minielai','minikuangxi'],['wei']],
Mbaby_shen_huatuo:['male','shen',1,['minijishi','minitaoxian','minishenzhen'],['qun']],
Mbaby_shen_guojia:['male','shen',3,['reshuishi','minigjtianyi','minihuishi'],['wei']],
Mbaby_shen_zhenji:['female','shen',3,['minishenfu','miniqixian','minifeifu'],['wei']],
Mbaby_shen_zhangjiao:['male','shen',3,['yizhao','minisijun','tianjie'],['qun']],
Mbaby_shen_daxiaoqiao:['female','shen',4,['minishuangshu','minipingting','miniyizheng'],['wu']],
Mbaby_shen_diaochan:['female','shen',3,['minimeihun','minihuoxin'],['die_audio','qun']],
Mbaby_sunwukong:['male','shen',4,['mini72bian','miniruyi','miniqitian'],['die_audio']],
Mbaby_dalanmao:['male','shen',4,['minizuzhou','minimoyu','minisanlian'],[]],
Mbaby_shen_taishici:['male','shen',4,['minidulie','minichongwei','minipowei'],[]],
//喵
Mmiao_caiwenji:['female','qun',3,['minimiaobeige','minimiaoduanchang','minidoumao'],['die_audio']],
Mmiao_diaochan:['female','qun',3,['minimiaolijian','minimiaobiyue','minidoumao'],['die_audio']],
Mmiao_caifuren:['female','qun',3,['minimiaoqieting','minimiaoxianzhou','minidoumao'],['die_audio']],
Mmiao_zhangxingcai:['female','shu',3,['minimiaoshenxian','minimiaoqiangwu','minidoumao'],['die_audio']],
Mmiao_zhurong:['female','shu',4,['minimiaojuxiang','minimiaolieren','minidoumao'],['die_audio']],
Mmiao_huangyueying:['female','shu',3,['minimiaojizhi','minimiaoqicai','minidoumao'],['die_audio']],
Mmiao_daqiao:['female','wu',3,['minimiaoguose','minimiaoliuli','minidoumao'],['die_audio']],
Mmiao_wangyi:['female','wei',4,['minimiaozhenlie','minimiaomiji','minidoumao'],['die_audio']],
Mmiao_zhangchunhua:['female','wei',3,['minimiaojueqing','minimiaoshangshi','minidoumao'],['die_audio']],
Mmiao_zhenji:['female','wei',3,['minimiaoluoshen','minimiaoqingguo','minidoumao'],['die_audio']],
Mmiao_sunshangxiang:['female','wu',3,['minimiaojieyin','minimiaoxiaoji','minidoumao'],['die_audio']],
Mmiao_xiaoqiao:['female','wu',3,['minimiaotianxiang','minimiaohongyan','minidoumao'],['die_audio']],
},
characterIntro:{
Mbaby_dalanmao:'任何邪恶终将绳之以法',
Mbaby_change:'嫦娥，中国古代神话中的人物，又名恒我、恒娥、姮娥、常娥、素娥，羿之妻，因偷吃了不死药而飞升至月宫。嫦娥的故事最早出现在商朝卦书 《归藏》。而嫦娥奔月的完整故事最早记载于西汉《淮南子·览冥训》。东汉时期，嫦娥与羿的夫妻关系确立，而嫦娥在进入月宫后变成了捣药的蟾蜍。南北朝以后，嫦娥的形象回归为女儿身。汉画像中，嫦娥人头蛇身，头梳高髻，身着宽袖长襦，身后长尾上饰有倒钩状细短羽毛。南北朝以后，嫦娥的形象被描绘成绝世美女。南朝陈后主陈叔宝曾把宠妃张丽华比作嫦娥。唐朝诗人白居易曾用嫦娥夸赞邻家少女不可多得的容貌。',
},
characterTitle:{
Mbaby_shen_zhangjiao:'承欢杀神张角之原画<br>载OL神张角之内核',
Mbaby_dalanmao:'任何邪恶终将绳之以法',
},
card:{
miniyanxiao_card:{
type:'delay',
judge:0,
effect:function(){},
ai:{
basic:{
order:1,
useful:1,
value:8,
},
result:{target:1},
},
},
minilingren_basic:{
image:'ext:活动武将/image/card/minilingren_basic.png',
fullimage:true,
},
minilingren_trick:{
image:'ext:活动武将/image/card/minilingren_trick.png',
fullimage:true,
},
minilingren_equip:{
image:'ext:活动武将/image/card/minilingren_equip.png',
fullimage:true,
},
miniruyi_jingubang:{
fullimage:true,
derivation:'Mbaby_sunwukong',
type:'equip',
subtype:'equip1',
ai:{basic:{equipValue:114514+1919810}},
skills:['miniruyi_jingubang','miniruyi_jingubang2'],
},
},
skill:{
//魏
minijingce:{
audio:'jingce',
trigger:{player:'phaseJieshuBegin'},
forced:true,
content:function(){
var list=[];
player.getHistory('useCard',function(evt){
list.add(get.suit(evt.card));
});
player.draw(Math.min(list.length+1,3));
},
},
minihuchi:{
audio:'ext:活动武将/audio/skill:true',
group:['minihuchi_miss','minihuchi_draw'],
trigger:{player:'phaseJieshuBegin'},
frequent:true,
prompt:'是否发动【虎痴】，将手牌摸至两张？',
filter:function(event,player){
return player.countCards('h')<2;
},
content:function(){
player.drawTo(2);
},
marktext:'痴',
intro:{name:'虎痴',name2:'痴',content:'mark'},
subSkill:{
miss:{
shaRelated:true,
audio:'minihuchi',
trigger:{player:'shaMiss'},
forced:true,
locked:false,
content:function(){
player.addMark('minihuchi',1);
},
},
draw:{
audio:'minihuchi',
enable:'phaseUse',
filter:function(event,player){
return player.countMark('minihuchi');
},
usable:1,
content:function(){
var num=player.countMark('minihuchi');
player.removeMark('minihuchi',num);
player.draw(num);
},
ai:{
order:1,
result:{player:1},
},
},
},
},
minixingshang:{
audio:'xingshang',
audioname2:{Mbaby_caoying:'lingren_xingshang'},
trigger:{global:'die'},
preHidden:true,
content:function(){
if(trigger.player.countCards('he')) player.gain(trigger.player.getCards('he'),trigger.player,'giveAuto');
player.draw();
},
},
minilingren:{
derivation:['minijianxiong','minixingshang'],
audio:'xinfu_lingren',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
if(event.getParent().triggeredTargets3.length>1) return false;
if(!player.isPhaseUsing()) return false;
if(!['basic','trick'].includes(get.type(event.card))) return false;
if(get.tag(event.card,'damage')) return true;
return false;
},
usable:1,
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minilingren'),'选择一名目标角色并猜测其手牌构成',function(card,player,target){
return _status.event.targets.includes(target);
}).set('ai',function(target){
return 2-get.attitude(_status.event.player,target);
}).set('targets',trigger.targets);
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minilingren',target);
var list=['minilingren_basic','minilingren_trick','minilingren_equip'];
player.chooseButton(['###'+'凌人：猜测'+get.translation(target)+'的手牌组成类型'+'###'+'请选出你认为'+get.translation(target)+'有的手牌类型',[list,'vcard']],[0,3]).set('ai',function(button){
var name=button.link[2];
switch(name){
case 'minilingren_basic':
var A=0.95;
if(!target.countCards('h',{type:['basic']})) A=0.05;
if(!target.countCards('h')) A=0;
return Math.random()<A?1:-1;
break;
case 'minilingren_trick':
var B=0.9;
if(!target.countCards('h',{type:['trick','delay']})) B=0.1;
if(!target.countCards('h')) B=0;
return Math.random()<B?1:-1;
break;
case 'minilingren_equip':
var C=0.75;
if(!target.countCards('h',{type:['equip']})) C=0.25;
if(!target.countCards('h')) C=0;
return Math.random()<C?1:-1;
break;
}
});
}
else{
player.storage.counttrigger.minilingren--;
event.finish();
}
'step 2'
event.num=0;
var list1=[],list2=[];
if(result.links) for(var name of result.links) list1.push(name[2].slice(12));
if(target.countCards('h')) for(var card of target.getCards('h')) if(!list2.includes(get.type2(card))) list2.push(get.type2(card));
for(var type of ['basic','trick','equip']) if((list1.includes(type)&&list2.includes(type))||(!list1.includes(type)&&!list2.includes(type))) event.num++;
if(!event.isMine()&&!event.isOnline()) game.delayx();
'step 3'
player.popup('猜对'+get.cnNumber(event.num)+'项');
game.log(player,'猜对了'+get.cnNumber(event.num)+'项');
if(event.num>0){
target.addTempSkill('minilingren_adddamage');
target.storage.minilingren={
card:trigger.card,
};
}
if(event.num>1) player.draw(2);
if(event.num>2){
player.addTempSkill('minijianxiong',{player:'phaseBegin'});
player.addTempSkill('minixingshang',{player:'phaseBegin'});
}
},
},
minilingren_adddamage:{
charlotte:true,
onremove:true,
trigger:{player:'damageBegin3'},
filter:function(event,player){
var info=player.storage.minilingren;
return event.card&&event.card==info.card;
},
silent:true,
popup:false,
forced:true,
content:function(){
trigger.num++;
},
},
minifujian:{
audio:'xinfu_fujian',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.countCards('h');
});
},
direct:true,
locked:true,
content:function(){
var target=game.filterPlayer(function(target){
return player!=target&&target.countCards('h');
}).randomGet();
var cards=target.getCards('h').randomGets(1);
player.logSkill('minifujian',target);
var content=[get.translation(target)+'的一张手牌',cards];
game.log(player,'观看了',target,'的一张手牌');
player.chooseControl('ok').set('dialog',content);
},
},
minijiezi:{
audio:'jiezi',
trigger:{global:['phaseDrawSkipped','phaseDrawCancelled']},
filter:function(event,player){
return event.player!=player&&player.countMark('minijiezi_silent')<2;
},
forced:true,
logTarget:'player',
content:function(){
player.addTempSkill('minijiezi_silent','roundStart');
player.addMark('minijiezi_silent',1,false);
player.draw(2);
},
subSkill:{silent:{onremove:true,charlotte:true}},
},
miniyizhong:{
audio:'yizhong',
trigger:{target:'shaBefore'},
filter:function(event,player){
if(!player.hasEmptySlot(2)) return false;
return event.card.name=='sha'&&get.suit(event.card)=='club';
},
forced:true,
content:function(){
trigger.cancel();
},
ai:{
effect:{
target:function(card,player,target){
if(player==target&&get.subtype(card)=='equip2'){
if(get.equipValue(card)<=5.5) return 0;
}
if(!target.hasEmptySlot(2)) return;
if(card.name=='sha'&&get.suit(card)=='club') return 'zerotarget';
},
},
},
},
miniqiangxi:{
group:'miniqiangxi_qiangxi',
audio:'qiangxi',
trigger:{global:'damageBegin2'},
filter:function(event,player){
return event.player!=player&&player.countCards('he',{type:'equip'})>0;
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt('miniqiangxi',trigger.player),'弃置一张装备牌并令此伤害+1',function(card){
return get.type(card)=='equip';
}).set('goon',get.damageEffect(trigger.player,player,player)>0).set('ai',function(card){
if(_status.event.goon) return 12-get.value(card);
return 0;
}).logSkill=['miniqiangxi',trigger.player];
'step 1'
if(result.bool) trigger.num++;
},
ai:{expose:0.25},
subSkill:{
qiangxi:{
audio:'qiangxi',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(function(target){
return player.inRange(target)&&!target.hasSkill('miniqiangxi_off');
});
},
filterTarget:function(card,player,target){
if(player==target) return false;
if(target.hasSkill('miniqiangxi_off')) return false;
return player.inRange(target);
},
prompt:'失去1点体力并摸一张牌，对一名其他角色造成1点伤害',
content:function(){
'step 0'
player.loseHp();
player.draw();
'step 1'
target.addTempSkill('miniqiangxi_off');
target.damage();
},
ai:{
order:8.5,
result:{
target:function(player,target){
//主公内奸矜持，其他身份当疯狗
var bool=(lib.translate[player.identity]=='主'||lib.translate[player.identity]=='内'||(get.mode()=='identity'&&player.hasSkill('olzaowang2')&&lib.translate[player.identity]!='nei'));
if(bool&&target.hp-player.hp>1) return 0;
if(!bool&&player.hp<2&&!player.countCards('hs',{name:['tao','jiu']})) return 0;
return -1;
},
},
},
},
off:{charlotte:true},
},
},
miniluoshen:{
audio:'luoshen',
audioname2:{Mmiao_zhenji:'minimiaoluoshen'},
trigger:{player:'phaseZhunbeiBegin'},
frequent:true,
content:function(){
'step 0'
var next=player.judge(function(card){
if(get.color(card)=='black') return 1;
return -1;
});
next.set('callback',function(){
if(get.position(card,true)=='o') player.gain(card,'gain2');
});
'step 1'
if(result.judge>0) player.chooseBool('是否再次发动【洛神】？').set('frequentSkill',event.name);
else event.finish();
'step 2'
if(result.bool) event.goto(0);
},
},
miniqiaobian:{
audio:'qiaobian',
trigger:{player:['phaseJudgeBefore','phaseDrawBefore','phaseUseBefore','phaseDiscardBefore','phaseJieshuBegin']},
filter:function(event,player){
if(event.name=='phaseJieshu') return player.getHistory('skipped').length>=3;
return player.countCards('h')>0;
},
direct:true,
preHidden:true,
content:function(){
'step 0'
if(trigger.name=='phaseJieshu'){
player.logSkill('miniqiaobian');
player.draw(2);
event.finish();
return;
}
var check,str='弃置一张手牌并跳过';
str+=['判定','摸牌','出牌','弃牌'][lib.skill.miniqiaobian.trigger.player.indexOf(event.triggername)];
str+='阶段';
if(trigger.name=='phaseDraw') str+='，然后可以获得至多两名角色各一张手牌';
if(trigger.name=='phaseUse') str+='，然后可以移动场上的一张牌';
switch(trigger.name){
case 'phaseJudge':
var list=player.getHistory('skipped'),num=list.length+1;
if(player.countCards('j')) check=true;
if(num>=3) check=false;
else{
if(player.countCards('h')>1){
if(!list.includes('phaseDraw')){
var check1=function(){
var i,num=0,num2=0,players=game.filterPlayer();
for(i=0;i<players.length;i++){
if(player!=players[i]&&players[i].countCards('h')){
var att=get.attitude(player,players[i]);
if(att<=0) num++;
if(att<0) num2++;
}
}
return num>=2&&num2>0;
};
if(check1()) num++;
}
if(!list.includes('phaseUse')){
var check;
if(!player.canMoveCard(true)) check=false;
else{
check=game.hasPlayer(function(current){
return get.attitude(player,current)>0&&current.countCards('j');
});
if(!check){
if(player.countCards('h')>player.hp+1) check=false;
else if(player.countCards('h',{name:['wuzhong']})) check=false;
else check=true;
}
}
if(check) num++;
}
if(num==2&&!list.includes('phaseDiscard')) num++;
if(num==3) check=true;
}
}
break;
case 'phaseDraw':
var i,num=0,num2=0,players=game.filterPlayer();
for(i=0;i<players.length;i++){
if(player!=players[i]&&players[i].countCards('h')){
var att=get.attitude(player,players[i]);
if(att<=0){
num++;
}
if(att<0){
num2++;
}
}
}
check=(num>=2&&num2>0);
break;
case 'phaseUse':
if(!player.canMoveCard(true)){
check=false;
}
else{
check=game.hasPlayer(function(current){
return get.attitude(player,current)>0&&current.countCards('j');
});
if(!check){
if(player.countCards('h')>player.hp+1){
check=false;
}
else if(player.countCards('h',{name:['wuzhong']})){
check=false;
}
else{
check=true;
}
}
}
break;
case 'phaseDiscard':
check=(player.needsToDiscard()||player.getHistory('skipped').length==2);
break;
}
player.chooseToDiscard(get.prompt('miniqiaobian'),str,lib.filter.cardDiscardable).set('ai',card=>{
if(!_status.event.check) return -1;
return 7-get.value(card);
}).set('check',check).set('logSkill','miniqiaobian').setHiddenSkill('miniqiaobian');
'step 1'
if(result.bool){
trigger.cancel();
game.log(player,'跳过了','#y'+['判定','摸牌','出牌','弃牌'][lib.skill.miniqiaobian.trigger.player.indexOf(event.triggername)]+'阶段');
if(trigger.name=='phaseUse'){
if(player.canMoveCard()) player.moveCard();
event.finish();
}
else if(trigger.name=='phaseDraw'){
player.chooseTarget([1,2],'获得至多两名角色各一张手牌',function(card,player,target){
return target!=player&&target.countCards('h');
}).set('ai',function(target){
return 1-get.attitude(_status.event.player,target);
});
}
else event.finish();
}
else event.finish();
'step 2'
if(result.bool){
result.targets.sortBySeat();
player.line(result.targets,'green');
event.targets=result.targets;
if(!event.targets.length) event.finish();
}
else event.finish();
'step 3'
player.gainMultiple(event.targets);
'step 4'
game.delay();
},
ai:{threaten:3},
},
minifangzhu:{
audio:'fangzhu',
trigger:{player:'damageEnd'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minifangzhu'),'令一名其他角色将武将牌翻面并摸一张牌',lib.filter.notMe).ai=function(target){
if(target.hasSkillTag('noturn')) return 0;
var player=_status.event.player,att=get.attitude(player,target);
if(att<0&&target.isTurnedOver()) return 0;
if(att>2&&target.isTurnedOver()) return att*10;
return -att;
}
'step 1'
if(result.bool){
player.logSkill('minifangzhu',result.targets[0]);
result.targets[0].turnOver();
result.targets[0].draw();
}
else event.finish();
},
ai:{
maixie:true,
maixie_hp:true,
effect:{
target:function(card,player,target){
if(get.tag(card,'damage')){
if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
if(target.hp<=1) return;
if(!target.hasFriend()) return;
var hastarget=false;
var turnfriend=false;
var players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(get.attitude(target,players[i])<0&&!players[i].isTurnedOver()){
hastarget=true;
}
if(get.attitude(target,players[i])>0&&players[i].isTurnedOver()){
hastarget=true;
turnfriend=true;
}
}
if(get.attitude(player,target)>0&&!hastarget) return;
if(turnfriend||target.hp==target.maxHp) return [0.5,1];
if(target.hp>1) return [1,0.5];
}
}
}
},
},
minikangkai:{
audio:'kaikang',
trigger:{global:'useCardToTargeted'},
filter:function(event,player){
return event.card.name=='sha'&&get.distance(player,event.target)<=1;
},
usable:2,
forced:true,
content:function(){
'step 0'
player.draw();
if(trigger.target!=player){
player.chooseCard('he','慷忾：是否交给'+get.translation(trigger.target)+'一张牌？').set('ai',function(card){
if(get.position(card)=='e') return -1;
if(card.name=='shan'&&get.attitude(player,trigger.target)>0) return 1;
if(get.type(card)=='equip'&&get.attitude(player,trigger.target)>0) return 0.5;
if(card.name=='du'&&get.attitude(player,trigger.target)<0) return 5;
return 0;
});
}
else event.finish();
'step 1'
if(result.bool){
trigger.target.gain(result.cards,player,'give');
game.delayx();
event.card=result.cards[0];
}
else event.finish();
'step 2'
if(trigger.target.getCards('h').includes(card)&&get.type(card)=='equip') trigger.target.chooseUseTarget(card);
},
},
minishangshi:{
audio:'shangshi',
audioname2:{Mmiao_zhangchunhua:'minimiaoshangshi'},
trigger:{
player:['loseAfter','changeHp','gainMaxHpAfter','loseMaxHpAfter','enterGame'],
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter','phaseBefore'],
},
filter:function(event,player){
return player.countCards('h')<Math.max(player.getDamagedHp(),1)&&(event.name!='phase'||game.phaseNumber==0);
},
prompt2:function(event,player){
return '将手牌摸至'+get.cnNumber(Math.max(player.getDamagedHp(),1))+'张';
},
frequent:true,
content:function(){
player.draw(Math.max(player.getDamagedHp(),1)-player.countCards('h'));
},
ai:{
noh:true,
skillTagFilter:function(player,tag){
if(tag=='noh'&&Math.max(player.getDamagedHp(),1)<player.countCards('h')) return false;
},
},
},
minijushou:{
audio:'xinjushou',
trigger:{player:'phaseJieshuBegin'},
content:function(){
'step 0'
player.turnOver();
player.draw(4);
'step 1'
player.chooseToUse(function(card){
if(!lib.filter.cardEnabled(card,_status.event.player,_status.event)) return false;
return get.type(card)=='equip';
},'据守：是否使用一张装备牌？');
},
ai:{
effect:{
target:function(card,player,target){
if(card.name=='guiyoujie') return [0,1];
},
},
},
},
minichenqing:{
audio:'chenqing',
trigger:{global:'dying'},
filter:function(event,player){
return event.player.hp<=0&&!player.getHistory('useSkill',function(evt){
return evt.skill=='minichenqing';
}).length;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minichenqing'),function(card,player,target){
return target!=_status.event.getTrigger().player;
}).set('ai',function(target){
var player=_status.event.player;
var trigger=_status.event.getTrigger();
if(get.attitude(player,trigger.player)>0){
var att1=get.attitude(target,player);
var att2=get.attitude(target,trigger.player);
var att3=get.attitude(player,target);
if(att3<0) return 0;
return att1/2+att2+att3;
}
else return 0;
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minichenqing',target);
target.draw(5);
}
else event.finish();
'step 2'
var target=event.target;
var tosave=trigger.player;
var att=get.attitude(target,tosave);
var hastao=target.countCards('h','tao');
target.chooseToDiscard(4,true,'he').set('ai',function(card){
var hastao=_status.event.hastao;
var att=_status.event.att;
if(!hastao&&att>0){
var suit=get.suit(card);
for(var i=0;i<ui.selected.cards.length;i++){
if(get.suit(ui.selected.cards[i])==suit){
return -4-get.value(card);
}
}
}
if(att<0&&ui.selected.cards.length==3){
var suit=get.suit(card);
for(var i=0;i<ui.selected.cards.length;i++){
if(get.suit(ui.selected.cards[i])==suit){
return -get.value(card);
}
}
return -10-get.value(card);
}
return -get.value(card);
}).set('hastao',hastao).set('att',att);
'step 3'
if(result.cards&&result.cards.length==4){
var suits=[];
for(var i=0;i<result.cards.length;i++) suits.add(get.suit(result.cards[i]));
if(suits.length==4&&game.checkMod({name:'tao',isCard:true},player,trigger.player,'unchanged','cardSavable',player)) target.useCard({name:'tao',isCard:true},trigger.player);
}
},
ai:{expose:0.2},
},
minituntian:{
audio:'tuntian',
subSkill:{
tuntian:{
audio:'tuntian',
inherit:'tuntian',
},
},
group:['minituntian_tuntian','tuntian_dist'],
trigger:{player:'phaseJieshuBegin'},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt('minituntian'),'弃置一张牌并进行〖屯田〗判定').set('ai',function(card){
var player=_status.event.player;
return 7-get.value(card,player);
});
'step 1'
if(result.bool){
player.logSkill('minituntian');
var next=game.createEvent('minituntian');
next.player=player;
next.setContent(lib.skill.tuntian.content);
}
},
},
minijiushi:{
audio:'jiushi1',
group:['minijiushi1','minijiushi2','minijiushi3','minijiushi_gain'],
subfrequent:['gain'],
subSkill:{
gain:{
audio:'jiushi1',
trigger:{player:'turnOverAfter'},
frequent:true,
prompt:'是否发动【酒诗】，获得牌堆中的一张锦囊牌？',
content:function(){
var card=get.cardPile2(function(card){
return get.type2(card)=='trick';
});
if(card) player.gain(card,'gain2','log');
},
},
},
},
minijiushi1:{
hiddenCard:function(player,name){
if(name=='jiu') return !player.isTurnedOver();
return false;
},
audio:'jiushi1',
enable:'chooseToUse',
filter:function(event,player){
if(player.classList.contains('turnedover')) return false;
return event.filterCard({name:'jiu',isCard:true},player,event);
},
content:function(){
if(_status.event.getParent(2).type=='dying'){
event.dying=player;
event.type='dying';
}
player.turnOver();
player.useCard({name:'jiu',isCard:true},player);
},
ai:{
order:5,
result:{
player:function(player){
if(_status.event.parent.name=='phaseUse'){
if(player.countCards('h','jiu')>0) return 0;
if(player.getEquip('zhuge')&&player.countCards('h','sha')>1) return 0;
if(!player.countCards('h','sha')) return 0;
var targets=[];
var target;
var players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(get.attitude(player,players[i])<0){
if(player.canUse('sha',players[i],true,true)){
targets.push(players[i]);
}
}
}
if(targets.length){
target=targets[0];
}
else{
return 0;
}
var num=get.effect(target,{name:'sha'},player,player);
for(var i=1;i<targets.length;i++){
var num2=get.effect(targets[i],{name:'sha'},player,player);
if(num2>num){
target=targets[i];
num=num2;
}
}
if(num<=0) return 0;
var e2=target.getEquips(2);
if(e2.length){
if(e2.some(i=>i.name=='tengjia')){
if(!player.countCards('h',{name:'sha',nature:'fire'})&&!player.getEquip('zhuque')) return 0;
}
if(e2.some(i=>i.name=='renwang')){
if(!player.countCards('h',{name:'sha',color:'red'})) return 0;
}
if(e2.some(i=>i.name=='baiyin')) return 0;
}
if(player.getEquip('guanshi')&&player.countCards('he')>2) return 1;
return target.countCards('h')>3?0:1;
}
if(player==_status.event.dying||player.isTurnedOver()) return 3;
}
},
effect:{
target:function(card,player,target){
if(card.name=='guiyoujie') return [0,0.5];
if(target.isTurnedOver()){
if(get.tag(card,'damage')){
if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
if(target.hp==1) return;
return [1,target.countCards('h')/2];
}
}
},
},
},
},
minijiushi2:{
trigger:{player:'damageBegin3'},
silent:true,
firstDo:true,
filter:function(event,player){
return player.classList.contains('turnedover');
},
content:function(){
trigger.minijiushi=true;
},
},
minijiushi3:{
audio:'jiushi1',
trigger:{player:'damageEnd'},
check:function(event,player){
return player.isTurnedOver();
},
filter:function(event,player){
return event.minijiushi;
},
prompt:'是否发动【酒诗】，将武将牌翻面？',
content:function(){
delete trigger.minijiushi;
player.turnOver();
},
},
miniluoying:{
mod:{
ignoredHandcard:function(card,player){
if(get.suit(card)=='club') return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&get.suit(card)=='club') return false;
},
},
audio:'luoying_discard',
group:['miniluoying_discard','miniluoying_judge'],
subfrequent:['judge'],
subSkill:{
discard:{
trigger:{global:'loseAfter'},
filter:function(event,player){
if(event.type!='discard') return false;
if(event.player==player) return false;
for(var i=0;i<event.cards2.length;i++){
if(get.suit(event.cards2[i],event.player)=='club'&&get.position(event.cards2[i],true)=='d') return true;
}
return false;
},
direct:true,
content:function(){
'step 0'
if(trigger.delay==false) game.delay();
'step 1'
var cards=[];
for(var i=0;i<trigger.cards2.length;i++){
if(get.suit(trigger.cards2[i],trigger.player)=='club'&&get.position(trigger.cards2[i],true)=='d'){
cards.push(trigger.cards2[i]);
}
}
if(cards.length){
player.chooseButton(['落英：选择要获得的牌',cards],[1,cards.length]).set('ai',function(button){
return get.value(button.link,_status.event.player,'raw');
});
}
else event.finish();
'step 2'
if(result.bool){
player.logSkill('miniluoying');
player.gain(result.links,'gain2');
}
},
},
judge:{
trigger:{global:'cardsDiscardAfter'},
filter:function(event,player){
var evt=event.getParent().relatedEvent;
if(!evt||evt.name!='judge') return;
if(evt.player==player) return false;
if(get.position(event.cards[0],true)!='d') return false;
return (get.suit(event.cards[0])=='club');
},
direct:true,
content:function(){
'step 0'
player.chooseButton(['落英：选择要获得的牌',trigger.cards],[1,trigger.cards.length]).set('ai',function(button){
return get.value(button.link,_status.event.player,'raw');
});
'step 1'
if(result.bool){
player.logSkill('miniluoying');
player.gain(result.links,'gain2');
}
},
},
},
},
miniquhu:{
enable:'phaseUse',
audio:'quhu',
filter:function(event,player){
return (!player.hasSkill('miniquhu0')&&player.countCards('he')>1)||!player.hasSkill('miniquhu1');
},
chooseButton:{
dialog:function(event,player){
var list=[
'弃置两张牌，对一名其他角色造成1点伤害',
'对自己造成1点伤害，然后摸一张牌',
];
var choiceList=ui.create.dialog('驱虎：请选择一项','forcebutton','hidden');
for(var i=0;i<list.length;i++){
var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
var bool=lib.skill.miniquhu.chooseButton.filter({link:i},player);
if(!bool) str+='<div style="opacity:0.5">';
str+=list[i];
if(!bool) str+='</div>';
str+='</div>';
var next=choiceList.add(str);
next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
next.firstChild.link=i;
//for(var j in lib.element.button){
//next[j]=lib.element.button[j];
//}
Object.setPrototypeOf(next,lib.element.Button.prototype);
choiceList.buttons.add(next.firstChild);
}
return choiceList;
},
filter:function(button,player){
return !player.hasSkill('miniquhu'+button.link);
},
check:function(button){
var player=_status.event.player;
if(game.hasPlayer([
function(target){
return get.damageEffect(target,player,player)>0;
},
function(target){
if(!target.hasSkill('jieming')&&!target.hasSkill('minijieming')) return 0;
return target.hp>2&&game.hasPlayer(function(current){
return get.attitude(current,player)>0&&current.countCards('h')<current.maxHp-1;
});
},
][button.link])) return 1+button.link;
return 0;
},
backup:function(links){
return {
audio:'quhu',
filterTarget:[
function(card,player,target){
return target!=player;
},
function(card,player,target){
return target==player;
},
][links[0]],
selectTarget:[1,-1][links[0]],
index:links[0],
filterCard:[
function(card,player){
return true;
},
function(card,player){
return false;
},
][links[0]],
selectCard:[2,-1][links[0]],
check:function(card){
return 7-get.value(card);
},
position:'he',
content:function(){
player.addTempSkill('miniquhu'+lib.skill[event.name].index)
target.damage('nocard');
if(target==player) player.draw();
},
ai:{
order:7,
result:{
target:function(player,target){
return get.damageEffect(target,player,player)*get.sgn(get.attitude(player,target));
},
},
},
}
},
prompt:function(links,player){
if(links[0]==0) return '弃置两张牌，对一名其他角色造成1点伤害';
return '对自己造成1点伤害，然后摸一张牌';
},
},
ai:{
order:7,
result:{player:1},
},
},
miniquhu0:{},
miniquhu1:{},
minijieming:{
audio:'jieming',
trigger:{player:'damageEnd'},
direct:true,
content:function(){
'step 0'
event.count=trigger.num;
'step 1'
event.count--;
player.chooseTarget(get.prompt2('minijieming')).set('ai',function(target){
var att=get.attitude(_status.event.player,target);
if(target.countCards('h')>=Math.min(target.maxHp,4)) return -1;
if(target.hasSkillTag('nogain')) att/=6;
if(att>0) return Math.min(4,target.maxHp)-target.countCards('h');
return -1;
});
'step 2'
if(result.bool){
var target=result.targets[0];
player.logSkill('minijieming',target);
target.drawTo(Math.min(4,target.maxHp));
}
else event.finish();
'step 3'
if(event.count>0&&player.hasSkill('minijieming')) event.goto(1);
},
ai:{
maixie:true,
maixie_hp:true,
effect:{
target:function(card,player,target,current){
if(get.tag(card,'damage')&&target.hp>1){
if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
var max=0;
var players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(get.attitude(target,players[i])>0){
max=Math.max(Math.min(4,players[i].hp)-players[i].countCards('h'),max);
}
}
switch(max){
case 0:return 2;
case 1:return 1.5;
case 2:return [1,2];
default:return [0,max];
}
}
if((card.name=='tao'||card.name=='caoyao')&&
target.hp>1&&target.countCards('h')<=target.hp) return [0,0];
},
},
},
},
minimingjian:{
audio:'mingjian',
enable:'phaseUse',
usable:1,
filterTarget:lib.filter.notMe,
filter:function(event,player){
return player.countCards('h');
},
filterCard:true,
selectCard:[1,Infinity],
check:()=>1,
discard:false,
lose:false,
delay:false,
content:function(){
target.gain(cards,player,'giveAuto');
target.addTempSkill('mingjian2',{player:'phaseAfter'});
target.storage.mingjian2++;
target.updateMarks('mingjian2');
},
ai:{
order:1,
result:{
target:function(player,target){
if(target.hasSkillTag('nogain')) return 0;
if(player.countCards('h')==player.countCards('h','du')) return -1;
if(target.hasJudge('lebu')) return 0;
if(get.attitude(player,target)>3){
var basis=get.threaten(target);
if(player==get.zhu(player)&&player.hp<=2&&player.countCards('h','shan')&&!game.hasPlayer(function(current){
return get.attitude(current,player)>3&&current.countCards('h','tao')>0;
})) return 0;
if(target.countCards('h')+player.countCards('h')>target.hp+2) return basis*0.8;
return basis;
}
return 0;
},
},
},
},
minixingshuai:{
unique:true,
audio:'xingshuai',
trigger:{player:'dying'},
zhuSkill:true,
filter:function(event,player){
if(player.hp>0) return false;
return game.hasPlayer(function(current){
return current!=player&&current.group=='wei';
});
},
mark:true,
limited:true,
skillAnimation:true,
animationColor:'thunder',
content:function(){
'step 0'
player.awakenSkill('minixingshuai');
var targets=game.filterPlayer();
targets.remove(player);
event.targets=targets;
event.damages=[];
'step 1'
if(event.targets.length){
var current=event.targets.shift();
if(current.group=='wei'){
current.chooseBool('是否令'+get.translation(player)+'回复1点体力？').set('ai',function(){
return get.attitude(_status.event.player,_status.event.target)>2;
}).set('target',player);
event.current=current;
}
else event.redo();
}
else event.goto(3);
'step 2'
if(result.bool){
event.damages.push(event.current);
event.current.line(player,'green');
game.log(event.current,'令',player,'回复1点体力');
player.recover();
}
if(event.targets.length) event.goto(1);
'step 3'
if(event.damages.length){
var next=game.createEvent('minixingshuai_next');
event.next.remove(next);
trigger.after.push(next);
next.targets=event.damages;
next.setContent(function(){
for(var target of targets){
target.damage();
target.draw();
}
});
}
},
},
tiandu_xizhicai:{
audio:2,
inherit:'tiandu',
},
minichouce:{
audio:'chouce',
trigger:{player:'damageEnd'},
content:function(){
'step 0'
event.num=trigger.num;
'step 1'
player.judge();
'step 2'
event.color=result.color;
if(event.color=='black'){
player.chooseTarget('获得一名角色区域内的一张牌',function(card,player,target){
return target.countCards('hej');
}).set('ai',function(target){
var player=_status.event.player;
var att=get.attitude(player,target);
if(att<0) att=-Math.sqrt(-att);
else att=Math.sqrt(att);
return att*lib.card.shunshou.ai.result.target(player,target);
});
}
else{
var next=player.chooseTarget('令一名角色摸一张牌');
if(player.storage.xianfu2&&player.storage.xianfu2.length){
next.set('prompt2','（若目标为'+get.translation(player.storage.xianfu2)+'则改为摸两张牌）');
}
next.set('ai',function(target){
var player=_status.event.player;
var att=get.attitude(player,target)/Math.sqrt(1+target.countCards('h'));
if(target.hasSkillTag('nogain')) att/=10;
if(player.storage.xianfu2&&player.storage.xianfu2.includes(target)) return att*2;
return att;
})
}
'step 3'
if(result.bool){
var target=result.targets[0];
player.line(target,'green');
if(event.color=='black') player.gainPlayerCard(target,'hej',true);
else{
if(player.storage.xianfu2&&player.storage.xianfu2.includes(target)){
if(!target.storage.xianfu_mark) target.storage.xianfu_mark=[];
target.storage.xianfu_mark.add(player);
target.storage.xianfu_mark.sortBySeat();
target.markSkill('xianfu_mark');
target.draw(2);
}
else target.draw();
}
}
'step 4'
if(--event.num>0) player.chooseBool(get.prompt2('minichouce'));
else event.finish();
'step 5'
if(result.bool){
player.logSkill('minichouce');
event.goto(1);
}
},
ai:{
maixie:true,
maixie_hp:true,
effect:{
target:function(card,player,target){
if(get.tag(card,'damage')){
if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
if(!target.hasFriend()) return;
if(target.hp>=4) return [1,get.tag(card,'damage')*1.5];
if(target.hp==3) return [1,get.tag(card,'damage')*1];
if(target.hp==2) return [1,get.tag(card,'damage')*0.5];
}
},
},
},
},
minishensu:{
audio:'shensu1',
audioname2:{Mbaby_xiahouba:'shensu1_xiahouba'},
trigger:{player:['phaseJudgeBefore','phaseUseBefore','phaseDiscardBefore']},
direct:true,
content:function(){
'step 0'
var check;
switch(trigger.name){
case 'phaseJudge':check=player.countCards('h')>2;break;
case 'phaseUse':check=player.needsToDiscard();break;
case 'phaseDiscard':check=player.needsToDiscard()||player.isTurnedOver()||(['shensu','minishensu'].some(skill=>player.hasSkill(skill))&&player.canMoveCard(true,true));break;
}
var str=['判定阶段和摸牌','出牌','弃牌'][lib.skill.minishensu.trigger.player.indexOf(event.triggername)];
player.chooseTarget(get.prompt('minishensu'),'跳过'+str+'阶段'+(trigger.name=='phaseDiscard'?'并翻面':'')+'，视为对一名其他角色使用一张雷【杀】',function(card,player,target){
if(player==target) return false;
return player.canUse({name:'sha',nature:'thunder',isCard:true},target,false);
}).set('check',check).set('ai',function(target){
if(!_status.event.check) return 0;
return get.effect(target,{name:'sha',nature:'thunder',isCard:true},_status.event.player);
}).setHiddenSkill('minishensu');
'step 1'
if(result.bool){
trigger.cancel();
if(trigger.name=='phaseJudge') player.skip('phaseDraw');
player.logSkill('minishensu',result.targets);
if(trigger.name=='phaseDiscard') player.turnOver();
player.useCard({name:'sha',nature:'thunder',isCard:true},result.targets[0],false).audio=false;
}
},
},
minishebian:{
audio:'shebian',
trigger:{player:'turnOverEnd'},
check:function(event,player){
return player.canMoveCard(true,true);
},
filter:function(event,player){
return player.canMoveCard(null,true);
},
content:function(){
'step 0'
player.moveCard().nojudge=true;
'step 1'
player.recover();
},
},
minizhongjian:{
enable:'phaseUse',
audio:'zhongjian',
usable:2,
filter:function(event,player){
if(player.getStat().skill.minizhongjian&&!player.hasSkill('recaishi2')) return false;
return game.hasPlayer(function(current){
return lib.skill.minizhongjian.filterTarget(null,player,current);
});
},
filterTarget:function(card,player,target){
if(!player.storage.rezhongjian2) return true;
return !player.storage.rezhongjian2[0].includes(target)&&!player.storage.rezhongjian2[1].includes(target);
},
content:function(){
'step 0'
player.chooseControl().set('prompt','忠鉴：为'+get.translation(target)+'选择获得一项效果').set('choiceList',[
'令其于下回合开始前首次造成伤害后弃置两张牌',
'令其于下回合开始前首次受到伤害后摸两张牌',
]).set('ai',function(){
return get.attitude(_status.event.player,_status.event.getParent().target)>0?1:0;
});
'step 1'
player.addSkill('rezhongjian2');
//var str=['造成伤害弃牌','受到伤害摸牌'][result.index];
//player.popup(str,['fire','wood'][result.index]);
//game.log(player,'选择了','#y'+str);
player.storage.rezhongjian2[result.index].push(target);
//player.markSkill('rezhongjian2');
},
ai:{
order:10,
expose:0,
result:{
player:function(player,target){
if(get.attitude(player,target)==0) return false;
var sgn=get.sgn((get.realAttitude||get.attitude)(player,target));
if(game.countPlayer(function(current){
return get.sgn((get.realAttitude||get.attitude)(player,current))==sgn;
})<=game.countPlayer(function(current){
return get.sgn((get.realAttitude||get.attitude)(player,current))!=sgn;
})) return 1;
return 0.9;
},
},
},
},
minicaishi:{
trigger:{player:'phaseDrawEnd'},
direct:true,
isSame:function(event){
var cards=[];
event.player.getHistory('gain',function(evt){
if(evt.getParent().name=='draw'&&evt.getParent('phaseDraw')==event) cards.addArray(evt.cards);
});
if(!cards.length) return 'nogain';
var list=[];
for(var i=0;i<cards.length;i++){
list.add(get.suit(cards[i]));
}
if(list.length==1) return true;
if(list.length==cards.length) return false;
return 'nogain';
},
filter:function(event,player){
var isSame=lib.skill.minicaishi.isSame(event);
if(isSame=='nogain') return false;
return (isSame&&!player.hasSkill('recaishi2'))||player.isDamaged();
},
content:function(){
'step 0'
if(lib.skill.minicaishi.isSame(trigger)){
if(!player.hasSkill('recaishi2')){
player.logSkill('minicaishi');
player.addTempSkill('recaishi2');
lib.skill.recaishi2.charlotte=true;
game.log(player,'修改了技能','#g【忠鉴】');
event.finish();
return;
}
}
else if(player.isDamaged()) player.chooseToDiscard(get.prompt('minicaishi'),'弃置一张牌并回复1点体力').set('ai',function(card){
return 7-get.value(card);
}).logSkill='minicaishi';
else event.finish();
'step 1'
if(result.bool) player.recover();
},
},
minijiaozhao:{
onChooseToUse:function(event){
if(!game.online&&!event.minijiaozhao_list){
var player=event.player;
if(!player.hasSkill('minijiaozhao2')) player.addTempSkill('minijiaozhao2',{player:'phaseUseAfter'});
var list=[];
var storage1=player.storage.minijiaozhao2[2];
var storage2=player.storage.minijiaozhao2[3];
for(var name of lib.inpile){
var card={name:name};
if(get.type(card)!='basic'&&get.type(card)!='trick') continue;
if(player.countMark('minidanxin')==1&&storage1.includes(get.type(card))) continue;
if(player.countMark('minidanxin')==2&&storage2.includes(name)) continue;
list.push([get.type(card),'',name]);
if(name=='sha'){
for(var nature of lib.inpile_nature) list.push([get.type(card),'',name,nature]);
}
}
var list2=list.filter(function(link){
return player.hasUseTarget({name:link[2],nature:link[3],storage:{minijiaozhao2:true}});
});
event.set('minijiaozhao_list',list2);
}
},
derivation:['minijiaozhao_1','minijiaozhao_2'],
audio:'jiaozhao',
enable:'phaseUse',
filter:function(event,player){
if(!event.minijiaozhao_list||!event.minijiaozhao_list.length) return false;
if(!player.countCards('h',function(card){
return lib.skill.minijiaozhao.filterCard(card,player);
})) return false;
var num=player.getStat('skill').minijiaozhao;
return !num||num<player.countMark('minidanxin')+1;
},
filterCard:function(card,player){
if(!player.hasSkill('minijiaozhao2')) return true;
return !player.storage.minijiaozhao2[0].includes(card);
},
discard:false,
lose:false,
delay:false,
check:function(card){
return 7-get.value(card);
},
content:function(){
'step 0'
player.showCards(cards,get.translation(player)+'发动了【矫诏】');
'step 1'
var list=event.getParent(2).minijiaozhao_list;
var str='###矫诏('+(player.countMark('minidanxin')+1)+'级)';
str+='###请选择并声明'+get.translation(cards[0])+'视为的牌';
if(player.countMark('minidanxin')<2) str+='，且此牌不能指定你为目标';
player.chooseButton([str,[list,'vcard']],true).set('ai',function(button){
var player=_status.event.player;
return player.getUseValue({name:button.link[2],nature:button.link[3]});
});
'step 2'
var card={name:result.links[0][2],nature:result.links[0][3]};
player.storage.minijiaozhao2[0].push(cards[0]);
player.storage.minijiaozhao2[1].push(card);
if(player.hasMark('minidanxin')) player.storage.minijiaozhao2[player.countMark('minidanxin')+1].push(get[player.countMark('minidanxin')<2?'type':'name'](card));
var chosen=result.links[0][2];
var nature=result.links[0][3];
player.addGaintag(cards,'minijiaozhao2');
player.showCards(game.createCard({
name:chosen,
nature:nature,
suit:cards[0].suit,
number:cards[0].number,
}),get.translation(player)+'声明了'+(get.translation(nature)||'')+get.translation(chosen));
},
ai:{
order:8,
result:{player:1},
},
},
minijiaozhao2:{
init:function(player){
if(!player.storage.minijiaozhao2) player.storage.minijiaozhao2=[[],[],[],[]];
},
onremove:function(player){
player.removeGaintag('minijiaozhao2');
delete player.storage.minijiaozhao2;
},
getOriginalCard:function(player,card){
var storage=player.storage.minijiaozhao2;
return storage[0][storage[1].indexOf(storage[1].filter(function(cardx){
return get.name(cardx)==get.name(card)&&(!get.nature(cardx)||get.nature(cardx)==get.nature(card));
})[0])];
},
mod:{
playerEnabled:function(card,player,target){
if(target!=player||player.countMark('minidanxin')>=2) return;
if(card.storage&&card.storage.minijiaozhao2) return false;
},
/*
cardname:function(card,player,name){
var storage=player.storage.minijiaozhao2;
if(storage[0].includes(card)) return get.name(storage[1][storage[0].indexOf(card)]);
},
cardnature:function(card,player){
var storage=player.storage.minijiaozhao2;
if(storage[0].includes(card)) return get.nature(storage[1][storage[0].indexOf(card)]);
},
*/
},
charlotte:true,
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h',function(card){
return player.storage.minijiaozhao2[0].includes(card);
});
},
chooseButton:{
dialog:function(event,player){
var storage=player.storage.minijiaozhao2;
var cards=player.getCards('h').slice(0).filter(function(card){
return storage[0].includes(card);
}),list=[];
for(var card of cards){
var cardx=storage[1][storage[0].indexOf(card)];
list.push([get.translation(get.type2(cardx)),'',get.name(cardx),get.nature(cardx)]);
}
return ui.create.dialog('矫诏',[list,'vcard'],'hidden');
},
filter:function(button,player){
return lib.filter.filterCard({name:button.link[2],nature:button.link[3]},player,_status.event.getParent());
},
check:function(button){
return _status.event.player.getUseValue({name:button.link[2],nature:button.link[3],storage:{minijiaozhao2:true}});
},
backup:function(links,player){
return {
audio:'jiaozhao',
filterCard:lib.skill.minijiaozhao2.getOriginalCard(player,{name:links[0][2],nature:links[0][3]}),
selectCard:-1,
popname:true,
viewAs:{name:links[0][2],nature:links[0][3],storage:{minijiaozhao2:true}},
}
},
prompt:function(links,player){
var name=links[0][2],nature=links[0][3];
var card=lib.skill.minijiaozhao2.getOriginalCard(player,{name:links[0][2],nature:links[0][3]});
return '将'+get.translation(card)+'当作'+(get.translation(nature)||'')+get.translation(name)+'使用';
}
},
ai:{
order:7.9,
result:{player:1},
},
subSkill:{backup:{}},
},
minidanxin:{
audio:'danxin',
trigger:{player:'damageEnd'},
frequent:true,
content:function(){
player.draw();
if(player.countMark('minidanxin')<2){
player.addMark('minidanxin',1,false);
game.log(player,'升级了技能','#g【矫诏】')
}
},
},
miniqingjian:{
audio:'qingjian',
trigger:{player:'gainAfter'},
filter:function(event,player){
if(event.parent.parent.name=='phaseDraw') return false;
return event.cards&&event.cards.length>0
},
usable:1,
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
position:'he',
filterCard:true,
selectCard:[1,Infinity],
filterTarget:lib.filter.notMe,
ai1:function(card){
if(get.attitude(_status.event.player,_status.currentPhase)<0&&_status.currentPhase.needsToDiscard()&&card.name!='du') return -1;
for(var i=0;i<ui.selected.cards.length;i++){
if(get.type(ui.selected.cards[i])==get.type(card)||(ui.selected.cards[i].name=='du'&&card.name!='du')) return -1;
};
if(card.name=='du') return 20;
return (_status.event.player.countCards('h')-_status.event.player.hp);
},
ai2:function(target){
if(get.attitude(_status.event.player,_status.currentPhase)<0) return -1;
var att=get.attitude(_status.event.player,target);
if(ui.selected.cards.length&&ui.selected.cards[0].name=='du'){
if(target.hasSkillTag('nodu')) return 0;
return 1-att;
}
if(target.countCards('h')>_status.event.player.countCards('h')) return 0;
return att-4;
},
prompt:get.prompt2('miniqingjian'),
});
'step 1'
if(result.bool){
var target=result.targets[0],cards=result.cards;
player.logSkill('miniqingjian',target);
target.gain(cards,player,'giveAuto');
player.draw();
}
else player.storage.counttrigger.miniqingjian--;
},
ai:{expose:0.3},
},
minisidi:{
audio:'sidi',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return player.countCards('he',function(card){
if(_status.connectMode) return true;
return get.type(card)!='basic';
})>0;
},
direct:true,
content:function(){
'step 0'
player.chooseCard('he',get.prompt('minisidi'),[1,2],'将至多两张非基本牌置于武将牌上作为“司”',function(card,player){
return get.type(card)!='basic';
}).set('ai',function(card){
if(get.position(card)=='e') return 5+player.hp-get.value(card);
return 7-get.value(card);
});
'step 1'
if(result.bool){
player.logSkill('minisidi');
player.addToExpansion(result.cards,'give',player).gaintag.add('minisidi');
}
},
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
group:'minisidi_push',
ai:{notemp:true},
subSkill:{
push:{
trigger:{global:'phaseUseBegin'},
direct:true,
filter:function(event,player){
return event.player!=player&&player.getExpansions('minisidi').length>0;
},
content:function(){
'step 0'
player.chooseButton([get.prompt('minisidi',trigger.player),player.getExpansions('minisidi')]).set('ai',function(button){
var player=_status.event.player;
var target=_status.event.getTrigger().player;
if(get.attitude(player,target)>-1) return 0;
var card=button.link;
var color=get.color(button.link,false);
var eff=target.countCards('h',function(card){
return get.color(card,target)==color&&target.hasValueTarget(card);
});
if(!target.countCards('h',function(card){
return get.color(card,target)==color&&get.name(card,target)=='sha'&&target.hasValueTarget(card);
})) eff+=1.5;
if(!target.countCards('h',function(card){
return get.color(card,target)==color&&get.type2(card,target)=='trick'&&target.hasValueTarget(card);
})) eff+=1.5;
return eff-1;
});
'step 1'
if(result.bool){
if(!trigger.residi) trigger.residi=[];
trigger.residi.push(player);
var card=result.links[0];
var target=trigger.player;
player.logSkill('minisidi',target);
player.loseToDiscardpile(card);
var color=get.color(card,false);
if(!target.storage.residi2) target.storage.residi2=[];
target.storage.residi2.add(color);
target.addTempSkill('residi2','phaseUseAfter');
target.markSkill('residi2');
player.addTempSkill('residi3','phaseUseAfter');
}
},
},
},
},
//homo（难视
minihomo:{
audio:'huomo',
enable:'chooseToUse',
hiddenCard:function(player,name){
return get.type(name)=='basic'&&player.hasCard(function(card){
return get.color(card)=='black'&&get.type(card)!='basic';
},'he');
},
filter:function(event,player){
for(var i of lib.inpile){
if(get.type(i)!='basic') continue;
if(event.filterCard({name:i},player,event)){
return player.hasCard(function(card){
return get.color(card)=='black'&&get.type(card)!='basic';
},'he');
}
}
return false;
},
usable:2,
chooseButton:{
dialog:function(event,player){
var list=[];
for(var i of lib.inpile){
if(get.type(i)!='basic') continue;
if(event.filterCard({name:i},player,event)){
list.push(['基本','',i]);
if(i=='sha') for(var j of lib.inpile_nature) list.push(['基本','',i,j]);
}
}
return ui.create.dialog('活墨',[list,'vcard'],'hidden');
},
check:function(button){
var player=_status.event.player;
var card={name:button.link[2],nature:button.link[3]};
if(game.hasPlayer(function(current){
return player.canUse(card,current)&&get.effect(current,card,player,player)>0;
})){
switch(button.link[2]){
case 'tao':return 5;
case 'jiu':return 3.01;
case 'shan':return 3.01;
case 'sha':
if(button.link[3]=='fire') return 2.95;
else if(button.link[3]=='fire') return 2.92;
else return 2.9;
}
}
return 0;
},
backup:function(links,player){
return {
check:function(card){
return 1/Math.max(0.1,get.value(card));
},
filterCard:function(card){
return get.type(card)!='basic'&&get.color(card)=='black';
},
viewAs:{
name:links[0][2],
nature:links[0][3],
suit:'none',
number:null,
isCard:true,
},
position:'he',
popname:true,
ignoreMod:true,
precontent:function(){
'step 0'
player.logSkill('minihomo');
var card=event.result.cards[0];
event.card=card;
player.$throw(card,1000);
game.log(player,'将',card,'置于牌堆顶');
event.result.card={name:event.result.card.name,nature:event.result.card.nature};
event.result.cards=[];
player.lose(card,ui.cardPile,'visible','insert');
'step 1'
game.delay();
},
}
},
prompt:function(links,player){
return '将一张黑色非基本牌置于牌堆顶并视为使用一张'+get.translation(links[0][3]||'')+get.translation(links[0][2]);
}
},
ai:{
order:function(){
var player=_status.event.player;
var event=_status.event;
if(event.filterCard({name:'jiu'},player,event)&&get.effect(player,{name:'jiu'})>0){
return 3.1;
}
return 2.9;
},
respondSha:true,
fireAttack:true,
respondShan:true,
skillTagFilter:function(player,tag,arg){
if(player.hasCard(function(card){
return get.color(card)=='black'&&get.type(card)!='basic';
},'he')){
if(tag=='respondSha'||tag=='respondShan'){
if(arg!='use') return false;
}
return true;
}
else return false;
},
result:{player:1},
},
},
minizuoding:{
audio:'zuoding',
trigger:{global:'useCardToPlayered'},
filter:function(event,player){
if(event.getParent().triggeredTargets3.length>1) return false;
return get.suit(event.card)=='spade'&&_status.currentPhase==event.player&&event.targets&&event.targets.length&&game.countPlayer2(function(current){
return current.getHistory('damage').length>0;
})==0;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minizuoding'),'令一名目标角色摸一张牌',function(card,player,target){
return _status.event.targets.includes(target);
}).set('ai',function(target){
return get.attitude(_status.event.player,target);
}).set('targets',trigger.targets);
'step 1'
if(result.bool){
player.logSkill('minizuoding',result.targets);
result.targets[0].draw();
if(result.targets[0]!=player) player.addExpose(0.2);
}
},
},
minixunxun:{
audio:'xunxun',
inherit:'xunxun',
group:'minixunxun_biyue',
subSkill:{
biyue:{
audio:'xunxun',
trigger:{player:'phaseJieshuBegin'},
forced:true,
locked:false,
content:function(){
var cards=get.bottomCards(2);
if(cards.length){
player.gain(cards);
player.$draw(cards.length);
game.log(player,'从牌堆底获得了'+get.cnNumber(cards.length)+'张牌');
}
},
},
},
},
minizhengbing:{
mod:{
ignoredHandcard:function(card,player){
if(card.hasGaintag('minizhengbing')) return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&card.hasGaintag('minizhengbing')) return false;
},
},
group:'minizhengbing_mark',
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h',function(card){
return card.hasGaintag('minizhengbing')&&player.canRecast(card);
});
},
filterCard:function(card,player){
return card.hasGaintag('minizhengbing')&&player.canRecast(card);
},
discard:false,
lose:false,
delay:false,
content:function(){
'step 0'
player.recast(cards);
'step 1'
if(!player.countCards('h',function(card){
return card.hasGaintag('minizhengbing');
})) player.draw();
},
ai:{
order:10,
result:{player:1},
},
subSkill:{
mark:{
charlotte:true,
trigger:{player:'gainBegin'},
filter:function(event,player){
return lib.translate[event.getParent(3).name]=='突袭';
},
direct:true,
firstDo:true,
content:function(){
trigger.gaintag.add('minizhengbing');
},
},
},
},
miniqice:{
audio:'qice_backup',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('hs');
},
usable:1,
chooseButton:{
dialog:function(player){
var list=[];
for(var i=0;i<lib.inpile.length;i++){
if(get.type(lib.inpile[i])=='trick') list.push(['锦囊','',lib.inpile[i]]);
}
return ui.create.dialog(get.translation('miniqice'),[list,'vcard']);
},
filter:function(button,player){
return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
},
check:function(button){
var player=_status.event.player;
return player.getUseValue({name:button.link[2]});
},
backup:function(links,player){
return {
audio:'qice_backup',
filterCard:true,
selectCard:[1,Infinity],
check:function(card){
if(ui.selected.cards.length) return -1;
return 7-get.value(card);
},
complexCard:true,
position:'hs',
popname:true,
viewAs:{name:links[0][2]},
}
},
prompt:function(links,player){
return '将任意张手牌当作'+get.translation(links[0][2])+'使用';
}
},
ai:{
order:1,
result:{player:1},
},
},
minizhiyu:{
audio:'zhiyu',
trigger:{player:'damageEnd'},
preHidden:true,
frequent:true,
content:function(){
'step 0'
player.draw(2);
'step 1'
var att=undefined;
if(trigger.source&&trigger.source.countCards('h')>player.countCards('h')-1) att=get.attitude(player,trigger.source);
if(!player.countCards('h')) event.finish();
else player.chooseToDiscard('he',true).set('ai',function(card){
var list=[0,0];
for(var i of player.getCards('h')){
list[get.color(card)=='red'?0:1]++;
}
if(typeof att=='number'){
if(att<0){
if(get.color(card)=='red'&&list[0]==1) return 10-get.value(card);
if(get.color(card)=='black'&&list[1]==1) return 10-get.value(card);
}
}
return -get.value(card);
});
'step 2'
if(player.countCards('h')) player.showHandcards();
if(!trigger.source) event.finish();
'step 3'
var stop=false;
var cards=player.getCards('h');
if(cards.length){
var color=get.color(cards[0],player);
for(var i=1;i<cards.length;i++){
if(get.color(cards[i],player)!=color){
stop=true;
break;
}
}
}
if(trigger.source.countCards('h')<=player.countCards('h')) stop=true;
if(stop) event.finish();
else player.chooseBool('智愚：是否令'+get.translation(trigger.source)+'将手牌数弃置至'+get.cnNumber(player.countCards('h'))+'张')
'step 4'
if(result.bool){
player.line(trigger.source);
trigger.source.chooseToDiscard(trigger.source.countCards('h')-player.countCards('h'),true);
}
},
ai:{
maixie_defend:true,
threaten:0.7,
},
},
miniqingxi:{
audio:'qingxi',
inherit:'reqingxi',
},
_miniqingxi_draw:{
charlotte:true,
trigger:{global:'judgeAfter'},
filter:function(event,player){
return event.result.color=='black'&&event.getParent().name=='miniqingxi'&&event.getParent().player==player;
},
lastDo:true,
direct:true,
content:function(){
player.draw(2);
},
},
minikunfen:{
audio:'kunfen',
trigger:{player:'phaseJieshuBegin'},
check:function(event,player){
if(player.hp>3) return true;
if(player.hp==3&&player.countCards('h')<3) return true;
if(player.hp==2&&player.countCards('h')==0) return true;
return false;
},
content:function(){
'step 0'
player.loseHp();
'step 1'
player.draw(2);
'step 2'
player.chooseUseTarget('huogong',false);
},
},
minifengliang:{
unique:true,
derivation:'minitiaoxin',
audio:'fengliang',
trigger:{player:'dying'},
juexingji:true,
forced:true,
skillAnimation:true,
animationColor:'thunder',
content:function(){
'step 0'
player.awakenSkill('minifengliang');
'step 1'
player.loseMaxHp();
'step 2'
if(player.hp<3) player.recover(3-player.hp);
'step 3'
player.addSkillLog('minitiaoxin');
},
},
//钟会
miniquanji:{
group:'miniquanji_phase',
audio:'quanji',
trigger:{player:'damageEnd'},
filter:function(event,player){
return event.num>0;
},
frequent:true,
prompt2:'摸两张牌',
content:function(){
'step 0'
event.count=trigger.num;
'step 1'
event.count--;
player.draw(2);
'step 2'
if(event.count>0&&player.hasSkill('miniquanji')) player.chooseBool(get.prompt('miniquanji'),'摸两张牌').set('frequentSkill','miniquanji');
else event.finish();
'step 3'
if(result.bool){
player.logSkill('miniquanji');
event.goto(1);
}
},
onremove:function(player,skill){
var cards=player.getExpansions('quanji');
if(cards.length) player.loseToDiscardpile(cards);
},
mod:{
maxHandcard:function(player,num){
return num+Math.min(5,player.getExpansions('quanji').length);
},
},
subSkill:{
phase:{
audio:'quanji',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h');
},
prompt:'将任意张手牌置于武将牌上',
selectCard:[1,Infinity],
filterCard:true,
delay:0,
discard:false,
lose:false,
delay:false,
check:function(card){
var player=_status.event.player,num=player.needsToDiscard();
if(!player.getExpansions('quanji').length||num-ui.selected.cards.length-Math.min(5,player.getExpansions('quanji').length+ui.selected.cards.length)>0) return 5-get.value(card);
return -1;
},
content:function(){
player.addToExpansion(cards,player,'give').gaintag.add('quanji');
},
ai:{
order:5,
result:{player:1},
},
},
},
},
//杨修
minijilei:{
audio:'jilei',
inherit:'jilei',
content:function(){
'step 0'
player.chooseControl('basic','trick','equip','cancel2',function(){
var source=_status.event.source;
if(get.attitude(_status.event.player,source)>0) return 'cancel2';
var list=['basic','trick','equip'].filter(function(name){
return (!source.storage.jilei2||!source.storage.jilei2.includes(name));
});
if(!list.length) return 'cancel2';
if(list.includes('trick')&&source.countCards('h',function(card){
return get.type(card,source)=='trick'&&source.hasValueTarget(card);
})>1) return 'trick';
return list[0];
}).set('prompt',get.prompt2('minijilei',trigger.source)).set('source',trigger.source);
'step 1'
if(result.control!='cancel2'){
player.logSkill('minijilei',trigger.source);
player.popup(get.translation(result.control)+'牌');
var card=get.cardPile2(function(card){
return get.type2(card)==result.control;
});
if(card) player.gain(card,'gain2');
trigger.source.addTempSkill('jilei2',{player:'phaseBegin'});
trigger.source.storage.jilei2.add(result.control);
trigger.source.updateMarks('jilei2');
}
},
},
//张昌蒲
miniyanjiao:{
audio:'yanjiao',
enable:'phaseUse',
filterTarget:true,
usable:1,
content:function(){
'step 0'
var num=3;
if(player.storage.xingshen){
num+=player.storage.xingshen;
player.storage.xingshen=0;
player.unmarkSkill('xingshen');
}
if(player.storage.olxingshen){
num+=player.storage.olxingshen;
player.storage.olxingshen=0;
player.unmarkSkill('olxingshen');
}
event.cards=get.cards(num);
game.cardsGotoOrdering(event.cards);
target.showCards(event.cards,get.translation(player)+'发动了【严教】');
'step 1'
var num=0;
for(var i of cards) num+=get.number(i,false);
num=Math.max(1,Math.floor(num/2));
var str='选择获得任意张总点数不大于'+num+'的牌';
if(target!=player) str+='，然后'+get.translation(player)+'获得剩余的牌';
target.chooseButton([str,cards],[1,cards.length],true).set('filterButton',function(button){
var summer=0,num=_status.event.num;
for(var i=0;i<ui.selected.buttons.length;i++) summer+=get.number(ui.selected.buttons[i].link,false);
return summer+get.number(button.link,false)<=num;
}).set('num',num);
'step 2'
if(result.bool){
cards.removeArray(result.links);
target.gain(result.links,'gain2');
}
'step 3'
if(cards.length){
if(target!=player) player.gain(cards,'gain2');
else{
player.$throw(cards,1000);
game.cardsDiscard(cards);
game.log(cards,'被置入了弃牌堆');
}
}
else event.finish();
'step 4'
game.delayx();
},
ai:{
order:10,
result:{
target:function(player,target){
return target==player?1:2;
},
},
},
},
minifankui:{
audio:'fankui',
trigger:{player:'damageEnd'},
frequent:true,
content:function(){
'step 0'
event.count=trigger.num;
'step 1'
event.count--;
player.judge();
'step 2'
if(!game.hasPlayer(function(current){
return current.countGainableCards(player,'he');
})){
event.goto(4);
return;
}
if(result.suit!='heart'&&(!trigger.source||!trigger.source.countCards('he'))){
event.goto(4);
return;
}
if(result.suit!='heart') event._result={bool:true,targets:[trigger.source]};
else player.chooseTarget('请选择【反馈】的目标','获得一名角色的一张牌',true,function(card,player,target){
return target.countGainableCards(player,'he');
}).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe_copy2'},player,player);
});
'step 3'
if(result.bool){
var target=result.targets[0];
player.line(target);
player.gainPlayerCard(target,'he',true);
}
else event.finish();
'step 4'
if(event.count>0&&player.hasSkill('minifankui')) player.chooseBool(get.prompt2('minifankui')).set('frequentSkill','minifankui');
else event.finish();
'step 5'
if(result.bool){
player.logSkill('minifankui');
event.goto(1);
}
},
ai:{
maixie_defend:true,
effect:{
target:function(card,player,target){
if(player.countCards('he')>1&&get.tag(card,'damage')){
if(player.hasSkillTag('jueqing',false,target)) return [1,-1.5];
if(get.attitude(target,player)<0) return [1,1];
}
},
},
},
},
miniguicai:{
audio:'guicai',
trigger:{global:'judge'},
filter:function(event,player){
return player.countCards('hes');
},
direct:true,
content:function(){
'step 0'
player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
get.translation(trigger.player.judging[0])+'，'+get.prompt('miniguicai'),'hes',function(card){
var player=_status.event.player;
var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
if(mod2!='unchanged') return mod2;
var mod=game.checkMod(card,player,'unchanged','cardRespondable',player);
if(mod!='unchanged') return mod;
return true;
}).set('ai',function(card){
var trigger=_status.event.getTrigger();
var player=_status.event.player;
var judging=_status.event.judging;
var result=trigger.judge(card)-trigger.judge(judging);
var attitude=get.attitude(player,trigger.player);
if(attitude==0){
if(player.isDamaged()&&get.suit(card,player)=='heart') return 10;
if(get.suit(card,player)=='club') return 8;
return 0;
}
if(attitude>0){
if(result==0){
if(player.isDamaged()&&get.suit(card,player)=='heart') return 10;
if(get.suit(card,player)=='club') return 8;
return 0;
}
return result-get.value(card)/2;
}
else{
if(result==0){
if(player.isDamaged()&&get.suit(card)=='heart') return 10;
if(get.suit(card)=='club') return 8;
return 0;
}
return -result-get.value(card)/2;
}
}).set('judging',trigger.player.judging[0]);
'step 1'
if(result.bool){
player.respond(result.cards,'miniguicai','highlight','noOrdering');
}
else event.finish();
'step 2'
if(result.bool){
if(trigger.player.judging[0].clone){
trigger.player.judging[0].clone.classList.remove('thrownhighlight');
game.broadcast(function(card){
if(card.clone){
card.clone.classList.remove('thrownhighlight');
}
},trigger.player.judging[0]);
game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
}
game.cardsDiscard(trigger.player.judging[0]);
trigger.player.judging[0]=result.cards[0];
trigger.orderingCards.addArray(result.cards);
game.log(trigger.player,'的判定牌改为',result.cards[0]);
game.delay(2);
event.card=result.cards[0];
}
else event.finish();
'step 3'
if(get.suit(card,player)=='heart') player.recover();
if(get.suit(card,player)=='club') player.draw(2);
},
ai:{
rejudge:true,
tag:{rejudge:1},
},
},
//杜夫人
miniyise:{
audio:'yise',
trigger:{global:'gainAfter',player:'loseAsyncAfter'},
filter:function(event,player){
if(event.name=='loseAsync'){
if(event.type!='gain') return false;
}
var cards=event.getl(player).cards2;
return game.hasPlayer(function(current){
if(current==player) return false;
var cardsx=event.getg(current);
for(var i of cardsx){
if(cards.includes(i)) return true;
}
return false;
});
},
direct:true,
content:function(){
'step 0'
var cards=trigger.getl(player).cards2;
event.cards=cards;
event.targets=game.filterPlayer(function(current){
if(current==player) return false;
var cardsx=trigger.getg(current);
for(var i of cardsx){
if(cards.includes(i)) return true;
}
return false;
}).sortBySeat();
'step 1'
var target=targets.shift();
var cardsx=trigger.getg(target);
var next=game.createEvent('miniyise_insert');
next.player=player;
next.target=target;
next.cards=cardsx;
next.setContent(lib.skill.miniyise.contentx);
if(targets.length>0) event.redo();
},
contentx:function(){
'step 0'
event.logged=false;
for(var i of cards){
event[get.color(i,player)]=true;
if(event.red&&event.black) break;
}
if(event.red){
var list=['摸牌'],choiceList=[
'令自己摸一张牌',
'令'+get.translation(target)+'回复1点体力'
];
if(target.isDamaged()) list.push('回复体力');
else choiceList[1]='<span style="opacity:0.5">'+choiceList[1]+'</span>';
list.push('cancel2');
player.chooseControl(list).set('prompt',get.prompt('miniyise',target)).set('ai',function(){
if(list.includes('回复体力')&&get.recoverEffect(_status.event.getParent().target,_status.event.player,_status.event.player)>0) return '回复体力';
return '摸牌';
}).set('choiceList',choiceList);
}
'step 1'
if(event.red&&result.control!='cancel2'){
event.logged=true;
player.logSkill('miniyise',target);
if(result.control=='摸牌') player.draw();
else target.recover();
}
if(!event.black) event.finish();
'step 2'
player.chooseBool(get.prompt('miniyise',target),'令'+get.translation(target)+'下次受到【杀】造成的伤害+1').set('choice',get.attitude(player,target)<0);
'step 3'
if(result.bool){
if(!event.logged) player.logSkill('miniyise',target);
else player.line(target);
target.addMark('yise_damage',1,false);
target.addSkill('yise_damage');
}
},
},
minishunshi:{
audio:'shunshi',
trigger:{player:['damageEnd','phaseZhunbeiBegin']},
filter:function(event,player){
return player.countCards('he');
},
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
prompt:get.prompt2('minishunshi'),
filterTarget:lib.filter.notMe,
filterCard:true,
position:'he',
ai1:function(card){
var player=_status.event.player;
if(player.hasSkill('miniyise')){
if(get.color(card,player)=='red'&&game.hasPlayer(function(current){
return current!=player&&current.isDamaged()&&get.recoverEffect(current,player,player)>0;
})) return 10-get.value(card);
if(get.color(card,player)=='black') return 4-get.value(card);
}
return 8-get.value(card);
},
ai2:function(target){
var player=_status.event.player,card=ui.selected.cards[0];
var att=get.attitude(player,target);
if(player.hasSkill('miniyise')){
if(get.color(card)=='red'&&target.isDamaged()) return 2*get.recoverEffect(target,player,player)+get.sgn(att);
if(get.color(card)=='black') return -att;
}
if(get.value(card,target)<0) return -att;
if(get.value(card,target)<1) return 0.01*-att;
return Math.max(1,get.value(card,target)-get.value(card,player))*att;
},
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minishunshi',target);
player.give(result.cards,target);
for(var phase of ['phaseDraw','phaseUse','phaseDiscard']){
player.addTempSkill('minishunshi_'+phase,{player:phase+'After'});
player.addMark('minishunshi_'+phase,1,false);
}
}
},
subSkill:{
phaseDraw:{
charlotte:true,
onremove:true,
mark:true,
marktext:'摸',
intro:{content:'下个摸牌阶段多摸#张牌'},
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed;
},
direct:true,
content:function(){
trigger.num+=player.countMark('minishunshi_phaseDraw');
},
},
phaseUse:{
charlotte:true,
onremove:true,
mark:true,
marktext:'出',
intro:{content:'下个出牌阶段使用【杀】的次数上限+#，且使用【杀】无视防具'},
mod:{
cardUsable:function(card,player,num){
if(player.isPhaseUsing()&&card.name=='sha') return num+player.countMark('minishunshi_phaseUse');
},
},
ai:{
unequip:true,
skillTagFilter:function(player,tag,arg){
if(!arg||!arg.card||arg.card.name!='sha'||!player.isPhaseUsing()) return false;
},
},
},
phaseDiscard:{
charlotte:true,
onremove:true,
mark:true,
marktext:'弃',
intro:{content:'下个弃牌阶段手牌上限+#'},
mod:{
maxHandcard:function(player,num){
if(player.hasSkill('minishunshi_phaseDiscard2')) return num+player.countMark('minishunshi_phaseDiscard');
},
},
trigger:{player:'phaseDiscardBefore'},
direct:true,
content:function(){
player.addTempSkill('minishunshi_phaseDiscard2',{player:'phaseDiscardAfter'});
},
},
phaseDiscard2:{charlotte:true},
},
},
minijiangchi:{
audio:'jiangchi',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
var list=[
'摸一张牌，直到你的下个回合开始，受到伤害后摸一张牌',
'摸三张牌，本回合内不能使用或打出【杀】且手牌上限+2',
'本回合可以多使用一张【杀】且无距离限制',
];
player.chooseControl('cancel2').set('prompt',get.prompt('xinjiangchi')).set('choiceList',list).set('ai',function(){
var player=_status.event.player;
var num=player.countCards('hs',function(card){
return get.name(card)=='sha'&&player.hasValueTarget(card,false);
});
if(num==0) return 1;
if(num>1) return 2;
return 0;
});
'step 1'
if(result.control!='cancel2'){
player.logSkill('minijiangchi');
switch(result.index){
case 0:{
player.draw();
player.addTempSkill('minijiangchi_draw',{player:'phaseBegin'});
break;
}
case 1:{
player.draw(3);
player.addTempSkill('xinjiangchi_less');
player.addTempSkill('minijiangchi_hand');
break;
}
case 2:{
player.addTempSkill('xinjiangchi_more');
break;
}
}
}
},
subSkill:{
draw:{
charlotte:true,
audio:'jiangchi',
trigger:{player:'damageEnd'},
forced:true,
content:function(){
player.draw();
},
},
hand:{
charlotte:true,
mod:{
maxHandcard:function(player,num){
return num+2;
},
},
},
},
},
//曹操
minijianxiong:{
audio:'rejianxiong',
audioname2:{Mbaby_caoying:'lingren_jianxiong'},
trigger:{player:'damageEnd'},
direct:true,
content:function(){
'step 0'
event.count=trigger.num;
'step 1'
event.count--;
player.chooseControl('摸两张牌','拿牌摸牌','cancel2').set('prompt',get.prompt2('minijianxiong')).set('ai',function(){
var trigger=_status.event.getTrigger();
if(get.itemtype(trigger.cards)!='cards'||trigger.cards.filterInD().length<1||(trigger.cards.filterInD().length==1&&trigger.cards.filterInD()[0].name=='sha')) return '摸两张牌';
return '拿牌摸牌';
});
'step 2'
if(result.control!='cancel2'){
player.logSkill('minijianxiong');
if(result.control=='拿牌摸牌'){
if(trigger.cards.filterInD().length) player.gain(trigger.cards.filterInD(),'gain2');
player.draw();
}
else player.draw(2);
if(event.count>0&&player.hasSkill('minijianxiong')) event.goto(1);
}
else event.finish();
},
ai:{
maixie:true,
maixie_hp:true,
effect:{
target:function(card,player,target){
if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
if(get.tag(card,'damage')&&player!=target) return [1,0.6];
},
},
},
},
minihujia:{
unique:true,
audio:'hujia_re_caocao',
trigger:{player:['chooseToRespondBefore','chooseToUseBefore']},
filter:function(event,player){
if(event.responded) return false;
if(player.storage.minihujiaing) return false;
if(!event.filterCard({name:'shan'},player,event)) return false;
return game.hasPlayer(function(current){
return current!=player&&current.group=='wei';
});
},
check:function(event,player){
return get.damageEffect(player,event.player,player)<0;
},
zhuSkill:true,
content:function(){
'step 0'
if(!event.current) event.current=player.next;
if(event.current==player) event.finish();
else if(event.current.group=='wei'){
if((event.current==game.me&&!_status.auto)||(
get.attitude(event.current,player)>2)||
event.current.isOnline()){
player.storage.minihujiaing=true;
var next=event.current.chooseToRespond('是否替'+get.translation(player)+'打出一张闪？',{name:'shan'});
next.set('ai',function(){
var event=_status.event;
return (get.attitude(event.player,event.source)-2);
});
next.set('skillwarn','替'+get.translation(player)+'打出一张闪');
next.autochoose=lib.filter.autoRespondShan;
next.set('source',player);
}
}
'step 1'
player.storage.minihujiaing=false;
if(result.bool){
event.target=event.current;
trigger.result={bool:true,card:{name:'shan',isCard:true}};
trigger.responded=true;
trigger.animate=false;
if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
event.current.ai.shown+=0.3;
if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
}
}
else{
event.current=event.current.next;
event.goto(0);
}
'step 2'
target.chooseBool('是否令'+get.translation(player)+'摸一张牌？');
'step 3'
if(result.bool){
target.line(player);
player.draw();
}
},
ai:{
respondShan:true,
skillTagFilter:function(player){
if(player.storage.minihujiaing) return false;
return game.hasPlayer(function(current){
return current!=player&&current.group=='wei';
});
},
},
},
hujia_re_caocao:{audio:2},
//庞德
minijuesi:{
audio:'juesi',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h',{name:'sha'});
},
filterTarget:function(card,player,target){
return target!=player&&target.countCards('he')>0&&player.inRange(target);
},
filterCard:{name:'sha'},
content:function(){
'step 0'
target.chooseToDiscard('he',true);
'step 1'
if(result.bool){
if(target.hp>=player.hp&&result.cards[0].name!='sha') player.draw(2);
if(result.cards[0].name=='sha'&&player.canUse({name:'juedou',isCard:true},target,false)) player.useCard({name:'juedou',isCard:true},target,false);
}
},
ai:{
order:2,
result:{
target:function(player,target){
if(get.effect(target,{name:'juedou'},player,player)<=0){
return 0;
}
if(target.hp<player.hp){
if(player.countCards('h')>player.hp) return -0.1;
return 0;
}
var hs1=target.getCards('h','sha');
var hs2=player.getCards('h','sha');
if(hs1.length>hs2.length){
return 0;
}
var hsx=target.getCards('h');
if(hsx.length>2&&hs2.length<=1&&hsx[0].number<6){
return 0;
}
if(hsx.length>3&&hs2.length<=1){
return 0;
}
if(hs1.length>hs2.length-1&&hs1.length>0&&(hs2.length<=1||hs1[0].number>hs2[0].number)){
return 0;
}
return -1;
},
},
},
},
minichoujue:{
derivation:['minibeishui','qingjiao'],
unique:true,
audio:'choujue',
trigger:{global:'phaseAfter'},
filter:function(event,player){
return Math.abs(player.hp-player.countCards('h'))>=3;
},
forced:true,
juexingji:true,
skillAnimation:true,
animationColor:'water',
content:function(){
player.awakenSkill('minichoujue');
player.storage.choujue=true;
player.loseMaxHp();
player.addSkillLog('minibeishui');
},
},
minibeishui:{
unique:true,
audio:'beishui',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return Math.min(player.hp,player.countCards('h'))<=2;
},
forced:true,
juexingji:true,
skillAnimation:'epic',
animationColor:'thunder',
content:function(){
player.awakenSkill('minibeishui');
player.storage.beishui=true;
player.loseMaxHp();
player.addSkillLog('qingjiao');
},
},
//夏侯令女
miniweilie:{
audio:'weilie',
inherit:'weilie',
filter:function(event,player){
if(player.countMark('miniweilie')>player.getStorage('fuping').length) return false;
return player.countCards('he')&&game.hasPlayer(current=>current.isDamaged());
},
content:function(){
player.addMark('miniweilie',1,false);
target.recover();
target.draw();
},
},
minifaen:{
audio:'faen',
trigger:{global:['turnOverAfter','linkAfter','damageBegin4']},
filter:function(event,player){
if(event.name=='damage'&&!player.countCards('he')) return false;
return event.name=='turnOver'||event.player.isLinked();
},
direct:true,
content:function(){
'step 0'
var target=trigger.player;
event.target=target;
if(trigger.name=='damage'){
player.chooseToDiscard(get.prompt('minifaen',target),'弃置一张牌，防止即将对'+get.translation(target)+'造成的伤害','he').set('ai',function(card){
if(!_status.event.check()) return -1;
return 7-get.value(card);
}).set('check',function(){
if(get.attitude(player,target)<=0) return false;
if(player.countCards('h',function(card){
var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
if(mod2!='unchanged') return mod2;
var mod=game.checkMod(card,player,target,'unchanged','cardSavable',player);
if(mod!='unchanged') return mod;
var savable=get.info(card).savable;
if(typeof savable=='function') savable=savable(card,player,target);
return savable;
})>=1+trigger.num-target.hp) return false;
if(target==player||target==get.zhu(player)) return true;
return !player.hasUnknown();
}).logSkill=['minifaen',target];
}
else player.chooseBool(get.prompt('minifaen',target),'令'+get.translation(target)+'摸一张牌').set('choice',get.attitude(player,target)>0);
'step 1'
if(result.bool){
if(trigger.name!='damage'){
player.logSkill('minifaen',target);
target.draw();
}
else trigger.cancel();
}
},
ai:{expose:0.2},
},
//王基
miniqizhi:{
audio:'qizhi',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
if(!event.targets||!event.isFirstTarget) return false;
if(_status.currentPhase!=player) return false;
var type=get.type(event.card,'trick');
if(type!='basic'&&type!='trick') return false;
return game.hasPlayer(function(target){
return !event.targets.includes(target)&&target.countCards('he')>0;
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('miniqizhi'),'弃置一名角色的一张牌，然后若弃置的牌与使用的牌类型相同，你摸一张牌；类型不同，其摸一张牌',function(card,player,target){
return !_status.event.targets.includes(target)&&target.countCards('he')>0;
}).set('ai',function(target){
var player=_status.event.player;
if(target==player) return 2;
if(get.attitude(player,target)<=0){
return 1
}
return 0.5;
}).set('targets',trigger.targets);
'step 1'
if(result.bool){
player.logSkill('miniqizhi',result.targets);
player.discardPlayerCard(result.targets[0],true,'he');
event.target=result.targets[0];
}
else event.finish();
'step 2'
if(result.bool&&get.type2(result.cards[0])==get.type2(trigger.card)) player.draw();
else target.draw();
},
},
minijinqu:{
audio:'jinqu',
trigger:{player:'phaseDiscardBefore'},
prompt:function(event,player){
var num=player.getHistory('useSkill',function(evt){
return evt.skill=='miniqizhi';
}).length+1;
return '进趋：是否摸两张牌并跳过弃牌阶段，然后将手牌弃置至'+get.cnNumber(num)+'张？';
},
check:function(event,player){
var num=player.getHistory('useSkill',function(evt){
return evt.skill=='miniqizhi';
}).length+1;
var numx=player.countCards('h')+2-num;
return num>=2||player.needsToDiscard()>=numx;
},
content:function(){
'step 0'
trigger.cancel();
player.draw(2);
'step 1'
var num=player.getHistory('useSkill',function(evt){
return evt.skill=='miniqizhi';
}).length+1;
if(player.countCards('h')>num) player.chooseToDiscard(player.countCards('h')-num,true);
},
ai:{combo:'miniqizhi'},
},
//SP甄姬
minijinghong:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.countCards('h');
});
},
direct:true,
content:function(){
'step 0'
var num=Math.min(game.countPlayer(function(current){
return current!=player&&current.countCards('h');
}),game.countPlayer()-1,4);
player.chooseTarget(get.prompt2('minijinghong'),[1,num],lib.filter.notMe).set('ai',function(target){
var player=_status.event.player;
if(!target.countCards('h')) return 0;
return (1-get.sgn(get.attitude(player,target)))/target.countCards('h');
});
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
event.targets=targets;
player.logSkill('minijinghong',targets);
player.addTempSkill('minijinghong_effect');
}
else event.finish();
'step 2'
var target=event.targets.shift();
event.target=target;
player.line(target);
if(!target.countCards('h')) event.redo();
'step 3'
var card=target.getCards('h').randomGet();
player.showCards(card,get.translation(player)+'展示的'+get.translation(target)+'的手牌');
if(get.color(card,target)=='black') player.gain(card,target,'giveAuto','bySelf').gaintag.add('minijinghong');
if(get.color(card,target)=='red') target.discard(card);
'step 4'
if(event.targets.length) event.goto(2);
},
subSkill:{
effect:{
charlotte:true,
onremove:function(player){
player.removeGaintag('minijinghong');
},
mod:{
ignoredHandcard:function(card,player){
if(card.hasGaintag('minijinghong')) return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&card.hasGaintag('minijinghong')) return false;
},
},
},
},
},
minispluoshen:{
mod:{
aiValue:function(player,card,num){
if(get.name(card)!='shan'&&get.color(card)!='black') return;
var cards=player.getCards('hs',function(card){
return get.name(card)=='shan'||get.color(card)=='black';
});
cards.sort(function(a,b){
return (get.name(b)=='shan'?1:2)-(get.name(a)=='shan'?1:2);
});
var geti=function(){
if(cards.includes(card)){
return cards.indexOf(card);
}
return cards.length;
};
if(get.name(card)=='shan') return Math.min(num,[6,4,3][Math.min(geti(),2)])*0.6;
return Math.max(num,[6.5,4,3][Math.min(geti(),2)]);
},
aiUseful:function(){
return lib.skill.minispluoshen.mod.aiValue.apply(this,arguments);
},
},
audio:'ext:活动武将/audio/skill:2',
enable:['chooseToRespond','chooseToUse'],
filterCard:function(card){
return get.color(card)=='black';
},
frequent:true,
locked:false,
position:'hes',
viewAs:{name:'shan'},
viewAsFilter:function(player){
if(!player.countCards('hes',{color:'black'})) return false;
},
onuse:function(links,player){
player.addTempSkill('minispluoshen_effect');
},
onrespond:function(links,player){
player.addTempSkill('minispluoshen_effect');
},
prompt:'将一张黑色牌当作【闪】使用或打出',
check:()=>1,
ai:{
order:function(item,player){
if(!player.hasSkill('minispluoshen_used')) return 1145141919810
return 2;
},
respondShan:true,
skillTagFilter:function(player){
if(!player.countCards('hes',{color:'black'})) return false;
},
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondShan')&&current<0) return 0.6
},
},
},
subSkill:{
used:{charlotte:true},
effect:{
charlotte:true,
trigger:{player:['useCardAfter','respondAfter']},
filter:function(event,player){
return event.skill=='minispluoshen'&&!player.hasSkill('minispluoshen_used');
},
prompt2:'进行一次判定并获得判定牌，若结果为黑色，你可以重复此流程',
content:function(){
'step 0'
player.addTempSkill('minispluoshen_used','roundStart');
event.cards=[];
'step 1'
var next=player.judge(function(card){
var color=get.color(card);
return color=='black'?1:-1;
});
next.judge2=function(result){
return result.bool;
};
next.set('callback',function(){
if(get.position(card,true)=='o') player.gain(card,'gain2');
});
'step 2'
if(result.judge>0) player.chooseBool('是否继续进行【洛神】判定？').set('frequentSkill','minispluoshen');
else event.finish();
'step 3'
if(result.bool) event.goto(1);
},
},
},
},
minispwusheng:{
group:['minispwusheng_wusheng','minispwusheng_effect'],
audio:'wusheng',
audioname2:{
Mbaby_jsp_guanyu:'wusheng_jsp_guanyu',
Mbaby_guansuo:'wusheng_guansuo',
},
trigger:{player:'phaseBegin'},
forced:true,
locked:false,
content:function(){
var card=get.cardPile(function(card){
return get.color(card)=='red';
});
if(card) player.gain(card,'gain2');
},
subSkill:{
wusheng:{
audio:'wusheng',
audioname2:{
Mbaby_jsp_guanyu:'wusheng_jsp_guanyu',
Mbaby_guansuo:'wusheng_guansuo',
},
enable:['chooseToRespond','chooseToUse'],
filterCard:function(card,player){
return get.color(card)=='red';
},
position:'hes',
viewAs:{name:'sha'},
viewAsFilter:function(player){
if(!player.countCards('hes',{color:'red'})) return false;
},
prompt:'武圣：将一张红色牌当作【杀】使用或打出',
check:function(card){
var val=get.value(card);
if(_status.event.name=='chooseToRespond') return 1/Math.max(0.1,val);
return 5-val;
},
ai:{
respondSha:true,
skillTagFilter:function(player){
if(!player.countCards('hes',{color:'red'})) return false;
},
},
},
effect:{
mod:{
aiOrder:function(player,card,num){
if(get.itemtype(card)=='card'&&card.name=='sha'&&get.color(card)=='red') return num+0.1;
},
targetInRange:function(card){
if(get.suit(card)=='diamond'&&card.name=='sha') return true;
},
},
audio:'wusheng',
audioname2:{
Mbaby_jsp_guanyu:'wusheng_jsp_guanyu',
Mbaby_guansuo:'wusheng_guansuo',
},
inherit:'jie',
filter:function(event,player){
return lib.skill.jie.filter(event)&&event.card.isCard;
},
},
},
},
minidanji:{
unique:true,
derivation:['miniyuma','mininuzhan'],
audio:'danji',
trigger:{player:['useCard','respond'],source:'damageSource'},
filter:function(event,player){
if(event.name!='damage') return player.getAllHistory('useCard').length+player.getAllHistory('respond').length>=5;
var num=0;
player.getAllHistory('sourceDamage',evt=>num+=evt.num);
return num>=6;
},
forced:true,
juexingji:true,
skillAnimation:true,
animationColor:'water',
content:function(){
'step 0'
player.awakenSkill('minidanji');
if(player.isDamaged()) player.recover(player.maxHp-player.hp);
'step 1'
for(var skill of ['miniyuma','mininuzhan']) player.addSkillLog(skill);
},
},
mininuzhan:{
audio:'dcnuchen',
trigger:{player:'useCard1',source:'damageBegin1'},
filter:function(event,player){
if(!(event.card&&event.card.name=='sha'&&event.cards&&event.cards.length&&!event.card.isCard)) return false;
if(event.name=='useCard') return event.addCount!==false&&get.type2(event.cards[0])!='trick';
return get.type2(event.cards[0])=='trick';
},
forced:true,
content:function(){
var card=trigger.cards[0];
if(get.type2(card)!='trick'){
trigger.addCount=false;
if(player.stat[player.stat.length-1].card.sha>0){
player.stat[player.stat.length-1].card.sha--;
}
game.log(event.card,'不计入次数限制');
}
else trigger.num++;
},
},
//筷子
minishenshi:{
audio:'nzry_shenshi_1',
group:'minishenshi_2',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he')>0;
},
discard:false,
line:true,
lose:false,
delay:false,
position:'he',
filterCard:true,
filterTarget:lib.filter.notMe,
check:function(card){
return 5-get.value(card);
},
usable:1,
prompt:'将一张牌交给一名其他角色，然后对其造成1点伤害，若该角色因此死亡，则你可以令一名角色将手牌摸至四张',
content:function(){
'step 0'
player.give(cards,target);
target.damage('nocard');
'step 1'
if(!target.isIn()){
player.chooseTarget('审时：令一名角色将手牌摸至四张',function(card,player,target){
return target.countCards('h')<4;
}).set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
}
else event.finish();
'step 2'
if(result.bool){
player.line(result.targets);
result.targets[0].drawTo(4)
};
},
ai:{
order:1,
result:{target:-1},
},
subSkill:{
'2':{
audio:'nzry_shenshi_1',
trigger:{player:'damageEnd'},
filter:function(event,player){
return player.countCards('he')>0&&event.source&&event.source!=player;
},
logTarget:'source',
prompt2:'观看该角色的手牌，然后交给其一张牌，其失去此牌后，你将手牌摸至四张',
content:function(){
'step 0'
player.viewHandcards(trigger.source);
player.chooseCard('he',true,'交给'+get.translation(trigger.source)+'一张牌').set('ai',function(card){
return 5-get.value(card);
});
'step 1'
if(result.bool){
var skill='minishenshi_'+player.playerid;
if(!lib.skill[skill]){
lib.skill[skill]={};
lib.translate[skill]='审时';
}
player.give(result.cards,trigger.source).gaintag.add(skill);
player.addSkill('minishenshi_3');
}
},
},
'3':{
charlotte:true,
audio:'nzry_shenshi_1',
trigger:{global:['equipAfter','addJudgeAfter','loseAfter','gainAfter','loseAsyncAfter','addToExpansionAfter']},
filter:function(event,player){
if(player.countCards('h')>=4) return false;
return game.hasPlayer2(function(current){
var evt=event.getl(current);
if(evt&&evt.gaintag_map){
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('minishenshi_'+player.playerid)) return true;
}
}
return false;
});
},
forced:true,
content:function(){
player.drawTo(4);
},
},
},
},
//OL文钦
//大削，15玉玺价格也忒贵辽
minihuiqi:{
audio:'olhuiqi',
inherit:'olhuiqi',
derivation:'minixieju',
filter:function(event,player){
var targets=[];
game.getGlobalHistory('useCard',function(evt){
if(evt.targets&&evt.targets.length) targets.addArray(evt.targets);
});
return targets.includes(player)&&targets.length==3;
},
content:function(){
'step 0'
player.awakenSkill('minihuiqi');
'step 1'
player.recover();
player.addSkillLog('minixieju');
},
},
minixieju:{
audio:'olxieju',
inherit:'olxieju',
content:function(){
if(!target.countCards('hes',function(card){
return get.color(card,target)=='black'&&target.hasUseTarget(get.autoViewAs({name:'sha'},[card]));
})) return;
var next=target.chooseToUse(true);
next.set('openskilldialog','偕举：将一张黑色牌当做【杀】使用');
next.set('norestore',true);
next.set('addCount',false);
next.set('_backupevent','minixieju_backup');
next.set('custom',{
add:{},
replace:{window:function(){}}
});
next.backup('minixieju_backup');
},
subSkill:{
backup:{
filterCard:function(card,player){
return get.color(card,player)=='black';
},
position:'hes',
viewAs:{name:'sha'},
filterTarget:lib.filter.filterTarget,
check:function(card){
return -get.value(card);
},
log:false,
precontent:function(){
delete event.result.skill;
},
},
},
},
//魏贾诩
minijianshu:{
audio:'jianshu',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h');
},
filterTarget:function(card,player,target){
if(target==player) return false;
if(ui.selected.targets.length){
return ui.selected.targets[0]!=target&&!ui.selected.targets[0].hasSkillTag('noCompareSource')&&target.countCards('h')&&!target.hasSkillTag('noCompareTarget');
}
return true;
},
usable:1,
targetprompt:['发起者','拼点目标'],
filterCard:true,
discard:false,
lose:false,
delay:false,
check:function(card){
if(_status.event.player.hp==1) return 8-get.value(card);
return 6-get.value(card);
},
selectTarget:2,
multitarget:true,
content:function(){
'step 0'
player.give(cards,targets[0],'give');
'step 1'
targets[0].chooseToCompare(targets[1]);
'step 2'
player.addTempSkill('dcjianshu_check','phaseUseAfter');
if(result.bool){
var cards=targets[0].getCards('he');
if(cards.length) player.gain(cards.randomGet(),targets[0],'giveAuto');
targets[1].loseHp();
}
else if(result.tie){
targets[0].loseHp();
targets[1].loseHp();
}
else{
var cards=targets[1].getCards('he');
if(cards.length) player.gain(cards.randomGet(),targets[1],'giveAuto');
targets[0].loseHp();
}
},
subSkill:{
check:{
trigger:{global:'dieAfter'},
charlotte:true,
forced:true,
popup:false,
filter:function(event,player){
return event.getParent(3).name=='minijianshu';
},
content:function(){
delete player.getStat('skill').minijianshu;
},
},
},
ai:{
expose:0.4,
order:4,
result:{
target:function(player,target){
if(ui.selected.targets.length) return -1;
return -0.5;
},
},
},
},
miniyongdi:{
unique:true,
audio:'yongdi',
mark:true,
limited:true,
enable:'phaseUse',
filterTarget:true,
animationColor:'thunder',
skillAnimation:'legend',
content:function(){
'step 0'
player.awakenSkill('miniyongdi');
if(!game.hasPlayer(current=>current.maxHp<target.maxHp)) target.gainMaxHp();
'step 1'
if(target.isMinHp()) target.recover();
'step 2'
if(target.isMinHandcard()) target.draw(Math.min(5,target.maxHp));
'step 3'
game.delayx();
},
ai:{
expose:0.3,
order:1,
result:{
target:function(player,target){
var val=0;
var bool1=!game.hasPlayer(current=>current.maxHp<target.maxHp),bool2=target.isMinHp(),bool3=target.isMinHandcard();
if(bool1) val+=5;
if(bool2){
if(bool1) target.maxHp++;
val+=Math.max(0,get.recoverEffect(target,player,player));
if(bool1) target.maxHp--;
}
if(bool3){
var num=Math.max(0,Math.min(5,target.maxHp+(bool1?1:0)));
val+=5*num;
}
return val;
},
},
},
},
//尹夫人
miniyongbi:{
audio:'dcyongbi',
inherit:'dcyongbi',
filter:function(event,player){
return player.countCards('h')>0;
},
filterTarget:lib.filter.notMe,
selectCard:[1,Infinity],
complexCard:true,
complexSelect:true,
check:function(card){
var player=_status.event.player;
if(!ui.selected.cards.some(cardx=>get.suit(card,player)==get.suit(cardx,player))) return 8-get.value(card);
return 0;
},
content:function(){
'step 0'
player.awakenSkill('miniyongbi');
if(player.hasSkill('dcyingyu',null,null,false)) player.storage.dcyingyu=true;
player.give(cards,target);
'step 1'
var list=[];
for(var i of cards){
list.add(get.suit(i,player));
if(list.length>=3) break;
}
if(list.length>=2){
player.addMark('dcyongbi_eff1',2,false);
player.addSkill('dcyongbi_eff1');
target.addMark('dcyongbi_eff1',2,false);
target.addSkill('dcyongbi_eff1');
}
if(list.length>=3){
player.addMark('dcyongbi_eff2',1,false);
player.addSkill('dcyongbi_eff2');
target.addMark('dcyongbi_eff2',1,false);
target.addSkill('dcyongbi_eff2');
}
},
},
//SP曹仁
miniweikui:{
audio:'weikui',
enable:'phaseUse',
filterTarget:function(card,player,target){
return target!=player&&target.countCards('h');
},
usable:1,
content:function(){
'step 0'
player.loseHp();
player.viewHandcards(target);
'step 1'
if(target.countCards('h',{name:'shan'})) player.gainPlayerCard(target,'visible',true,'h').set('ai',function(button){
return get.value(button.link,_status.event.target);
});
else{
if(player.canUse({name:'sha',isCard:true},target,false)) player.useCard({name:'sha',isCard:true},target,false);
player.storage.weikui2=target;
player.addTempSkill('weikui2');
event.finish();
}
'step 2'
player.recover();
},
ai:{
order:8,
result:{
target:function(player,target){
if(!target.countCards('h',{name:'shan'})){
if(player.hp<=2) return 0;
if(player.hp==3) return target.hp<=2?-1:0;
}
return -1;
},
},
},
},
minilizhan:{
audio:'lizhan',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return game.hasPlayer(current=>current.isDamaged());
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minilizhan'),[1,Infinity],function(card,player,target){
return target.isDamaged();
}).set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
event.targets=targets;
player.logSkill('minilizhan',targets);
game.asyncDraw(targets);
}
else event.finish();
'step 2'
var num=targets.filter(target=>target.countCards('h')==target.getHp()).length;
if(num) player.draw(num);
else game.delayx();
},
ai:{threaten:1.5},
},
//郭嘉
minishenglun:{
audio:'ext:活动武将/audio/skill:2',
enable:'phaseUse',
filterTarget:lib.filter.notMe,
selectTarget:[1,2],
usable:1,
content:function(){
'step 0'
var list=[
get.sgn(player.hp-target.hp),
get.sgn(player.countCards('h')-target.countCards('h')),
get.sgn(player.countCards('e',card=>get.subtype(card)=='equip1')-target.countCards('e',card=>get.subtype(card)=='equip1')),
get.sgn(player.countCards('e',card=>get.subtype(card)=='equip2')-target.countCards('e',card=>get.subtype(card)=='equip2')),
get.sgn(player.countCards('e',card=>['equip3','equip4'].includes(get.subtype(card)))-target.countCards('e',card=>['equip3','equip4'].includes(get.subtype(card)))),
],num=0;
while(num<5){
game.log('第'+get.cnNumber(num+1,true)+'局',list[num]>0?'#g成功':'#y失败');
player.addMark('minishenglun_'+(list[num]>0?'win':'lose'),1,false);
num++;
}
'step 1'
if(player.countMark('minishenglun_win')>=10){
player.recover();
var next=game.createEvent('minishenglun_result');
next.player=player;
next.setContent(lib.skill.minishenglun.content_yiji);
player.removeMark('minishenglun_win',player.countMark('minishenglun_win'),false);
}
'step 2'
if(player.countMark('minishenglun_lose')>=10){
player.chooseTarget('请选择【胜论】的目标','对一名角色造成1点伤害',true).set('ai',target=>get.damageEffect(target,_status.event.player,_status.event.player));
}
else event.finish();
'step 3'
if(result.bool){
var target=result.targets[0];
player.line(target);
target.damage();
}
var next=game.createEvent('minishenglun_result');
next.player=player;
next.setContent(lib.skill.minishenglun.content_yiji);
player.removeMark('minishenglun_lose',player.countMark('minishenglun_lose'),false);
},
ai:{
order:1,
result:{
target:function(player,target){
var att=get.attitude(player,target);
var num=get.sgn(att);
var ref=get.recoverEffect(player,player,player);
var def=game.filterPlayer.reduce((list,current)=>{
return list.push(get.damageEffect(current,player,player));
},[]).sort((a,b)=>b-a)[0];
var sum=get.sgn(player.hp-target.hp)+get.sgn(player.countCards('h')-target.countCards('h'))+
get.sgn(player.countCards('e',card=>get.subtype(card)=='equip1')-target.countCards('e',card=>get.subtype(card)=='equip1'))+
get.sgn(player.countCards('e',card=>get.subtype(card)=='equip2')-target.countCards('e',card=>get.subtype(card)=='equip2'))+
get.sgn(player.countCards('e',card=>['equip3','equip4'].includes(get.subtype(card)))-target.countCards('e',card=>['equip3','equip4'].includes(get.subtype(card))));
if(((ref-def)*sum)>0) return 2*num;
return num;
},
},
},
content_yiji:function(){
'step 0'
player.logSkill('new_reyiji');
player.draw(2);
if(_status.connectMode) game.broadcastAll(function(){_status.noclearcountdown=true});
event.given_map={};
event.num=2;
'step 1'
player.chooseCardTarget({
filterCard:function(card){
return get.itemtype(card)=='card'&&!card.hasGaintag('reyiji_tag');
},
filterTarget:lib.filter.notMe,
selectCard:[1,event.num],
prompt:'请选择要分配的卡牌和目标',
ai1:function(card){
if(!ui.selected.cards.length) return 1;
return 0;
},
ai2:function(target){
var player=_status.event.player,card=ui.selected.cards[0];
var val=target.getUseValue(card);
if(val>0) return val*get.attitude(player,target)*2;
return get.value(card,target)*get.attitude(player,target);
},
});
'step 2'
if(result.bool){
var res=result.cards,target=result.targets[0].playerid;
player.addGaintag(res,'reyiji_tag');
event.num-=res.length
if(!event.given_map[target]) event.given_map[target]=[];
event.given_map[target].addArray(res);
if(event.num>0) event.goto(1);
}
else if(event.num==2){
if(_status.connectMode) game.broadcastAll(function(){delete _status.noclearcountdown;game.stopCountChoose()});
event.finish();
}
'step 3'
if(_status.connectMode) game.broadcastAll(function(){delete _status.noclearcountdown;game.stopCountChoose()});
var map=[],cards=[];
for(var i in event.given_map){
var source=(_status.connectMode?lib.playerOL:game.playerMap)[i];
player.line(source,'green');
map.push([source,event.given_map[i]]);
cards.addArray(event.given_map[i]);
}
game.loseAsync({
gain_list:map,
player:player,
cards:cards,
giver:player,
animate:'giveAuto',
}).setContent('gaincardMultiple');
},
subSkill:{
win:{
charlotte:true,
onremove:true,
marktext:'胜',
intro:{content:'已胜利#次'},
},
lose:{
charlotte:true,
onremove:true,
marktext:'败',
intro:{content:'已失败#次'},
},
},
},
//曹洪
miniyuanhu:{
audio:'yuanhu',
enable:'phaseUse',
filter:function(event,player){
return player.hasCard({type:'equip'},'he');
},
filterCard:{type:'equip'},
filterTarget:function(card,player,target){
var card=ui.selected.cards[0];
return target.canEquip(card);
},
usable:2,
discard:false,
lose:false,
prepare:'give',
position:'he',
check:function(card){
if(get.position(card)=='h') return 9-get.value(card);
return 7-get.value(card);
},
content:function(){
'step 0'
target.equip(cards[0]);
player.draw();
'step 1'
event.goto(3);
switch(get.subtype(cards[0])){
case 'equip1':
if(game.hasPlayer(function(current){
return current!=target&&get.distance(target,current)==1&&current.countCards('hej')>0;
})){
player.chooseTarget(true,'弃置一名距离'+get.translation(target)+'为1的角色区域内的一张牌',function(card,player,target){
var current=_status.event.current;
return current!=target&&get.distance(current,target)==1&&current.countCards('hej')>0;
}).set('current',target).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe_copy'},player,player);
});
event.goto(2);
}
break;
case 'equip2':
target.draw();
break;
case 'equip3': case 'equip4':
target.recover();
break;
}
'step 2'
var target=result.targets[0];
player.line(target);
player.discardPlayerCard(target,true,'hej');
},
group:'miniyuanhu_biyue',
ai:{
order:10,
result:{
player:function(player,target){
if(get.attitude(player,target)==0) return 0;
if(!ui.selected.cards.length) return;
var eff=get.effect(target,ui.selected.cards[0],player,player),sub=get.subtype(ui.selected.cards[0],false);
if(target==player) eff+=4;
else{
var hp=player.hp,hs=player.countCards('h',(card)=>card!=ui.selected.cards[0]);
var tp=target.hp,ts=target.countCards('h');
if(sub=='equip2') ts++;
if(tp<target.maxHp&&(sub=='equip3'||sub=='equip4')) tp++;
if(tp<=hp||ts<=hs) eff+=2;
}
if(sub=='equip1'){
var list=game.filterPlayer(function(current){
return current!=target&&get.distance(target,current)==1&&current.countCards('hej')<0;
}).map(function(i){
return get.effect(i,{name:'guohe_copy'},player,player);
}).sort((a,b)=>b-a);
if(list.length) eff+=list[0];
}
return eff;
},
target:function(player,target){
if(!ui.selected.cards.length) return 0;
var sub=get.subtype(ui.selected.cards[0],false);
var eff=get.effect(target,ui.selected.cards[0],player,target);
if(sub=='equip2') eff+=(get.effect(target,{name:'wuzhong'},target,target)/2);
if(target.isDamaged()&&(sub=='equip3'||sub=='equip4')) eff+=get.recoverEffect(target,player,player);
return eff;
},
},
},
subSkill:{
biyue:{
audio:'yuanhu',
trigger:{player:'phaseEnd'},
filter:function(event,player){
return !player.getHistory('useSkill',evt=>evt.skill=='miniyuanhu').length;
},
forced:true,
locked:false,
content:function(){
var card=get.cardPile2(card=>get.type(card)=='equip');
if(card) player.gain(card,'gain2');
},
},
},
},
minisbjianxiong:{
audio:'sbjianxiong',
inherit:'sbjianxiong',
filter:function(event,player){
return get.itemtype(event.cards)=='cards'&&event.cards.some(i=>get.position(i,true)=='o')||2-player.countMark('sbjianxiong')>0;
},
prompt2:function(event,player){
var gain=get.itemtype(event.cards)=='cards'&&event.cards.some(i=>get.position(i,true)=='o'),draw=2-player.countMark('sbjianxiong');
var str='';
if(gain) str+='获得'+get.translation(event.cards);
if(gain&&draw>0) str+='并';
if(draw>0) str+='摸'+get.cnNumber(1-player.countMark('sbjianxiong'))+'张牌';
if(player.countMark('sbjianxiong')) str+='，然后可以弃1枚“治世”';
return str;
},
content:function(){
'step 0'
if(get.itemtype(trigger.cards)=='cards'&&trigger.cards.some(i=>get.position(i,true)=='o')){
player.gain(trigger.cards,'gain2');
}
var num=player.countMark('sbjianxiong');
if(2-num>0) player.draw(2-num,'nodelay');
if(!num) event.finish();
'step 1'
player.chooseBool('是否弃1枚“治世”？').set('ai',()=>{
var player=_status.event.player,current=_status.currentPhase;
if(get.distance(current,player,'absolute')>3&&player.hp<=2) return true;
return false;
});
'step 2'
if(result.bool) player.removeMark('sbjianxiong',1);
},
},
//蜀
miniwusheng:{
group:'miniwusheng_damage',
audio:'wusheng',
audioname2:{Mbaby_guansuo:'wusheng_guansuo'},
trigger:{player:'phaseBegin'},
forced:true,
locked:false,
content:function(){
var card=get.cardPile(function(card){
return card.name=='sha'&&get.color(card)=='red';
});
if(card) player.gain(card,'gain2');
},
subSkill:{
damage:{
mod:{
aiOrder:function(player,card,num){
if(get.itemtype(card)=='card'&&card.name=='sha'&&get.color(card)=='red') return num+0.1;
},
},
audio:'wusheng',
audioname2:{Mbaby_guansuo:'wusheng_guansuo'},
inherit:'jie',
},
},
},
miniguanxing:{
audio:'guanxing',
audioname2:{Mbaby_jiangwei:'guanxing_ol_jiangwei'},
trigger:{player:['phaseZhunbeiBegin','phaseJieshuBegin']},
frequent:true,
preHidden:true,
content:function(){
var num=Math.min(game.countPlayer()==2?3:5);
player.chooseToGuanxing(num);
},
},
minikongcheng:{
mod:{
targetEnabled:function(card,player,target,now){
if(target.countCards('h')==0){
if(card.name=='sha'||card.name=='juedou'||card.name=='shunshou') return false;
}
},
},
audio:'kongcheng1',
trigger:{player:'loseEnd'},
forced:true,
firstDo:true,
filter:function(event,player){
if(player.countCards('h')) return false;
return event.cards.some(card=>card.original=='h');
},
content:function(){},
ai:{
noh:true,
skillTagFilter:function(player,tag){
return player.countCards('h')==1;
},
},
},
//刘备
minirende:{
audio:'rende',
trigger:{player:'phaseUseEnd'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minirende'),[1,2]).set('ai',function(target){
return Math.sqrt(5-Math.min(4,target.countCards('h')))*get.attitude(_status.event.player,target);
});
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
player.logSkill('minirende',targets);
if(targets.length==1){
targets[0].draw();
event.finish();
}
else game.asyncDraw(targets);
}
else event.finish();
'step 2'
game.delayx();
},
},
minirerende:{
audio:'rerende',
enable:'phaseUse',
filterCard:true,
selectCard:[1,Infinity],
discard:false,
lose:false,
delay:false,
filterTarget:function(card,player,target){
return player!=target&&!player.getStorage('minirerende2').includes(target);
},
check:function(card){
if(ui.selected.cards.length&&ui.selected.cards[0].name=='du') return 0;
if(!ui.selected.cards.length&&card.name=='du') return 20;
var player=get.owner(card);
if(ui.selected.cards.length>=Math.max(2,player.countCards('h')-player.hp)) return 0;
if(player.hp==player.maxHp||player.storage.minirerende<0||player.countCards('h')<=1){
var players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(players[i].hasSkill('haoshi')&&
!players[i].isTurnedOver()&&
!players[i].hasJudge('lebu')&&
get.attitude(player,players[i])>=3&&
get.attitude(players[i],player)>=3){
return 11-get.value(card);
}
}
if(player.countCards('h')>player.hp) return 10-get.value(card);
if(player.countCards('h')>2) return 6-get.value(card);
return -1;
}
return 10-get.value(card);
},
content:function(){
'step 0'
var evt=_status.event.getParent('phaseUse');
if(evt&&evt.name=='phaseUse'&&!evt.minirerende){
var next=game.createEvent('minirerende_clear');
_status.event.next.remove(next);
evt.after.push(next);
evt.minirerende=true;
next.player=player;
next.setContent(function(){
player.storage.minirerende=0;
delete player.storage.minirerende2;
});
}
player.markAuto('minirerende2',[target]);
player.give(cards,target);
player.addTempSkill('minirerende_sha',{player:'phaseBegin'});
player.markAuto('minirerende_sha',[target]);
if(typeof player.storage.minirerende!='number') player.storage.minirerende=0;
if(player.storage.minirerende>=0){
player.storage.minirerende+=cards.length;
if(player.storage.minirerende>=2){
var list=[];
for(var i of lib.inpile){
if(get.type({name:i})!='basic'&&get.type({name:i})!='trick') continue;
if(lib.filter.cardUsable({name:i},player,event.getParent('chooseToUse'))&&player.hasUseTarget({name:i})){
list.push([get.translation(get.type({name:i})),'',i]);
if(i=='sha'){
for(var i of lib.inpile_nature){
if(lib.filter.cardUsable({name:'sha',nature:i},player,event.getParent('chooseToUse'))&&game.hasPlayer(function(current){
return player.canUse({name:'sha',nature:i},current);
})) list.push(['基本','','sha',i]);
}
}
}
}
if(list.length){
player.chooseButton(['是否视为使用一张基本牌或普通锦囊牌？',[list,'vcard']]).set('ai',function(button){
var player=_status.event.player;
var card={name:button.link[2],nature:button.link[3]};
return player.getUseValue(card);
});
}
else event.finish();
player.storage.minirerende=-1;
}
else event.finish();
}
else event.finish();
'step 1'
if(result&&result.bool&&result.links[0]){
var card={name:result.links[0][2],nature:result.links[0][3]};
player.chooseUseTarget(card,true);
}
},
ai:{
threaten:0.8,
fireAttack:true,
order:function(skill,player){
if(player.hp<player.maxHp&&player.storage.minirerende<2&&player.countCards('h')>1) return 10;
return 4;
},
result:{
target:function(player,target){
if(target.hasSkillTag('nogain')) return 0;
if(ui.selected.cards.length&&ui.selected.cards[0].name=='du'){
if(target.hasSkillTag('nodu')) return 0;
return -10;
}
if(target.hasJudge('lebu')) return 0;
var nh=target.countCards('h');
var np=player.countCards('h');
if(player.hp==player.maxHp||player.storage.minirerende<0||player.countCards('h')<=1){
if(nh>=np-1&&np<=player.hp&&!target.hasSkill('haoshi')) return 0;
}
return Math.max(1,5-nh);
}
},
effect:{
target:function(card,player,target){
if(player==target&&get.type(card)=='equip'){
if(player.countCards('e',{subtype:get.subtype(card)})){
if(game.hasPlayer(function(current){
return current!=player&&get.attitude(player,current)>0;
})) return 0;
}
}
},
},
},
subSkill:{
sha:{
charlotte:true,
onremove:true,
mark:true,
marktext:"<span style='text-decoration: line-through;'>杀</span>",
intro:{content:'$使用红色【杀】无法指定你为目标'},
mod:{
targetEnabled:function(card,player,target){
if(card.name=='sha'&&get.color(card)=='red'&&target.getStorage('minirerende_sha').includes(player)) return false;
},
},
},
},
},
minijijiang:{
audio:'jijiang1_re_liubei',
audioname2:{Mbaby_liushan:'jijiang1_liushan'},
unique:true,
group:['minijijiang1','minijijiang3'],
zhuSkill:true,
filter:function(event,player){
if(!game.hasPlayer(function(current){
return current!=player&&current.group=='shu';
})) return false;
return !event.jijiang&&(event.type!='phase'||!player.hasSkill('jijiang3'));
},
enable:['chooseToUse','chooseToRespond'],
viewAs:{name:'sha'},
filterCard:function(){return false},
selectCard:-1,
ai:{
order:function(){
return get.order({name:'sha'})+0.3;
},
respondSha:true,
skillTagFilter:function(player){
if(!game.hasPlayer(function(current){
return current!=player&&current.group=='shu';
})) return false;
},
},
},
minijijiang1:{
audio:'jijiang1_re_liubei',
audioname2:{Mbaby_liushan:'jijiang1_liushan'},
trigger:{player:['useCardBegin','respondBegin']},
logTarget:'targets',
filter:function(event,player){
return event.skill=='minijijiang';
},
forced:true,
content:function(){
'step 0'
delete trigger.skill;
trigger.getParent().set('jijiang',true);
'step 1'
if(event.current==undefined) event.current=player.next;
if(event.current==player){
player.addTempSkill('jijiang3');
event.finish();
trigger.cancel();
trigger.getParent().goto(0);
}
else if(event.current.group=='shu'){
var next=event.current.chooseToRespond('是否替'+get.translation(player)+'打出一张杀？',{name:'sha'});
next.set('ai',function(){
var event=_status.event;
return (get.attitude(event.player,event.source)-2);
});
next.set('source',player);
next.set('jijiang',true);
next.set('skillwarn','替'+get.translation(player)+'打出一张杀');
next.noOrdering=true;
next.autochoose=lib.filter.autoRespondSha;
}
else{
event.current=event.current.next;
event.redo();
}
'step 2'
if(result.bool){
game.asyncDraw([player,event.current]);
trigger.card=result.card;
trigger.cards=result.cards;
trigger.throw=false;
if(typeof event.current.ai.shown=='number'&&event.current.ai.shown<0.95){
event.current.ai.shown+=0.3;
if(event.current.ai.shown>0.95) event.current.ai.shown=0.95;
}
event.finish();
}
else{
event.current=event.current.next;
event.goto(1);
}
}
},
minijijiang3:{
audio:'jijiang1_re_liubei',
audioname2:{Mbaby_liushan:'jijiang1_liushan'},
trigger:{global:['useCard','respond']},
filter:function(event,player){
return event.card.name=='sha'&&event.player!=player&&event.player.group=='shu'&&event.player.isIn()&&
player!=_status.currentPhase;
},
usable:1,
direct:true,
content:function(){
'step 0'
trigger.player.chooseBool('激将：是否令'+get.translation(player)+'摸一张牌？').set('ai',function(){
var evt=_status.event;
return get.attitude(evt.player,evt.getParent().player)>0;
});
'step 1'
if(result.bool){
player.logSkill('minijijiang');
trigger.player.line(player,'fire');
player.draw();
}
else player.storage.counttrigger.minijijiang3--;
},
},
jijiang1_re_liubei:{audio:2},
jijiang1_liushan:{audio:2},
//马超
miniyuma:{
group:'mashu',
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
var evt=event.getl(player);
if(!evt||evt.player!=player||!evt.es||!evt.es.length) return false;
return evt.es.some(card=>get.type(card)=='equip'&&['equip3','equip4'].includes(get.subtype(card)));
},
forced:true,
content:function(){
player.draw(2*trigger.getl(player).es.filter(card=>get.type(card)=='equip'&&['equip3','equip4'].includes(get.subtype(card))).length);
},
},
minitieji:{
audio:'retieji',
shaRelated:true,
trigger:{player:'useCardToPlayered'},
check:function(event,player){
return get.attitude(player,event.target)<0;
},
filter:function(event,player){
return event.card.name=='sha';
},
logTarget:'target',
preHidden:true,
content:function(){
'step 0'
trigger.target.addTempSkill('fengyin');
player.judge(function(card){
if(get.color(card)=='red') return 2;
return -1;
}).judge2=function(result){
return result.bool;
};
'step 1'
if(result.bool) trigger.getParent().directHit.add(trigger.target);
else player.draw(2);
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(get.attitude(player,arg.target)>0||arg.card.name!='sha'||!ui.cardPile.firstChild||get.color(ui.cardPile.firstChild,player)!='red') return false;
},
},
},
minijuxiang:{
group:'juxiang1',
audio:'juxiang1',
preHidden:['juxiang1','minijuxiang'],
trigger:{global:['useCardAfter','loseAfter']},
filter:function(event,player){
if(event.name=='useCard') return (event.cards.filterInD().length||game.hasPlayer2(function(current){
return current.getHistory('damage',function(evt){
return evt.card&&evt.card==event.card;
}).length;
}))&&event.card.name=='nanman'&&event.player!=player;
if(event.type!='discard'||event.getlx===false) return false;
var cards=event.cards2.slice(0);
var evt=event.getl(player);
if(evt&&evt.cards) cards.removeArray(evt.cards);
return cards.filter(function(card){
return card.name=='nanman'&&get.position(card,true)=='d';
}).length;
},
forced:true,
content:function(){
'step 0'
if(trigger.name=='lose'){
var cards=trigger.cards2.slice(0);
var evt=trigger.getl(player);
if(evt&&evt.cards) cards.removeArray(evt.cards);
player.gain(cards.filter(function(card){
return card.name=='nanman'&&get.position(card,true)=='d';
}),'gain2');
event.finish();
return;
}
if(trigger.cards.filterInD().length) player.gain(trigger.cards.filterInD(),'gain2');
'step 1'
if(game.hasPlayer2(function(current){
return current.getHistory('damage',function(evt){
return evt.card&&evt.card==trigger.card;
}).length;
})) player.draw();
},
ai:{
effect:{
target:function(card){
if(card.name=='nanman') return [0,1];
},
},
},
},
minilieren:{
shaRelated:true,
audio:'lieren',
trigger:{source:'damageSource'},
filter:function(event,player){
if(event._notrigger.includes(event.player)) return false;
return event.card&&event.card.name=='sha'&&event.getParent().name=='sha'&&
event.player.isIn()&&event.player.countCards('h');
},
check:function(event,player){
return get.attitude(player,event.player)<0;
},
content:function(){
'step 0'
player.discardPlayerCard('h',trigger.player,true);
'step 1'
if(get.number(result.cards[0])<get.number(trigger.cards[0])) player.gain(result.cards,'gain2','log');
},
},
minirelieren:{
group:'minirelieren_gain',
shaRelated:true,
audio:'lieren',
audioname2:{Mmiao_zhurong:'minimiaolieren'},
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
return event.card.name=='sha'&&player.canCompare(event.target);
},
check:function(event,player){
return get.attitude(player,event.target)<0;
},
content:function(){
'step 0'
player.chooseToCompare(trigger.target).clear=false;
'step 1'
if(result.bool){
if(trigger.target.countGainableCards(player,'he')) player.gainPlayerCard(trigger.target,true,'he');
ui.clear();
}
},
subSkill:{
gain:{
trigger:{player:'chooseToCompareAfter'},
filter:function(event,player){
if(event.getParent().name!='minirelieren') return false;
return get.position(event.card2,true)=='o';
},
direct:true,
content:function(){
player.gain(trigger.card2,'gain2');
},
},
},
},
minitishen:{
group:'minitishen_tieji',
audio:'retishen',
trigger:{target:'shaUnhirt'},
filter:function(event,player){
if(player.isPhaseUsing()) return false;
if(get.itemtype(event.cards)!='cards') return false;
for(var i=0;i<event.cards.length;i++){
if(event.cards[i].isInPile()){
return true;
}
}
return false;
},
forced:true,
locked:false,
content:function(){
var list=[];
for(var i=0;i<trigger.cards.length;i++){
if(trigger.cards[i].isInPile()){
list.push(trigger.cards[i]);
}
}
player.gain(list,'gain2');
},
subSkill:{
tieji:{
audio:'retishen',
trigger:{player:'shaMiss'},
filter:function(event,player){
return player.isPhaseUsing();
},
forced:true,
locked:false,
content:function(){
player.addTempSkill('minitishen_tieji2',['phaseBefore','phaseZhunbeiAfter','phaseJudgeAfter','phaseDrawAfter','phaseUseAfter','phaseDiscardAfter','phaseJieshuAfter','phaseAfter']);
},
},
tieji2:{
charlotte:true,
audio:'retishen',
trigger:{player:'useCard'},
filter:function(event,player){
return event.card.name=='sha';
},
forced:true,
content:function(){
player.removeSkill('minitishen_tieji2');
trigger.directHit.addArray(game.players);
trigger.baseDamage++;
},
},
},
},
miniyajiao:{
group:'miniyajiao_count',
audio:'reyajiao',
trigger:{player:['useCard','respond']},
filter:function(event,player){
return player!=_status.currentPhase&&get.itemtype(event.cards)=='cards';
},
frequent:true,
content:function(){
'step 0'
var card=get.cards()[0];
event.card=card;
player.showCards(card,get.translation(player)+'发动了【涯角】');
player.chooseTarget('是否令一名角色获得'+get.translation(card)+'？').set('ai',function(target){
var att=get.attitude(_status.event.player,target);
if(_status.event.du){
if(target.hasSkillTag('nodu')) return 0;
return -att;
}
if(att>0) return att+Math.max(0,5-target.countCards('h'));
return att;
}).set('du',event.card.name=='du');
'step 1'
if(result.bool){
var target=result.targets[0];
player.line(target);
target.gain(card,'gain2');
}
else{
player.$throw(card,1000);
game.delayx();
game.cardsDiscard(card);
game.log(card,'进入了弃牌堆');
}
},
ai:{
effect:{
target:function(card,player,target){
if(get.tag(card,'respond')&&target.countCards('h')>1) return [1,0.2];
},
},
},
subSkill:{
count:{
trigger:{player:['useCardAfter','respondAfter']},
forced:true,
popup:false,
filter:function(event,player){
return lib.translate[event.skill]=='龙胆'&&player==_status.currentPhase;
},
content:function(){
player.addTempSkill('miniyajiao_draw');
player.addMark('miniyajiao_draw',1,false);
},
},
draw:{
audio:'reyajiao',
trigger:{player:'phaseJieshuBegin'},
forced:true,
charlotte:true,
onremove:true,
filter:function(event,player){
return player.hasMark('miniyajiao_draw');
},
content:function(){
player.draw(player.countMark('miniyajiao_draw'));
},
},
},
},
miniliegong:{
mod:{
targetInRange:function(card,player,target){
if(card.name=='sha') return true;
},
},
shaRelated:true,
audio:'liegong',
trigger:{player:'useCardToPlayered'},
check:function(event,player){
return get.attitude(player,event.target)<=0;
},
forced:true,
locked:false,
logTarget:'target',
filter:function(event,player){
if(event.card.name!='sha') return false;
return event.target.countCards('h')<=player.countCards('h')||event.target.hp>=player.hp;
},
preHidden:true,
content:function(){
if(trigger.target.countCards('h')<=player.countCards('h')) trigger.getParent().directHit.push(trigger.target);
if(trigger.target.hp>=player.hp){
var id=trigger.target.playerid;
var map=trigger.getParent().customArgs;
if(!map[id]) map[id]={};
if(typeof map[id].extraDamage!='number'){
map[id].extraDamage=0;
}
map[id].extraDamage++;
}
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(arg.card.name!='sha') return false;
return arg.target.countCards('h')<=player.countCards('h');
},
},
},
minikuanggu:{
audio:'kuanggu',
trigger:{source:'damageSource'},
frequent:true,
content:function(){
'step 0'
event.count=trigger.num;
'step 1'
event.count--;
player.chooseDrawRecover(true);
'step 2'
if(event.count>0&&player.hasSkill('minikuanggu')) event.goto(1);
},
},
minidangxian:{
audio:'dangxian',
audioname2:{Mbaby_guansuo:'dangxian_guansuo'},
trigger:{player:'phaseBegin'},
forced:true,
locked:false,
content:function(){
var next=player.phaseUse();
event.next.remove(next);
trigger.next.push(next);
var card=get.cardPile(function(card){
return card.name=='sha';
});
if(card) player.gain(card,'gain2');
game.updateRoundNumber();
},
},
minifuli:{
audio:'fuli',
skillAnimation:true,
animationColor:'soil',
unique:true,
limited:true,
enable:'chooseToUse',
mark:true,
filter:function(event,player){
if(event.type!='dying') return false;
if(player!=event.dying) return false;
return true;
},
content:function(){
'step 0'
player.awakenSkill('minifuli');
event.num=game.countGroup();
player.recover(event.num-player.hp);
'step 1'
var num2=num-player.countCards('h');
if(num2) player.draw(num2);
'step 2'
if(num>3) player.turnOver();
player.storage.minifuli=true;
},
ai:{
save:true,
skillTagFilter:function(player,arg,target){
return player==target;
},
result:{
player:10
},
},
intro:{content:'limited'},
},
miniqimou:{
unique:true,
limited:true,
audio:'qimou',
enable:'phaseUse',
filter:function(event,player){
return player.hp>=1;
},
mark:true,
intro:{content:'limited'},
skillAnimation:true,
animationColor:'orange',
content:function(){
'step 0'
var shas=player.getCards('h','sha');
var num,map={},list=[];
if(player.hp>=4&&shas.length>=3) num=3;
else if(player.hp>=3&&shas.length>=2) num=2;
else num=1;
for(var i=1;i<=player.hp;i++){
var cn=get.cnNumber(i,true);
map[cn]=i;
list.push(cn);
}
event.map=map;
player.awakenSkill('miniqimou');
player.storage.miniqimou=true;
player.chooseControl(list,function(){
return get.cnNumber(_status.event.goon,true);
}).set('prompt','奇谋：选择失去任意点体力').set('goon',num);
'step 1'
var num=event.map[result.control]||1;
player.storage.miniqimou2=num;
player.loseHp(num);
player.draw();
player.addTempSkill('miniqimou2');
},
ai:{
order:2,
result:{
player:function(player){
if(player.hp==1) return 0;
var shas=player.getCards('h','sha');
if(!shas.length) return 0;
var card=shas[0];
if(!lib.filter.cardEnabled(card,player)) return 0;
if(lib.filter.cardUsable(card,player)) return 0;
var mindist;
if(player.hp>=4&&shas.length>=3) mindist=4;
else if(player.hp>=3&&shas.length>=2) mindist=3;
else mindist=2;
if(game.hasPlayer(function(current){
return (current.hp<=mindist-1&&
get.distance(player,current,'attack')<=mindist&&
player.canUse(card,current,false)&&
get.effect(current,card,player,player)>0);
})) return 1;
return 0;
},
},
},
},
miniqimou2:{
onremove:true,
mod:{
cardUsable:function(card,player,num){
if(typeof player.storage.miniqimou2=='number'&&card.name=='sha') return num+player.storage.miniqimou2;
},
globalFrom:function(from,to,distance){
if(typeof from.storage.miniqimou2=='number') return distance-from.storage.miniqimou2;
},
},
},
minilianhuan:{
audio:'lianhuan1',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minilianhuan'),[1,2]).set('ai',function(target){
var player=_status.event.player,eff=get.effect(target,{name:'tiesuo'},player,player);
if(target==player) return eff*5;
return eff;
});
'step 1'
if(result.bool){
result.targets.sortBySeat()
player.logSkill('minilianhuan',result.targets);
for(var target of result.targets) target.link();
if(result.targets.includes(player)) player.draw();
}
},
},
tiaoxin_ol_jiangwei:{audio:2},
tiaoxin_sp_jiangwei:{audio:2},
tiaoxin_xiahouba:{audio:2},
guanxing_ol_jiangwei:{audio:2},
minitiaoxin:{
audio:'tiaoxin_ol_jiangwei',
audioname2:{
Mbaby_sp_jiangwei:'tiaoxin_sp_jiangwei',
Mbaby_xiahouba:'tiaoxin_xiahouba',
},
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current.countCards('h')&&current!=player;
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minitiaoxin'),function(card,player,target){
return target.countCards('h')&&target!=player;
},function(target){
var player=_status.event.player;
if(target.countDiscardableCards(player,'h')>=2) return get.effect(target,{name:'guohe_copy2'},player,player)*2;
return get.effect(target,{name:'guohe_copy2'},player,player);
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minitiaoxin',target);
player.discardPlayerCard(target,'h',[1,2],true);
}
else event.finish();
'step 2'
var bool=false;
for(var i of result.cards){
if(i.name=='sha') bool=true;
}
if(bool&&player.countCards('he')) player.chooseToDiscard(true,'he');
},
},
minizhiji:{
derivation:'miniguanxing',
audio:'olzhiji',
unique:true,
juexingji:true,
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
filter:function(event,player){
return player.countCards('h')==0;
},
skillAnimation:true,
animationColor:'fire',
content:function(){
'step 0'
player.awakenSkill('minizhiji');
player.chooseDrawRecover(2,true);
'step 1'
player.loseMaxHp();
player.addSkillLog('miniguanxing');
},
},
minihuoshou:{
group:['huoshou1','minihuoshou2'],
audio:'huoshou1',
ai:{
effect:{
target:function(card,player,target){
if(card.name=='nanman') return 0;
},
},
},
},
minihuoshou2:{
audio:'huoshou1',
trigger:{global:'useCard'},
filter:function(event,player){
return event.card&&event.card.name=='nanman'&&event.player!=player;
},
forced:true,
content:function(){
trigger.customArgs.default.customSource=player;
player.draw();
},
},
minifangquan:{
audio:'fangquan',
trigger:{player:'phaseUseBefore'},
filter:function(event,player){
return !player.hasSkill('minifangquan2');
},
direct:true,
preHidden:true,
content:function(){
'step 0'
var fang=player.countMark('minifangquan2')==0&&player.hp>=2&&player.countCards('h')<=player.hp+1;
player.chooseBool(get.prompt2('minifangquan')).set('ai',function(){
if(!_status.event.fang) return false;
return game.hasPlayer(function(target){
if(target.hasJudge('lebu')||target==player) return false;
if(get.attitude(player,target)>4){
return (get.threaten(target)/Math.sqrt(target.hp+1)/Math.sqrt(target.countCards('h')+1)>0);
}
return false;
});
}).set('fang',fang).setHiddenSkill(event.name);
'step 1'
if(result.bool){
player.logSkill('minifangquan');
trigger.cancel();
player.addTempSkill('minifangquan2');
}
},
},
minifangquan2:{
trigger:{player:'phaseEnd'},
forced:true,
popup:false,
audio:false,
onremove:true,
content:function(){
'step 0'
player.chooseTarget('放权：请选择进行额外回合的目标角色',lib.filter.notMe).ai=function(target){
if(target.hasJudge('lebu')) return -1;
if(get.attitude(player,target)>4){
return get.threaten(target)/Math.sqrt(target.hp+1)/Math.sqrt(target.countCards('h')+1);
}
return -1;
};
'step 1'
var target=result.targets[0];
player.line(target,'fire');
target.markSkillCharacter('minifangquan',player,'放权','进行一个额外回合');
target.insertPhase();
target.addSkill('minifangquan3');
}
},
minifangquan3:{
trigger:{player:['phaseAfter','phaseCancelled']},
forced:true,
popup:false,
audio:false,
content:function(){
player.unmarkSkill('minifangquan');
player.removeSkill('minifangquan3');
},
},
miniruoyu:{
unique:true,
keepSkill:true,
derivation:'minijijiang',
audio:'ruoyu',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.isMinHp();
},
forced:true,
juexingji:true,
zhuSkill:true,
skillAnimation:true,
animationColor:'fire',
content:function(){
'step 0'
player.awakenSkill('miniruoyu');
player.gainMaxHp();
'step 1'
player.recover();
player.addSkillLog('minijijiang');
if(player.isZhu) event.trigger('zhuUpdate');
},
},
minixuanhuo:{
audio:'xinxuanhuo',
trigger:{player:'phaseDrawBegin1'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minixuanhuo'),function(card,player,target){
return player!=target;
}).set('ai',function(target){
var att=get.attitude(_status.event.player,target);
if(target.countCards('he')==0) return 0;
if(att<0) return -att*2;
return att/3;
});
'step 1'
if(result.bool){
player.logSkill('minixuanhuo',result.targets);
event.target=result.targets[0];
}
else event.finish();
'step 2'
player.chooseTarget('眩惑：请选择'+get.translation(target)+'出杀的目标',true,function(card,player,target){
return _status.event.target.canUse('sha',target);
}).set('ai',function(target){
var player=_status.event.player;
if(!_status.event.target.canUse('sha',target)&&get.attitude(player,_status.event.target)<0) return 8+get.attitude(player,target);
if(!_status.event.target.inRange(target)&&get.attitude(player,_status.event.target)<0) return 5+get.attitude(player,target);
return get.effect(target,{name:'sha'},_status.event.target,player);
}).set('target',event.target);
'step 3'
if(result.bool&&result.targets.length){
game.log(player,'指定的出杀目标为',result.targets[0]);
event.target.line(result.targets[0]);
target.chooseToUse(function(card,player,event){
if(get.name(card)!='sha') return false;
return lib.filter.filterCard.apply(this,arguments);
},'眩惑：对'+get.translation(result.targets[0])+'使用一张杀，或令'+get.translation(player)+'获得你的一张牌').set('targetRequired',true).set('complexSelect',true).set('filterTarget',function(card,player,target){
if(target!=_status.event.sourcex&&!ui.selected.targets.includes(_status.event.sourcex)) return false;
return lib.filter.filterTarget.apply(this,arguments);
}).set('sourcex',result.targets[0]);
}
else event.bool=true;
'step 4'
if(event.bool||result.bool==false) player.gainPlayerCard('he',event.target,true);
},
},
minienyuan:{
group:'minienyuan_draw',
subfrequent:['draw'],
audio:'xinenyuan2',
trigger:{player:'gainEnd'},
filter:function(event,player){
return event.source&&event.source.isIn()&&event.source!=player;
},
logTarget:'source',
check:function(event,player){
return get.attitude(player,event.source)>0;
},
content:function(){
trigger.source.draw();
},
subSkill:{
draw:{
audio:'xinenyuan',
trigger:{global:'gainAfter'},
frequent:true,
prompt:'是否发动【恩怨】摸一张牌？',
filter:function(event,player){
if(event.player!=player){
var evt=event.getl(player);
return evt&&evt.hs&&evt.hs.length>0;
}
return false;
},
preHidden:true,
content:function(){
player.draw();
},
},
},
},
miniqianxi:{
audio:'qianxi',
trigger:{player:'phaseZhunbeiBegin'},
preHidden:true,
content:function(){
'step 0'
player.draw(2).gaintag=['miniqianxi'];
player.chooseToDiscard('hes',true,function(card,player){
return card.hasGaintag('miniqianxi');
});
'step 1'
player.removeGaintag('miniqianxi');
if(!result.bool){
event.finish();
return;
}
event.color=get.color(result.cards[0]);
player.chooseTarget(function(card,player,target){
return player!=target&&get.distance(player,target)<=1;
},true).set('ai',function(target){
return -get.attitude(_status.event.player,target);
});
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target,'green');
game.log(player,'选择了',target);
target.storage.miniqianxi2=event.color;
target.addTempSkill('miniqianxi2');
//game.addVideo('storage',target,['miniqianxi2',event.color]);
}
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(!arg.target.hasSkill('miniqianxi2')) return false;
if(arg.card.name=='sha') return arg.target.storage.miniqianxi2=='red'&&(!arg.target.getEquip('bagua')||player.hasSkillTag('unequip',false,{
name:arg.card?arg.card.name:null,
target:arg.target,
card:arg.card
})||player.hasSkillTag('unequip_ai',false,{
name:arg.card?arg.card.name:null,
target:arg.target,
card:arg.card
}));
return arg.target.storage.miniqianxi2=='black';
}
},
},
miniqianxi2:{
forced:true,
mark:true,
audio:false,
content:function(){
player.removeSkill('miniqianxi2');
delete player.storage.miniqianxi2;
},
mod:{
cardEnabled2:function(card,player){
if(get.color(card)==player.storage.miniqianxi2&&get.position(card)=='h') return false;
},
},
intro:{
content:function(color){
return '不能使用或打出'+get.translation(color)+'手牌';
},
},
},
minilongyin:{
audio:'relongyin',
shaRelated:true,
trigger:{global:'useCard'},
direct:true,
filter:function(event,player){
return event.card.name=='sha'&&player.countCards('he')&&event.player.isPhaseUsing();
},
content:function(){
'step 0'
game.delayx();
var go=false;
if(get.attitude(player,trigger.player)>0){
if(get.color(trigger.card)=='red'){
go=true;
}
else if(trigger.addCount===false||!trigger.player.isPhaseUsing()) go=false;
else if(!trigger.player.hasSkill('paoxiao')&&
!trigger.player.hasSkill('tanlin3')&&
!trigger.player.hasSkill('zhaxiang2')&&
!trigger.player.hasSkill('fengnu')&&
!trigger.player.getEquip('zhuge')){
var nh=trigger.player.countCards('h');
if(player==trigger.player){
go=(player.countCards('h','sha')>0);
}
else if(nh>=4){
go=true;
}
else if(player.countCards('h','sha')){
if(nh==3){
go=Math.random()<0.8;
}
else if(nh==2){
go=Math.random()<0.5;
}
}
else if(nh>=3){
if(nh==3){
go=Math.random()<0.5;
}
else if(nh==2){
go=Math.random()<0.2;
}
}
}
}
var next=player.chooseToDiscard(get.prompt('minilongyin'),'弃置一张牌'+(get.color(trigger.card)=='red'?'并摸一张牌':'')+'，令'+get.translation(trigger.player)+'本次使用的【杀】不计入使用次数','he');
next.logSkill=['minilongyin',trigger.player];
next.set('ai',function(card){
if(_status.event.go){
return 6-get.value(card);
}
return 0;
});
next.set('go',go);
'step 1'
if(result.bool){
if(trigger.addCount!==false){
trigger.addCount=false;
trigger.player.getStat().card.sha--;
}
if(get.color(trigger.card)=='red'){
player.draw();
}
if(get.suit(result.cards[0],player)==get.suit(trigger.card)) player.restoreSkill('jiezhong');
}
},
ai:{expose:0.2},
},
minixiansi:{
audio:'xiansi',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.countDiscardableCards(player,'he');
});
},
direct:true,
content:function(){
'step 0'
event.bilibili=false;
player.chooseTarget(get.prompt2('minixiansi'),[1,2],function(card,player,target){
return target!=player&&target.countDiscardableCards(player,'he');
}).set('ai',function(target){
var num=1,player=_status.event.player;
if(!target.inRange(player)||!target.canUse({name:'sha',isCard:true},player,false)) num=3;
return get.effect(target,{name:'guohe_copy2'},player,player)*num;
});
'step 1'
if(result.bool){
if(result.targets.length==1) event.bilibili=true;
result.targets.sortBySeat();
player.logSkill('minixiansi',result.targets);
event.targets=result.targets;
}
else event.finish();
'step 2'
if(event.targets.length){
var target=event.targets.shift();
event.target=target;
player.discardPlayerCard(target,'he',true);
}
else event.goto(4);
'step 3'
if(result.bool){
if(result.cards[0].original=='e'&&target.inRange(player)&&target.canUse({name:'sha',isCard:true},player,false)) target.useCard({name:'sha',isCard:true},player,false);
event.goto(2);
}
'step 4'
if(event.bilibili) player.draw();
},
},
minibingzheng:{
audio:'bingzheng',
trigger:{player:'phaseUseEnd'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minibingzheng')).set('ai',function(target){
var player=_status.event.player;
var att=get.attitude(player,target);
var nh=target.countCards('h');
if(att>0){
if(nh==target.hp-1){
if(player==target) return att+1;
return att+2;
}
if(player==target&&player.needsToDiscard()) return att/3;
return att;
}
else{
if(nh==target.hp+1) return -att;
if(nh==0) return 0;
return -att/2;
}
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minibingzheng',target);
if(target.countCards('h')){
player.chooseControl().set('choiceList',[
'令'+get.translation(target)+'摸一张牌',
'令'+get.translation(target)+'弃置一张手牌'
]).set('ai',function(){
return get.attitude(player,target)>0?0:1;
});
}
else event._result={index:0};
}
else event.finish();
'step 2'
if(result.index==0) target.draw();
else target.chooseToDiscard('h',true);
'step 3'
if(target.countCards('h')==target.hp){
player.draw();
if(target==player){event.finish();return;}
var next=player.chooseCard('是否交给'+get.translation(target)+'一张牌？','he');
next.set('ai',function(card){
if(_status.event.du&&card.name=='du') return 114514+1919810;
if(get.position(card)!='h') return 0;
if(_status.event.shan&&card.name=='shan') return 11;
if(_status.event.goon) return 10-get.value(card);
return -get.value(card);
});
if(get.attitude(player,target)>1&&player.countCards('h','shan')>1&&player.countCards('h')>target.countCards('h')) next.set('shan',true);
if(get.attitude(player,target)>0&&player.needsToDiscard()) next.set('goon',true);
if(get.attitude(player,target)<=0) next.set('du',true);
}
else event.finish();
'step 4'
if(result.bool) target.gain(result.cards,player,'giveAuto');
},
},
miniliangzhu:{
audio:'liangzhu',
trigger:{global:'recoverAfter'},
filter:function(event,player){
return event.player.isPhaseUsing();
},
direct:true,
content:function(){
'step 0'
var list=['摸一张','摸两张'];
if(trigger.player.getEquips(1).length) list.push('拿武器');
list.push('cancel2');
player.chooseControl(list).set('prompt',get.prompt2('miniliangzhu')).set('ai',function(){
var player=_status.event.player;
var trigger=_status.event.getTrigger();
if(get.attitude(player,trigger.player)>0) return '摸两张';
return '摸一张';
});
'step 1'
if(result.control!='cancel2'){
player.logSkill('miniliangzhu',trigger.player);
switch(result.control){
case '摸一张':
player.draw();
break;
case '摸两张':
trigger.player.draw(2);
break;
case '拿武器':
player.gain(trigger.player.getEquips(1),trigger.player,'give');
break;
}
}
},
},
xiaoji_sp_sunshangxiang:{audio:2},
minifanxiang:{
skillAnimation:true,
animationColor:'fire',
audio:'fanxiang',
unique:true,
juexingji:true,
forceunique:true,
derivation:['xiaoji','miniwujian'],
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.getAllHistory('useSkill',function(evt){
return evt.skill=='miniliangzhu';
}).length;
},
forced:true,
content:function(){
player.awakenSkill('minifanxiang');
player.gainMaxHp();
player.recover();
for(var i of lib.skill.minifanxiang.derivation) player.addSkillLog(i);
player.removeSkill('miniliangzhu');
},
},
miniwujian:{
enable:'phaseUse',
filter:function(event,player){
return player.countCards('e',function(card){
return !player.getStorage('miniwujian_alka').includes(get.subtype(card));
});
},
filterTarget:function(card,player,target){
return target!=player&&player.canUse({name:'sha'},target);
},
position:'e',
filterCard:function(card,player){
return !player.getStorage('miniwujian_alka').includes(get.subtype(card));
},
check:function(card){
return 1/(get.value(card)||0.5);
},
content:function(){
player.addTempSkill('miniwujian_alka');
player.markAuto('miniwujian_alka',[get.subtype(cards[0])]);
player.useCard({name:'sha'},target,false);
},
ai:{
order:function(item,player){
return get.order({name:'sha'},player)+1;
},
result:{
target:function(player,target){
return get.effect(target,{name:'sha'},player,target);
},
},
},
subSkill:{alka:{charlotte:true,onremove:true}},
},
minijujian:{
audio:'xinjujian',
trigger:{player:['phaseZhunbeiBegin','phaseJieshuBegin']},
filter:function(event,player){
return player.countCards('he')>player.countCards('he',{type:'basic'});
},
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
filterTarget:true,
filterCard:function(card,player){
return get.type(card)!='basic'&&lib.filter.cardDiscardable(card,player);
},
ai1:function(card){
if(get.tag(card,'damage')&&get.type(card)=='trick'){
return 20;
}
return 9-get.value(card);
},
ai2:function(target){
var att=get.attitude(_status.event.player,target);
if(att>0){
if(target.isTurnedOver()) att+=3;
if(target.hp==1) att+=3;
}
return att;
},
position:'he',
prompt:get.prompt2('minijujian')
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minijujian',target);
player.discard(result.cards);
if(target.hp==target.maxHp&&
!target.isTurnedOver()&&
!target.isLinked()){
target.draw(2);
event.finish();
}
else{
var controls=['draw_card'];
if(target.hp<target.maxHp){
controls.push('recover_hp');
}
if(target.isLinked()|target.isTurnedOver()){
controls.push('reset_character');
}
target.chooseControl(controls).ai=function(){
if(target.isTurnedOver()){
return 'reset_character';
}
else if(target.hp==1&&target.maxHp>2){
return 'recover_hp';
}
else if(target.hp==2&&target.maxHp>2&&target.countCards('h')>1){
return 'recover_hp';
}
else{
return 'draw_card';
}
}
}
}
else event.finish();
'step 2'
event.control=result.control;
switch(event.control){
case 'recover_hp':event.target.recover();event.finish();break;
case 'draw_card':event.target.draw(2);event.finish();break;
case 'reset_character':if(event.target.isTurnedOver()) event.target.turnOver();break;
}
'step 3'
if(event.control=='reset_character'&&event.target.isLinked()) event.target.link();
},
},
minihuxiao:{
audio:'huxiao',
trigger:{source:'damageSource'},
forced:true,
filter:function(event,player){
if(event._notrigger.includes(event.player)) return false;
return event.hasNature('fire');
},
logTarget:'player',
content:function(){
player.addTempSkill('minihuxiao3');
player.markAuto('minihuxiao3',[trigger.player]);
},
},
minihuxiao3:{
charlotte:true,
onremove:true,
mod:{
cardUsableTarget:function(card,player,target){
if(player.getStorage('minihuxiao3').includes(target)) return true;
},
},
intro:{content:'players'},
},
miniwuji:{
skillAnimation:true,
animationColor:'orange',
audio:'wuji',
trigger:{player:'phaseJieshuBegin'},
forced:true,
unique:true,
juexingji:true,
filter:function(event,player){
return player.getStat('damage')>=3;
},
content:function(){
'step 0'
player.awakenSkill('miniwuji');
player.gainMaxHp();
player.recover();
'step 1'
var card=get.cardPile('qinglong','field');
if(card) player.gain(card,'gain2','log');
},
},
minisanyao:{
audio:'sanyao',
enable:'phaseUse',
usable:1,
selectCard:function(){
var player=_status.event.player;
return [Math.max(1,ui.selected.targets.length),Math.min(4,game.players.length-1)];
},
selectTarget:function(){
return ui.selected.cards.length;
},
filterTarget:lib.filter.notMe,
check:function(card){
var player=_status.event.player;
if(game.countPlayer(function(target){
return target!=player&&get.effect(target,'sanyao',player,player)>0;
})<=ui.selected.cards.length) return 0;
return 7-get.value(card);
},
position:'he',
filterCard:true,
content:function(){
target.damage('nocard');
},
ai:{
result:{
target:function(player,target){
var disbool=false;
if(player.hasSkill('rezhiman')){
if(target.countCards('j')&&get.attitude(player,target)>0){
return 1;
}
if(target.countCards('he',function(card){
return card.name=='tengjia'||get.value(card)>0;
})){
disbool=true;
}
}
var damage=get.damageEffect(target,player);
if(disbool&&get.attitude(player,target)<0) return Math.min(-1,damage);
return damage;
},
},
order:7,
},
},
minizhuandui:{
shaRelated:true,
audio:'zhuandui',
group:['zhuandui_use','zhuandui_respond'],
trigger:{player:['chooseToCompareAfter','compareMultipleAfter'],target:['chooseToCompareAfter','compareMultipleAfter']},
filter:function(event,player){
if(event.preserve) return false;
if(player==event.player) return event.num1>event.num2;
return event.num2>event.num1;
},
forced:true,
locked:false,
content:function(){
player.draw();
},
},
minizuilun:{
audio:'xinfu_zuilun',
trigger:{player:'phaseEnd'},
check:function(event,player){
var num=0;
if(player.hasHistory('lose',function(evt){
return evt.type=='discard';
})) num++;
if(!player.isMinHandcard()) num++;
if(!player.getStat('damage')) num++;
if(num==0) return player.hp>=2;
return true;
},
prompt:function(event,player){
var num=3;
if(player.hasHistory('lose',function(evt){
return evt.type=='discard';
})) num--;
if(!player.isMinHandcard()) num--;
if(!player.getStat('damage')) num--;
return get.prompt('minizuilun')+'（可获得'+get.cnNumber(num)+'张牌）';
},
content:function(){
'step 0'
event.num=0;
event.cards=get.cards(4);
game.cardsGotoOrdering(cards);
if(!player.hasHistory('lose',function(evt){
return evt.type=='discard';
})) event.num++;
if(player.isMinHandcard()) event.num++;
if(player.getStat('damage')) event.num++;
'step 1'
var prompt='罪论：将'+get.cnNumber(4-num)+'牌置于牌堆顶';
if(num>0) prompt+='，并获得其余的牌';
var next=player.chooseToMove(prompt,true);
if(num>0){
next.set('list',[
['牌堆顶',cards],
['获得'],
]);
next.set('filterMove',function(from,to,moved){
if(to==1&&moved[0].length<=4-_status.event.num) return false;
return true;
});
next.set('filterOk',function(moved){
return moved[0].length==4-_status.event.num;
});
}
else{
next.set('list',[
['牌堆顶',cards],
]);
}
next.set('num',num);
next.set('processAI',function(list){
var check=function(card){
var player=_status.event.player;
var next=player.next;
var att=get.attitude(player,next);
var judge=next.getCards('j')[tops.length];
if(judge) return get.judge(judge)(card)*att;
return next.getUseValue(card)*att;
}
var cards=list[0][1].slice(0),tops=[];
while(tops.length<4-_status.event.num){
list.sort(function(a,b){
return check(b)-check(a);
});
tops.push(cards.shift());
}
return [tops,cards];
});
'step 2'
if(result.bool){
var list=result.moved[0];
var num=list.length-1;
for(var i=0;i<list.length;i++){
event.cards.remove(list[num-i]);
ui.cardPile.insertBefore(list[num-i],ui.cardPile.firstChild);
}
}
'step 3'
game.updateRoundNumber();
if(event.cards.length){
player.gain(event.cards,'draw');
game.log(player,'获得了'+get.cnNumber(event.cards.length)+'张牌');
event.finish();
}
else if(game.countPlayer()>1){
player.chooseTarget('请选择一名角色，与其一同失去1点体力',true,lib.filter.notMe).set('ai',function(target){
return -get.attitude(_status.event.player,target);
});
}
else event.finish();
'step 4'
if(result.bool){
player.line(result.targets[0],'fire');
player.loseHp();
result.targets[0].loseHp();
}
},
},
miniqiangwu:{
audio:'qiangwu',
enable:'phaseUse',
usable:1,
content:function(){
'step 0'
player.judge();
'step 1'
if(get.position(result.card,true)=='d') player.gain(result.card,'gain2');
player.storage.qiangwu=result.number;
player.addTempSkill('qiangwu3','phaseUseAfter');
},
ai:{
order:11,
result:{player:1},
},
},
minifumian:{
audio:'fumian',
trigger:{player:'phaseZhunbeiBegin'},
direct:true,
content:function(){
'step 0'
if(player.storage.minifumian_choice=='draw'){
player.chooseControlList(get.prompt('minifumian'),'摸牌阶段多摸一张牌','使用红色牌可以多选择两个目标',function(event,player){
if(player.hp==1||player.countCards('h')<=1) return 0;
return 1;
});
}
else if(player.storage.minifumian_choice=='red'){
player.chooseControlList(get.prompt('minifumian'),'摸牌阶段多摸两张牌','使用红色牌可以多选择一个目标',function(event,player){
return 0;
});
}
else{
player.chooseControlList(get.prompt('minifumian'),'摸牌阶段多摸一张牌','使用红色牌可以多选择一个目标',function(event,player){
if(player.hp==1||player.countCards('h')<player.hp) return 0;
return 1;
});
}
'step 1'
if(player.storage.minifumian_choice=='draw'){
if(result.index==0) player.storage.minifumian_draw=1;
else if(result.index==1){
player.storage.minifumian_red=2;
delete player.storage.minifumian_choice;
}
}
else if(player.storage.minifumian_choice=='red'){
if(result.index==0){
player.storage.minifumian_draw=2;
delete player.storage.minifumian_choice;
}
else if(result.index==1) player.storage.minifumian_red=1;
}
else{
if(result.index==0){
player.storage.minifumian_draw=1;
player.storage.minifumian_choice='draw';
}
else if(result.index==1){
player.storage.minifumian_red=1;
player.storage.minifumian_choice='red';
}
}
if(result.index==0){
player.logSkill('minifumian');
player.addTempSkill('minifumian_draw');
}
else if(result.index==1){
player.logSkill('minifumian');
player.addTempSkill('minifumian_red');
}
},
subSkill:{
draw:{
trigger:{player:'phaseDrawBegin2'},
forced:true,
popup:false,
onremove:true,
filter:function(event,player){
return typeof player.storage.minifumian_draw=='number'&&!event.numFixed;
},
content:function(){
trigger.num+=player.storage.minifumian_draw;
},
},
red:{
trigger:{player:'useCard2'},
direct:true,
mark:true,
onremove:true,
intro:{content:'使用红色牌可以多选择#个目标'},
filter:function(event,player){
if(get.color(event.card)!='red') return false;
var info=get.info(event.card);
if(info.allowMultiple==false) return false;
if(event.targets&&!info.multitarget){
if(game.hasPlayer(function(current){
return lib.filter.targetEnabled2(event.card,player,current)&&!event.targets.includes(current);
})) return true;
}
return false;
},
content:function(){
'step 0'
var prompt2='额外指定';
if(player.storage.minifumian_red==2) prompt2+='至多两';
else prompt2+='一';
prompt2+='名'+get.translation(trigger.card)+'的目标'
player.chooseTarget([1,player.storage.minifumian_red],get.prompt('minifumian'),function(card,player,target){
var player=_status.event.player;
if(_status.event.targets.includes(target)) return false;
return lib.filter.targetEnabled2(_status.event.card,player,target);
}).set('prompt2',prompt2).set('ai',function(target){
var trigger=_status.event.getTrigger();
var player=_status.event.player;
return get.effect(target,trigger.card,player,player);
}).set('targets',trigger.targets).set('card',trigger.card);
'step 1'
if(result.bool){
if(!event.isMine()) game.delayx();
event.targets=result.targets;
}
else event.finish();
'step 2'
if(event.targets){
player.logSkill('minifumian',event.targets);
trigger.targets.addArray(event.targets);
}
},
},
},
},
minidaiyan:{
init:function(player){
game.addGlobalSkill('bolliaoyi_check');
},
getList:function(player){
var list=[],history=player.actionHistory;
for(var i=history.length-2;i>=0;i--){
if(history[i].isSkipped) continue;
if(history[i].isMe){
for(var evt of history[i].useSkill){
if(evt.skill=='minidaiyan') list.addArray(evt.targets);
}
break;
}
}
return list;
},
audio:'daiyan',
trigger:{player:'phaseJieshuBegin'},
direct:true,
content:function(){
'step 0'
var str='',list=lib.skill.minidaiyan.getList(player);
if(list.length) str+='（上回合对'+get.translation(list)+'发动过此技能）';
player.chooseTarget(get.prompt('minidaiyan')+str,lib.translate.minidaiyan_info).set('ai',function(target){
var player=_status.event.player,list=lib.skill.minidaiyan.getList(player);
return get.attitude(player,target)*(list.includes(target)?1:3);
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minidaiyan',target);
var tao=get.cardPile2(function(card){
return get.suit(card)=='heart'&&get.type(card)=='basic';
});
if(tao) target.gain(tao,'gain2');
}
else event.finish();
'step 2'
if(!lib.skill.minidaiyan.getList(player).includes(target)) player.draw();
},
},
minijili:{
audio:'gzjili',
inherit:'gzjili',
group:'minijili_zhiheng',
subSkill:{
zhiheng:{
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return player.countCards('he');
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt('minijili'),'弃置一张牌并摸一张牌').set('ai',lib.skill.zhiheng.check).set('complexCard',true).logSkill='minijili';
'step 1'
if(result.bool) player.draw();
},
},
},
},
miniqiaoshi:{
audio:'qiaoshi',
inherit:'qiaoshi',
filter:function(event,player){
return event.player!=player&&event.player.countCards('h')>=player.countCards('h')&&event.player.isIn();
},
},
miniyanyu:{
group:'miniyanyu2',
audio:'yanyu',
inherit:'yanyu',
},
miniyanyu2:{
trigger:{player:'phaseEnd'},
filter:function(event,player){
return player.getHistory('useSkill',evt=>evt.skill=='miniyanyu').length;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('miniyanyu'),'令一名角色摸两张牌（若该角色为你则改为摸一张牌）').set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target)*(target==player?0.7:1);
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('miniyanyu',target);
target.draw(target==player?1:2);
}
},
},
minizhengnan:{
derivation:['minirewusheng','minidangxian','rezhiman'],
audio:'zhengnan',
trigger:{global:'dying'},
filter:function(event,player){
return !player.getStorage('minizhengnan').includes(event.player);
},
frequent:true,
content:function(){
'step 0'
player.markAuto('minizhengnan',[trigger.player]);
player.recover(trigger.player==player?2:1);
var list=lib.skill.minizhengnan.derivation.filter(skill=>!player.hasSkill(skill));
if(list.length){
player.draw(trigger.player==player?2:1);
event.list=list;
}
else{
player.draw(trigger.player==player?4:3);
event.finish();
}
'step 1'
if(event.list.length==1) event._result={control:event.list[0]};
else player.chooseControl(event.list).set('prompt','征南：选择获得下列技能中的一个').set('ai',function(){
if(event.list.includes('minidangxian')) return 'minidangxian';
return 0;
});
'step 2'
player.addSkillLog(result.control);
},
intro:{content:'已因$发动过技能'},
},
minixiefang:{
getNum:function(){
var num=game.countPlayer(function(current){
return current.hasSex('female');
});
return Math.max(1,num);
},
mod:{
maxHandcard:function(player,num){
return num+lib.skill.minixiefang.getNum();
},
globalFrom:function(from,to,distance){
return distance-lib.skill.minixiefang.getNum();
},
},
},
minifengpo:{
shaRelated:true,
audio:'fengpo',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
if(!['sha','juedou'].includes(event.card.name)) return false;
if(player!=_status.currentPhase) return false;
return player.getHistory('useCard',function(evt){
return ['sha','juedou'].includes(evt.card.name);
}).indexOf(event.getParent())==0;
},
direct:true,
content:function(){
'step 0'
player.chooseControl('摸牌','加伤','cancel2').set('prompt',get.prompt2('minifengpo'));
'step 1'
if(result.control!='cancel2'){
player.logSkill('minifengpo',trigger.target);
var num=Math.min(4,trigger.target.countCards('h',{color:'red'}));
if(result.control=='摸牌') player.draw(num);
else{
var trigger2=trigger.getParent();
if(typeof trigger2.baseDamage!='number') trigger2.baseDamage=1;
trigger2.baseDamage+=num;
}
}
},
},
//王平
minifeijun:{
intro:{content:'已对$发动过〖飞军〗'},
audio:'nzry_feijun',
enable:'phaseUse',
filter:function(event,player){
if(!player.countCards('he')) return false;
return game.hasPlayer(function(current){
if(current==player) return false;
return current.countCards('he');
});
},
usable:1,
chooseButton:{
dialog:function(event,player){
var dialog=ui.create.dialog('飞军：弃置一张牌，然后…','hidden');
dialog.add([[
['give','令一名有牌的其他角色交给你一张牌'],
['discard','令一名装备区有牌的其他角色弃置一张装备区里的牌']
],'textbutton']);
return dialog;
},
/*
//手搓一个框用来对比一下
dialog:function(event,player){
var list=[
'令一名有牌的其他角色交给你一张牌',
'令一名装备区有牌的其他角色弃置一张装备区里的牌',
];
var buttons=['give','discard'];
var choiceList=ui.create.dialog('飞军：弃置一张牌，然后…','forcebutton','hidden');
for(var i=0;i<list.length;i++){
var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
var bool=lib.skill.minifeijun.chooseButton.filter({link:buttons[i]},player);
if(!bool) str+='<div style="opacity:0.5">';
str+=list[i];
if(!bool) str+='</div>';
str+='</div>';
var next=choiceList.add(str);
next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
next.firstChild.link=buttons[i];
for(var j in lib.element.button){
next[j]=lib.element.button[j];
}
choiceList.buttons.add(next.firstChild);
}
return choiceList;
},
*/
filter:function(button,player){
if(button.link=='discard') return game.hasPlayer(function(current){
if(current==player) return false;
return current.countCards('e');
});
return true;
},
check:function(button,player){
if(button.link=='discard') return 1;
return 2;
},
backup:function(links){
return get.copy(lib.skill['minifeijun_'+links[0]]);
},
prompt:function(links){
if(links[0]=='damage') return '弃置一张牌，令一名有牌的其他角色交给你一张牌';
return '弃置一张牌，令一名装备区有牌的其他角色弃置一张装备区的牌';
},
},
ai:{
order:9,
result:{player:1},
},
subSkill:{
backup:{audio:'nzry_feijun'},
give:{
audio:'nzry_feijun',
filterTarget:function(card,player,target){
if(target==player) return false;
return target.countCards('he');
},
filterCard:true,
position:'he',
content:function(){
'step 0'
player.markAuto('minifeijun',[target]);
target.chooseCard('he',true,'飞军：请交给'+get.translation(player)+'一张牌').set('ai',function(card){
return -get.value(card);
});
'step 1'
if(result.bool) player.gain(result.cards,target,'giveAuto');
},
ai:{
result:{
player:function(player,target){
var list=player.getStorage('minifeijun');
return get.effect(target,{name:'shunshou_copy2'},player,player)*(list.includes(target)?1:3);
},
},
},
},
discard:{
audio:'nzry_feijun',
filterTarget:function(card,player,target){
if(target==player) return false;
return target.countCards('e');
},
filterCard:true,
position:'he',
content:function(){
player.markAuto('minifeijun',[target]);
target.chooseToDiscard('e',true,'飞军：请弃置一张装备区的牌');
},
ai:{
result:{
player:function(player,target){
var list=player.getStorage('minifeijun');
return get.effect(target,{name:'guohe_copy2'},player,player)*(list.includes(target)?1:3);
},
},
},
},
},
},
minibinglve:{
audio:'nzry_binglve',
trigger:{player:'useSkill'},
filter:function(event,player){
return event.skill=='minifeijun_backup';
},
forced:true,
content:function(){
'step 0'
player.draw();
'step 1'
var target=trigger.targets[0];
var list=player.getStorage('minifeijun');
if(!list.includes(target)){
player.draw(list.filter(function(i){
return i.isIn();
}).length+1);
}
},
ai:{combo:'minifeijun'},
},
miniqiaoshui:{
mod:{
ignoredHandcard:function(card,player){
if(get.type2(card)=='trick') return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&get.type2(card)=='trick') return false;
},
},
audio:'qiaoshui',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h')&&game.hasPlayer(function(target){
return player.canCompare(target);
})&&!player.hasSkill('miniqiaoshui_silent');
},
filterTarget:function(card,player,target){
return player.canCompare(target);
},
content:function(){
'step 0'
player.chooseToCompare(target);
'step 1'
if(result.bool) player.addTempSkill('qiaoshui3');
else player.addTempSkill('miniqiaoshui_silent');
},
subSkill:{silent:{charlotte:true}},
ai:{
order:function(item,player){
if(player.countCards('h',function(card){
return player.hasValueTarget(card);
})) return 10;
return 1;
},
result:{
target:function(player,target){
if(player.countCards('h',function(card){
return player.hasValueTarget(card);
})){
if(player.hasSkill('qiaoshui3')) return 0;
var nd=!player.needsToDiscard();
if(player.hasCard(function(card){
if(get.position(card)!="h") return false;
var val=get.value(card)
if(nd&&val<0) return true;
if(val<=5){
return get.number(card)>=12;
}
if(val<=6){
return get.number(card)>=13;
}
return false;
})) return -1;
return 0;
}
return -1;
},
},
},
},
miniqirang:{
group:'miniqirang_gain',
subfrequent:['gain'],
audio:'qirang',
trigger:{player:'useCard2'},
filter:function(event,player){
if(get.type(event.card)!='trick') return false;
if(!event.targets||event.targets.length!=1) return false;
var info=get.info(event.card);
if(info.allowMultiple==false) return false;
if(event.targets&&!info.multitarget){
if(game.hasPlayer(function(current){
return !event.targets.includes(current)&&lib.filter.targetEnabled2(event.card,player,current)&&lib.filter.targetInRange(event.card,player,current);
})) return true;
}
return false;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('miniqirang'),'为'+get.translation(trigger.card)+'增加一个目标',function(card,player,target){
var player=_status.event.player;
return lib.filter.targetEnabled2(_status.event.card,player,target)&&lib.filter.targetInRange(_status.event.card,player,target);
}).set('ai',function(target){
var trigger=_status.event.getTrigger();
var player=_status.event.player;
return get.effect(target,trigger.card,player,player)*(_status.event.targets.includes(target)?-1:1);
}).set('targets',trigger.targets).set('card',trigger.card);
'step 1'
if(result.bool){
if(!event.isMine()&&!event.isOnline()) game.delayx();
event.targets=result.targets;
}
else event.finish();
'step 2'
if(targets){
player.logSkill('miniqirang',targets);
trigger.targets.addArray(targets);
}
},
ai:{
effect:{
target:function(card,player,target,current){
if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
},
},
},
subSkill:{
gain:{
audio:'qirang',
trigger:{player:'useCard'},
filter:function(event,player){
return get.type(event.card)=='equip';
},
frequent:true,
content:function(){
var card=get.cardPile(function(card){
return get.type2(card)=='trick';
});
if(card) player.gain(card,'gain2');
},
},
},
},
miniyuhua:{
mod:{
ignoredHandcard:function(card,player){
if(get.type(card)!='basic') return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&get.type(card)!='basic') return false;
},
},
audio:'yuhua',
trigger:{player:'phaseJieshuBegin'},
forced:true,
locked:false,
content:function(){
'step 0'
var cards=get.cards(2);
game.cardsGotoOrdering(cards);
var next=player.chooseToMove();
next.set('list',[
['牌堆顶',cards],
['牌堆底'],
['自己获得'],
]);
next.set('prompt','羽化：将一张牌移动到牌堆顶或牌堆底，然后获得另一张牌');
next.set('filterOk',function(moved){
return moved[2].length==1;
});
next.set('processAI',function(list){
var cards=list[0][1],player=_status.event.player;
var target=(_status.event.getTrigger().name=='phaseZhunbei')?player:player.next;
var att=get.sgn(get.attitude(player,target));
var top=[];
var judges=target.getCards('j');
var stopped=false;
if(player!=target||!target.hasWuxie()){
for(var i=0;i<judges.length;i++){
var judge=get.judge(judges[i]);
cards.sort(function(a,b){
return (judge(b)-judge(a))*att;
});
if(judge(cards[0])*att<0){
stopped=true;break;
}
else{
top.unshift(cards.shift());
}
}
}
var bottom;
if(!stopped){
cards.sort(function(a,b){
return (get.value(b,player)-get.value(a,player))*att;
});
while(cards.length){
if((get.value(cards[0],player)<=5)==(att>0)) break;
top.unshift(cards.shift());
}
}
bottom=cards;
var TempCards1=top.slice(0);
var TempCards2=bottom.slice(0);
var gain=TempCards1.addArray(TempCards2)[TempCards1.addArray(TempCards2).length-1];
top.remove(gain);
bottom.remove(gain);
return [top,bottom,[gain]];
});
'step 1'
var top=result.moved[0];
var bottom=result.moved[1];
var gain=result.moved[2];
top.reverse();
for(var i=0;i<top.length;i++){
ui.cardPile.insertBefore(top[i],ui.cardPile.firstChild);
}
for(i=0;i<bottom.length;i++){
ui.cardPile.appendChild(bottom[i]);
}
player.popup(get.cnNumber(top.length)+'上'+get.cnNumber(bottom.length)+'下');
game.log(player,'将'+get.cnNumber(top.length)+'张牌置于牌堆顶');
game.updateRoundNumber();
player.gain(gain,'draw');
game.log(player,'获得了一张牌');
},
},
minibazhen:{
audio:'bazhen',
group:'bazhen_bagua',
trigger:{player:'judgeEnd'},
filter:function(event,player){
return event.skill&&event.skill.indexOf('bagua')!=-1&&!event.result.bool;
},
forced:true,
content:function(){
player.draw();
},
},
minihuoji:{
group:'minihuoji_viewAs',
audio:'huoji',
trigger:{player:'chooseToDiscardBegin'},
filter:function(event){
return event.getParent().name=='huogong';
},
direct:true,
content:function(){
'step 0'
var cards=get.cards(4,true);
player.chooseButton(['火计：是否选择其中一张牌作为弃置牌？',cards]).set('filterButton',function(button){
var evt=_status.event;
_status.event=_status.event.getTrigger();
var check=_status.event.filterCard(button.link,_status.event.player);
_status.event=evt;
return check;
}).set('ai',button=>1+Math.random());
'step 1'
if(result.bool){
player.logSkill('minihuoji');
trigger.getParent().dialog.close();
game.addVideo('cardDialog',null,trigger.getParent().videoId);
game.broadcast('closeDialog',trigger.getParent().videoId);
var cards=result.links;
player.$throw(cards,1000);
game.delayx();
game.cardsDiscard(cards);
game.log(player,'弃置了',cards,'#g（源自牌堆）');
trigger.finish();
trigger.getParent()._result={bool:true};
}
'step 2'
game.updateRoundNumber();
},
ai:{fireAttack:true},
subSkill:{viewAs:{inherit:'rehuoji',audio:'huoji'}},
},
minixushen:{
derivation:'decadezhennan',
audio:'xinfu_xushen',
trigger:{player:'dying'},
limited:true,
skillAnimation:true,
animationColor:'orange',
filter:function(event,player){
return player.hp<1;
},
content:function(){
player.awakenSkill('minixushen');
player.addSkillLog('decadezhennan');
player.addTempSkill('minixushen2');
trigger.minixushen=true;
player.recover();
},
},
minixushen2:{
trigger:{player:'dyingAfter'},
forced:true,
popup:false,
charlotte:true,
filter:function(event,player){
return event.minixushen==true&&!game.hasPlayer(function(current){
return current.name=='Mbaby_guansuo'||current.name2=='Mbaby_guansuo';
});
},
content:function(){
'step 0'
player.chooseTarget(lib.filter.notMe,'许身：是否令一名其他角色选择是否将其武将牌替换为“关索”并令其摸三张牌？').set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
'step 1'
if(!result.bool){
event.finish();
return;
}
var target=result.targets[0];
event.target=target;
player.line(target,'fire');
target.chooseBool('许身：是否将自己的一张武将牌替换为“关索”并令'+get.translation(player)+'摸三张牌？');
'step 2'
if(result.bool){
if(target.name2) target.chooseControl(target.name1,target.name2).set('prompt','请选择要更换的武将牌');
else event._result={control:target.name};
}
else event.goto(4);
'step 3'
target.reinit(result.control,'Mbaby_guansuo');
if(target.name=='Mbaby_guansuo'&&target.group!='shu') target.changeGroup('shu');
if(_status.characterlist){
_status.characterlist.add(result.control);
_status.characterlist.remove('Mbaby_guansuo');
}
'step 4'
target.draw(3);
},
},
//花蔓
minisouying:{
audio:'souying',
trigger:{player:'useCardToPlayered',target:'useCardToTargeted'},
filter:function(event,player){
if(!player.countCards('he')) return false;
if(!event.targets||event.targets.length!=1||event.player==event.target) return false;
if(event.card.name!='sha'&&get.type(event.card)!='trick') return false;
return event.player!=event.target;
},
direct:true,
usable:1,
content:function(){
'step 0'
var next=player.chooseToDiscard('he'),prompt;
if(event.triggername=='useCardToTargeted'){
event.target=trigger.player;
prompt='令'+get.translation(trigger.card)+'对你无效';
next.set('goon',-get.effect(player,trigger.card,trigger.player,player));
}
else{
event.target=trigger.targets[0];
prompt='弃置一张牌，并获得'+get.translation(trigger.cards.filterInD());
next.set('goon',get.value(trigger.cards.filterInD()));
}
next.set('prompt',get.prompt('minisouying',event.target));
next.set('prompt2',prompt)
next.set('ai',function(card){
return _status.event.goon-get.value(card);
});
next.set('logSkill',['minisouying',event.target]);
'step 1'
if(result.bool){
if(event.triggername=='useCardToPlayered') player.gain(trigger.cards.filterInD(),'gain2');
else trigger.excluded.add(player);
}
else player.storage.counttrigger.minisouying--;
},
},
minizhanyuan:{
unique:true,
derivation:'hmxili',
audio:'zhanyuan',
trigger:{player:'mansiAfter'},
filter:function(event,player){
return _status.currentPhase&&_status.currentPhase==player&&player.countMark('mansi')>7;
},
skillAnimation:true,
animationColor:'soil',
forced:true,
juexingji:true,
content:function(){
'step 0'
player.awakenSkill('minizhanyuan');
'step 1'
player.chooseTarget('战缘：是否选择一名其他角色？','令一名其他角色和自己一同获得技能〖系力〗，然后失去技能〖蛮嗣〗',lib.filter.notMe).set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target,'fire');
player.addSkillLog('hmxili');
target.addSkillLog('hmxili');
player.removeSkill('mansi');
}
},
},
minifuhan:{
derivation:'minifuhan_faq',
inherit:'refuhan',
content:function(){
'step 0'
if(player.storage.fanghun) player.draw(player.storage.fanghun);
player.removeMark('fanghun',player.storage.fanghun);
player.awakenSkill('minifuhan');
'step 1'
var EditList=((!_status.connectMode&&lib.config.extension_活动武将_PingJianName)?lib.config.extension_活动武将_PingJianName:lib.skill.minipingjian.getList()).filter(i=>lib.character[i]);
var list=EditList.filter(i=>lib.character[i][1]=='shu');
var players=game.players.concat(game.dead);
for(var i=0;i<players.length;i++){
list.remove(players[i].name);
list.remove(players[i].name1);
list.remove(players[i].name2);
}
list=list.randomGets(Math.max(4,game.countPlayer()));
var skills=[];
for(var i of list){
skills.addArray((lib.character[i][3]||[]).filter(function(skill){
var info=get.info(skill);
return info&&!info.zhuSkill&&!info.limited&&!info.juexingji&&!info.hiddenSkill&&!info.charlotte&&!info.dutySkill;
}));
}
if(!list.length||!skills.length){event.finish();return;}
if(player.isUnderControl()){
game.swapPlayerAuto(player);
}
var switchToAuto=function(){
_status.imchoosing=false;
event._result={
bool:true,
skills:skills.randomGets(2),
};
if(event.dialog) event.dialog.close();
if(event.control) event.control.close();
};
var chooseButton=function(list,skills){
var event=_status.event;
if(!event._result) event._result={};
event._result.skills=[];
var rSkill=event._result.skills;
var dialog=ui.create.dialog('请选择获得至多两个技能',[list,'character'],'hidden');
event.dialog=dialog;
var table=document.createElement('div');
table.classList.add('add-setting');
table.style.margin='0';
table.style.width='100%';
table.style.position='relative';
for(var i=0;i<skills.length;i++){
var td=ui.create.div('.shadowed.reduce_radius.pointerdiv.tdnode');
td.link=skills[i];
table.appendChild(td);
td.innerHTML='<span>'+get.translation(skills[i])+'</span>';
td.addEventListener(lib.config.touchscreen?'touchend':'click',function(){
if(_status.dragged) return;
if(_status.justdragged) return;
_status.tempNoButton=true;
setTimeout(function(){
_status.tempNoButton=false;
},500);
var link=this.link;
if(!this.classList.contains('bluebg')){
if(rSkill.length>=2) return;
rSkill.add(link);
this.classList.add('bluebg');
}
else{
this.classList.remove('bluebg');
rSkill.remove(link);
}
});
}
dialog.content.appendChild(table);
dialog.add('　　');
dialog.open();

event.switchToAuto=function(){
event.dialog.close();
event.control.close();
game.resume();
_status.imchoosing=false;
};
event.control=ui.create.control('ok',function(link){
event.dialog.close();
event.control.close();
game.resume();
_status.imchoosing=false;
});
for(var i=0;i<event.dialog.buttons.length;i++){
event.dialog.buttons[i].classList.add('selectable');
}
game.pause();
game.countChoose();
};
if(event.isMine()){
chooseButton(list,skills);
}
else if(event.isOnline()){
event.player.send(chooseButton,list,skills);
event.player.wait();
game.pause();
}
else{
switchToAuto();
}
'step 2'
var map=event.result||result;
if(map&&map.skills&&map.skills.length){
for(var i of map.skills) player.addSkillLog(i);
}
game.broadcastAll(function(list){
game.expandSkills(list);
for(var i of list){
var info=lib.skill[i];
if(!info) continue;
if(!info.audioname2) info.audioname2={};
info.audioname2.old_yuanshu='weidi';
}
},map.skills);
'step 3'
if(player.isMinHp()) player.recover();
},
},
//夏侯霸
minibaobian:{
derivation:['minitiaoxin','new_repaoxiao','minishensu'],
audio:'baobian',
trigger:{player:'damageEnd'},
filter:function(event,player){
for(var i of lib.skill.minibaobian.derivation){
if(!player.hasSkill(i,null,null,false)) return true;
}
return false;
},
forced:true,
content:function(){
for(var i of lib.skill.minibaobian.derivation){
if(!player.hasSkill(i,null,null,false)){
player.addSkillLog(i);
break;
}
}
},
ai:{
maixie:true,
effect:{
target:function(card,player,target){
if(get.tag(card,'damage')&&!target.hasSkill('minitiaoxin',null,null,false)){
if(!target.hasFriend()) return;
if(target.hp>=4) return [0,1];
}
},
},
},
},
//严颜
//终于摆脱答辩转换技设计了
minijuzhan:{
group:'minijuzhan_gain',
audio:'nzry_juzhan_1',
trigger:{target:'useCardToTargeted'},
prompt2:'当你成为其他角色【杀】的目标后，你可以与其各摸一张牌，然后其本回合内不能再对你使用牌。',
filter:function(event,player){
return event.card.name=='sha';
},
logTarget:'player',
content:function(){
'step 0'
game.asyncDraw([player,trigger.player]);
trigger.player.addTempSkill('minijuzhan_use1');
trigger.player.markAuto('minijuzhan_use1',[player]);
'step 1'
game.delayx();
},
subSkill:{
gain:{
audio:'nzry_juzhan_1',
trigger:{player:'useCardToPlayered'},
prompt2:'当你使用【杀】指定一名角色为目标后，你可以获得其一张牌，然后你本回合内不能再对其使用红色【杀】',
filter:function(event,player){
return event.card.name=='sha'&&event.target.countGainableCards(player,'he');
},
check:function(event,player){
return get.effect(event.target,{name:'guohe_copy2'},player,player)>0;
},
logTarget:'target',
content:function(){
'step 0'
player.gainPlayerCard(trigger.target,'he',true);
'step 1'
player.addTempSkill('minijuzhan_use2');
player.markAuto('minijuzhan_use2',[trigger.target]);
},
},
use1:{
charlotte:true,
onremove:true,
marktext:'拒',
intro:{content:'不能对$使用牌'},
mod:{
playerEnabled:function(card,player,target){
if(player.getStorage('minijuzhan_use1').includes(target)) return false;
},
},
},
use2:{
charlotte:true,
onremove:true,
marktext:'战',
intro:{content:'不能对$使用红色【杀】'},
mod:{
playerEnabled:function(card,player,target){
if(player.getStorage('minijuzhan_use2').includes(target)&&get.name(card)=='sha'&&get.color(card)=='red') return false;
},
},
},
},
},
//陈到
miniwanglie:{
mod:{
targetInRange:function(card,player,target,now){
if(player.isPhaseUsing()) return true;
},
},
audio:'drlt_wanglie',
trigger:{player:'useCard'},
filter:function(event,player){
return player.isPhaseUsing()&&(event.card.name=='sha'||get.type(event.card)=='trick');
},
preHidden:true,
check:function(event,player){
if(['wuzhong','kaihua','dongzhuxianji'].includes(event.card.name)) return false;
player._wanglie_temp=true;
var eff=0;
for(var i of event.targets){
eff+=get.effect(i,event.card,player,player);
}
delete player._wanglie_temp;
if(eff<0) return true;
if(!player.countCards('h',function(card){
return player.hasValueTarget(card,null,true);
})) return true;
if(get.tag(event.card,'damage')&&!player.needsToDiscard()&&!player.countCards('h',function(card){
return get.tag(card,'damage')&&player.hasValueTarget(card,null,true);
})) return true;
return false;
},
prompt2:function(event){
return '令'+get.translation(event.card)+'不能被响应，回合结束时摸等同于此牌造成的伤害数的牌，然后本回合不能再使用牌';
},
locked:false,
content:function(){
trigger.nowuxie=true;
trigger.directHit.addArray(game.players);
player.addTempSkill('miniwanglie2');
trigger.card.miniwanglie=true;
},
ai:{
pretao:true,
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(tag=='pretao') return true;
if(player._wanglie_temp) return false;
player._wanglie_temp=true;
var bool=function(){
if(['wuzhong','kaihua','dongzhuxianji'].includes(arg.card.name)) return false;
if(get.attitude(player,arg.target)>0||!player.isPhaseUsing()) return false;
var cards=player.getCards('h',function(card){
return card!=arg.card&&(!arg.card.cards||!arg.card.cards.includes(card));
});
var sha=player.getCardUsable('sha');
if(arg.card.name=='sha') sha--;
cards=cards.filter(function(card){
if(card.name=='sha'&&sha<=0) return false;
return player.hasValueTarget(card,null,true);
});
if(!cards.length) return true;
if(!get.tag(arg.card,'damage')) return false;
if(!player.needsToDiscard()&&!cards.filter(function(card){
return get.tag(card,'damage');
}).length) return true;
return false;
}();
delete player._wanglie_temp;
return bool;
},
},
},
miniwanglie2:{
charlotte:true,
group:'drlt_wanglie2',
getNum:function(player){
var num=0;
player.getHistory('sourceDamage',function(evt){
if(evt.card&&evt.card.miniwanglie) num+=evt.num;
});
return num;
},
trigger:{player:'phaseEnd'},
filter:function(event,player){
return lib.skill.miniwanglie2.getNum(player)>0;
},
forced:true,
content:function(){
player.draw(lib.skill.miniwanglie2.getNum(player));
},
},
//李严
miniduliang:{
audio:'duliang',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(function(target){
return lib.skill.miniduliang.filterTarget(null,player,target);
});
},
filterTarget:function(card,player,target){
return player!=target&&target.countCards('h');
},
usable:1,
content:function(){
'step 0'
player.gainPlayerCard(target,'h',true);
'step 1'
var name=get.translation(target);
player.chooseControl(function(){
return '选项二';
}).set('prompt','督粮：请选择一项').set('choiceList',[
'你观看牌堆顶的两张牌，然后令'+name+'获得其中的基本牌和装备牌',
'令'+name+'于下个摸牌阶段额外摸一张牌，然后其交给你一张牌'
]);
'step 2'
if(result.control=='选项一'){
var cards=get.cards(2);
event.cards=cards;
target.viewCards('督粮',cards);
game.cardsGotoOrdering(cards);
event.cardx=cards.filter(function(card){
var type=get.type(card);
return type=='basic'||type=='equip';
});
if(!event.cardx.length) event.goto(4);
}
else{
target.addTempSkill('miniduliang2',{player:'phaseDrawAfter'});
target.addMark('miniduliang2',1,false);
player.addSkill('miniduliang3');
if(!player.storage.miniduliang3[target.playerid]) player.storage.miniduliang3[target.playerid]=0;
player.storage.miniduliang3[target.playerid]++;
event.finish();
}
'step 3'
var cardx=event.cardx;
target.gain(cardx,'draw');
game.log(target,'获得了'+get.cnNumber(cardx.length)+'张牌');
cards.removeArray(cardx);
cards.reverse();
'step 4'
for(var i=0;i<cards.length;i++){
ui.cardPile.insertBefore(cards[i],ui.cardPile.firstChild);
}
game.updateRoundNumber();
},
ai:{
order:4,
result:{
target:-1,
player:0.1
},
},
},
miniduliang2:{
charlotte:true,
onremove:true,
marktext:'粮',
intro:{
content:function(storage,player){
var str='<li>下回合的摸牌阶段额外摸'+storage+'张牌<br><li>摸牌阶段结束时须交给：';
for(var target of game.filterPlayer2()){
if(target.storage.miniduliang3&&target.storage.miniduliang3[player.playerid]) str+='<br>→'+get.translation(target)+'：'+get.translation(target.storage.miniduliang3[player.playerid])+'张牌';
}
return str;
},
},
trigger:{player:'phaseDrawBegin'},
forced:true,
content:function(){
trigger.num+=player.countMark('miniduliang2');
},
},
miniduliang3:{
init:function(player){
if(!player.storage.miniduliang3) player.storage.miniduliang3={};
},
charlotte:true,
trigger:{global:'phaseDrawEnd'},
filter:function(event,player){
if(!event.player.countCards('he')) return false;
return player.storage.miniduliang3[event.player.playerid];
},
direct:true,
content:function(){
'step 0'
var num=player.storage.miniduliang3[trigger.player.playerid];
delete player.storage.miniduliang3[trigger.player.playerid];
var cards=trigger.player.getCards('he');
if(!cards.length) event.finish();
else if(cards.length<=num) event._result={bool:true,cards:cards};
else trigger.player.chooseCard('he','督粮：将'+get.cnNumber(num)+'张牌交给'+get.translation(player),num,true);
'step 1'
if(result.bool) player.gain(result.cards,trigger.player,'giveAuto');
},
},
//刘谌
minizhanjue:{
audio:'zhanjue',
enable:'phaseUse',
filterCard:function(card){
return !card.hasGaintag('miniqinwang');
},
selectCard:-1,
position:'h',
filter:function(event,player){
var stat=player.getStat().skill;
if(stat.minizhanjue_draw&&stat.minizhanjue_draw>=3) return false;
var hs=player.getCards('h',function(card){
return !card.hasGaintag('miniqinwang');
});
if(!hs.length) return false;
for(var i=0;i<hs.length;i++){
var mod2=game.checkMod(hs[i],player,'unchanged','cardEnabled2',player);
if(mod2===false) return false;
}
return event.filterCard(get.autoViewAs({name:'juedou'},hs))
},
viewAs:{name:'juedou'},
onuse:function(links,player){
player.addTempSkill('minizhanjue_effect','phaseUseEnd');
},
ai:{
order:1,
tag:{
respond:2,
respondSha:2,
damage:1,
},
result:{
target:-1.5,
player:function(player,target){
if(player.hasSkillTag('directHit_ai',true,{
target:target,
card:{name:'juedou'},
},true)){
return 0;
}
if(get.damageEffect(target,player,target)>0&&get.attitude(player,target)>0&&get.attitude(target,player)>0){
return 0;
}
var hs1=target.getCards('h','sha');
var hs2=player.getCards('h',function(card){
return card.hasGaintag('miniqinwang')&&get.name(card)=='sha';
});
if(hs1.length>hs2.length+1){
return -2;
}
var hsx=target.getCards('h');
if(hsx.length>2&&hs2.length==0&&hsx[0].number<6){
return -2;
}
if(hsx.length>3&&hs2.length==0){
return -2;
}
if(hs1.length>hs2.length&&(!hs2.length||hs1[0].number>hs2[0].number)){
return -2;
}
return -0.5;
},
},
},
subSkill:{
effect:{
charlotte:true,
onremove:function(player){
delete player.getStat().skill.minizhanjue_draw;
},
trigger:{player:'useCardAfter'},
filter:function(event,player){
return event.skill=='minizhanjue';
},
forced:true,
popup:false,
content:function(){
'step 0'
var stat=player.getStat().skill;
if(!stat.minizhanjue_draw) stat.minizhanjue_draw=0;
stat.minizhanjue_draw++;
player.draw('nodelay');
var list=game.filterPlayer(function(current){
if(current.getHistory('damage',function(evt){
return evt.card==trigger.card;
}).length>0){
if(current==player){
stat.minizhanjue_draw++;
}
return true;
}
return false;
});
if(list.length){
list.sortBySeat();
game.asyncDraw(list);
}
'step 1'
game.delay();
'step 2'
if(player.getHistory('damage',function(evt){
return evt.card==trigger.card;
}).length){
for(var i of game.filterPlayer().filter(function(target){
return target.getHistory('sourceDamage',function(evt){
return evt.card==trigger.card&&evt.player==player;
}).length&&target.isIn()&&target.countCards('he');
})) player.discardPlayerCard(i,'he');
}
},
},
},
},
miniqinwang:{
audio:'qinwang1',
enable:'phaseUse',
usable:1,
zhuSkill:true,
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.group=='shu'&&player.hasZhuSkill('miniqinwang',current);
});
},
filterTarget:function(card,player,current){
return current!=player&&current.group=='shu'&&player.hasZhuSkill('miniqinwang',current);
},
selectTarget:-1,
content:function(){
'step 0'
if(target.hasCard(function(card){
return _status.connectMode||get.name(card,target)=='sha';
},'h')){
target.chooseCard('是否交给'+get.translation(player)+'一张基本牌？',function(card,player){
return get.type(card)=='basic';
},'h').set('goon',get.attitude(target,player)>0).set('ai',function(card){
return _status.event.goon?1:0;
});
}
else event.finish();
'step 1'
if(result.bool){
var card=result.cards[0];
target.give(card,player).gaintag.add('miniqinwang');
player.addTempSkill('miniqinwang_clear');
player.chooseBool('是否令'+get.translation(target)+'摸一张牌？');
}
else event.finish();
'step 2'
if(result.bool) target.draw();
},
ai:{
order:5,
result:{player:1},
},
subSkill:{
clear:{
charlotte:true,
onremove:function(player){
player.removeGaintag('miniqinwang');
},
},
},
},
//杨婉
miniyouyan:{
group:'miniyouyan_youyan',
audio:'youyan',
enable:'phaseUse',
usable:1,
filter:function(event,player){
return player.countCards('he');
},
filterCard:lib.filter.cardDiscardable,
selectCard:[1,Infinity],
position:'he',
check:function(card){
if(ui.selected.cards.length) return 0;
return 5-get.value(card);
},
delay:0,
prompt:'出牌阶段限一次，你可以弃置任意张牌',
content:function(){},
ai:{
order:10,
result:{player:1},
},
subSkill:{
youyan:{
audio:'youyan',
trigger:{player:'loseAfter',global:'loseAsyncAfter'},
filter:function(event,player){
if(event.type!='discard'||event.getlx===false||player!=_status.currentPhase) return false;
var evt=event.getl(player);
if(!evt||!evt.cards2||!evt.cards2.length) return false;
var list=[];
for(var i of evt.cards2){
list.add(get.suit(i,player));
if(list.length>=lib.suit.length) return false;
}
var evt=event.getParent('phaseUse');
if(evt&&evt.player==player&&!evt.miniyouyaned) return true;
var evt=event.getParent('phaseDiscard');
if(evt&&evt.player==player&&!evt.miniyouyaned) return true;
return false;
},
prompt2:'从牌堆中获得本次弃牌中没有的花色的牌各一张',
content:function(){
var evt=trigger.getParent('phaseUse');
if(evt&&evt.player==player) evt.miniyouyaned=true;
else{
var evt=trigger.getParent('phaseDiscard');
if(evt) evt.miniyouyaned=true;
}
var list=[],cards=[];
var cards2=trigger.getl(player).cards2;
for(var i of cards2){
list.add(get.suit(i,player));
}
for(var i of lib.suit){
if(list.includes(i)) continue;
var card=get.cardPile2(function(card){
return get.suit(card,false)==i;
})
if(card) cards.push(card);
}
if(cards.length) player.gain(cards,'gain2');
},
ai:{
effect:{
player_use:function(card,player,target){
if(typeof card=='object'&&player==_status.currentPhase&&player.needsToDiscard()==1&&card.cards&&card.cards.filter(function(i){
return get.position(i)=='h';
}).length>0&&!get.tag(card,'draw')&&!get.tag(card,'gain')&&!get.tag(card,'discard')) return 'zeroplayertarget';
},
},
},
},
},
},
//黄月英
minirejizhi:{
audio:'rejizhi',
audioname2:{Mbaby_lukang:'rejizhi_lukang'},
trigger:{player:'useCard'},
filter:function(event,player){
return get.type2(event.card)=='trick';
},
frequent:true,
content:function(){
'step 0'
player.draw();
'step 1'
var card=result[0];
event.card=card;
if(['basic','trick','equip'].includes(get.type2(card))){
if(['basic','trick'].includes(get.type2(card))){
player.addTempSkill('minirejizhi_'+get.type2(card));
player.addMark('minirejizhi_'+get.type2(card),1,false);
event.finish();
}
else player.chooseTarget('集智：是否将'+get.translation(card)+'置入一名其他角色的装备栏？',function(card,player,target){
return target!=player&&target.canEquip(_status.event.card);
}).set('card',card).set('ai',function(target){
var player=_status.event.player;
var card=_status.event.card;
if((player.canEquip(_status.event.card)||get.equipValue(_status.event.card,target)<0)&&get.equipValue(card)>0) return 0;
return get.attitude(player,target);
});
}
else event.finish();
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target);
player.$give(card,target,false);
game.delay(0.5);
target.equip(card);
}
},
ai:{noautowuxie:true},
subSkill:{
basic:{
mark:true,
marktext:'集',
intro:{content:'手牌上限+#'},
charlotte:true,
onremove:true,
mod:{
maxHandcard:function(player,num){
return num+player.countMark('minirejizhi_basic');
},
},
},
trick:{
mark:true,
marktext:'智',
intro:{content:'使用【杀】的额定次数+#'},
charlotte:true,
onremove:true,
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+player.countMark('minirejizhi_trick');
},
},
},
},
},
minireqicai:{
mod:{
targetInRange:function(card,player,target,now){
var type=get.type(card);
if(type=='trick'||type=='delay') return true;
},
canBeDiscarded:function(card){
if(get.position(card)=='e'&&['equip1','equip2'].includes(get.subtype(card))) return false;
},
},
},
//周仓
minizhongyong:{
audio:'zhongyong',
trigger:{player:'useCardAfter'},
filter:function(event,player){
if(event.card.name!='sha') return false;
if(event.cards.filterInD().length) return true;
var shan=[];
game.countPlayer2(function(current){
current.getHistory('useCard',function(evt){
if(evt.card.name=='shan'&&evt.getParent(3)==event) shan.addArray(evt.cards);
});
});
return shan.filterInD('d').length;
},
direct:true,
content:function(){
'step 0'
event.sha=trigger.cards.slice(0).filterInD();
event.shan=[];
game.countPlayer2(function(current){
current.getHistory('useCard',function(evt){
if(evt.card.name=='shan'&&evt.getParent(3)==trigger) event.shan.addArray(evt.cards);
});
});
event.shan.filterInD('d');
player.chooseTarget(get.prompt2('minizhongyong'),function(card,player,target){
return !_status.event.source.includes(target)&&target!=player;
}).set('ai',function(target){
return get.attitude(_status.event.player,target);
}).set('source',trigger.targets);
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minizhongyong',target);
if(event.sha.length&&event.shan.length){
player.chooseControl().set('choiceList',[
'将'+get.translation(event.sha)+'交给'+get.translation(target),
'将'+get.translation(event.shan)+'交给'+get.translation(target),
]).set('ai',function(){
return _status.event.choice;
}).set('choice',function(){
if(get.color(event.sha)!='black') return 0;
return 1;
}());
}
else event._result={index:event.sha.length?0:1};
}
else event.finish();
'step 2'
var cards=result.index==0?event.sha:event.shan;
target.gain(cards,'gain2');
event.cards=cards;
'step 3'
if(cards.filter(function(card){
return get.color(card)=='red';
}).length) target.chooseToUse('忠勇：是否使用一张【杀】？',{name:'sha'}).set('filterTarget',function(card,player,target){
return target!=_status.event.sourcex&&_status.event.sourcex.inRange(target)&&lib.filter.targetEnabled.apply(this,arguments);
}).set('sourcex',player).set('addCount',false);
'step 4'
if(cards.filter(function(card){
return get.color(card)=='black';
}).length){
player.draw('nodelay');
target.draw();
}
},
},
minidaopu:{
derivation:'qinglong_skill',
group:'wechatqinglong',
mod:{
aiOrder:function(player,card,num){
if(!player.getEquip('qinglong')) return;
if(get.itemtype(card)=='card'&&card.name=='sha'&&get.color(card)=='red') return num+0.1;
},
},
inherit:'jie',
filter:function(event,player){
if(!player.getEquip('qinglong')) return false;
return event.card&&event.card.name=='sha'&&get.color(event.card)=='red'&&event.notLink();
},
},
//吕凯
minitunan:{
audio:'xinfu_tunan',
inherit:'xinfu_tunan',
filterTarget:true,
selectTarget:[1,2],
},
//孙乾
miniqianya:{
audio:'qianya',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return get.type2(event.card)=='trick'&&player.countCards('h');
},
direct:true,
content:function(){
'step 0'
var nh=player.countCards('h');
player.chooseCardTarget({
filterCard:true,
filterTarget:lib.filter.notMe,
selectCard:[1,nh],
ai1:function(card){
var player=_status.event.player;
var cardname=_status.event.cardname;
if(_status.event.du) return -get.value(card,player,'raw');
else if(_status.event.shuimeng){
if(cardname=='wuzhong'){
if(player.needsToDiscard(2-ui.selected.cards.length)){
return 10-get.value(card,player,'raw');
}
}
else if(cardname=='guohe'){
if(player.needsToDiscard(-1-ui.selected.cards.length)){
return 10-get.value(card,player,'raw');
}
}
return 0;
}
else if(cardname=='lebu'){
if(player.needsToDiscard(1-ui.selected.cards.length)){
return 8-get.value(card,player,'raw');
}
else{
if(!ui.selected.cards.length){
return 6-get.value(card,player,'raw');
}
return 0;
}
}
else if(cardname=='shunshou'){
if(_status.event.nh<=2) return get.value(card,player,'raw');
}
else if(cardname=='huogong'){
if(player.hp==1) return get.value(card,player,'raw');
}
if(ui.selected.cards.length) return 0;
return 7-get.value(card,player,'raw');
},
ai2:function(target){
var att=get.attitude(_status.event.player,target);
var nh2=target.countCards('h');
var num=Math.sqrt(1+nh2);
var cardname=_status.event.cardname;
if(_status.event.du) return 0.5-att;
else if(_status.event.shuimeng){
return att/num;
}
else if(cardname=='lebu'){
return att/num;
}
else if(cardname=='shunshou'){
if(_status.event.nh<=2) return att/num;
}
else if(cardname=='huogong'){
if(_status.event.player.hp==1) return att/num;
}
if(_status.event.nh>nh2+1){
return att/num;
}
return 0;
},
du:player.hasCard(function(card){
return get.value(card,player,'raw')<0;
}),
shuimeng:trigger.getParent(2).name=='shuimeng',
nh:nh,
cardname:trigger.card.name,
prompt:get.prompt2('miniqianya')
});
'step 1'
if(result.bool){
player.logSkill('miniqianya',result.targets);
player.give(result.cards,result.targets[0]);
var card=get.cardPile2(function(card){
return get.type(card)!='equip';
});
if(card) player.gain(card,'gain2');
}
},
},
//甘夫人
minishushen:{
group:'minishushen_draw',
audio:'shushen',
inherit:'jsrgjishan',
usable:Infinity,
content:function(){
'step 0'
trigger.cancel();
player.loseHp();
'step 1'
if(player.isIn()&&trigger.player.isIn()){
var targets=[player,trigger.player];
targets.sortBySeat(_status.currentPhase);
targets[0].draw('nodelay');
targets[1].draw();
}
},
ai:{threaten:0.8},
subSkill:{
draw:{
trigger:{player:'recoverAfter'},
direct:true,
preHidden:true,
content:function(){
'step 0'
event.num=trigger.num||1;
'step 1'
player.chooseTarget(get.prompt2('minishushen'),lib.filter.notMe).set('ai',function(target){
return get.attitude(_status.event.player,target);
}).setHiddenSkill('minishushen');
'step 2'
if(result.bool){
player.logSkill('minishushen',result.targets);
result.targets[0].draw();
if(event.num>1){
event.num--;
event.goto(1);
}
}
},
ai:{expose:0.1},
},
},
},
minihuangsi:{
audio:'shenzhi',
unique:true,
enable:'chooseToUse',
mark:true,
limited:true,
skillAnimation:true,
animationColor:'fire',
filter:function(event,player){
if(event.type!='dying') return false;
return event.dying==player;
},
content:function(){
'step 0'
player.awakenSkill('minihuangsi');
if(player.hp<1) player.recover(1-player.hp);
event.num=player.countCards('h')+2;
player.discard(player.getCards('h'));
'step 1'
player.chooseTarget('皇思：是否令一名角色摸'+get.cnNumber(num)+'张牌？').set('ai',function(target){
return get.attitude(_status.event.player,target);
});
'step 2'
if(result.bool){
player.line('minishushen',result.targets);
result.targets[0].draw(num);
}
},
ai:{
order:0.5,
skillTagFilter:function(player,tag,target){
if(player!=target||player.storage.minihuangsi) return false;
},
save:true,
result:{
player:function(player){
if(player.hp<=0) return 10;
if(player.hp<=1&&player.countCards('he')<=1) return 10;
return 0;
},
},
threaten:function(player,target){
if(!target.storage.minihuangsi) return 0.6;
},
},
},
//刘永
minifengxiang:{
getMax:function(){
var max=0,max2=[],players=game.filterPlayer();
for(var current of players){
var num=current.countCards('h',function(card){
return card.hasGaintag('fengxiang_tag');
});
if(num>max){
max=num;
max2=[current];
}
else if(num==max) max2.push(current);
}
return max2;
},
audio:'fengxiang',
trigger:{player:'damageEnd'},
forced:true,
content:function(){
player.draw();
var targets=lib.skill.minifengxiang.getMax();
if(targets){
for(var target of targets) target.recover();
}
},
},
//糜竺
miniziyuan:{
audio:'ziyuan',
enable:'phaseUse',
filterCard:true,
selectCard:[1,Infinity],
filterTarget:lib.filter.notMe,
check:function(card){
return lib.skill.rerende.check(card);
},
discard:false,
lose:false,
delay:false,
usable:1,
content:function(){
'step 0'
player.give(cards,target);
'step 1'
var num=cards.reduce(function(num,card){
return num+(get.number(card,player)||0);
},0);
if(num>=13) target.recover();
if(num<=13) player.draw();
},
ai:{
order:7,
result:{
target:function(player,target){
return lib.skill.rerende.ai.result.target(player,target);
},
},
effect:{
target:function(card,player,target){
return lib.skill.rerende.ai.effect.target(card,player,target);
},
},
},
},
minijugu:{
audio:'jugu',
mod:{
maxHandcard:function(player,num){
return num+player.maxHp;
},
},
trigger:{player:'phaseBegin'},
filter:function(event,player){
if(typeof player.maxHp!='number'||player.maxHp<1) return false;
return player.hasUseTarget(get.autoViewAs({name:'wugu'},[]));
},
direct:true,
locked:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minijugu'),'视为对至多'+get.cnNumber(player.maxHp)+'名角色使用【五谷丰登】',[1,player.maxHp],function(card,player,target){
return player.canUse(get.autoViewAs({name:'wugu'},[]),target,false);
}).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,get.autoViewAs({name:'wugu'},[]),player,player);
});
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
player.logSkill('minijugu',targets);
player.useCard(get.autoViewAs({name:'wugu'},[]),targets,false);
}
},
},
//糜夫人
miniguixiu:{
audio:'guixiu',
trigger:{player:['phaseJieshuBegin','dying']},
filter:function(event,player){
return event.name=='phaseJieshu'||player.storage.miniguixiu;
},
forced:true,
usable:1,
content:function(){
player[player.getHp()%2==0?'recover':'draw']();
},
},
minicunsi:{
unique:true,
derivation:['miniyongjue','miniguixiux'],
audio:'cunsi',
enable:'phaseUse',
mark:true,
limited:true,
filter:function(event,player){
return player.hp>0;
},
filterTarget:lib.filter.notMe,
skillAnimation:true,
animationColor:'orange',
content:function(){
'step 0'
player.awakenSkill('minicunsi');
target.addSkillLog('miniyongjue');
'step 1'
player.storage.miniguixiu=true;
'step 2'
var num=player.hp;
player.loseHp(num);
target.draw(num+1);
},
ai:{
order:4,
expose:0.5,
result:{
target:function(player,target){
//if(!player.countCards('hs',{name:['tao','jiu']})) return 0;
return lib.skill.cunsi.ai.result.target(player,target);
},
},
},
},
miniyongjue:{
audio:'yongjue',
trigger:{global:'useCardAfter',player:'damageBegin3'},
filter:function(event,player){
if(!event.card||event.card.name!='sha') return false;
if(event.name=='damage') return typeof get.number(event.card)=='number'&&((_status.connectMode&&player.countCards('he'))||player.getDiscardableCards(player,'he').some(card=>{
if(typeof get.number(card,player)!='number') return false;
return get.number(card,player)>=get.number(event.card);
}));
if(!event.cards||!event.cards.filterInD().length||event.player==player) return false;
var evt=event.getParent('phaseUse');
return evt&&evt.player==event.player&&event.player.getHistory('useCard',function(evt2){
return evt2.card.name=='sha'&&evt2.getParent('phaseUse')==evt;
}).indexOf(event)==0;
},
direct:true,
frequent:true,
content:function(){
'step 0'
if(trigger.name=='useCard') player.chooseBool(get.prompt('miniyongjue'),'获得'+get.translation(trigger.cards.filterInD())).set('frequentSkill','miniyongjue');
else{
var num=get.number(trigger.card);
player.chooseToDiscard(get.prompt('miniyongjue'),'弃置一张点数大于等于'+num+'的牌，防止此伤害','he',function(card,player){
return get.number(card,player)>=_status.event.num;
}).set('ai',function(card){
var player=_status.event.player;
return player.hp*player.hp-get.value(card);
}).set('num',num).logSkill='miniyongjue';
}
'step 1'
if(result.bool){
if(trigger.name=='useCard'){
player.logSkill('miniyongjue');
player.gain(trigger.cards.filterInD(),'gain2');
}
else trigger.cancel();
}
},
},
//王悦
minihuguan:{
audio:'huguan',
audioname2:{Mbaby_wangyue:'huguan_wangyue'},
trigger:{global:'useCard'},
filter:function(event,player){
if(get.color(event.card,event.player)!='red') return false;
var evt=event.getParent('phaseUse');
if(!evt||evt.player!=event.player) return false;
return event.player.getHistory('useCard',function(event){
return get.color(evt.card,event.player)=='red'&&event.getParent('phaseUse')==evt;
}).indexOf(event)==0;
},
direct:true,
content:function(){
'step 0'
player.chooseControl(lib.suit,'cancel2').set('prompt',get.prompt2('huguan',trigger.player)).set('ai',function(){
var player=_status.event.player,target=_status.event.getTrigger().player;
var list=lib.suit.slice(0);
var att=get.attitude(player,trigger.player);
if(att==0) return 'cancel2';
list.removeArray(target.getStorage(att>0?'huguan_add':'minihuguan_add'));
if(list.length) return list.randomGet();
return 'cancel2';
});
'step 1'
if(result.control!='cancel2'){
var target=trigger.player;
event.target=target;
player.logSkill('huguan',target);
game.log(player,'选择了','#g'+get.translation(result.control),'花色');
event.suit=result.control;
var str=get.translation(target);
var suit=get.translation(event.suit);
player.chooseControl().set('choiceList',[
'令'+str+'本回合'+suit+'牌不计入手牌上限',
'令'+str+'本回合不能弃置'+suit+'牌',
]).set('ai',()=>_status.event.att>0?0:1).set('att',get.attitude(player,target));
}
else event.finish();
'step 2'
var skill=(result.index==0?'':'mini')+'huguan_add';
target.addTempSkill(skill);
target.markAuto(skill,[event.suit]);
},
subSkill:{
add:{
charlotte:true,
onremove:true,
mod:{
cardDiscardable:function(card,player){
if(player.getStorage('huguan_add').includes(get.suit(card,player))&&get.position(card)=='h') return false;
}
},
intro:{content:'本回合不能弃置$花色的手牌'},
},
},
},
huguan_wangyue:{audio:2},
minimingluan:{
audio:'mingluan',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
return player!=event.player&&event.player.isIn()&&game.getGlobalHistory('changeHp',evt=>evt.getParent().name=='recover').length&&event.player.countCards('h');
},
prompt:function(event,player){
return get.translation('minimingluan')+'（摸'+(event.player.countCards('h'))+'弃'+(player.countCards('h')+event.player.countCards('h')-5)+'）';
},
check:function(event,player){
return player.countCards('h')<5;
},
content:function(){
'step 0'
player.draw(trigger.player.countCards('h'));
'step 1'
if(player.countCards('h')>5) player.chooseToDiscard('h',player.countCards('h')-5,true);
},
},
//伊籍
minijijie:{
onremove:true,
intro:{content:'已发动过#次'},
audio:'xinfu_jijie',
inherit:'xinfu_jijie',
contentBefore:function(){
player.addMark('minijijie',1,false);
},
group:'minijijie_log',
subSkill:{
log:{
audio:'xinfu_jijie',
trigger:{global:['gainAfter','loseAsyncAfter']},
filter:function(event,player){
if(player.hasSkill('minijijie_used')) return false;
return game.hasPlayer(current=>current.isPhaseUsing()&&event.getg(current)>1);
},
prompt2:'发动【机捷】',
content:function(){
player.addTempSkill('minijijie_used','roundStart');
player.addMark('minijijie',1,false);
var next=game.createEvent('minijijie');
next.player=player;
next.setContent(lib.skill.minijijie.content);
},
},
used:{charlotte:true},
},
},
minijiyuan:{
audio:'xinfu_jiyuan',
trigger:{global:['dying','gainAfter','loseAsyncAfter']},
filter:function(event,player){
if(event.name=='dying') return player.hasMark('minijijie');
if(event.giver!=player) return false;
if(event.name=='gain'){
return event.player!=player&&event.getg(event.player).length>0;
}
return game.hasPlayer(function(current){
return current!=player&&event.getg(current).length>0;
});
},
direct:true,
content:function(){
'step 0'
if(trigger.name!='loseAsync') event.targets=[trigger.player];
else event.targets=game.filterPlayer(function(current){
return current!=player&&trigger.getg(current).length>0;
});
'step 1'
var target=event.targets.shift();
event.target=target;
var str2=get.translation(target);
var str=(trigger.name=='dying'?'令'+str2+'摸'+get.cnNumber(player.countMark('minijijie'))+'张牌，然后清空【机捷】的发动次数':'令'+str2+'摸一张牌');
player.chooseBool(get.prompt('minijiyuan',target)).set('ai',function(){
var evt=_status.event;
return get.attitude(player,evt.getParent().target)>0;
}).set('prompt2',str);
'step 2'
if(result.bool){
player.logSkill('minijiyuan',target);
target.draw(trigger.name=='dying'?player.countMark('minijijie'):1);
if(trigger.name=='dying'){
player.removeMark('minijijie',player.countMark('minijijie'),false);
game.log(player,'清空了','#g【机捷】','的发动次数');
}
}
if(targets.length>0&&(trigger.name!='dying'||player.hasMark('minijijie'))) event.goto(1);
},
},
//SP张飞
minisppaoxiao:{
mod:{
cardUsable:function(card,player){
if(get.name(card,player)=='sha') return Infinity;
},
targetInRange:function(card,player){
if(get.name(card,player)=='sha') return true;
},
},
audio:'paoxiao',
trigger:{player:'useCard'},
filter:function(event,player){
if(event.card.name!='sha') return false;
return player.getHistory('useCard',evt=>evt.card.name=='sha').indexOf(event)>0;
},
forced:true,
content:function(){
trigger.baseDamage++;
player.addTempSkill('minisppaoxiao_ai');
if(player.getHistory('useCard',evt=>evt.card.name=='sha').indexOf(trigger)>1){
trigger.directHit.addArray(game.filterPlayer());
player.addTempSkill('minisppaoxiao_unequip');
}
},
subSkill:{
ai:{
charlotte:true,
ai:{
directHit_ai:true,
unequip_ai:true,
skillTagFilter:function(player,tag,arg){
if(!arg||!arg.card||arg.card.name!='sha'||!player.hasSkill('minisppaoxiao')) return false;
},
},
},
unequip:{
charlotte:true,
ai:{
unequip:true,
skillTagFilter:function(player,tag,arg){
if(!arg||!arg.card||arg.card.name!='sha'||!player.hasSkill('minisppaoxiao')) return false;
},
},
},
},
},
minixvhe:{
audio:'retishen',
trigger:{player:['shaMiss','useCard','respond']},
filter:function(event,player,name){
return name=='shaMiss'||event.card.name=='shan';
},
forced:true,
content:function(){
player.draw();
},
},
//关羽
minirewusheng:{
group:['minirewusheng_wusheng','minirewusheng_effect'],
audio:'wusheng',
audioname2:{
Mbaby_jsp_guanyu:'wusheng_jsp_guanyu',
Mbaby_guansuo:'wusheng_guansuo',
},
trigger:{player:'phaseBegin'},
forced:true,
locked:false,
content:function(){
var card=get.cardPile(function(card){
return get.color(card)=='red';
});
if(card) player.gain(card,'gain2');
},
subSkill:{
wusheng:{
audio:'wusheng',
audioname2:{
Mbaby_jsp_guanyu:'wusheng_jsp_guanyu',
Mbaby_guansuo:'wusheng_guansuo',
},
enable:['chooseToRespond','chooseToUse'],
filterCard:function(card,player){
return get.color(card)=='red';
},
position:'hes',
viewAs:{name:'sha'},
viewAsFilter:function(player){
if(!player.countCards('hes',{color:'red'})) return false;
},
prompt:'武圣：将一张红色牌当作【杀】使用或打出',
check:function(card){
var val=get.value(card);
if(_status.event.name=='chooseToRespond') return 1/Math.max(0.1,val);
return 5-val;
},
ai:{
respondSha:true,
skillTagFilter:function(player){
if(!player.countCards('hes',{color:'red'})) return false;
},
},
},
effect:{
mod:{
aiOrder:function(player,card,num){
if(get.itemtype(card)=='card'&&card.name=='sha'&&get.color(card)=='red') return num+0.1;
},
},
audio:'wusheng',
audioname2:{
Mbaby_jsp_guanyu:'wusheng_jsp_guanyu',
Mbaby_guansuo:'wusheng_guansuo',
},
inherit:'jie',
},
},
},
minituodao:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:['useCard','respond']},
filter:function(event,player){
return event.card.name=='shan';
},
forced:true,
content:function(){
player.addSkill('minituodao_mark');
player.addMark('minituodao_mark',1,false);
player.when('useCard')
.filter((event,player)=>event.card.name=='sha')
.then(()=>{
trigger.baseDamage+=player.countMark('minituodao_mark');
player.removeSkill('minituodao_mark');
});
},
subSkill:{
mark:{
charlotte:true,
onremove:true,
intro:{content:'下一张【杀】的伤害基数+#'},
},
},
},
//龙凤
miniyoulong:{
zhuanhuanji:true,
marktext:'☯',
mark:true,
intro:{
content:function(storage,player){
return storage?'每回合限一次，你可以废除你的一个装备栏，视为使用一张未以此法使用过的基本牌。':'每回合限一次，你可以废除你的一个装备栏，视为使用一张未以此法使用过的普通锦囊牌。';
},
},
init:function(player){
player.storage.miniyoulong=false;
if(!player.storage.youlong2) player.storage.youlong2=[];
},
hiddenCard:function(player,name){
if(player.storage.youlong2.includes(name)||!player.hasEnabledSlot()) return false;
if(player.hasSkill('miniyoulong_'+(player.storage.miniyoulong||false))) return false;
var type=get.type(name);
if(player.storage.miniyoulong) return type=='basic';
return type=='trick';
},
audio:'youlong',
enable:'chooseToUse',
filter:function(event,player){
if(player.storage.youlong2.includes(name)||!player.hasEnabledSlot()) return false;
if(player.hasSkill('miniyoulong_'+(player.storage.miniyoulong||false))) return false;
var type=player.storage.miniyoulong?'basic':'trick';
for(var name of lib.inpile){
if(player.storage.youlong2.includes(name)) continue;
if(get.type(name)!=type) continue;
if(event.filterCard({name:name,isCard:true},player,event)) return true;
}
return false;
},
chooseButton:{
dialog:function(event,player){
var dialog=ui.create.dialog('游龙','hidden');
const equips=[];
for(let i=1;i<6;i++){
if(!player.hasEnabledSlot(i)) continue;
equips.push([i,get.translation('equip'+i)]);
}
if(equips.length>0) dialog.add([equips,'tdnodes'])
var type=player.storage.miniyoulong?'basic':'trick';
var list=[];
for(var name of lib.inpile){
if(player.storage.youlong2.includes(name)) continue;
if(get.type(name)!=type) continue;
if(event.filterCard({name:name,isCard:true},player,event)){
list.push([type,'',name]);
if(name=='sha'){
for(var j of lib.inpile_nature) list.push(['基本','','sha',j]);
}
}
}
dialog.add([list,'vcard']);
return dialog;
},
filter:function(button){
if(ui.selected.buttons.length&&typeof button.link==typeof ui.selected.buttons[0].link) return false;
return true;
},
select:2,
check:function(button){
var player=_status.event.player;
if(typeof button.link=='number'){
var card=player.getEquip(button.link);
if(card){
var val=get.value(card);
if(val>0) return 0;
return 5-val;
}
switch(button.link){
case 3:return 4.5;break;
case 4:return 4.4;break;
case 5:return 4.3;break;
case 2:return (3-player.hp)*1.5;break;
case 1:{
if(game.hasPlayer(function(current){
return (get.realAttitude||get.attitude)(player,current)<0&&get.distance(player,current)>1;
})) return 0;
return 3.2;
}
}
}
var name=button.link[2];
var evt=_status.event.getParent();
if(get.type(name)=='basic'){
if(name=='shan') return 2;
if(evt.type=='dying'){
if(get.attitude(player,evt.dying)<2) return false;
if(name=='jiu') return 2.1;
return 1.9;
}
if(evt.type=='phase') return player.getUseValue({name:name,nature:button.link[3],isCard:true});
return 1;
}
if(!['chuqibuyi','shuiyanqijunx','juedou','nanman','wanjian','shunshou','zhujinqiyuan'].includes(name)) return 0;
var card={name:name,isCard:true};
if(['shunshou','zhujinqiyuan'].includes(card.name)){
if(!game.hasPlayer(function(current){
return get.attitude(player,current)!=0&&get.distance(player,current)<=1&&player.canUse(card,current)&&get.effect(current,card,player,player)>0;
})) return 0;
return player.getUseValue(card)-7;
}
return player.getUseValue(card)-4;
},
backup:function(links,player){
if(typeof links[1]=='number') links.reverse();
var equip=links[0];
var name=links[1][2];
var nature=links[1][3];
return {
filterCard:function(){return false},
selectCard:-1,
equip:equip,
viewAs:{
name:name,
nature:nature,
isCard:true,
},
popname:true,
precontent:function(){
player.logSkill('miniyoulong');
player.disableEquip(lib.skill.miniyoulong_backup.equip);
delete event.result.skill;
player.addTempSkill('miniyoulong_'+(player.storage.miniyoulong||false),'roundStart');
player.changeZhuanhuanji('miniyoulong');
player.storage.youlong2.add(event.result.card.name);
},
}
},
prompt:function(links,player){
if(typeof links[1]=='number') links.reverse();
var equip='equip'+links[0];
var name=links[1][2];
var nature=links[1][3];
return '废除自己的'+get.translation(equip)+'栏，视为使用'+(get.translation(nature)||'')+get.translation(name);
},
},
ai:{
respondSha:true,
respondShan:true,
skillTagFilter:function(player,tag,arg){
if(arg=='respond') return false;
if(!player.storage.miniyoulong||player.hasSkill('miniyoulong_true')) return false;
var name=(tag=='respondSha'?'sha':'shan');
return !player.storage.youlong2.includes(name);
},
order:1,
result:{
player:1,
},
},
subSkill:{
true:{charlotte:true},
false:{charlotte:true},
},
},
//王桃
miniyaopei:{
audio:'yaopei',
trigger:{global:'phaseDiscardEnd'},
filter:function(event,player){
if(player==event.player||!event.player.isIn()||!event.player.getHistory('lose',function(evt){
return evt.type=='discard'&&evt.getParent('phaseDiscard')==event;
}).length) return false;
return player.countCards('he');
},
direct:true,
content:function(){
'step 0'
var suits=[],str='该角色本阶段弃置的花色：';
trigger.player.getHistory('lose',function(evt){
if(evt.type=='discard'&&evt.getParent('phaseDiscard')==trigger){
for(var i of evt.cards2) suits.add(get.suit(i,evt.hs.includes(i)?evt.player:false));
}
});
suits.sort((a,b)=>lib.suit.indexOf(a)-lib.suit.indexOf(b));
suits.forEach(suit=>str+=get.translation(suit));
player.chooseCardTarget({
prompt:get.prompt('miniyaopei',trigger.player),
prompt2:'<span class="text center"><li>操作提示：选择要弃置的牌，并选择执行摸牌选项的角色，另一名角色执行回复体力的选项。<br><li>'+str+'</span>',
suits:suits,
position:'he',
filterCard:function(card,player){
return lib.filter.cardDiscardable(card,player,'miniyaopei');
},
filterTarget:function(card,player,target){
if(!ui.selected.cards.length||_status.event.suits.includes(get.suit(ui.selected.cards[0]))) return false;
return target==player||target==_status.event.getTrigger().player;
},
selectTarget:function(){
if(!ui.selected.cards.length||_status.event.suits.includes(get.suit(ui.selected.cards[0]))) return -1;
return 1;
},
ai1:function(card){
var player=_status.event.player,source=_status.event.getTrigger().player;
if(_status.event.suits.includes(get.suit(card))) return 8-get.value(card);
if(get.attitude(player,source)>0&&(get.recoverEffect(player,player,player)>0||get.recoverEffect(source,player,player)>0)) return 12-get.value(card);
return 0;
},
ai2:function(target){
var player=_status.event.player,source=_status.event.getTrigger().player;
var der=get.recoverEffect(source,player,player)>get.recoverEffect(player,player,player)?player:source;
return target==source?10:0;
}
});
'step 1'
if(result.bool){
var target=trigger.player;
player.logSkill('miniyaopei',target);
player.discard(result.cards);
if(result.targets){
if(player==result.targets[0]){
if(target.isDamaged()&&target.hp<player.hp&&(get.mode()!='identity'||player.identity!='nei')) player.addExpose(0.15);
target.recover();
player.draw(2);
}
else{
if((player.isHealthy()||player.hp>target.hp)&&(get.mode()!='identity'||player.identity!='nei')) player.addExpose(0.15);
target.draw(2);
player.recover();
}
}
else{
player.draw(2);
player.recover();
}
}
},
},
//吴
//孙权
minizhiheng:{
audio:'rezhiheng',
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return player.countCards('h');
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard('h',get.prompt2('minizhiheng'),[1,Infinity]).set('ai',lib.skill.zhiheng.check).set('complexCard',true).logSkill='minizhiheng';
'step 1'
if(result.bool) player.drawTo(4);
},
},
minirezhiheng:{
audio:'rezhiheng',
enable:'phaseUse',
filter:function(event,player){
var count=(player.getStat('skill').minirezhiheng||0);
return count<event.minirezhiheng_num&&player.countDiscardableCards(player,'he');
},
onChooseToUse:function(event){
if(event.type=='phase'&&!game.online&&!event.minirezhiheng_num){
var evtx=event.getParent('phaseUse');
var num=1,player=event.player;
if(player.getHistory('gain',function(evt){
return evt.getParent('phaseUse')==evtx&&evt.getParent(3).skill=='minirezhiheng';
}).length){
num++;
var history=player.getHistory('gain',function(evt){
return evt.getParent('phaseUse')==evtx&&evt.getParent(3).skill=='minirezhiheng';
})[0];
for(var i of history.cards){
if(get.type(i)=='delay'){
num--;
break;
}
}
}
if(player.getHistory('gain',function(evt){
return evt.getParent('phaseUse')==evtx&&evt.getParent(3).skill=='minirezhiheng';
}).length>1){
num++;
var history=player.getHistory('gain',function(evt){
return evt.getParent('phaseUse')==evtx&&evt.getParent(3).skill=='minirezhiheng';
})[1];
for(var i of history.cards){
if(get.type(i)!='basic'){
num--;
break;
}
}
}
event.set('minirezhiheng_num',num);
}
},
filterCard:lib.filter.cardDiscardable,
selectCard:[1,Infinity],
check:function(card){
var player=_status.event.player;
if(get.position(card)=='h'&&!player.countCards('h','du')&&(player.hp>2||!player.countCards('h',function(card){
return get.value(card)>=8;
}))) return 1;
return 6-get.value(card)
},
position:'he',
discard:false,
lose:false,
delay:false,
content:function(){
'step 0'
player.discard(cards);
var num=1;
var hs=player.getCards('h');
if(!hs.length) num=0;
else{
for(var i=0;i<hs.length;i++){
if(!cards.includes(hs[i])){
num=0;
break;
}
}
}
event.num=num;
'step 1'
player.draw(num+cards.length);
},
ai:{
order:1,
result:{player:1},
},
},
minijiuyuan:{
group:'minijiuyuan_tao',
audio:'rejiuyuan',
trigger:{global:'recoverBefore'},
filter:function(event,player){
if(player==event.player||player.isHealthy()||!_status.currentPhase||_status.currentPhase!=event.player) return false;
return event.player.group=='wu'&&event.getParent().name!='minijiuyuan'&&player.hasZhuSkill('minijiuyuan',event.player);
},
direct:true,
locked:true,
zhuSkill:true,
content:function(){
'step 0'
trigger.player.chooseBool('是否对'+get.translation(player)+'发动【救援】？','改为令其回复1点体力，然后你摸一张牌').set('ai',function(){
var evt=_status.event;
return get.attitude(evt.player,evt.getParent().player)>0&&evt.getParent().player.hp<=evt.player.hp&&!evt.player.isDying();
});
'step 1'
if(result.bool){
player.logSkill('minijiuyuan');
trigger.player.line(player,'green');
trigger.cancel();
player.recover();
trigger.player.draw();
}
},
subSkill:{
tao:{
audio:'rejiuyuan',
trigger:{target:'taoBegin'},
filter:function(event,player){
if(!player.hasZhuSkill('minijiuyuan',event.player)) return false;
return event.player!=player&&event.player.group=='wu';
},
forced:true,
content:function(){
trigger.baseDamage++;
},
},
},
},
miniqixi:{
group:'qixi',
audio:'qixi',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return game.hasPlayer(function(target){
return target.countDiscardableCards(player,'he');
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('miniqixi'),'弃置一名角色的一张牌',function(card,player,target){
return target.countDiscardableCards(player,'he');
}).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe_copy2'},player,player);
});
'step 1'
if(result.bool){
player.logSkill('miniqixi',result.targets);
player.discardPlayerCard(result.targets[0],'he',true);
}
},
},
minifenwei:{
audio:'fenwei',
skillAnimation:true,
animationColor:'wood',
unique:true,
mark:true,
limited:true,
trigger:{global:'useCardToPlayered'},
filter:function(event,player){
if(event.getParent().triggeredTargets3.length>1) return false;
if(get.type(event.card)!='trick') return false;
if(get.info(event.card).multitarget) return false;
if(event.targets.length<2) return false;
return true;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minifenwei'),'令'+get.translation(trigger.card)+'对任意名角色无效',[1,trigger.targets.length],function(card,player,target){
return _status.event.targets.includes(target);
}).set('ai',function(target){
var trigger=_status.event.getTrigger();
return -get.effect(target,trigger.card,trigger.player,_status.event.player);
}).set('targets',trigger.targets);
'step 1'
if(result.bool){
player.addSkill('minifenwei_huifu');
player.logSkill('minifenwei',result.targets);
player.awakenSkill('minifenwei');
trigger.getParent().excluded.addArray(result.targets);
}
else event.finish();
'step 2'
player.draw();
},
ai:{expose:0.2},
subSkill:{
huifu:{
charlotte:true,
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
if(player.countCards('h')) return false;
if(!player.awakenedSkills.includes('minifenwei')) return false;
var evt=event.getl(player);
return evt&&evt.player==player&&evt.hs&&evt.hs.length>0;
},
direct:true,
firstDo:true,
content:function(){
player.removeSkill('minifenwei_huifu');
player.restoreSkill('minifenwei');
game.log(player,'复原了技能','#g【奋威】');
},
},
},
},
miniwanrong:{
audio:'guose',
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
if(event.name=='gain'&&event.player==player) return false;
var evt=event.getl(player);
return evt&&evt.cards2&&evt.cards2.filter(function(card){
return get.suit(card)=='diamond';
}).length;
},
forced:true,
locked:true,
content:function(){
player.draw();
},
},
miniguose:{
enable:'phaseUse',
filter:function(event,player){
return player.countCards('hes',{suit:'diamond'})>0;
},
filterTarget:function(card,player,target){
if(get.position(ui.selected.cards[0])!='s'&&lib.filter.cardDiscardable(ui.selected.cards[0],player,'reguose')&&target.hasJudge('lebu')) return true;
if(player==target) return false;
if(!game.checkMod(ui.selected.cards[0],player,'unchanged','cardEnabled2',player)) return false;
return player.canUse({name:'lebu',cards:ui.selected.cards},target);
},
filterCard:{suit:'diamond'},
position:'hes',
check:function(card){
return 7-get.value(card);
},
usable:1,
discard:false,
lose:false,
delay:false,
content:function(){
if(target.hasJudge('lebu')){
player.discard(cards);
target.discard(target.getJudge('lebu'));
}
else player.useCard({name:'lebu'},target,cards).audio=false;
},
ai:{
result:{
target:function(player,target){
if(target.hasJudge('lebu')) return -get.effect(target,{name:'lebu'},player,target);
return get.effect(target,{name:'lebu'},player,target);
},
},
order:9,
},
},
minizhaxiang:{
mod:{
targetInRange:function(card,player,target,now){
if(card.name=='sha'&&get.color(card)=='red') return true;
},
cardUsable:function(card,player,num){
if(card.name=='sha') return num+1;
}
},
audio:'zhaxiang',
trigger:{player:'useCard'},
forced:true,
filter:function(event,player){
return event.card&&event.card.name=='sha'&&get.color(event.card)=='red';
},
content:function(){
trigger.directHit.addArray(game.players);
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
return arg.card.name=='sha'&&get.color(arg.card)=='red';
},
},
},
minifanjian:{
audio:'refanjian',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minifanjian'),lib.filter.notMe).ai=function(target){
return get.damageEffect(target,player,player);
};
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minifanjian',target);
target.draw();
target.damage();
}
},
},
miniqianxun:{
audio:'reqianxun',
trigger:{target:'useCardToBegin'},
filter:function(event,player){
if(event.targets&&event.targets.length>1) return false;
return event.card&&(get.type(event.card)=='trick'||get.type(event.card)=='delay');
},
forced:true,
content:function(){
'step 0'
player.draw();
player.chooseCardTarget({
prompt:'谦逊：是否将一张手牌交给一名其他角色？',
filterCard:true,
filterTarget:lib.filter.notMe,
ai1:function(card){
if(card.name=='du') return 10;
var player=_status.event.player;
if(!game.hasPlayer(function(current){
return get.attitude(player,current)>0&&!current.hasSkillTag('nogain');
})) return 0;
return 1/Math.max(0.1,get.value(card));
},
ai2:function(target){
var player=_status.event.player,att=get.attitude(player,target);
if(ui.selected.cards[0].name=='du') return -att;
if(target.hasSkillTag('nogain')) att/=6;
return att;
},
});
'step 1'
if(result.bool){
player.line(result.targets[0]);
result.targets[0].gain(result.cards,player,'giveAuto');
}
},
},
minitianyi:{
audio:'tianyi',
trigger:{player:'phaseUseBegin'},
check:function(event,player){
return true;
},
content:function(){
'step 0'
player.chooseControl().set('choiceList',[
'本回合使用【杀】的次数上限+1，且使用【杀】造成伤害后回复1点体力',
'摸一张牌，本回合使用【杀】无距离限制且无视防具'
]).set('ai',function(){
if((player.countCards('h',function(card){
return get.name(card,player)=='sha'&&player.hasUseTarget(card);
})-player.getCardUsable('sha'))>1) return 0;
return 1;
});
'step 1'
player.popup('选项'+get.cnNumber(result.index+1,true));
game.log(player,'选择了','#g【天义】','的选项'+get.cnNumber(result.index+1,true));
if(result.index==1) player.draw();
player.addTempSkill('minitianyi_'+result.index);
},
subSkill:{
'0':{
charlotte:true,
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+1;
},
},
trigger:{source:'damageSource'},
filter:function(event,player){
return player.isDamaged()&&event.card&&event.card.name=='sha';
},
direct:true,
content:function(){
player.recover();
},
},
'1':{
charlotte:true,
mod:{
targetInRange:function(card,player,target,now){
if(card.name=='sha') return true;
},
},
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
return event.card.name=='sha'&&get.color(event.card)=='black';
},
direct:true,
content:function(){
trigger.target.addTempSkill('qinggang2');
trigger.target.storage.qinggang2.add(trigger.card);
},
ai:{
unequip_ai:true,
skillTagFilter:function(player,tag,arg){
if(arg&&arg.name=='sha'&&get.color(arg.card)=='black') return true;
return false;
},
},
},
},
},
minihaoshi:{
audio:'haoshi',
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed;
},
preHidden:true,
check:function(event,player){
if(player.countCards('h')<=1) return true;
return game.hasPlayer(function(current){
return current!=player&&current.isMinHandcard()&&get.attitude(player,current)>0;
});
},
content:function(){
trigger.num+=2;
player.addSkill('minihaoshi2');
},
ai:{
noh:true,
skillTagFilter:function(player,tag){
if(tag=='noh'){
if(player.countCards('h')!=2) return false;
}
},
},
},
minihaoshi2:{
trigger:{player:'phaseDrawEnd'},
forced:true,
popup:false,
audio:false,
content:function(){
'step 0'
player.removeSkill('minihaoshi2');
if(player.countCards('h')<=5){
event.finish();
return;
}
else player.chooseCardTarget({
selectCard:Math.floor(player.countCards('h')/2),
filterTarget:function(card,player,target){
return target.isMinHandcard();
},
selectTarget:[0,1],
prompt:'好施：将一半的手牌交给场上手牌数最少的一名角色或弃置一半的手牌',
forced:true,
ai2:function(target){
return get.attitude(_status.event.player,target);
}
});
'step 1'
if(result.targets&&result.targets[0]) result.targets[0].gain(result.cards,player,'giveAuto');
else player.discard(result.cards);
},
},
miniganlu:{
audio:'ganlu',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
var list=[];
if(player.canMoveCard(null,true)) list.push('移动牌');
if(game.hasPlayer(function(current){
var es=current.getCards('e');
for(var i=0;i<es.length;i++){
if(game.hasPlayer(function(current2){
return current!=current2&&!current2.isMin()&&!current2.canEquip(es[i]);
})) return true;
}
})) list.push('交换牌');
list.push('摸牌');
list.push('cancel2');
player.chooseControl(list).set('choiceList',[
'移动场上的一张装备牌',
'交换场上装备区中两张副类别相同的装备牌的位置',
'摸一张牌',
]).set('prompt','请选择你要执行的选项').set('ai',function(){
var player=_status.event.player;
if(player.canMoveCard(null,true)) return '移动牌';
return '摸牌';
});
'step 1'
if(result.control!='cancel2'){
switch(result.control){
case '摸牌':
player.logSkill('miniganlu');
player.draw();
event.finish();
break;
case '移动牌':
player.logSkill('miniganlu');
player.moveCard().nojudge=true;
event.finish();
break;
case '交换牌':
player.chooseCardTarget({
prompt:'请选择两名角色，交换他们装备区的一张副类别相同的一张牌',
filterCard:false,
filterTarget:function(card,player,target){
if(!ui.selected.targets.length){
for(var i=1;i<7;i++){
if(game.hasPlayer(function(current){
return current!=target&&current.getEquips(i).length&&target.getEquips(i).length;
})) return true;
}
return false;
}
else{
for(var j=1;j<7;j++){
if(ui.selected.targets[0].getEquips(j).length&&target.getEquips(j).length) return true;
}
return false;
}
},
selectTarget:2,
forced:true,
});
break;
}
}
else event.finish();
'step 2'
var list=[];
result.targets.sortBySeat();
player.logSkill('miniganlu',result.targets);
for(var i=1;i<7;i++){
if(result.targets[0].getEquips(i).length&&result.targets[1].getEquips(i).length) list.push('equip'+i);
}
player.chooseControl(list).set('prompt','请选择一个装备类别');
event.target1=result.targets[0];
event.target2=result.targets[1];
'step 3'
var num=undefined,target1=event.target1,target2=event.target2;
for(var i=1;i<7;i++){
if('equip'+i==result.control) num=i;
}
game.log(player,'令',target1,'和',target2,'交换了'+get.translation(result.control)+'牌');
var card1=target1.getEquips(num),card2=target2.getEquips(num);
target1.discard(card1);
target2.discard(card2);
target1.lose(card1,ui.ordering,'visible');
target2.lose(card2,ui.ordering,'visible');
target1.$give(card1,target2,false);
target2.$give(card2,target1,false);
target1.equip(card2);
target2.equip(card1);
},
},
minibuyi:{
audio:'buyi',
trigger:{global:'dying'},
usable:3,
filter:function(event,player){
return event.player.hp<=0&&event.player.countCards('h');
},
direct:true,
content:function(){
'step 0'
var check;
if(trigger.player.isUnderControl(true,player)){
check=player.hasCard(function(card){
return get.type(card)=='basic';
});
}
else check=(get.attitude(player,trigger.player)>0);
player.choosePlayerCard(trigger.player,get.prompt('minibuyi',trigger.player),'h').set('ai',function(button){
if(!_status.event.check) return 0;
if(_status.event.target.isUnderControl(true,_status.event.player)){
if(get.type(button.link)=='basic'){
return 10-get.value(button.link);
}
return 0;
}
else return Math.random();
}).set('check',check).set('filterButton',function(button){
if(_status.event.player==_status.event.target){
return lib.filter.cardDiscardable(button.link,_status.event.player);
}
return true;
});
'step 1'
if(result.bool){
player.logSkill('minibuyi',trigger.player);
event.card=result.links[0];
player.showCards([event.card],get.translation(player)+'展示的手牌');
}
else{
player.storage.counttrigger.minibuyi--;
event.finish();
}
'step 2'
if(get.type(event.card)=='basic'){
trigger.player.discard(event.card);
trigger.player.recover();
}
},
},
minipojun:{
shaRelated:true,
audio:'decadepojun',
trigger:{player:'useCardToPlayered'},
direct:true,
filter:function(event,player){
return event.card.name=='sha'&&event.target.hp>0&&event.target.countCards('he');
},
content:function(){
'step 0'
var next=player.choosePlayerCard(trigger.target,'he',[1,Math.min(trigger.target.hp,trigger.target.countCards('he'))],get.prompt('minipojun',trigger.target));
next.set('ai',function(button){
if(!_status.event.goon) return 0;
var val=get.value(button.link);
if(_status.event.target.getEquips(2).some(i=>i==button.link)) return 2*(val+3);
return val;
});
next.set('goon',get.attitude(player,trigger.target)<=0);
next.set('forceAuto',true);
'step 1'
if(result.bool){
event.cards=result.cards;
var target=trigger.target;
player.logSkill('minipojun',trigger.target);
target.addSkill('minipojun2');
target.addToExpansion(result.cards,'giveAuto',target).gaintag.add('minipojun2');
}
else event.finish();
'step 2'
var discard=false,draw=false;
for(var i of cards){
var type=get.type2(i);
if(type=='equip') discard=true;
if(i.name=='shan') draw=true;
}
if(discard){
event.equip=true;
player.chooseButton(['选择一张装备牌置入弃牌堆',cards.filter(function(card){
return get.type(card)=='equip';
})],true).set('ai',function(button){
return get.value(button.link,_status.event.getTrigger().target);
});
}
if(draw) event.draw=true;
'step 3'
if(event.equip&&result.links&&result.links.length) trigger.target.loseToDiscardpile(result.links);
if(event.draw) player.draw();
},
ai:{
unequip_ai:true,
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(get.attitude(player,arg.target)>0) return false;
if(tag=='directHit_ai') return arg.target.hp>=Math.max(1,arg.target.countCards('h')-1);
if(arg&&arg.name=='sha'&&arg.target.getEquips(2).length) return true;
return false;
}
},
},
minipojun2:{
trigger:{global:'phaseEnd'},
forced:true,
popup:false,
charlotte:true,
filter:function(event,player){
return player.getExpansions('minipojun2').length>0;
},
content:function(){
'step 0'
var cards=player.getExpansions('minipojun2');
player.gain(cards,'draw');
game.log(player,'收回了'+get.cnNumber(cards.length)+'张〖破军〗牌');
'step 1'
player.removeSkill('minipojun2');
},
intro:{
markcount:'expansion',
mark:function(dialog,storage,player){
var cards=player.getExpansions('minipojun2');
if(player.isUnderControl(true)) dialog.addAuto(cards);
else return '共有'+get.cnNumber(cards.length)+'张牌';
},
},
},
minikeji:{
audio:'keji',
trigger:{player:'phaseDiscardBefore'},
frequent:true,
filter:function(event,player){
if(player.getHistory('skipped').includes('phaseUse')) return true;
var history=player.getHistory('useCard').concat(player.getHistory('respond'));
for(var i=0;i<history.length;i++){
if(history[i].card.name=='sha'&&history[i].isPhaseUsing()) return false;
}
return true;
},
content:function(){
trigger.cancel();
player.draw();
},
},
miniqinxue:{
skillAnimation:true,
animationColor:'wood',
audio:'qinxue',
unique:true,
juexingji:true,
derivation:'minigongxin',
trigger:{player:'phaseJieshuBegin'},
forced:true,
filter:function(event,player){
return player.countCards('h')>=player.hp*3;
},
content:function(){
var num=player.maxHp-player.hp;
player.awakenSkill('miniqinxue');
if(num>0) player.loseMaxHp(num);
player.removeSkill('minikeji');
player.addSkillLog('minigongxin');
},
},
minitianxiang:{
audio:'tianxiang',
trigger:{player:'damageBegin3'},
filter:function(event,player){
return player.countCards('h',{suit:'heart'})&&event.num>0;
},
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
filterCard:function(card,player){
return get.suit(card)=='heart'&&lib.filter.cardDiscardable(card,player);
},
filterTarget:lib.filter.notMe,
ai1:function(card){
return 10-get.value(card);
},
ai2:function(target){
var att=get.attitude(_status.event.player,target);
return -att;
},
prompt:get.prompt2('minitianxiang')
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minitianxiang',target);
player.discard(result.cards[0]);
player.addTempSkill('minitianxiang2');
trigger.cancel();
target.damage(trigger.source?trigger.source:'nosource',trigger.nature,trigger.num).set('card',trigger.card).set('cards',trigger.cards).minitianxiang2=[player];
}
},
ai:{
maixie_defend:true,
effect:{
target:function(card,player,target){
if(player.hasSkillTag('jueqing',false,target)) return;
if(get.tag(card,'damage')&&target.countCards('h')>1) return 0.7;
},
},
threaten:function(player,target){
if(!target.countCards('h')) return 2;
},
},
},
minitianxiang2:{
charlotte:true,
trigger:{global:['damageAfter','damageCancelled','damageZero']},
filter:function(event,player){
return event.minitianxiang2&&event.minitianxiang2.includes(player)&&event.player.isIn();
},
direct:true,
content:function(){
'step 0'
var target=trigger.player;
event.target=target;
player.chooseControl().set('choiceList',[
'令'+get.translation(target)+'摸一张牌',
'令'+get.translation(target)+'摸'+get.cnNumber(Math.min(5,target.getDamagedHp()))+'张牌']).set('ai',function(){
return (get.attitude(player,target)>0&&target.isDamaged())?1:0;
});
'step 1'
player.line(target);
target.draw(result.index==0?1:Math.min(5,target.getDamagedHp()));
},
},
minijiang:{
audio:'jiang',
inherit:'jiang',
filter:function(event,player){
return event.card.name=='sha'||event.card.name=='juedou';
},
ai:{
effect:{
target:function(card,player,target){
if(card.name=='sha'||card.name=='juedou') return [1,0.6];
},
player:function(card,player,target){
if(card.name=='sha'||card.name=='juedou') return [1,1];
},
},
},
},
olhunzi_re_sunyi:{audio:2},
minihunzi:{
derivation:['reyingzi','miniyinghun'],
unique:true,
audio:'hunzi',
audioname2:{Mbaby_re_sunyi:'olhunzi_re_sunyi'},
trigger:{player:['changeHp','enterGame'],global:'phaseBefore'},
filter:function(event,player){
if(player.hp!=1) return false;
return event.name!='phase'||game.phaseNumber==0;
},
juexingji:true,
forced:true,
skillAnimation:true,
animationColor:'wood',
content:function(){
'step 0'
player.awakenSkill('minihunzi');
player.loseMaxHp();
'step 1'
player.addSkillLog('reyingzi');
player.addSkillLog('miniyinghun');
},
},
minihunzi_old:{
unique:true,
audio:'hunzi',
audioname2:{Mbaby_re_sunyi:'olhunzi_re_sunyi'},
derivation:['reyingzi','miniyinghun'],
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.hp==1;
},
juexingji:true,
forced:true,
skillAnimation:true,
animationColor:'wood',
content:function(){
'step 0'
player.awakenSkill('minihunzi_old');
player.loseMaxHp();
'step 1'
player.addSkillLog('reyingzi');
player.addSkillLog('miniyinghun');
},
ai:{
threaten:function(player,target){
if(target.hp==1) return 2;
return 0.5;
},
maixie:true,
effect:{
target:function(card,player,target){
if(!target.hasFriend()) return;
if(get.tag(card,'damage')==1&&target.hp==2&&!target.isTurnedOver()&&_status.currentPhase!=target&&get.distance(_status.currentPhase,target,'absolute')<=3) return [0.5,1];
},
},
},
},
minizhiba:{
unique:true,
audio:'zhiba2',
global:'minizhiba2',
zhuSkill:true,
},
minizhiba2:{
audio:'zhiba2',
enable:'phaseUse',
discard:false,
lose:false,
delay:false,
line:true,
direct:true,
clearTime:true,
prepare:function(cards,player,targets){
targets[0].logSkill('minizhiba');
},
prompt:function(){
var player=_status.event.player;
var list=game.filterPlayer(function(target){
return target!=player&&target.hasZhuSkill('minizhiba',player);
});
var str='将一张红色【杀】或【决斗】交给'+get.translation(list);
if(list.length>1) str+='中的一人';
return str;
},
filter:function(event,player){
if(player.group!='wu'||player.hasSkill('minizhiba3')) return false;
if(player.countCards('h',function(card){
return card.name=='juedou'||card.name=='sha';
})<=0) return false;
return game.hasPlayer(function(target){
return target!=player&&target.hasZhuSkill('minizhiba',player);
});
},
filterCard:function(card){
return card.name=='juedou'||card.name=='sha';
},
log:false,
visible:true,
filterTarget:function(card,player,target){
return target!=player&&target.hasZhuSkill('minizhiba',player);
},
content:function(){
player.addTempSkill('minizhiba3','phaseUseAfter');
target.gain(cards,player,'give');
},
ai:{
expose:0.3,
order:10,
result:{target:1},
},
},
minizhiba3:{charlotte:true},
minibuqu:{
audio:'buqu',
trigger:{player:'chooseToUseBefore'},
filter:function(event,player){
return event.type=='dying'&&player.isDying()&&event.dying==player&&player.countMark('minibuqu')<4;
},
forced:true,
preHidden:true,
content:function(){
player.addMark('minibuqu',1);
if(player.hp<=0) player.recover(1-player.hp);
},
marktext:'创',
intro:{name:'不屈',name2:'创',content:'mark'},
mod:{
maxHandcard:function(player,num){
return num+player.countMark('minibuqu');
},
},
ai:{
save:true,
mingzhi:true,
skillTagFilter:function(player,tag,target){
if(player!=target||player.countMark('minibuqu')>3) return false;
},
},
},
minirebuqu:{
audio:'buqu',
trigger:{player:['damageBegin2','loseHpBegin']},
filter:function(event,player){
return player.countMark('minirebuqu')<4;
},
forced:true,
preHidden:true,
content:function(){
trigger.cancel();
player.addMark('minirebuqu',1);
},
marktext:'创',
intro:{name:'不屈',name2:'创',content:'mark'},
mod:{
maxHandcard:function(player,num){
return num+player.countMark('minirebuqu');
},
},
},
miniqingchuang:{
audio:'ext:活动武将/audio/skill:2',
enable:'phaseUse',
filter:function(event,player){
if(!player.hasMark('minirebuqu')) return false;
return player.countCards('h',card=>lib.skill.miniqingchuang.filterCard(card,player));
},
filterCard:function(card,player){
return get.name(card,player)=='tao'||get.name(card,player)=='jiu';
},
check:function(card){
var player=_status.event.player;
return 2-['tao','jiu'].indexOf(get.name(card,player));
},
usable:1,
delay:0,
content:function(){
player.removeMark('minirebuqu',1);
player.draw();
},
ai:{
order:7,
result:{player:1},
},
},
minijieyin:{
audio:'jieyin',
enable:'phaseUse',
filterCard:true,
usable:1,
position:'he',
filter:function(event,player){
return player.countCards('he');
},
check:function(card){
var player=_status.event.player;
if(get.position(card)=='e'){
var subtype=get.subtype(card);
if(!game.hasPlayer(function(current){
return current!=player&&current.hp!=player.hp&&get.attitude(player,current)>0&&!current.countCards('e',{subtype:subtype});
})){
return 0;
}
if(player.countCards('h',{subtype:subtype})) return 20-get.value(card);
return 10-get.value(card);
}
else{
if(player.countCards('e')) return 0;
if(player.countCards('h',{type:'equip'})) return 0;
return 8-get.value(card);
}
},
filterTarget:function(card,player,target){
var card=ui.selected.cards[0];
if(!card) return false;
if(get.position(card)=='e'&&target.countCards('e',{subtype:get.subtype(card)})) return false;
return target!=player;
},
discard:false,
delay:0,
lose:false,
content:function(){
'step 0'
if(get.position(cards[0])=='e'){
player.$give(cards,target);
target.equip(cards[0]);
}
else player.give(cards,target,true);
'step 1'
player.recover();
player.draw();
'step 2'
if(target.hp<player.hp&&target.isHealthy()){event.finish();return;}
player.chooseBool('结姻：是否令'+get.translation(target)+(target.hp<player.hp?'回复1点体力':'摸一张牌')+'？').set('choice',get.attitude(player,target)>0);
'step 3'
if(result.bool){
player.line(target);
target[target.hp<player.hp?'recover':'draw']();
}
},
ai:{
order:function(){
var player=_status.event.player;
var es=player.getCards('e');
for(var i=0;i<es.length;i++){
if(player.countCards('h',{subtype:get.subtype(es[i])})) return 10;
}
return 2;
},
result:{
target:function(player,target){
var goon=function(){
var es=player.getCards('e');
for(var i=0;i<es.length;i++){
if(player.countCards('h',{subtype:get.subtype(es[i])})) return true;
}
return false;
}
if(player.hp<target.hp){
if(player.isHealthy()){
if(!player.needsToDiscard(1)||goon()) return 0.1;
return 0;
}
return 1.5;
}
if(player.hp>target.hp){
if(target.isHealthy()){
if(!player.needsToDiscard(1)||goon()) return 0.1;
return 0;
}
return 1;
}
return 0;
},
},
},
},
minimeibu:{
audio:'meibu',
trigger:{global:'phaseUseBegin'},
filter:function(event,player){
return event.player!=player&&event.player.isIn()&&player.countCards('he');
},
direct:true,
derivation:'rezhixi',
content:function(){
'step 0'
player.chooseToDiscard(get.prompt2('minimeibu',trigger.player),'he').set('ai',function(card){
if(_status.event.check) return 6-get.value(card);
return 0;
}).set('check',lib.skill.new_meibu.checkx(trigger,player)).set('logSkill',['minimeibu',trigger.player]);
'step 1'
if(result.bool){
var target=trigger.player;
player.line(target,'green');
player.addTempSkill('minimeibu_gain');
target.addTempSkill('rezhixi','phaseUseAfter');
}
},
ai:{expose:0.2},
subSkill:{
gain:{
trigger:{global:'loseAfter'},
forced:true,
charlotte:true,
popup:false,
onremove:true,
filter:function(event,player){
return event.getParent(3).name=='rezhixi'&&get.position(event.cards[0])=='d';
},
content:function(){
player.gain(trigger.cards[0],'gain2');
},
},
},
},
miniyinbing:{
group:'miniyinbing_discard',
audio:'yinbing',
trigger:{player:'phaseDiscardBefore'},
direct:true,
filter:function(event,player){
return player.countCards('he',{type:'basic'})<player.countCards('he');
},
content:function(){
'step 0'
player.chooseCard([1,player.countCards('he')-player.countCards('he',{type:'basic'})],'he',get.prompt('miniyinbing'),function(card){
return get.type(card)!='basic';
}).set('ai',function(card){
return 6-get.value(card);
});
'step 1'
if(result.bool){
player.logSkill('miniyinbing');
player.addToExpansion(result.cards,player,'give').gaintag.add('miniyinbing');
}
},
marktext:'兵',
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
intro:{
content:'expansion',
markcount:'expansion',
},
ai:{
effect:{
target:function(card,player,target,current){
if(card.name=='sha'&&current<0) return 1.2;
},
},
threaten:function(player,target){
if(target.getExpansions('miniyinbing').length) return 2;
return 1;
}
},
subSkill:{
discard:{
audio:'yinbing',
trigger:{player:'damageEnd'},
forced:true,
filter:function(event,player){
return event.card&&player.getExpansions('miniyinbing').length>0&&event.card.name=='sha';
},
content:function(){
'step 0'
player.chooseCardButton('移去一张引兵牌',player.getExpansions('miniyinbing'),true);
'step 1'
if(result.bool){
player.loseToDiscardpile(result.links);
player.draw();
}
},
},
},
},
minijuedi:{
audio:'juedi',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.getExpansions('miniyinbing').length>0;
},
forced:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minijuedi'),true,function(card,player,target){
return player.hp>=target.hp;
}).set('ai',function(target){
var player=_status.event.player;
var att=get.attitude(player,target);
if(att<2) return att-10;
var num=att/10;
if(target==player){
num+=player.maxHp-player.countCards('h')+0.5;
}
else{
num+=_status.event.n2*2;
if(target.isDamaged()){
if(target.hp==1){
num+=3;
}
else if(target.hp==2){
num+=2;
}
else{
num+=0.5;
}
}
}
if(target.hasJudge('lebu')){
num/=2;
}
return num;
}).set('n2',player.getExpansions('miniyinbing').length);
'step 1'
if(result.bool){
player.line(result.targets[0],'green');
var cards=player.getExpansions('miniyinbing');
if(result.targets[0]==player){
player.loseToDiscardpile(cards);
var num=player.maxHp-player.countCards('h')+1;
if(num>0) player.draw(num);
}
else{
var target=result.targets[0];
target.recover();
target.gain(cards,player,'give');
target.draw(cards.length);
}
}
},
},
minihongyuan:{
audio:'hongyuan',
trigger:{player:'phaseDrawBegin2'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minihongyuan'),'令至多两名角色各摸一张牌',[1,2]).set('ai',function(target){
return Math.sqrt(5-Math.min(4,target.countCards('h')))*get.attitude(_status.event.player,target);
});
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
player.logSkill('minihongyuan',targets);
if(targets.length==1){
targets[0].draw();
event.finish();
}
else game.asyncDraw(targets);
}
else event.finish();
'step 2'
game.delayx();
},
},
minizenhui:{
audio:'chanhui',
usable:1,
trigger:{player:'useCardToPlayer'},
filter:function(event,player){
if(_status.currentPhase!=player) return false;
if(event.targets.length>1) return false;
var card=event.card;
if(card.name=='sha'||get.type(card)=='trick') return true;
return false;
},
check:function(event,player){
return get.attitude(player,event.target)<0;
},
logTarget:'target',
content:function(){
'step 0'
trigger.target.chooseCard('he','谮毁：交给'+get.translation(player)+'一张牌，或失去1点体力').set('ai',function(card){
return 7-get.value(card);
});
'step 1'
if(result.bool) player.gain(result.cards,trigger.target,'giveAuto');
else trigger.target.loseHp();
},
},
minijiaojin:{
audio:'jiaojin',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return (event.card.name=='sha'||get.type(event.card)=='trick')&&event.player!=player;
},
direct:true,
content:function(){
'step 0'
var next=player.chooseToDiscard('h','骄矜：是否弃置一张手牌令'+get.translation(trigger.card)+'对你无效？');
next.set('ai',function(card){
if(_status.event.goon2){
return 3+_status.event.val-get.value(card);
}
return 0;
});
next.set('val',get.value(trigger.cards.filterInD()));
next.set('goon2',get.effect(player,trigger.card,trigger.player,player)<0)
next.logSkill=['minijiaojin',trigger.player];
'step 1'
if(result.bool) trigger.excluded.push(player);
},
},
minilihuo:{
group:['minilihuo_target','minilihuo_draw'],
trigger:{player:'useCard1'},
filter:function(event,player){
if(event.card.name=='sha'&&!event.card.nature) return true;
return false;
},
audio:'lihuo',
check:function(event,player){
return player.hp>2;
},
content:function(){
game.setNature(trigger.card,'fire');
var next=game.createEvent('minilihuo_clear');
next.player=player;
next.card=trigger.card;
event.next.remove(next);
next.forceDie=true;
trigger.after.push(next);
next.setContent(function(){
var num=0;
player.getHistory('sourceDamage',function(evt){
if(evt.card==card) num+=evt.num;
});
if(num>1) player.loseHp();
delete card.nature;
});
},
subSkill:{
target:{
trigger:{player:'useCard2'},
filter:function(event,player){
if(event.card.name!='sha'||get.nature(event.card)!='fire') return false;
return game.hasPlayer(function(current){
return !event.targets.includes(current)&&player.canUse(event.card,current);
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minilihuo'),'为'+get.translation(trigger.card)+'增加一个目标',function(card,player,target){
return !_status.event.sourcex.includes(target)&&player.canUse(_status.event.card,target);
}).set('sourcex',trigger.targets).set('card',trigger.card).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,_status.event.card,player,player);
});
'step 1'
if(result.bool){
if(!event.isMine()&&!_status.connectMode) game.delayx();
event.target=result.targets[0];
}
else event.finish();
'step 2'
player.logSkill('minilihuo',event.target);
trigger.targets.push(event.target);
},
},
draw:{
audio:'lihuo',
trigger:{source:'damageSource'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&get.nature(event.card)=='fire';
},
forced:true,
locked:false,
usable:1,
content:function(){
player.draw();
},
},
},
},
minichunlao:{
audio:'chunlao',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return player.countCards('h')>0&&(_status.connectMode||player.countCards('h','sha')>0)&&!player.getExpansions('minichunlao').length;
},
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
direct:true,
content:function(){
'step 0'
player.chooseCard([1,Math.max(1,player.countCards('h','sha'))],get.prompt('minichunlao'),'将任意张【杀】置于武将牌上作为“醇”',{name:'sha'}).set('ai',function(){
return 1;
});
'step 1'
if(result.bool){
player.logSkill('minichunlao');
player.addToExpansion('gain2',result.cards).gaintag.add('minichunlao');
}
},
group:'minichunlao2'
},
minichunlao2:{
enable:'chooseToUse',
filter:function(event,player){
return event.type=='dying'&&event.dying&&event.dying.hp<=0&&player.getExpansions('minichunlao').length>0;
},
filterTarget:function(card,player,target){
return target==_status.event.dying;
},
direct:true,
delay:false,
selectTarget:-1,
content:function(){
'step 0'
player.chooseCardButton(get.translation('minichunlao'),player.getExpansions('minichunlao'),true);
'step 1'
if(result.bool){
player.logSkill('minichunlao');
event.type='dying';
player.loseToDiscardpile(result.links);
target.useCard({name:'jiu',isCard:true},target);
var nature=get.color(result.links[0]);
if(nature=='red') player.recover();
if(nature=='black') player.draw(2);
}
},
ai:{
order:6,
skillTagFilter:function(player){
return player.getExpansions('minichunlao').length>0;
},
save:true,
result:{target:1},
},
},
minianxu:{
audio:'anxu',
trigger:{player:['phaseUseBegin','phaseUseEnd']},
direct:true,
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.isMaxHandcard()&&current.countCards('h');
});
},
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minianxu'),function(card,player,target){
return target.isMaxHandcard()&&target.countCards('h')&&player!=target;
},function(target){
var att=get.attitude(_status.event.player,target);
if(target.hasSkill('tuntian')) return att/10;
return -att;
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minianxu',target);
player.gainPlayerCard(target,'h',true);
}
else event.finish();
'step 2'
if(get.suit(result.cards[0])=='spade'){
player.line(target);
target.draw();
}
},
},
minixingwu:{
enable:'phaseUse',
usable:1,
filter:function(event,player){
return player.countCards('h');
},
filterCard:true,
filterTarget:lib.filter.notMe,
check:function(card){
return 8-get.value(card);
},
contentBefore:function(){
_status.event.player=player;
_status.event.trigger('useXingWu');
},
content:function(){
'step 0'
player.turnOver();
if(target.countCards('e')) player.discardPlayerCard(target,'e',true);
'step 1'
var num=2;
if(target.sex=='female') num=1;
target.damage(num,'nocard');
},
ai:{
damage:2,
order:9,
result:{
target:function(player,target){
if(get.attitude(player,target)>0) return 0;
return get.damageEffect(target,player);
},
},
},
},
miniluoyan:{
derivation:['minitianxiang','olhongyan'],
trigger:{player:'minixingwuAfter'},
forced:true,
content:function(){
for(var i of lib.skill.miniluoyan.derivation) player.addTempSkill(i,{player:'phaseUseBegin'});
},
},
minihuimou:{
trigger:{player:['useCard','respond','loseAfter'],global:'loseAsyncAfter'},
filter:function(event,player){
if(!game.hasPlayer(function(current){
return current.isTurnedOver();
})) return false;
if(event.name.indexOf('lose')!=0) return player!=_status.currentPhase&&get.suit(event.card,player)=='heart';
if(event.type!='discard'||event.getlx===false||get.translation(event.getParent(2).name)!='天香') return false;
return event.getl(player).cards2.filter(function(card){
return get.suit(card,player)=='heart';
}).length;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minihuimou'),'令一名背面朝上的角色翻至正面',function(card,player,target){
return target.isTurnedOver();
}).set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minihuimou',target);
if(target.isTurnedOver()) target.turnOver();
}
},
},
minianguo:{
audio:'anguo',
inherit:'xinanguo',
filterTarget:true,
},
yinghun_ol_sunjian:{audio:2},
miniyinghun:{
audio:'yinghun',
audioname2:{
Mbaby_ol_sunjian:'yinghun_ol_sunjian',
Mbaby_sunce:'yinghun_sunce',
Mbaby_re_sunyi:'gzyinghun_re_sunyi'
},
trigger:{player:'phaseZhunbeiBegin'},
direct:true,
preHidden:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('miniyinghun'),lib.filter.notMe).set('ai',function(target){
var player=_status.event.player,att=get.attitude(player,target);
if(get.attitude(player,target)>0) return 10+att;
if(player.getDamagedHp()>1) return -att;
return -1;
}).setHiddenSkill('miniyinghun');
'step 1'
if(result.bool){
var num=player.getDamagedHp();
event.num=num;
var target=result.targets[0];
event.target=target;
player.logSkill('miniyinghun',target);
if(num==0){
target.draw();
event.finish();
return;
}
else player.chooseControl(['摸'+get.cnNumber(num)+'张牌','摸一弃'+get.cnNumber(num,true)]).set('ai',function(){
var player=_status.event.player;
var target=_status.event.target;
var num=(get.attitude(player,target)>0?0:1);
return (player.isHealthy()?1-num:num);
}).set('target',target);
}
else event.finish();
'step 2'
if(result.index==0&&num>0) target.draw(num);
if(result.index==1){
target.draw();
if(num>0) target.chooseToDiscard(num,true,'he');
}
},
},
miniwulie:{
unique:true,
audio:'wulie',
trigger:{player:'phaseBegin'},
mark:true,
limited:true,
filter:function(event,player){
return player.hp>0;
},
direct:true,
skillAnimation:true,
animationColor:'wood',
content:function(){
'step 0'
var map={},list=[];
for(var i=1;i<=player.hp;i++){
var cn=get.cnNumber(i,true);
map[cn]=i;
list.push(cn);
}
list.push('cancel2');
event.map=map;
player.chooseControl(list).set('prompt',get.prompt2('miniwulie')).set('ai',function(){
var player=_status.event.player;
if(player.hasUnknown()||!_status.event.controls.includes(get.cnNumber(_status.event.goon,true))) return 'cancel2';
return get.cnNumber(_status.event.goon,true);
}).set('goon',player.hp-get.sgn(player.countCards('hs',{name:['tao','jiu']})));
'step 1'
if(result.control!='cancel2'){
var num=event.map[result.control]||1;
player.logSkill('miniwulie');
player.awakenSkill('miniwulie');
player.loseHp(num);
player.addSkill('miniwulie2');
player.addMark('miniwulie2',num);
player.chooseTarget([1,num],'是否令至多'+get.cnNumber(num)+'名其他角色各获得1枚「烈」标记？',lib.filter.notMe).set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
}
else event.finish();
'step 2'
if(result.bool){
var targets=result.targets.sortBySeat();
player.line(targets);
for(var i of targets){
i.addSkill('miniwulie2');
i.addMark('miniwulie2',1);
}
}
},
},
miniwulie2:{
marktext:'烈',
intro:{name2:'烈',content:'mark'},
trigger:{player:'damageBegin3'},
nopop:true,
content:function(){
trigger.cancel();
player.removeMark('miniwulie2',1);
if(!player.storage.miniwulie2) player.removeSkill('miniwulie2');
},
},
minikuizhu:{
audio:'nzry_kuizhu',
trigger:{player:'phaseDiscardEnd'},
filter:function(event,player){
var cards=[];
player.getHistory('lose',function(evt){
if(evt.type=='discard'&&evt.getParent('phaseDiscard')==event) cards.addArray(evt.cards2);
});
return cards.length;
},
direct:true,
content:function(){
'step 0'
var cards=[];
player.getHistory('lose',function(evt){
if(evt.type=='discard'&&evt.getParent('phaseDiscard')==trigger) cards.addArray(evt.cards2);
});
event.num=cards.length;
event.str1='令至多'+event.num+'名角色摸一张牌';
event.str2='对任意名体力值之和不大于'+event.num+'的角色造成一点伤害';
player.chooseControl('cancel2').set('ai',function(){
if(game.countPlayer(function(current){return get.attitude(player,current)<0&&current.hp<=event.num})>0) return 1;
return 0;
}).set('choiceList',[event.str1,event.str2]).set('prompt',get.prompt2('minikuizhu'));
'step 1'
if(result.control=='cancel2') event.finish();
event.control=[event.str1,event.str2][result.index];
'step 2'
var num=event.num,str=event.control;
player.chooseTarget('请选择〖溃诛〗的目标',str,[0,Infinity],function(card,player,target){
var num=_status.event.num;
switch(event.control){
case event.str1:
return ui.selected.targets.length<num;
break;
case event.str2:
if(!ui.selected.targets.length) return target.hp<=num;
var summer=0;
for(var i of ui.selected.targets) summer+=i.hp;
return summer+target.hp<=num;
break;
}
}).set('ai',function(target){
var player=_status.event.player;
switch(event.control){
case event.str1:
return get.attitude(player,target);
break;
case event.str2:
return get.damageEffect(target,player,player);
break;
}
}).set('num',num);
'step 3'
if(result.bool){
var targets=result.targets.sortBySeat();
player.logSkill('minikuizhu',targets);
if(event.control==event.str1) game.asyncDraw(targets);
else for(var target of targets) target.damage();
}
},
},
minichezheng:{
audio:'nzry_zhizheng',
mod:{
playerEnabled:function(card,player,target){
if(target!=player&&card.name=='sha'&&player.isPhaseUsing()&&!target.inRange(player)) return false;
},
},
trigger:{player:'phaseUseEnd'},
forced:true,
content:function(){
var num=game.countPlayer(function(current){
if(current==player) return false;
return !current.inRange(player);
});
player.draw(Math.max(2,num));
},
},
minilijun:{
unique:true,
audio:'nzry_lijun1',
trigger:{global:'useCardAfter'},
filter:function(event,player){
if(event.card.name!='sha'||event.player.group!='wu') return false;
if(!event.player.isPhaseUsing()||event.player==player) return false;
if(player.hasSkill('minilijun_used')) return false;
return true;
},
zhuSkill:true,
forced:true,
locked:false,
content:function(){
'step 0'
player.addTempSkill('minilijun_used','phaseUseAfter');
player.draw();
player.chooseBool().set('prompt','立军：是否令'+get.translation(trigger.player)+'摸一张牌？').set('choice',get.attitude(player,trigger.player)>0);
'step 1'
if(result.bool){
player.line(trigger.player);
trigger.player.draw();
}
},
subSkill:{used:{charlotte:true}},
},
miniguzheng:{
audio:'guzheng',
trigger:{global:'phaseDiscardAfter'},
filter:function(event,player){
if(event.player!=player&&event.player.isIn()){
return event.player.getHistory('lose',function(evt){
return evt.type=='discard'&&evt.getParent('phaseDiscard')==event&&evt.hs.filterInD('d').length>0;
}).length>0;
}
return false;
},
checkx:function(event,player,cards,cards2){
if(cards.length>2||get.attitude(player,event.player)>0) return true;
for(var i=0;i<cards2.length;i++){
if(get.value(cards2[i],event.player,'raw')<0) return true;
}
return false;
},
direct:true,
preHidden:true,
content:function(){
'step 0'
var cards=[];
var cards2=[];
game.getGlobalHistory('cardMove',function(evt){
if(evt.name=='cardsDiscard'&&evt.getParent('phaseDiscard')==trigger) cards.addArray(evt.cards.filterInD('d'));
});
game.countPlayer2(function(current){
current.getHistory('lose',function(evt){
if(evt.type!='discard'||evt.getParent('phaseDiscard')!=trigger) return;
cards.addArray(evt.cards.filterInD('d'));
if(current==trigger.player) cards2.addArray(evt.hs.filterInD('d'));
})
});
event.cards=cards;
var check=lib.skill.miniguzheng.checkx(trigger,player,cards,cards2);
player.chooseCardButton(cards,'固政：选择令'+get.translation(trigger.player)+'收回的牌').set('ai',function(button){
if(_status.event.check){
return 20-get.value(button.link,_status.event.getTrigger().player);
}
return 0;
}).set('check',check).set('cards',cards2).set('filterButton',function(button){
return _status.event.cards.includes(button.link);
}).setHiddenSkill(event.name);
'step 1'
if(result.bool){
game.delay(0.5);
player.logSkill('miniguzheng',trigger.player);
trigger.player.gain(result.links[0]);
trigger.player.$gain2(result.links[0]);
game.log(trigger.player,'收回了',result.links[0]);
event.cards.remove(result.links[0]);
if(event.cards.length){
player.gain(event.cards);
player.$gain2(event.cards);
game.log(player,'收回了',event.cards);
}
else player.draw();
game.delay();
}
},
ai:{expose:0.2},
},
miniliangyin:{
group:'miniliangyin_discard',
audio:'liangyin',
trigger:{global:['loseAfter','addToExpansionAfter','cardsGotoSpecialAfter','loseAsyncAfter']},
filter:function(event,player,name){
if(event.name=='lose'||event.name=='loseAsync') return event.getlx!==false&&event.toStorage==true;
if(event.name=='cardGotoSpecial') return !event.notrigger;
return true;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('miniliangyin'),'令一名角色摸一张牌').set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
'step 1'
if(result.bool){
player.logSkill('miniliangyin',result.targets);
result.targets[0].draw();
}
},
subSkill:{
discard:{
trigger:{global:['gainAfter','loseAfter']},
filter:function(event,player){
return event.fromStorage==true||game.hasPlayer2(function(current){
var evt=event.getl(current);
return evt&&evt.xs&&evt.xs.length>0;
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('miniliangyin'),'令一名角色弃置一张牌').set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe_copy2'},player,player);
});
'step 1'
if(result.bool){
player.logSkill('miniliangyin',result.targets);
result.targets[0].chooseToDiscard('he',1,true);
}
},
},
},
},
miniaocai:{
audio:'aocai',
enable:['chooseToUse','chooseToRespond'],
hiddenCard:function(player,name){
if(player!=_status.currentPhase&&get.type(name)=='basic'&&lib.inpile.includes(name)) return true;
},
filter:function(event,player){
if(event.responded||player==_status.currentPhase||event.miniaocai) return false;
for(var i of lib.inpile){
if(get.type(i)=='basic'&&event.filterCard({name:i},player,event)) return true;
}
return false;
},
delay:false,
content:function(){
'step 0'
var evt=event.getParent(2),aozhan=player.hasSkill('aozhan');
evt.set('miniaocai',true);
var cards=get.cards(player.countCards('h')==0?4:3);
for(var i=cards.length-1;i>=0;i--){
ui.cardPile.insertBefore(cards[i].fix(),ui.cardPile.firstChild);
}
player.chooseButton(['傲才：选择要'+(evt.name=='chooseToUse'?'使用':'打出')+'的牌',cards]).set('filterButton',function(button){
return _status.event.cards.includes(button.link);
}).set('cards',cards.filter(function(card){
if(aozhan&&card.name=='tao') return false;
return evt.filterCard(card,evt.player,evt);
})).set('ai',function(button){
var evt=_status.event.getParent(3);
if(evt&&evt.ai){
var tmp=_status.event;
_status.event=evt;
var result=(evt.ai||event.ai1)(button.link,_status.event.player,evt);
_status.event=tmp;
return result;
}
return 1;
});
'step 1'
var evt=event.getParent(2);
if(result.bool&&result.links&&result.links.length){
var name=result.links[0].name;
if(evt.name=='chooseToUse'){
game.broadcastAll(function(result,name){
lib.skill.aocai_backup.viewAs={name:name,cards:[result],isCard:true};
lib.skill.aocai_backup.prompt='请选择'+get.translation(result)+'的目标';
},result.links[0],name);
evt.set('_backupevent','aocai_backup');
evt.backup('aocai_backup');
}
else{
delete evt.result.skill;
delete evt.result.used;
evt.result.card=get.autoViewAs(result.links[0]);
if(aozhan) evt.result.card.name=name;
evt.result.cards=[result.links[0]];
evt.redo();
return;
}
}
evt.goto(0);
},
ai:{
effect:{
target:function(card,player,target,effect){
if(get.tag(card,'respondShan')) return 0.7;
if(get.tag(card,'respondSha')) return 0.7;
},
},
order:11,
respondShan:true,
respondSha:true,
result:{
player:function(player){
if(_status.event.dying) return get.attitude(player,_status.event.dying);
return 1;
},
},
},
},
miniduwu:{
audio:'duwu',
enable:'phaseUse',
filter:function(event,player){
return !player.hasSkill('miniduwu2')&&game.hasPlayer(function(current){
return current.hp>0&&current.hp<=player.countCards('he')&&player.inRange(current);
});
},
filterCard:function(){
return !ui.selected.targets.length;
},
position:'he',
selectCard:[1,Infinity],
complexSelect:true,
complexCard:true,
filterTarget:function(card,player,target){
return target!=player&&target.hp>0&&player.inRange(target)&&ui.selected.cards.length==target.hp;
},
check:function(card){
var player=_status.event.player;
if(game.hasPlayer(function(current){
return current!=player&&current.hp>0&&player.inRange(current)&&ui.selected.cards.length==current.hp&&get.damageEffect(current,player,player)>0;
})) return 0;
switch(ui.selected.cards.length){
case 0:return 8-get.value(card);
case 1:return 6-get.value(card);
case 2:return 3-get.value(card);
default:return 0;
}
},
content:function(){
player.addTempSkill('miniduwu3');
target.damage('nocard');
},
ai:{
expose:0.3,
damage:true,
order:2,
result:{
target:function(player,target){
return get.damageEffect(target,player);
},
},
},
},
miniduwu2:{charlotte:true},
miniduwu3:{
trigger:{global:'dyingAfter'},
charlotte:true,
filter:function(event,player){
return event.player.isIn()&&event.reason&&event.reason.getParent().name=='miniduwu';
},
forced:true,
popup:false,
content:function(){
player.draw();
player.addTempSkill('miniduwu2');
},
},
miniwengua:{
global:'miniwengua2',
audio:'wengua',
},
miniwengua2:{
audio:'wengua',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he')&&game.hasPlayer(function(current){
return current.hasSkill('miniwengua')&&!current.hasSkill('miniwengua3');
});
},
prompt:()=>lib.translate.miniwengua_info,
filterTarget:function(card,player,target){
return target.hasSkill('miniwengua')&&!target.hasSkill('miniwengua3');
},
selectTarget:function(){
if(game.countPlayer(function(current){
return current.hasSkill('miniwengua')&&!current.hasSkill('miniwengua3');
})==1) return -1;
return 1;
},
filterCard:true,
selectCard:[0,1],
check:function(card){
var list=game.filterPlayer(function(current){
return current.hasSkill('miniwengua')&&!current.hasSkill('miniwengua3');
});
list.sort(function(a,b){
var p=_status.event.player;
return get.attitude(p,b)-get.attitude(p,a);
});
if(get.type2(card)=='trick'&&(list[0].isDamaged()||list[0].maxHp<5)) return 10;
if(card.name=='sha') return 5;
return 8-get.value(card);
},
filterOk:function(){
return ui.selected.targets.length&&ui.selected.cards.length;
},
direct:true,
delay:false,
discard:false,
lose:false,
position:'he',
content:function(){
'step 0'
target.logSkill('miniwengua',player);
target.addTempSkill('miniwengua3','phaseUseAfter');
if(target!=player) player.give(cards,target);
player.showCards(cards,get.translation(player)+'发动了【问卦】');
'step 1'
var card=cards[0];
if(get.type2(card)=='trick'){
if(target.maxHp<5) target.gainMaxHp();
target.recover();
}
'step 2'
var choiceList=[
'将'+get.translation(cards[0])+'置于牌堆顶',
'将'+get.translation(cards[0])+'置于牌堆底'
];
if(target!=player) choiceList.push('将'+get.translation(cards[0])+'留给自己');
if(target.getCards('he').includes(cards[0])){
target.chooseControl().set('choiceList',choiceList).set('ai',()=>target!=player&&get.attitude(target,player)<0?2:1);
}
else event.finish();
'step 3'
event.index=result.index;
if(event.index==0||event.index==1){
var next=event.target.lose(cards[0],ui.cardPile);
if(event.index==0) next.insert_card=true;
target.$throw(cards,1000);
}
else event.finish();
'step 4'
game.delayx();
'step 5'
if(event.index==1){
game.log(target,'将',cards,'置于','#y牌堆底');
if(player==target) player.draw('nodelay');
else game.asyncDraw([player,target],null,null);
}
else{
game.log(target,'将',cards,'置于','#g牌堆顶');
if(player==target) player.draw('nodelay','bottom');
else game.asyncDraw([player,target],null,null,true);
}
},
ai:{
order:9,
result:{target:1},
},
},
miniwengua3:{charlotte:true},
minifuzhu:{
audio:'fuzhu',
inherit:'fuzhu',
filter:function(event,player){
return event.player!=player&&ui.cardPile.childElementCount<=player.maxHp*10;
},
onWash:function(){
_status.event.getParent('minifuzhu').washed=false;
return 'remove';
},
content:function(){
'step 0'
event.washed=false;
lib.onwash.push(lib.skill.minifuzhu.onWash);
event.total=game.countPlayer2();
'step 1'
event.total--;
var card=get.cardPile2(function(card){
return card.name=='sha'&&player.canUse(card,trigger.player,false);
});
if(card){
card.remove();
game.updateRoundNumber();
player.useCard(card,trigger.player,false);
}
'step 2'
if(event.total>0&&!event.washed&&ui.cardPile.childElementCount<=player.maxHp*10&&trigger.player.isIn()) event.goto(1);
else lib.onwash.remove(lib.skill.minifuzhu.onWash);
'step 3'
var cards=get.cards(ui.cardPile.childElementCount+1);
for(var i=0;i<cards.length;i++){
ui.cardPile.insertBefore(cards[i],ui.cardPile.childNodes[get.rand(ui.cardPile.childElementCount)]);
}
game.updateRoundNumber();
},
},
minihongde:{
group:'minihongde_hongde',
audio:'hongde',
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
frequent:true,
filter:function(event,player){
if(event.name=='gain'&&event.player==player) return false;
var evt=event.getl(player);
return evt&&evt.cards2&&evt.cards2.length>0;
},
usable:2,
frequent:true,
content:function(){
player.draw();
},
subSkill:{
hongde:{
trigger:{player:'gainAfter'},
filter:function(event,player){
return event.cards&&event.cards.length>1;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minihongde'),'令一名其他角色摸一张牌',lib.filter.notMe).set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
'step 1'
if(result.bool){
var target=result.targets[0]
player.logSkill('minihongde',target);
target.draw();
}
},
},
},
},
minidingpan:{
audio:'dingpan',
inherit:'dingpan',
filter:function(event,player){
return (player.getStat().skill.minidingpan||0)<game.countGroup();
},
},
minijueyan:{
derivation:'minirejizhi',
audio:'drlt_jueyan',
enable:'phaseUse',
filter:function(event,player){
return lib.skill.drlt_jueyan.filter(event,player);
},
usable:1,
content:function(){
'step 0'
var list=[];
for(var i=1;i<=4;i++){
if(player.hasEnabledSlot(i)) list.push('equip'+i);
}
if(list.includes('equip3')&&list.includes('equip4')) list.push('equip3_4');
list.remove('equip3');
list.remove('equip4');
player.chooseControl(list).set('ai',function(){
var player=_status.event.player;
if(list.includes('equip2')) return 'equip2';
if(list.includes('equip1')&&(player.countCards('h',function(card){
return get.name(card,player)=='sha'&&player.hasUseTarget(card);
})-player.getCardUsable('sha'))>1) return 'equip1';
if(list.includes('equip3_4')&&player.countCards('h',function(card){
return get.type2(card,player)=='trick'&&player.hasUseTarget(card,false);
})>1) return 'equip3_4';
}).set('prompt','决堰：请选择你要废除的装备栏');
'step 1'
if(result.control=='equip3_4'){
player.disableEquip(3,4);
player.recover();
player.addTempSkill('minirejizhi');
}
else player.disableEquip(result.control);
if(result.control=='equip2') player.draw(3);
player.addTempSkill(['drlt_jueyan1','drlt_jueyan3','drlt_jueyan2'][['equip1','equip2','equip3_4'].indexOf(result.control)]);
},
ai:{
order:13,
result:{
player:function(player){
if(!player.isDisabled('equip2')) return 1;
if(!player.isDisabled('equip1')&&(player.countCards('h',function(card){
return get.name(card,player)=='sha'&&player.hasValueTarget(card);
})-player.getCardUsable('sha'))>1) return 1;
if((player.hasEnabledSlot(3)&&player.hasEnabledSlot(4))&&player.countCards('h',function(card){
return get.type2(card,player)=='trick'&&player.hasUseTarget(card,false);
})>1) return 1;
return -1;
},
},
},
},
rejizhi_lukang:{audio:2},
minihuairou:{
audio:'drlt_huairou',
enable:'phaseUse',
filter:function(event,player){
var list=[],bool=false;
for(var i=1;i<=5;i++){
if(!player.hasEnabledSlot(i)) list.push('equip'+i);
}
for(var name of lib.inpile){
if(get.type(name)!='basic'&&get.type2(name)!='trick') continue;
var storage=player.getStorage('minihuairou_used');
if(!storage.includes(name)){
bool=true;
break;
}
}
return bool&&player.countCards('he',function(card){
return list.includes(get.subtype(card));
});
},
filterCard:function(card,player){
var list=[];
for(var i=1;i<=5;i++){
if(!player.hasEnabledSlot(i)) list.push('equip'+i);
}
return get.type(card)=='equip'&&list.includes(get.subtype(card));
},
check:function(card){
var player=_status.event.player;
if(player.isDisabled(get.subtype(card))) return 5;
return 6-get.value(card);
},
position:'he',
discard:false,
visible:true,
loseTo:'discardPile',
delay:0.5,
prepare:function(cards,player){
player.addTempSkill('minihuairou_used');
player.$throw(cards,1000);
game.log(player,'将',cards,'置入了弃牌堆');
},
content:function(){
'step 0'
var list=[];
for(var name of lib.inpile){
if(get.type(name)!='basic'&&get.type2(name)!='trick') continue;
var storage=player.getStorage('minihuairou_used');
if(!storage.includes(name)){
list.push([get.translation(get.type2({name:name})),'',name]);
if(name=='sha'){
for(var nature of lib.inpile_nature) list.push(['基本','',name,nature]);
}
}
}
player.chooseButton(['怀柔：选择获得一种基本牌或锦囊牌',[list,'vcard']],true);
'step 1'
player.markAuto('minihuairou_used',[result.links[0][2]]);
var card=get.cardPile(function(card){
return card.name==result.links[0][2]&&(get.nature(card)==result.links[0][3]||!result.links[0][3]);
});
if(card) player.gain(card,'gain2');
else{
player.chat('杯具');
game.log('但是牌堆中已经没有','#y'+get.translation(result.links[0][2]),'了！')
}
},
ai:{
order:10,
result:{player:1},
},
subSkill:{used:{charlotte:true,onremove:true}},
},
miniyanxiao:{
audio:'yanxiao',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he',{suit:'diamond'})&&game.hasPlayer(function(target){
return target.canAddJudge({name:'miniyanxiao_card'});
});
},
filterTarget:function(card,player,target){
return target.canAddJudge({name:'miniyanxiao_card'});
},
filterCard:{suit:'diamond'},
check:function(card){
return 7-get.value(card);
},
position:'he',
discard:false,
lose:false,
delay:false,
prepare:'give',
content:function(){
'step 0'
game.addGlobalSkill('miniyanxiao_global');
target.addJudge({name:'miniyanxiao_card'},cards);
'step 1'
game.delayx();
},
ai:{
order:8,
result:{
target:function(player,target){
if(target.countCards('j',function(card){
return get.effect(target,{
name:card.viewAs||card.name,
cards:[card],
},target,target)<0;
})) return 3;
return 1;
},
},
},
subSkill:{
global:{
audio:'yanxiao',
forceaudio:true,
trigger:{player:'phaseJudgeBegin'},
filter:function(event,player){
return player.countCards('j')&&player.hasJudge('miniyanxiao_card');
},
forced:true,
content:function(){
'step 0'
player.gain(player.getCards('j'),'gain2');
player.judge();
'step 1'
if(result.color=='red') player.draw();
else player.addTempSkill('miniyanxiao_sha');
},
ai:{
effect:{
target:function(card,player,target){
if(get.type(card)=='delay'&&target.hasJudge('miniyanxiao_card')) return [0,0,0,0.1];
},
},
},
},
sha:{
charlotte:true,
mark:true,
marktext:'+1',
intro:{content:'出【杀】次数+1'},
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+1;
},
},
},
},
},
minianxian:{
audio:'anxian',
group:'minianxian_target',
trigger:{player:'useCardToPlayer'},
filter:function(event,player){
return event.card.name=='sha'&&event.target.countCards('h')&&!event.card.minianxian;
},
check:function(event,player){
return get.attitude(player,event.target)<=0;
},
prompt2:function(event,player){
return '令'+get.translation(event.target)+'弃置一张手牌';
},
logTarget:'target',
content:function(){
trigger.target.chooseToDiscard('h',true);
},
subSkill:{
target:{
trigger:{target:'useCardToTarget'},
filter:function(event,player){
return event.card.name=='sha'&&player.countCards('h');
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard(get.prompt('minianxian'),'弃置一张手牌令'+get.translation(trigger.card)+'对你无效，然后'+get.translation(trigger.player)+'摸一张牌'+(player.canUse({name:'sha',isCard:true},trigger.player,false)?'，若你弃置了方片花色的牌，则你视为对'+get.translation(trigger.player)+'使用一张不触发〖安娴〗的【杀】':'')).set('ai',function(card){
var player=_status.event.player;
var trigger=_status.event.getTrigger();
if(get.suit(card)=='diamond'&&player.canUse({name:'sha',isCard:true},trigger.player,false)) return get.attitude(player,trigger.player)>0?0:9-get.value(card);
return 6-get.value(card);
}).logSkill=['minianxian',trigger.player];
'step 1'
if(result.bool){
trigger.player.draw();
trigger.getParent().excluded.push(player);
if(get.suit(result.cards[0],player)=='diamond'){
var card={name:'sha',isCard:true};
if(player.canUse(card,trigger.player,false)) player.useCard(card,trigger.player).card.minianxian=true;
}
}
},
},
},
},
minicanshi:{
audio:'canshi',
trigger:{player:'phaseDrawBegin2'},
check:function(event,player){
if(player.skipList.includes('phaseUse')||!player.countCards('h',function(card){
return get.type2(card)=='trick'&&player.hasUseTarget(card);
})) return true;
var num=game.countPlayer(function(current){
if(player.hasSkill('guiming')&&current.group=='wu') return true;
return current.isDamaged();
});
return num>1;
},
prompt:function(event,player){
var num=game.countPlayer(function(current){
if(player.hasSkill('guiming')&&current.group=='wu'&&current!=player) return true;
return current.isDamaged();
});
return get.prompt('minicanshi')+'（可多摸'+get.cnNumber(num)+'张牌，且本回合使用【杀】须弃置一张牌）';
},
filter:function(event,player){
return !event.numFixed&&game.hasPlayer(function(current){
if(player.hasSkill('guiming')&&current.group=='wu'&&current!=player) return true;
return current.isDamaged();
});
},
content:function(){
var num=game.countPlayer(function(current){
if(player.hasSkill('guiming')&&current.group=='wu'&&current!=player) return true;
return current.isDamaged();
});
if(num>0) trigger.num+=num;
player.addTempSkill('minicanshi2');
},
},
minicanshi2:{
trigger:{player:'useCard'},
filter:function(event,player){
if(!player.countCards('he')) return false;
return event.card.name=='sha';
},
forced:true,
autodelay:true,
content:function(){
player.chooseToDiscard(true,'he');
},
},
minichouhai:{
audio:'chouhai',
trigger:{player:'damageBegin3'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&!player.countCards('he');
},
forced:true,
content:function(){
trigger.num++;
},
ai:{
effect:{
target:function(card,player,target,current){
if(card.name=='sha'&&!target.countCards('he')) return [1,-2];
},
},
},
},
miniguolun:{
audio:'xinfu_guolun',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h');
},
filterTarget:function(card,player,target){
return target!=player&&target.countCards('h');
},
usable:1,
content:function(){
'step 0'
player.choosePlayerCard(target,true,'h');
'step 1'
event.cardt=result.cards[0];
target.showCards(event.cardt);
player.chooseCard('he').set('ai',function(card){
var event=_status.event.getParent(),player=event.player;
var numt=get.number(event.cardt);
var att=get.attitude(player,target);
var value=get.value(event.cardt);
var num=get.number(card);
if(num<numt||att>2) return value+6-get.value(card);
else if(num==numt) return value-get.value(card);
return -1;
});
'step 2'
if(!result.bool) event.finish();
else{
player.showCards(result.cards);
event.cardp=result.cards[0];
}
'step 3'
player.swapHandcards(target,[event.cardp],[event.cardt]);
'step 4'
var nump=get.number(event.cardp,player);
var numt=get.number(event.cardt,target);
if(nump<numt){
player.draw(2);
}
else if(nump>numt){
target.draw();
player.recover();
}
},
ai:{
order:8,
result:{
player:function(player,target){
if(get.attitude(player,target)>0) return 1.5;
return 0.5;
},
},
},
},
minisongsang:{
audio:'xinfu_songsang',
inherit:'gongao',
},
minizhente:{
audio:'zhente',
inherit:'zhente',
filter:function(event,player){
var color=get.color(event.card);
if(player==event.player||event.player.isDead()||color=='none') return false;
var type=get.type(event.card);
return type=='basic'||type=='trick';
},
usable:Infinity,
},
minizhiwei:{
audio:'zhiwei',
trigger:{global:'phaseBefore',player:['enterGame','phaseZhunbeiBegin']},
filter:function(event,player,name){
if(game.countPlayer()<2) return false;
return (name!='phaseBefore'||game.phaseNumber==0)&&!player.hasSkill('minizhiwei2');
},
forced:true,
content:function(){
'step 0'
player.chooseTarget('请选择【至微】的目标','选择一名其他角色。该角色造成伤害后，你摸一张牌，该角色受到伤害后，你可以交给其一张牌。你弃牌阶段弃置的牌可以交给该角色。',true,lib.filter.notMe).set('ai',function(target){
var att=get.attitude(_status.event.player,target);
if(att>0) return 1+att;
return Math.random();
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.line('minizhiwei',target);
player.storage.minizhiwei2=target;
player.addSkill('minizhiwei2');
}
},
},
minizhiwei2:{
group:['minizhiwei2_draw','minizhiwei2_discard','minizhiwei2_gain','minizhiwei2_clear'],
charlotte:true,
onremove:true,
mark:'character',
intro:{content:'$造成伤害后你摸一张牌；$受到伤害后你可以交给其一张牌；你于弃牌阶段弃置牌后可以交给$'},
subSkill:{
draw:{
audio:'zhiwei',
trigger:{global:'damageSource'},
filter:function(event,player){
return event.source==player.storage.minizhiwei2;
},
forced:true,
logTarget:'source',
content:function(){
player.draw();
},
},
discard:{
trigger:{global:'damageEnd'},
filter:function(event,player){
return event.player==player.storage.minizhiwei2&&player.countCards('h');
},
direct:true,
content:function(){
'step 0'
var target=player.storage.minizhiwei2;
event.target=target;
player.chooseCard('h','至微：是否将一张手牌交给'+get.translation(target)+'？').set('ai',function(card){
if(_status.event.goon) return 5-get.value(card);
return -get.value(card);
}).set('goon',get.attitude(player,target)>0);
'step 1'
if(result.bool){
player.logSkill('minizhiwei',target);
target.gain(result.cards,player,'giveAuto');
}
},
},
gain:{
audio:'zhiwei',
trigger:{player:'loseAfter',global:'loseAsyncAfter'},
filter:function(event,player){
if(event.type!='discard'||event.getlx===false||event.getParent('phaseDiscard').player!=player||!player.storage.minizhiwei2||!player.storage.minizhiwei2.isIn()) return false;
var evt=event.getl(player);
return evt&&evt.cards2.filterInD('d').length>0;
},
logTarget:function(event,player){
return player.storage.minizhiwei2;
},
check:function(event,player){
return get.attitude(player,player.storage.minizhiwei2)>0;
},
prompt:(event,player)=>'是否对'+get.translation(player.storage.minizhiwei2)+'发动【至微】？',
prompt2:(event,player)=>'将'+get.translation(event.getl(player).cards2.filterInD('d'))+'交给'+get.translation(player.storage.minizhiwei2),
content:function(){
if(trigger.delay===false) game.delay();
player.storage.minizhiwei2.gain(trigger.getl(player).cards2.filterInD('d'),'gain2');
},
},
clear:{
audio:'zhiwei',
trigger:{global:'die'},
filter:function(event,player){
return event.player==player.storage.minizhiwei2;
},
forced:true,
content:function(){
player.removeSkill('minizhiwei2');
},
},
},
},
//朱桓
minifenli:{
audio:'fenli',
trigger:{player:['phaseJudgeBefore','phaseUseBefore','phaseDiscardBefore']},
filter:function(event,player){
switch(event.name){
case 'phaseJudge':return player.isMaxHandcard();break;
case 'phaseUse':return player.isMaxHp();break;
case 'phaseDiscard':return player.isMaxEquip();break;
}
return false;
},
check:function(event,player){
switch(event.name){
case 'phaseJudge':{
if(player.hasJudge('lebu')||player.hasJudge('bingliang')) return true;
if(player.getHistory('skipped').length>0) return false;
return game.hasPlayer(function(current){
return get.attitude(player,current)<0&&current.hp==1&&get.damageEffect(current,player,player)>0;
});
break;
}
case 'phaseUse':{
if(!player.needsToDiscard()||(player.countCards('e')&&player.isMaxEquip())) return true;
if(player.getHistory('skipped').length>0) return false;
return game.hasPlayer(function(current){
return get.attitude(player,current)<0&&current.hp==1&&get.damageEffect(current,player,player)>0;
});
break;
}
case 'phaseDiscard':{
return true;
break;
}
}
return false;
},
prompt:function(event,player){
return get.prompt('minifenli')+'（可跳过'+get.translation(event.name)+(event.name=='phaseJudge'?'和摸牌阶段':'')+'）';
},
content:function(){
trigger.cancel();
game.log(player,'跳过了','#y'+get.translation(trigger.name));
if(trigger.name=='phaseJudge'){
player.skip('phaseDraw');
game.log(player,'跳过了','#y摸牌阶段');
}
},
},
minipingkou:{
audio:'pingkou',
trigger:{player:'phaseEnd'},
filter:function(event,player){
return player.getHistory('skipped').length;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget([1,player.getHistory('skipped').length],get.prompt2('minipingkou'),lib.filter.notMe).set('ai',function(target){
var player=_status.event.player;
return get.damageEffect(target,player,player)*(target.countCards('e')?2:1);
});
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
event.targets=targets;
player.logSkill('minipingkou',targets);
for(var i of targets) i.damage();
if(targets.length==player.getHistory('skipped').length||!game.hasPlayer(function(current){
return current.countGainableCards(player,'e')&&targets.includes(current);
})) event.finish();
}
else event.finish();
'step 2'
player.chooseTarget('请选择一名目标角色，获得其装备区中的一张牌',true,function(card,player,target){
return target.countGainableCards(player,'e')&&_status.event.targets.includes(target);
}).set('ai',function(target){
var player=_status.event.player;
return 1+Math.random()-get.attitude(player,target);
}).set('targets',targets);
'step 3'
if(result.bool){
var target=result.targets[0];
player.line(target);
player.gainPlayerCard(target,'e',true);
}
},
ai:{
combo:'minifenli',
effect:{
target:function(card){
if(card.name=='lebu'||card.name=='bingliang') return 0.5;
},
},
},
},
//严畯
miniguanchao:{
audio:'xinfu_guanchao',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
var list=['递增','递减','取消'];
player.chooseControl(list).set('prompt',get.prompt2('miniguanchao')).set('ai',function(){
return [0,1].randomGet();
}).set('choiceList',[
'使用【杀】的次数上限+1，使用牌严格递增摸一张牌',
'计算与其他角色之间的距离-1，使用牌严格递减摸一张牌'
]);
'step 1'
switch(result.control){
case '递增':{
player.logSkill('miniguanchao');
player.addTempSkill('miniguanchao_dizeng');
break;
}
case '递减':{
player.logSkill('miniguanchao');
player.addTempSkill('miniguanchao_dijian');
break;
}
case '取消':{
break;
}
}
},
subSkill:{
dizeng:{
mark:true,
marktext:'增',
intro:{content:'使用【杀】的次数上限+1，使用牌严格递增摸一张牌'},
trigger:{player:'useCard'},
audio:'xinfu_guanchao',
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+1;
},
aiOrder:function(player,card,num){
if(typeof card.number!='number') return;
var history=player.getHistory('useCard');
if(history.length==0) return num+10*(14-card.number);
var num=get.number(history[0].card);
if(!num) return;
for(var i=1;i<history.length;i++){
var num2=get.number(history[i].card);
if(!num2||num2<=num) return;
num=num2;
}
if(card.number>num) return num+10*(14-card.number);
},
},
filter:function(event,player){
var history=player.getHistory('useCard');
if(history.length<2) return false;
var num=get.number(history[0].card);
if(!num) return false;
for(var i=1;i<history.length;i++){
var num2=get.number(history[i].card);
if(!num2||num2<=num) return false;
num=num2;
}
return true;
},
forced:true,
content:function(){
player.draw();
},
},
dijian:{
mark:true,
marktext:'减',
intro:{content:'计算与其他角色之间的距离-1，使用牌严格递减摸一张牌'},
trigger:{player:'useCard'},
audio:'xinfu_guanchao',
mod:{
globalFrom:function(from,to,distance){
return distance-1;
},
aiOrder:function(player,card,num){
if(typeof card.number!='number') return;
var history=player.getHistory('useCard');
if(history.length==0) return num+10*card.number;
var num=get.number(history[0].card);
if(!num) return;
for(var i=1;i<history.length;i++){
var num2=get.number(history[i].card);
if(!num2||num2>=num) return;
num=num2;
}
if(card.number<num) return num+10*card.number;
},
},
filter:function(event,player){
var history=player.getHistory('useCard');
if(history.length<2) return false;
var num=get.number(history[0].card);
if(!num) return false;
for(var i=1;i<history.length;i++){
var num2=get.number(history[i].card);
if(!num2||num2>=num) return false;
num=num2;
}
return true;
},
forced:true,
content:function(){
player.draw();
},
},
},
},
minixunxian:{
audio:'xinfu_xunxian',
trigger:{global:'cardsDiscardAfter'},
filter:function (event,player){
if(!event.cards.filterInD('d').length) return false;
var evt=event.getParent();
if(evt.name!='orderingDiscard') return false;
var evtx=(evt.relatedEvent||evt.getParent());
if(evtx.player!=player) return false;
return player.hasHistory('lose',function(evtxx){
return evtx==(evtxx.relatedEvent||evtxx.getParent())&&evtxx.cards2.length;
});
},
usable:1,
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minixunxian'),'令一名其他角色获得'+get.translation(trigger.cards.filterInD('d')),lib.filter.notMe).set('ai',function(target){
var player=_status.event.player;
var att=get.attitude(player,target);
if(att<3) return 0;
if(target.hasJudge('lebu')) att/=5;
if(target.hasSha()&&_status.event.sha) att/=5;
if(_status.event.wuxie&&target.needsToDiscard(1)) att/=5;
return att/(1+get.distance(player,target,'absolute'));
}).set('sha',trigger.cards.filterInD('d').filter(function(card){
return card.name=='sha';
}).length).set('wuxie',trigger.cards.filterInD('d').filter(function(card){
return card.name=='wuxie';
}).length);
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minixunxian',target);
target.gain(trigger.cards.filterInD('d'),'gain2');
}
else player.storage.counttrigger.minixunxian--;
},
ai:{expose:0.25},
},
//孙翊
minisyxiongyi:{
derivation:['minihunzi_old','reyingzi','miniyinghun'],
audio:'syxiongyi',
skillAnimation:true,
animationColor:'wood',
limited:true,
enable:'chooseToUse',
filter:function(event,player){
if(event.type!='dying') return false;
if(player!=event.dying) return false;
return true;
},
content:function(){
player.awakenSkill('minisyxiongyi');
if(!_status.characterlist) lib.skill.pingjian.initList();
var hp=1-player.hp;
if((player.name1=='Mbaby_re_sunyi'||player.name2=='Mbaby_re_sunyi')&&_status.characterlist.includes('Mbaby_xushi')){
hp+=2;
_status.characterlist.remove('Mbaby_xushi');
_status.characterlist.add('Mbaby_re_sunyi');
player.reinit('Mbaby_re_sunyi','Mbaby_xushi',false);
}
else player.addSkillLog('minihunzi_old');
if(hp>0) player.recover(hp);
},
ai:{
order:1,
save:true,
skillTagFilter:function(player,arg,target){
return player==target;
},
result:{player:10},
},
},
//璇天帝
minishezang:{
audio:'shezang',
inherit:'shezang',
round:0,
usable:1,
},
//托尼
miniyoudi:{
audio:'xinfu_youdi',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return player.countCards('h');
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('miniyoudi'),function(card,player,target){
return player!=target;
}).set('ai',function(target){
var player=_status.event.player;
if(player.countCards('h','sha')>player.countCards('h')/3&&player.countCards('h',{color:'red'})>player.countCards('h')/2) return 0;
if(target.countCards('he')==0) return 0.1;
return -get.attitude(_status.event.player,target);
});
'step 1'
if(result.bool){
game.delay();
player.logSkill('miniyoudi',result.targets);
event.target=result.targets[0];
event.target.discardPlayerCard(player,'h',true);
}
else event.finish();
'step 2'
if(result.links[0].name!='sha'&&event.target.countCards('he')){
player.gainPlayerCard('he',event.target,true);
player.draw();
}
if(get.color(result.links[0])!='black'&&player.maxHp<5) player.gainMaxHp();
},
ai:{expose:0.25},
},
//朱自清の父亲
minizhenglun:{
audio:'nzry_zhenglun',
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
if(event.numFixed) return false;
return !player.hasMark('nzry_huaiju');
},
content:function(){
trigger.num--;
player.addMark('nzry_huaiju',1);
},
ai:{combo:'nzry_huaiju'},
},
//孙登
minikuangbi:{
group:['minikuangbi_gain','minikuangbi_effect'],
audio:'kuangbi',
enable:'phaseUse',
filterTarget:function(card,player,target){
return target!=player&&target.countCards('he')>0;
},
usable:1,
content:function(){
'step 0'
target.chooseCard('he',[1,3],'匡弼：将至多三张牌置于'+get.translation(player)+'的武将牌上',true).set('ai',function(card){
if(get.attitude(_status.event.player,_status.event.getParent().player)>0){
return 7-get.value(card);
}
return -get.value(card);
});
'step 1'
if(result.bool){
event.num=result.cards.length;
player.addToExpansion(result.cards,target,'give').gaintag.add('minikuangbi');
player.chooseBool('匡弼：是否令'+get.translation(target)+'摸'+get.cnNumber(event.num)+'张牌？').set('choice',get.attitude(player,target)>0);
}
else event.finish();
'step 2'
if(result.bool){
player.line(target);
target.draw(num);
}
},
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
player.removeGaintag(skill);
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
ai:{
order:7,
result:{
player:1,
target:function(player,target){
if(get.attitude(player,target)>0){
return Math.sqrt(target.countCards('he'));
}
return 0;
},
},
},
subSkill:{
gain:{
audio:'kuangbi',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.getExpansions('minikuangbi').length;
},
forced:true,
locked:false,
content:function(){
player.gain(player.getExpansions('minikuangbi'),'gain2').gaintag.add('minikuangbi');
},
},
effect:{
audio:'kuangbi',
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
var evt=event.getl(player);
if(!evt||!evt.hs||!evt.hs.length) return false;
if(player.countCards('h',function(card){
return card.hasGaintag('minikuangbi');
})) return false;
if(event.name=='lose'){
for(var i in event.gaintag_map){
if(event.gaintag_map[i].includes('minikuangbi')) return true;
}
return false;
}
return player.hasHistory('lose',function(evt){
if(event!=evt.getParent()) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('minikuangbi')) return true;
}
return false;
});
},
forced:true,
locked:false,
content:function(){
player.draw();
player.recover();
},
},
},
},
//潘濬
miniguanwei:{
audio:'xinfu_guanwei',
trigger:{global:'phaseUseEnd'},
filter:function (event,player){
var map={};
event.player.getHistory('useCard',function(evt){
if(evt.getParent('phaseUse')==event){
var suit=get.suit(evt.card,event.player);
if(!map[suit]) map[suit]=1;
else map[suit]++;
}
});
for(var i in map){
if(map[i]>1) return true;
}
return false;
},
direct:true,
usable:1,
content:function(){
'step 0'
player.chooseToDiscard(get.prompt('miniguanwei',trigger.player),'弃置一张牌，令其摸两张牌并进行一个额外的出牌阶段','he').set('ai',function(card){
if(get.attitude(_status.event.player,_status.currentPhase)<=0) return 0;
return 9-get.value(card);
}).set('logSkill','miniguanwei');
'step 1'
if(result.bool){
if(trigger.player!=player) player.addExpose(0.5);
player.line(trigger.player,'green');
trigger.player.draw(2);
}
else event.finish();
'step 2'
var next=trigger.player.phaseUse();
event.next.remove(next);
trigger.getParent('phase').next.push(next);
},
},
minigongqing:{
audio:'xinfu_gongqing',
trigger:{player:'damageBegin4'},
filter:function (event,player,name){
if(!event.source) return false;
var num=event.source.getAttackRange();
if(num<3) return event.num>1;
return true;
},
preHidden:true,
forced:true,
content:function(){
var range=trigger.source.getAttackRange();
if(range<3&&trigger.num>1) trigger.num=1;
if(range>=3) player.draw();
},
ai:{
filterDamage:true,
skillTagFilter:function(player,tag,arg){
if(arg&&arg.player){
if(arg.player.hasSkillTag('jueqing',false,player)) return false;
if(arg.player.getAttackRange()<3) return true;
}
return false;
}
},
},
//丁奉
miniduanbing:{
audio:'duanbing',
group:'miniduanbing_sha',
preHidden:['miniduanbing_sha'],
inherit:'reduanbing',
content:function(){
'step 0'
player.chooseTarget(get.prompt('miniduanbing'),'为'+get.translation(trigger.card)+'增加一个目标',function(card,player,target){
return !_status.event.sourcex.includes(target)&&get.distance(player,target)<=1&&player.canUse(_status.event.card,target);
}).set('sourcex',trigger.targets).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,_status.event.card,player,player);
}).set('card',trigger.card).setHiddenSkill(event.name);
'step 1'
if(result.bool){
if(!event.isMine()&&!event.isOnline()) game.delayx();
event.targets=result.targets;
}
else event.finish();
'step 2'
player.logSkill('miniduanbing',targets);
trigger.targets.addArray(targets);
},
subSkill:{
sha:{
audio:'duanbing',
trigger:{player:'useCardToPlayered'},
forced:true,
filter:function(event,player){
if(player.getHistory('useCard',evt=>evt.card.name=='sha').indexOf(event.getParent())!=0) return false;
return event.card.name=='sha'&&!event.getParent().directHit.includes(event.target)&&get.distance(player,event.target)<=1;
},
logTarget:'target',
content:function(){
var id=trigger.target.playerid;
var map=trigger.getParent().customArgs;
if(!map[id]) map[id]={};
if(typeof map[id].shanRequired=='number') map[id].shanRequired++;
else map[id].shanRequired=2;
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(arg.card.name!='sha'||arg.target.countCards('h','shan')>1||player.getHistory('useCard',evt=>evt.card.name=='sha').length||get.distance(player,arg.target)>1) return false;
},
},
},
},
},
minifenxun:{
group:'minifenxun_draw',
audio:'fenxun',
inherit:'refenxun',
content:function(){
player.addTempSkill('minifenxun2');
player.markAuto('minifenxun2',targets);
},
subSkill:{
draw:{
audio:'fenxun',
trigger:{player:'phaseEnd'},
filter:function(event,player){
return game.hasPlayer(current=>get.distance(player,current)<=1&&current.getHistory('damage').length);
},
forced:true,
locked:false,
content:function(){
player.draw(game.countPlayer(current=>get.distance(player,current)<=1&&current.getHistory('damage').length));
},
},
},
},
minifenxun2:{
charlotte:true,
onremove:true,
mod:{
globalFrom:function(from,to){
if(from.getStorage('minifenxun2').includes(to)) return -Infinity;
},
},
},
//薛综
minifunan:{
audio:'funan',
trigger:{global:['useCard','respond']},
filter:function(event,player){
if(!event.respondTo) return false;
if(event.player==player) return false;
if(player!=event.respondTo[0]) return false;
return event.cards.filterInD('od').length;
},
logTarget:'player',
content:function(){
player.gain(trigger.cards.filterInD('od'),'gain2');
},
},
minijiexun:{
intro:{content:'已发动#次'},
audio:'jiexun',
trigger:{player:'phaseJieshuBegin'},
onremove:true,
direct:true,
derivation:['twfunanx','minijiexunx'],
content:function(){
'step 0'
var suits={};
game.countPlayer(current=>{
for(var card of current.getCards('ej')) {
if(typeof suits[get.suit(card)]!='number') suits[get.suit(card)]=0;
suits[get.suit(card)]++;
}
});
var choices=lib.suit.slice();
choices.push('cancel2');
var str=lib.suit.map(suit=>{
return get.translation(suit)+'：'+get.cnNumber(suits[suit]||0)+'张'
}).join('；');
player.chooseControl(choices).set('prompt',get.prompt('minijiexun')+'（已发动过'+get.cnNumber(player.countMark('minijiexun'))+'次）').set('ai',function(){
var player=_status.event.player;
var map={};
game.countPlayer(current=>{
for(var card of current.getCards('ej')) {
if(typeof map[get.suit(card)]!='number') map[get.suit(card)]=0;
map[get.suit(card)]++;
}
});
for(var suit in map) map[suit]=Math.abs(map[suit]);
var bool=game.hasPlayer(current=>get.attitude(player,current)>0);
var list=lib.suit.slice().sort((a,b)=>(bool?1:-1)*((map[b]||0)-(map[a]||0)));
if(bool&&map[list[0]]>0||!bool||player.hasMark('minijiexun')) return list[0];
return 'cancel2';
}).set('prompt2',get.skillInfoTranslation('minijiexun',player)+'<br>'+str);
'step 1'
if(result.control!='cancel2'){
var suit=result.control;
event.suit=suit;
var num1=game.countPlayer(function(current){
return current.countCards('ej',{suit:suit});
});
var num2=player.countMark('minijiexun');
event.num1=num1;
event.num2=num2;
var str='令一名角色摸'+get.cnNumber(num1)+'张牌';
if(num2) str+='，然后弃置'+get.cnNumber(num2)+'张牌';
player.chooseTarget('请选择【诫训】的目标',str).set('ai',function(target){
var player=_status.event.player,att=get.attitude(player,target);
return _status.event.eff*get.sgn(att)+att/114514;
}).set('eff',num1>=num2&&num1>0?1:-1);
}
else event.finish();
'step 2'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minijiexun',target);
if(player.hasMark('minijiexun')||event.num1) player.addExpose(0.2);
player.popup(event.suit);
game.log(player,'选择了','#y'+get.translation(event.suit));
player.addMark('minijiexun',1,false);
if(event.num1) target.draw(event.num1);
}
else event.finish();
'step 3'
if(event.num2) target.chooseToDiscard(event.num2,true,'he');
else event.finish();
'step 4'
if(result.bool&&result.autochoose&&result.cards.length==result.rawcards.length){
player.removeMark('minijiexun',player.countMark('minijiexun'),false);
game.log(player,'清空了','#g【诫训】','的发动次数');
}
},
},
//孙茹
minixiecui:{
audio:'xiecui',
trigger:{global:'damageBegin1'},
filter:function(event,player){
var source=event.source;
if(!source||source!=_status.currentPhase||event.getParent().type!='card') return false;
return !source.hasHistory('sourceDamage',function(evt){
return evt.getParent().type=='card';
});
},
logTarget:'source',
prompt2:function(event,player){
var source=trigger.source;
var str=('令'+get.translation(event.player)+'即将受到的');
str+=(''+event.num+'点');
if(lib.linked.includes(event.nature)){
str+=(get.translation(event.nature)+'属性');
}
str+='伤害+1';
if(source.group.countCards('h')>source.getHp()){
var cards=event.cards.filterInD();
if(cards.length){
str+=('；然后'+get.translation(event.source)+'获得'+get.translation(cards)+'，且本回合的手牌上限+1');
}
}
return str;
},
check:function(event,player){
var source=trigger.source;
var att=get.attitude(player,event.player);
if(att<0){
if(source.group.countCards('h')<=source.getHp()||!event.cards.filterInD().length) return true;
return get.attitude(player,source)>0;
}
return false;
},
content:function(){
trigger.num++;
var source=trigger.source;
if(source.group.countCards('h')>source.getHp()){
var cards=trigger.cards.filterInD();
if(cards.length>0){
source.gain(cards,'gain2');
source.addMark('xiecui_effect',1,false);
source.addTempSkill('xiecui_effect');
}
}
},
ai:{threaten:2},
},
minisbkurou:{
audio:'sbkurou',
enable:'phaseUse',
usable:1,
content:function(){
player.loseHp();
player.addTempSkill('minisbkurou_effect',{player:'phaseBegin'});
player.gainMaxHp();
player.addMark('minisbkurou_effect',1,false);
},
ai:{
order:8,
result:{
player:function(player){
return get.effect(player,{name:'losehp'},player,player);
},
},
},
subSkill:{
effect:{
charlotte:true,
onremove:function(player){
player.loseMaxHp(player.countMark('minisbkurou_effect'));
delete player.storage.minisbkurou_effect;
},
intro:{content:'手牌上限和体力上限+#'},
mod:{
maxHandcard:function(player,num){
return num+player.countMark('minisbkurou_effect');
},
},
trigger:{player:'useCard'},
filter:function(event,player){
return player.isPhaseUsing()&&event.card.name=='tao'&&player.getStat('skill').minisbkurou;
},
forced:true,
content:function(){
delete player.getStat('skill').minisbkurou;
player.popup('苦肉');
game.log(player,'重置了技能','#g【苦肉】');
},
},
},
},
minisbzhaxiang:{
audio:'sbzhaxiang',
trigger:{player:'loseHpEnd'},
forced:true,
content:function(){
player.draw(3*trigger.num);
},
ai:{
maihp:true,
effect:function(card,player,target){
if(get.tag(card,'damage')){
if(player.hasSkillTag('jueqing',false,target)) return [1,1];
return 1.2;
}
if(get.tag(card,'loseHp')){
if(target.hp<=1) return;
var using=target.isPhaseUsing();
if(target.hp<=2) return [1,player.countCards('h')<=1&&using?3:0];
if(using&&target.countCards('h',{name:'sha',color:'red'})) return [1,3];
return [1,(target.countCards('h')<=target.hp||using&&game.hasPlayer(function(current){
return current!=player&&get.attitude(player,current)<0&&player.inRange(current);
}))?3:2]
}
},
},
group:['minisbzhaxiang_draw','minisbzhaxiang_effect'],
subSkill:{
draw:{
audio:'sbzhaxiang',
trigger:{player:'phaseEnd'},
filter:function(event,player){
return player.isDamaged();
},
forced:true,
content:function(){
player.draw(Math.ceil(player.getDamagedHp()/2));
},
},
effect:{
audio:'sbzhaxiang',
trigger:{player:'useCard'},
filter:function(event,player){
if(event.card.name!='sha') return false;
return player.countMark('minisbzhaxiang_count')<Math.ceil(player.getDamagedHp()/2);
},
forced:true,
content:function(){
player.addTempSkill('minisbzhaxiang_count');
player.addMark('minisbzhaxiang_count',1,false);
trigger.directHit.addArray(game.filterPlayer());
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
return arg.card&&arg.card.name=='sha'&&player.countMark('minisbzhaxiang_count')<Math.ceil(player.getDamagedHp()/2);
},
},
mod:{
targetInRange:function(card,player){
if(card.name=='sha'&&player.countMark('minisbzhaxiang_count')<Math.ceil(player.getDamagedHp()/2)) return true;
},
cardUsable:function(card,player){
if(card.name=='sha'&&player.countMark('minisbzhaxiang_count')<Math.ceil(player.getDamagedHp()/2)) return Infinity;
},
},
},
count:{
charlotte:true,
onremove:true,
},
},
},
//群
miniqieting:{
audio:'qieting',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
return event.player.countCards('h')>player.countCards('h');
},
forced:true,
content:function(){
player.draw();
},
},
minireqieting:{
audio:'reqieting',
trigger:{global:'phaseEnd'},
filter:function(event,player){
if(event.player==player) return false;
return event.player.countCards('h')>player.countCards('h')||!event.player.getHistory('sourceDamage',function(evt){
return evt.player!=event.player;
}).length;
},
direct:true,
content:function(){
'step 0'
event.logged=false;
if(trigger.player.countCards('h')<=player.countCards('h')) event.goto(2);
'step 1'
player.logSkill('minireqieting',trigger.player);
player.draw();
if(trigger.player.getHistory('sourceDamage',function(evt){
return evt.player!=trigger.player;
}).length) event.finish();
else event.logged=true;
'step 2'
var list=['摸一张牌'],target=trigger.player,str=get.translation(target);
event.target=target;
event.addIndex=0;
if(target.countCards('h')>0) list.push('观看'+str+'的两张手牌并获得其中一张');
else event.addIndex++;
if(target.countCards('e',function(card){
return player.canEquip(card);
})>0) list.push('将'+str+'装备区内的一张牌移动至自己的装备区');
player.chooseControl('cancel2').set('choiceList',list).set('prompt',get.prompt('minireqieting',target)).set('ai',function(){
var evt=_status.event.getParent();
if(get.attitude(evt.player,evt.target)>0) return 0;
var val=evt.target.hasSkillTag('noe')?6:0;
if(evt.target.countCards('e',function(card){
return evt.player.canEquip(card)&&get.value(card,evt.target)>val&&get.effect(evt.player,card,evt.player,evt.player)>0;
})>0) return 2-evt.addIndex;
if(evt.target.countCards('h')>0) return 1;
return 0;
});
'step 3'
if(result.control!='cancel2'){
if(!event.logged) player.logSkill('minireqieting',target);
else player.line(target);
if(result.index==0){
player.draw();
event.finish();
}
else if(result.index+event.addIndex==1){
player.choosePlayerCard(target,'h',2,true);
player.addExpose(0.2);
event.goto(5);
}
else{
player.addExpose(0.1);
player.choosePlayerCard(target,'e',true).set('filterButton',function(button){
return _status.event.player.canEquip(button.link);
}).set('ai',function(button){
var player=_status.event.player;
return get.effect(player,button.link,player,player);
});
}
}
else event.finish();
'step 4'
if(result.bool){
var card=result.cards[0];
target.$give(card,player,false);
game.delay(0.5);
player.equip(card);
}
event.finish();
'step 5'
if(result.bool) player.chooseButton(['选择获得一张牌',result.cards],true);
else event.finish();
'step 6'
if(result.bool){
var card=result.links[0];
if(lib.filter.canBeGained(card,player,target)) player.gain(card,target,'giveAuto','bySelf');
else game.log('但',card,'不能被',player,'获得！');
}
},
},
minixianzhou:{
audio:'xianzhou',
enable:'phaseUse',
limited:true,
skillAnimation:true,
animationColor:'gray',
filter:function(event,player){
return player.countCards('h');
},
filterCard:true,
position:'h',
selectCard:-1,
filterTarget:lib.filter.notMe,
discard:false,
lose:false,
delay:false,
content:function(){
'step 0'
player.awakenSkill('minixianzhou');
target.gain(cards,player,'give');
'step 1'
var list=game.filterPlayer(function(current){
return target.inRange(current);
});
if(list.length){
var max=Math.min(list.length,cards.length);
target.chooseTarget(true,[1,max],'对至多'+get.cnNumber(max)+'名范围内的角色各造成1点伤害',function(card,player,target){
return _status.event.list.includes(target);
}).set('list',list).set('ai',function(target){
var player=_status.event.player;
return get.damageEffect(target,player,player);
});
}
else event.finish();
'step 2'
if(result.bool){
var targets=result.targets.sortBySeat();
target.line(targets,'green');
for(var i of targets) i.damage('nocard',target);
}
},
ai:{
order:1,
result:{
target:1,
player:function(player){
var bool=true,players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(players[i]!=player&&get.attitude(player,players[i])>2&&get.attitude(players[i],player)>2) bool=false;break;
}
if(bool) return -10;
if(game.phaseNumber<game.players.length) return -10;
if(player.countCards('h')+player.hp>player.maxHp) return 1;
return -10;
},
},
},
},
minirexianzhou:{
unique:true,
limited:true,
audio:'rexianzhou',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he')>0;
},
filterCard:true,
position:'he',
selectCard:[1,Infinity],
check:function(card){
var player=_status.event.player;
if(ui.selected.cards.length>=player.hp) return 0;
return 7-get.value(card);
},
filterTarget:lib.filter.notMe,
discard:false,
lose:false,
delay:false,
skillAnimation:true,
animationColor:'gray',
content:function(){
'step 0'
player.awakenSkill('minirexianzhou');
player.give(cards,target);
player.recover(cards.length)
'step 1'
var list=game.filterPlayer(function(current){
return target.inRange(current);
});
if(list.length){
var max=Math.min(list.length,cards.length);
player.chooseTarget(true,[1,max],'对至多'+get.cnNumber(max)+'名范围内的角色各造成1点伤害',function(card,player,target){
return _status.event.list.includes(target);
}).set('list',list).set('ai',function(target){
var player=_status.event.player;
return get.damageEffect(target,player,player);
});
}
else event.finish();
'step 2'
if(result.bool){
var targets=result.targets.sortBySeat();
player.line(targets,'green');
for(var i of targets) i.damage('nocard');
}
},
ai:{
order:1,
result:{
target:1,
player:function(player){
var bool=true,players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(players[i]!=player&&get.attitude(player,players[i])>2&&get.attitude(players[i],player)>2){
bool=false;break;
}
}
if(bool) return -10;
if(player.hp==1) return 1;
return -10;
}
},
},
},
biyue_sp_diaochan:{audio:2},
minibiyue:{
audio:'biyue',
audioname2:{Mbaby_sp_diaochan:'biyue_sp_diaochan'},
trigger:{player:'phaseJieshuBegin'},
frequent:true,
content:function(){
var num=1;
if(player.isTurnedOver()) num=3;
player.draw(num);
},
},
minijianchu:{
shaRelated:true,
audio:'jianchu',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
return event.card.name=='sha'&&event.target.countDiscardableCards(player,'he')>0;
},
direct:true,
content:function(){
'step 0'
player.discardPlayerCard(trigger.target,get.prompt('minijianchu',trigger.target)).set('ai',function(button){
if(!_status.event.att) return 0;
if(get.position(button.link)=='e'){
if(get.subtype(button.link)=='equip2') return 2*get.value(button.link);
return get.value(button.link);
}
return 1;
}).set('logSkill',['minijianchu',trigger.target]).set('att',get.attitude(player,trigger.target)<=0);
'step 1'
if(result.bool&&result.links&&result.links.length){
if(get.type(result.links[0],null,result.links[0].original=='h'?player:false)!='basic'){
player.draw();
trigger.getParent().directHit.add(trigger.target);
}
else{
trigger.addCount=false;
if(player.stat[player.stat.length-1].card.sha>0){
player.stat[player.stat.length-1].card.sha--;
}
}
}
},
ai:{
unequip_ai:true,
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(tag=='directHit_ai') return arg.card.name=='sha'&&arg.target.countCards('e',function(card){
return get.value(card)>1;
})>0;
if(arg&&arg.name=='sha'&&arg.target.getEquips(2).length) return true;
return false;
}
},
},
minichenglve:{
enable:'phaseUse',
usable:1,
audio:'nzry_chenglve',
content:function(){
'step 0'
player.draw();
player.chooseToDiscard('h',true);
'step 1'
if(result.bool){
player.addTempSkill('minichenglve_use');
player.markAuto('minichenglve_use',[get.suit(result.cards[0],player)]);
player.storage.minichenglve_use.sort(function(a,b){
return lib.suit.indexOf(b)-lib.suit.indexOf(a);
});
if(game.HasExtension('十周年UI')){
game.broadcastAll(function(player){
var str='成略';
for(var suit of player.getStorage('minichenglve_use')) str+=get.translation(suit);
if(player.marks.minichenglve_use) player.marks.minichenglve_use.firstChild.innerHTML=str;
},player);
}
}
},
ai:{
order:10,
result:{player:1},
},
subSkill:{
use:{
charlotte:true,
onremove:true,
intro:{
markcount:()=>undefined,
content:'使用$花色的牌无距离和次数限制',
},
mod:{
cardUsable:function(card,player){
if(player.getStorage('minichenglve_use').includes(get.suit(card,player))) return Infinity;
},
targetInRange:function(card,player){
if(player.getStorage('minichenglve_use').includes(get.suit(card,player))) return true;
},
},
},
},
},
minijijun:{
audio:'xinfu_jijun',
trigger:{global:'useCardToPlayer'},
filter:function(event,player){
var bool1=(event.targets.length==1&&(event.card.name=='sha'||get.type2(event.card)=='trick'));
var bool2=(event.card.name=='sha');
if(event.player==player&&bool1) return true;
if(event.target==player&&bool2) return true;
return false;
},
forced:true,
content:function(){
player.judge(function(card){
return get.color(card)=='black'?1.5:-1.5;
}).set('callback',function(){
if(event.judgeResult.color=='black'&&get.position(card,true)=='o') player.addToExpansion('gain2',[card]).gaintag.add('minijijun');
});
},
marktext:'兵',
//避免重复换了一个字眼
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
},
minifangtong:{
audio:'xinfu_fangtong',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return player.getExpansions('minijijun').length;
},
direct:true,
content:function(){
'step 0'
player.chooseButton([1,3],[get.prompt2('minifangtong'),player.getExpansions('minijijun')]).set('ai',function(button){
var player=_status.event.player;
if(player.getExpansions('minijijun').length>=3&&game.hasPlayer(function(current){
return get.damageEffect(current,player,player,'thunder')>0;
})) return 3;
if(ui.selected.buttons.length==1&&player.isDamaged()) return 2;
if(!ui.selected.buttons.length) return 1;
return 0;
});
'step 1'
if(result.links){
player.logSkill('minifangtong');
var num=result.links.length;
player.loseToDiscardpile(result.links);
event.num=num;
}
else event.finish();
'step 2'
switch(num){
case 1:
player.draw();
break;
case 2:
if(player.isDamaged()) player.recover();
break;
case 3:
player.chooseTarget('对一名角色造成2点雷属性伤害',true).set('ai',function(target){
var player=_status.event.player;
return get.damageEffect(target,player,player,'thunder');
});
break;
}
if(num!=3) event.finish();
'step 3'
if(result.bool){
player.line(result.targets[0]);
result.targets[0].damage(2,'thunder');
}
},
},
minizhoufu:{
audio:'zhoufu',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he');
},
filterCard:true,
selectCard:[0,1],
filterTarget:function(card,player,target){
if(player==target) return false;
if(!ui.selected.cards.length) return target.getExpansions('minizhoufu2').length;
return !target.getExpansions('minizhoufu2').length;
},
check:function(card){
return 6-get.value(card);
},
usable:1,
position:'he',
discard:false,
lose:false,
delay:false,
content:function(){
if(!cards.length&&target.getExpansions('minizhoufu2').length){
var cardx=target.getExpansions('minizhoufu2');
target.loseToDiscardpile(cardx);
}
else{
if(!target.storage.minizhoufu2_markcount) target.storage.minizhoufu2_markcount=0;
target.addToExpansion(cards,player,'give').gaintag.add('minizhoufu2');
}
},
ai:{
order:1,
result:{
target:function(player,target){
if(target.getExpansions('minizhoufu2').length&&target.hp<3) return -1;
return -2;
},
},
},
group:['minizhoufu_judge','minizhoufu_losehp'],
subSkill:{
judge:{
audio:'zhoufu',
trigger:{global:'judgeBefore'},
forced:true,
filter:function(event,player){
return !event.directresult&&event.player.getExpansions('minizhoufu2').length;
},
logTarget:'player',
content:function(){
var cards=[trigger.player.getExpansions('minizhoufu2')[0]];
trigger.directresult=cards[0];
},
},
losehp:{
audio:'zhoufu',
trigger:{global:'phaseEnd'},
forced:true,
filter:function(event,player){
return game.hasPlayer(function(current){
return current.hasHistory('lose',function(evt){
if(!evt||!evt.xs||!evt.xs.length) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('minizhoufu2')) return true;
}
return false;
});
});
},
logTarget:function(current){
return game.filterPlayer(function(current){
return current.hasHistory('lose',function(evt){
if(!evt||!evt.xs||!evt.xs.length) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('minizhoufu2')) return true;
}
return false;
});
}).sortBySeat();
},
content:function(){
var targets=game.filterPlayer(function(current){
return current.hasHistory('lose',function(evt){
if(!evt||!evt.xs||!evt.xs.length) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('minizhoufu2')) return true;
}
return false;
});
}).sortBySeat();
while(targets.length){
targets.shift().loseHp();
}
},
},
},
},
minizhoufu2:{intro:{content:'expansion'}},
minizhoufu3:{},
miniyingbing:{
audio:'yingbin',
trigger:{global:'useCard'},
forced:true,
filter:function(event,player){
var cards=event.player.getExpansions('minizhoufu2');
return cards.length&&get.color(cards[0])==get.color(event.card);
},
logTarget:'player',
content:function(){
'step 0'
player.draw();
'step 1'
trigger.player.storage.minizhoufu2_markcount++;
if(trigger.player.storage.minizhoufu2_markcount>=2){
var cards=trigger.player.getExpansions('minizhoufu2');
trigger.player.loseToDiscardpile(cards);
}
else trigger.player.markSkill('minizhoufu2');
},
},
miniguhuo:{
audio:'guhuo_guess',
trigger:{player:'useCardAfter'},
filter:function(event,player){
var bool=player.getHistory('sourceDamage',function(evt){
return evt.card&&evt.card==event.card;
}).length;
if(bool&&player.hasSkill('miniguhuo_silent')) return false;
if(get.type(event.card)!='trick'&&event.card.name!='sha') return false;
return get.tag(event.card,'damage');
},
forced:true,
content:function(){
'step 0'
var bool=player.getHistory('sourceDamage',function(evt){
return evt.card&&evt.card==trigger.card;
}).length,cards=trigger.cards.filterInD();
if(bool) player.addTempSkill('miniguhuo_silent');
else if(cards.length){
player.addTempSkill('miniguhuo_card','phaseEnd');
player.addToExpansion(cards,'gain2').gaintag.add('miniguhuo_card');
}
'step 1'
player.draw();
},
subSkill:{
silent:{charlotte:true},
card:{
charlotte:true,
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.gain(cards,'gain2');
},
},
},
},
new_reyaowu_sb_huaxiong:{audio:2},
miniyaowu:{
trigger:{player:'damageBegin3'},
audio:'yaowu',
audioname2:{Mbaby_huaxiong:'new_reyaowu_sb_huaxiong'},
filter:function(event,player){
if(!event.card||event.card.name!='sha') return false;
return ['red','black'].includes(get.color(event.card))||(get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o');
},
forced:true,
content:function(){
'step 0'
if(get.color(trigger.card)=='red') trigger.source.draw();
else if(get.color(trigger.card)=='black') player.draw();
'step 1'
if(get.itemtype(trigger.cards)=='cards'&&get.position(trigger.cards[0],true)=='o') player.gain(trigger.cards,'gain2','log');
},
},
miniyangwei:{
mod:{
cardUsable:function(card,player,num){
if(typeof card=='object'&&player==_status.currentPhase){
var cardx=player.storage.miniyangwei_mark;
if(cardx&&cardx.name=='sha'&&get.name(card)=='sha'&&get.color(cardx)!='none'&&get.color(card)!='none'&&get.color(cardx)!=get.color(card)){
return Infinity;
}
}
},
aiOrder:function(player,card,num){
if(typeof card=='object'&&player==_status.currentPhase){
var evt=player.getLastUsed();
if(evt&&evt.card&&evt.card.name=='sha'&&card.name=='sha'&&get.color(evt.card)!='none'&&get.color(card)!='none'&&get.color(evt.card)!=get.color(card)){
return num+10;
}
}
},
},
group:['miniyangwei_phase','miniyangwei_count'],
audio:'yangwei',
audioname2:{Mbaby_huaxiong:'sbyangwei'},
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return player.isDamaged()&&player.getHistory('useCard',function(evt){
return evt.card&&evt.card.name=='sha';
}).length>2;
},
forced:true,
locked:false,
content:function(){
player.recover();
},
subSkill:{
count:{
trigger:{player:'useCard1'},
filter:function(event,player){
var card=player.storage.miniyangwei_mark;
return card&&card.name=='sha'&&get.name(event.card)=='sha'&&get.color(card)!='none'&&get.color(event.card)!='none'&&get.color(card)!=get.color(event.card);
},
direct:true,
firstDo:true,
content:function(){
trigger.addCount=false;
if(player.stat[player.stat.length-1].card.sha>0) player.stat[player.stat.length-1].card.sha--;
},
},
phase:{
charlotte:true,
trigger:{player:'useCard'},
filter:function(event,player){
return player.isPhaseUsing()&&event.card.name=='sha';
},
direct:true,
priority:-15,
content:function(){
if(!player.storage.miniyangwei_mark){
player.when('phaseUseAfter').then(()=>delete player.storage.miniyangwei_mark);
}
player.storage.miniyangwei_mark=trigger.card;
},
},
},
},
miniqiaomeng:{
audio:'qiaomeng',
trigger:{source:'damageBegin1'},
direct:true,
filter:function(event,player){
if(event._notrigger.includes(event.player)) return false;
return event.card&&event.card.name=='sha'&&event.player.countGainableCards(player,'hej');
},
content:function(){
'step 0'
player.gainPlayerCard(get.prompt('miniqiaomeng',trigger.player),'hej',trigger.player).set('logSkill',['miniqiaomeng',trigger.player]);
'step 1'
if(result.bool){
var card=result.cards[0];
if(get.subtype(card)=='equip3'||get.subtype(card)=='equip4') trigger.num++;
}
},
},
miniyicong:{
mod:{
globalFrom:function(from,to,current){
return current-Math.max(0,from.hp);
},
globalTo:function(from,to,current){
return current+Math.max(0,to.getDamagedHp());
},
},
ai:{threaten:0.8},
},
minishuangxiong:{
audio:'shuangxiong',
trigger:{player:'phaseDrawBegin1'},
group:'minishuangxiong2',
filter:function(event,player){
return !event.numFixed;
},
content:function(){
'step 0'
trigger.changeToZero();
event.cards=get.cards(3);
event.videoId=lib.status.videoId++;
game.broadcastAll(function(player,id,cards){
var str;
if(player==game.me&&!_status.auto) str='【双雄】选择获得其中一种颜色的牌';
else str='双雄';
var dialog=ui.create.dialog(str,cards);
dialog.videoId=id;
},player,event.videoId,event.cards);
event.time=get.utc();
game.addVideo('showCards',player,['双雄',get.cardsInfo(event.cards)]);
game.addVideo('delay',null,2);
'step 1'
player.chooseControl('红色','黑色').set('ai',function(){
var player=_status.event.player;
var n1=0,n2=0;
for(var i of _status.event.cards){
if(get.color(i,player)=='red') n1++;
else n2++;
}
if(n1>=n2) return '红色';
return '黑色';
}).set('cards',cards);
'step 2'
event.cardsx=[];
var color=(result.control=='红色'?'red':'black');
for(var j of event.cards){
if(color==get.color(j)) event.cardsx.push(j);
else game.cardsDiscard(j);
}
var time=1000-(get.utc()-event.time);
if(time>0) game.delay(0,time);
'step 3'
game.broadcastAll('closeDialog',event.videoId);
player.gain(event.cardsx,'gain2','log');
player.addTempSkill('shuangxiong2');
player.storage.shuangxiong=get.color(event.cardsx[0]);
},
},
minishuangxiong2:{
trigger:{player:'damageEnd'},
filter:function(event,player){
var evt=event.getParent();
if(!evt||evt.name!='juedou') return false;
var cards=evt[player==evt.player?'targetCards':'playerCards'].slice(0);
return cards.some(card=>get.position(card)=='d');
},
usable:3,
direct:true,
content:function(){
'step 0'
var evt=trigger.getParent();
var cards=evt[player==evt.player?'targetCards':'playerCards'].slice(0);
cards=cards.filter(card=>get.position(card)=='d');
event.cards=cards;
player.chooseBool(get.prompt('minishuangxiong'),'获得'+get.translation(event.cards));
'step 1'
if(result.bool){
var skill=['minishuangxiong','shuangxiong2'].randomGet();
player.logSkill(skill);
player.gain(cards,'gain2','log');
}
else player.storage.counttrigger.minishuangxiong2--;
},
},
minixianzhen:{
group:'minixianzhen_miss',
audio:'xianzhen',
usable:1,
trigger:{source:'damageBegin1'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.notLink();
},
forced:true,
content:function(){
trigger.num++;
},
subSkill:{
miss:{
audio:'xianzhen',
trigger:{player:'shaMiss'},
filter:function(event,player){
return player.countUsed('sha',true)==1;
},
usable:1,
forced:true,
content:function(){
player.draw();
},
},
},
},
minijinjiu:{
mod:{
cardname:function(card,player){
if(card.name=='jiu') return 'sha';
},
},
ai:{
respondSha:true,
skillTagFilter:function(player){
if(!player.countCards('h','jiu')) return false;
},
},
group:'minijinjiu_gain',
global:'minijinjiu_usejiu',
audio:'jinjiu',
popup:false,
silent:true,
firstDo:true,
trigger:{player:'useCard1'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.addCount!==false&&event.cards&&
event.cards.length==1&&event.cards[0].name=='jiu';
},
forced:true,
content:function(){
trigger.addCount=false;
if(player.stat[player.stat.length-1].card.sha>0){
player.stat[player.stat.length-1].card.sha--;
}
},
subSkill:{
gain:{
trigger:{global:'useCardAfter'},
forced:true,
audio:'jinjiu',
filter:function(event,player){
return event.player!=player&&event.card.isCard&&event.card.name=='jiu'&&event.cards.filterInD().length>0;
},
logTarget:'player',
content:function(){
player.gain(trigger.cards.filterInD(),'gain2');
},
},
usejiu:{
mod:{
cardEnabled:function(card,player){
if(card.name=='jiu'&&_status.currentPhase&&_status.currentPhase!=player&&_status.currentPhase.hasSkill('minijinjiu')) return false;
},
cardSavable:function(card,player){
if(card.name=='jiu'&&_status.currentPhase&&_status.currentPhase!=player&&_status.currentPhase.hasSkill('minijinjiu')) return false;
},
},
},
},
},
minishendao:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'judge'},
direct:true,
content:function(){
'step 0'
var str='你的'+(trigger.judgestr||'')+'判定牌为'+get.translation(trigger.player.judging[0])+'，是否修改判定花色？';
player.chooseControl('spade','heart','diamond','club','cancel2').set('prompt',str).set('ai',function(){
var judging=_status.event.judging;
var trigger=_status.event.getTrigger();
var res1=trigger.judge(judging);
var list=lib.suit.slice(0);
var attitude=get.attitude(player,trigger.player);
if(attitude==0) return 0;
var getj=function(suit){
return trigger.judge({
name:get.name(judging),
nature:get.nature(judging),
suit:suit,
number:get.number(judging),
})
};
list.sort(function(a,b){
return (getj(b)-getj(a))*get.sgn(attitude);
});
if((getj(list[0])-res1)*attitude>0) return list[0];
return 'cancel2';
}).set('judging',trigger.player.judging[0]);
'step 1'
if(result.control!='cancel2'){
player.logSkill('minishendao');
player.popup(result.control+2);
game.log(player,'将判定结果改为了','#y'+get.translation(result.control+2));
trigger.fixedResult={
suit:result.control,
color:get.color({suit:result.control}),
};
}
},
ai:{
rejudge:true,
tag:{
rejudge:0.3,
},
},
},
minixinsheng:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'damageEnd'},
frequent:true,
content:function(){
'step 0'
event.cards=get.cards(3);
game.cardsGotoOrdering(event.cards);
event.videoId=lib.status.videoId++;
game.broadcastAll(function(player,id,cards){
var str;
if(player==game.me&&!_status.auto) str='新生：获得花色各不相同的牌各一张';
else str='新生';
var dialog=ui.create.dialog(str,cards);
dialog.videoId=id;
},player,event.videoId,event.cards);
event.time=get.utc();
game.addVideo('showCards',player,['新生',get.cardsInfo(event.cards)]);
game.addVideo('delay',null,2);
'step 1'
var next=player.chooseButton([0,3],true);
next.set('dialog',event.videoId);
next.set('filterButton',function(button){
for(var i=0;i<ui.selected.buttons.length;i++){
if(get.suit(ui.selected.buttons[i].link)==get.suit(button.link)) return false;
}
return true;
});
next.set('ai',function(button){
return get.value(button.link,_status.event.player);
});
'step 2'
if(result.bool&&result.links) event.cards2=result.links;
else event.finish();
var time=1000-(get.utc()-event.time);
if(time>0) game.delay(0,time);
'step 3'
game.broadcastAll('closeDialog',event.videoId);
var cards2=event.cards2;
player.gain(cards2,'gain2');
'step 4'
lib.skill.old_shenzhu.caidan(player);
},
},
miniweidi:{
audio:'weidi',
preHidden:true,
trigger:{player:'phaseDiscardEnd'},
filter:function(event,player){
var cards=[];
game.getGlobalHistory('cardMove',function(evt){
if(evt.name=='cardsDiscard'&&evt.getParent('phaseDiscard')==event) cards.addArray(evt.cards.filterInD('d'));
});
game.countPlayer2(function(current){
current.getHistory('lose',function(evt){
if(evt.type!='discard'||evt.getParent('phaseDiscard')!=event) return;
cards.addArray(evt.cards.filterInD('d'));
})
});
return cards.length;
},
direct:true,
content:function(){
'step 0'
var cards=[];
game.getGlobalHistory('cardMove',function(evt){
if(evt.name=='cardsDiscard'&&evt.getParent('phaseDiscard')==trigger) cards.addArray(evt.cards.filterInD('d'));
});
game.countPlayer2(function(current){
current.getHistory('lose',function(evt){
if(evt.type!='discard'||evt.getParent('phaseDiscard')!=trigger) return;
cards.addArray(evt.cards.filterInD('d'));
})
});
player.chooseCardButton(cards,'伪帝：是否将一张牌交给一名其他角色？').set('ai',function(button){
var player=_status.event.player;
if(game.hasPlayer(function(current){
return current!=player&&get.attitude(player,current)>0;
})) return get.value(button.link);
return 0;
}).set('cards',cards).set('filterButton',function(button){
return _status.event.cards.includes(button.link);
}).setHiddenSkill('miniweidi');
'step 1'
if(result.bool){
event.card=result.links[0];
player.chooseTarget('将'+get.translation(event.card)+'交给一名其他角色',lib.filter.notMe,true).set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target)*get.value(event.card,target)*(target.hasSkillTag('nogain')?0.1:1);
});
}
else event.finish();
'step 2'
if(result.bool){
var target=result.targets[0];
player.logSkill('miniweidi',target);
target.gain(card,'gain2');
}
},
},
minimingce:{
audio:'mingce',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return game.hasPlayer(function(target){
return target!=player&&game.hasPlayer(function(current){
return target.canUse({name:'sha'},current,false)&&target.inRange(current);
});
});
},
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
prompt:get.prompt2('minimingce'),
filterTarget:function(card,player,target){
if(ui.selected.targets.length) return ui.selected.targets[0].canUse({name:'sha'},target,false)&&ui.selected.targets[0].inRange(target);
return target!=player;
},
selectTarget:2,
filterCard:()=>false,
selectCard:-1,
complexSelect:true,
targetprompt:['出杀者','出杀目标'],
ai2:function(target){
var player=_status.event.player,list=[];
for(var i of game.filterPlayer()){
if(i==player) continue;
for(var j of game.filterPlayer()){
if(j==i||!i.inRange(j)) continue;
list.push([get.effect(j,{name:'sha',isCard:true},i,player),i,j]);
}
}
if(!list.length) return 0;
list.sort((a,b)=>b[0]-a[0]);
if(list[0][0]<=0) return 0;
if(!ui.selected.targets.length) return target==list[0][1]?10:0;
return target==list[0][2]?10:0;
},
});
'step 1'
if(result.bool){
player.logSkill('minimingce');
player.line2(result.targets);
result.targets[0].useCard({name:'sha',isCard:true},result.targets[1],false,'noai');
}
},
},
miniluanji:{
audio:'reluanji',
enable:'phaseUse',
viewAs:{name:'wanjian'},
filterCard:function(card,player){
if(!player.storage.miniluanji) return true;
return !player.storage.miniluanji.includes(get.suit(card));
},
position:'hs',
selectCard:2,
check:function(card){
var player=_status.event.player;
var targets=game.filterPlayer(function(current){
return player.canUse('wanjian',current);
});
var num=0;
for(var i=0;i<targets.length;i++){
var eff=get.sgn(get.effect(targets[i],{name:'wanjian'},player,player));
if(targets[i].hp==1){
eff*=1.5;
}
num+=eff;
}
if(!player.needsToDiscard(-1)){
if(targets.length>=7){
if(num<2) return 0;
}
else if(targets.length>=5){
if(num<1.5) return 0;
}
}
return 6-get.value(card);
},
ai:{
basic:{
order:8.9
}
},
group:['miniluanji_count','miniluanji_reset','miniluanji_damage','miniluanji_draw'],
subSkill:{
reset:{
trigger:{player:'phaseAfter'},
silent:true,
content:function(){
delete player.storage.miniluanji;
delete player.storage.miniluanji2;
}
},
count:{
trigger:{player:'useCard'},
silent:true,
filter:function(event){
return event.skill=='miniluanji';
},
content:function(){
player.storage.miniluanji2=trigger.card;
if(!player.storage.miniluanji){
player.storage.miniluanji=[];
}
for(var i=0;i<trigger.cards.length;i++){
player.storage.miniluanji.add(get.suit(trigger.cards[i]));
}
}
},
damage:{
trigger:{source:'damage'},
forced:true,
silent:true,
popup:false,
filter:function(event,player){
return player.storage.miniluanji2&&event.card==player.storage.miniluanji2;
},
content:function(){
delete player.storage.miniluanji2;
},
},
draw:{
trigger:{player:'useCardAfter'},
forced:true,
silent:true,
popup:false,
filter:function(event,player){
return player.storage.miniluanji2&&event.card==player.storage.miniluanji2;
},
content:function(){
player.draw(trigger.targets.length);
delete player.storage.miniluanji2;
},
},
}
},
minixueyi:{
unique:true,
audio:'xueyi',
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
if(!game.hasPlayer(function(current){
return current.group=='qun';
})) return false
return event.name!='phase'||game.phaseNumber==0;
},
forced:true,
zhuSkill:true,
content:function(){
player.addMark('minixueyi',game.countPlayer(function(current){
return current.group=='qun';
}));
},
marktext:'裔',
intro:{
name2:'裔',
content:'mark',
},
mod:{
maxHandcard:function(player,num){
return num+(player.countMark('minixueyi')*2);
},
},
group:'minixueyi_draw',
},
minixueyi_draw:{
audio:'xueyi',
enable:'chooseToUse',
filter:function(event,player){
if(!player.hasMark('minixueyi')) return false;
if(event.type=='dying'){
if(player!=event.dying) return false;
return true;
}
else if(event.parent.name=='phaseUse'){
return true;
}
return false;
},
content:function(){
player.removeMark('minixueyi',1);
player.recover();
player.draw();
},
ai:{
order:7,
save:true,
skillTagFilter:function(player,tag,target){
if(player!=target||!player.hasMark('minixueyi')) return false;
},
result:{
player:function(player){
return player.isDamaged()?1:-1;
},
},
},
},
minijiuchi:{
audio:'jiuchi',
enable:'chooseToUse',
filterCard:function(card){
return get.color(card)=='black';
},
viewAs:{name:'jiu'},
viewAsFilter:function(player){
if(!player.countCards('hs',{color:'black'})) return false;
return true;
},
prompt:'将一张黑色手牌当酒使用',
check:function(card){
if(_status.event.type=='dying') return 1/Math.max(0.1,get.value(card));
return 4-get.value(card);
},
},
minibenghuai:{
audio:'benghuai',
inherit:'benghuai',
contentAfter:function(){
player.draw();
},
},
miniwansha:{
audio:'wansha',
global:'miniwansha2',
trigger:{global:'dying'},
forced:true,
preHidden:true,
filter:function(event,player,name){
return _status.currentPhase==player&&event.player!=player;
},
content:function(){},
},
miniwansha2:{
mod:{
cardSavable:function(card,player){
if(!_status.currentPhase) return;
if(_status.currentPhase.isIn()&&_status.currentPhase.hasSkill('miniwansha')&&_status.currentPhase!=player){
if(card.name=='tao') return false;
}
},
cardEnabled:function(card,player){
if(!_status.currentPhase) return;
if(_status.currentPhase.isIn()&&_status.currentPhase.hasSkill('miniwansha')&&_status.currentPhase!=player){
if(card.name=='tao') return false;
}
},
},
},
luanwu_re_jiaxu:{audio:2},
minimieji:{
audio:'xinmieji',
enable:'phaseUse',
usable:1,
filter:function(event,player){
return player.countCards('he',{color:'black'})>0;
},
filterCard:function(card){
return get.color(card)=='black';
},
position:'he',
filterTarget:function(card,player,target){
return target!=player&&target.countCards('h');
},
discard:false,
delay:false,
check:function(card){
return 8-get.value(card);
},
loseTo:'cardPile',
insert:true,
content:function(){
'step 0'
game.broadcastAll(function(player){
var cardx=ui.create.card();
cardx.classList.add('infohidden');
cardx.classList.add('infoflip');
player.$throw(cardx,1000,'nobroadcast');
},player);
game.log(player,'将一张牌置于了牌堆顶');
game.delayx();
'step 1'
target.chooseToDiscard('he',true).set('prompt','请弃置一张锦囊牌，或依次弃置两张非锦囊牌。');
'step 2'
if((!result.cards||get.type(result.cards[0],'trick',result.cards[0].original=='h'?target:false)!='trick')&&target.countCards('he',function(card){
return get.type2(card)!='trick';
})){
target.chooseToDiscard('he',true,function(card){
return get.type2(card)!='trick';
}).set('prompt','请弃置第二张非锦囊牌');
}
},
ai:{
order:9,
result:{
target:-1,
},
},
},
minishibei:{
audio:'shibei',
trigger:{player:'damageEnd'},
forced:true,
check:function(event,player){
return player.getHistory('damage',function(evt){
return evt!=event
}).length==0;
},
content:function(){
if(player.getHistory('damage',function(evt){
return evt!=trigger
}).length>0){
player.loseHp();
}
else{
player.recover();
player.draw();
}
},
subSkill:{
damaged:{},
ai:{},
},
ai:{
maixie_defend:true,
threaten:0.9,
effect:{
target:function(card,player,target){
if(player.hasSkillTag('jueqing')) return;
if(target.hujia) return;
if(player._minishibei_tmp) return;
if(target.hasSkill('minishibei_ai')) return;
if(_status.event.getParent('useCard',true)||_status.event.getParent('_wuxie',true)) return;
if(get.tag(card,'damage')){
if(target.getHistory('damage').length>0){
return [1,-2];
}
else{
if(get.attitude(player,target)>0&&target.hp>1){
return 0;
}
if(get.attitude(player,target)<0&&!player.hasSkillTag('damageBonus')){
if(card.name=='sha') return;
var sha=false;
player._minishibei_tmp=true;
var num=player.countCards('h',function(card){
if(card.name=='sha'){
if(sha){
return false;
}
else{
sha=true;
}
}
return get.tag(card,'damage')&&player.canUse(card,target)&&get.effect(target,card,player,player)>0;
});
delete player._minishibei_tmp;
if(player.hasSkillTag('damage')){
num++;
}
if(num<2){
var enemies=player.getEnemies();
if(enemies.length==1&&enemies[0]==target&&player.needsToDiscard()){
return;
}
return 0;
}
}
}
}
}
}
}
},
//华佗
minijijiu:{
mod:{
aiValue:function(player,card,num){
if(get.name(card)!='tao'&&get.color(card)!='red') return;
var cards=player.getCards('hs',function(card){
return get.name(card)=='tao'||get.color(card)=='red';
});
cards.sort(function(a,b){
return (get.name(a)=='tao'?1:2)-(get.name(b)=='tao'?1:2);
});
var geti=function(){
if(cards.includes(card)){
return cards.indexOf(card);
}
return cards.length;
};
return Math.max(num,[6.5,4,3,2][Math.min(geti(),2)]);
},
aiUseful:function(){
return lib.skill.minijijiu.mod.aiValue.apply(this,arguments);
},
},
locked:false,
audio:'jijiu',
enable:'chooseToUse',
viewAsFilter:function(player){
return player!=_status.currentPhase&&player.countCards('hes',{color:'red'})>0;
},
filterCard:function(card){
return get.color(card)=='red';
},
position:'hes',
viewAs:{name:'tao'},
prompt:'将一张红色牌当作【桃】使用，然后你可以弃置一名其他角色的一张手牌',
check:function(card){
return 1/(get.value(card)||0.5);
},
onuse:function(result,player){
player.addTempSkill('minijijiu_qixi');
},
subSkill:{
qixi:{
charlotte:true,
trigger:{player:'useCardAfter'},
filter:function(event,player){
return event.skill=='minijijiu'&&game.hasPlayer(function(target){
return target!=player&&target.countDiscardableCards(player,'h');
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minijijiu'),'弃置一名其他角色的一张手牌',function(card,player,target){
return target!=player&&target.countDiscardableCards(player,'h');
}).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe_copy2'},player,player);
});
'step 1'
if(result.bool){
player.line(result.targets);
player.discardPlayerCard(result.targets[0],'h',true);
}
},
},
},
},
minireqingnang:{
audio:'qingnang',
enable:'phaseUse',
filterTarget:true,
selectTarget:[1,Infinity],
multitarget:true,
multiline:true,
usable:1,
content:function(){
'step 0'
targets.forEach(target=>{
target.gainMaxHp();
target.recover();
});
player.when('phaseBegin').vars({targets:targets}).then(()=>targets.forEach(target=>target.loseMaxHp()));
'step 1'
if(targets.length>1) player.chooseToDiscard(targets.length-1,'he',true);
},
ai:{
order:1,
result:{target:1},
},
},
miniqingnang:{
audio:'qingnang',
inherit:'qingnang',
filterCard:false,
},
guidao_sp_zhangjiao:{audio:2},
minileiji:{
mod:{
maxHandcard:function(player,num){
return num+2;
},
},
audio:'releiji',
trigger:{player:['useCard','respond']},
filter:function(event,player){
return event.card.name=='shan'||event.card.name=='shandian';
},
direct:true,
content:function(){
'step 0';
player.chooseTarget(get.prompt('minileiji'),'令一名其他角色进行判定',lib.filter.notMe).set('ai',function(target){
if(target.hasSkill('hongyan')) return 0;
return get.damageEffect(target,_status.event.player,_status.event.player,'thunder');
});
'step 1'
if(result.bool){
player.logSkill('minileiji',result.targets,'thunder');
event.target=result.targets[0];
event.target.judge(function(card){
var suit=get.suit(card);
if(suit=='spade') return -4;
if(suit=='club') return -2;
return 0;
}).judge2=function(result){
return result.bool==false?true:false;
};
}
else event.finish();
'step 2'
if(result.suit=='club'){
target.damage('thunder');
player.recover();
}
else if(result.suit=='spade') target.damage(2,'thunder');
},
ai:{
useShan:true,
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondShan')&&!player.hasSkillTag('directHit_ai',true,{
target:target,
card:card,
},true)){
var hastarget=game.hasPlayer(function(current){
return get.attitude(target,current)<0;
});
var be=target.countCards('e',{color:'black'});
if(target.countCards('h','shan')&&be){
if(!target.hasSkill('xinguidao')) return 0;
return [0,hastarget?target.countCards('he')/2:0];
}
if(target.countCards('h','shan')&&target.countCards('h')>2){
if(!target.hasSkill('xinguidao')) return 0;
return [0,hastarget?target.countCards('h')/4:0];
}
if(target.countCards('h')>3||(be&&target.countCards('h')>=2)){
return [0,0];
}
if(target.countCards('h')==0){
return [1.5,0];
}
if(target.countCards('h')==1&&!be){
return [1.2,0];
}
if(!target.hasSkill('xinguidao')) return [1,0.05];
return [1,Math.min(0.5,(target.countCards('h')+be)/4)];
}
},
},
},
},
minihuangtian:{
audio:'huangtian2',
unique:true,
zhuSkill:true,
global:'minihuangtian2',
group:'minihuangtian4',
},
minihuangtian2:{
audio:'huangtian2',
enable:'phaseUse',
discard:false,
lose:false,
delay:false,
line:true,
direct:true,
clearTime:true,
prepare:function(cards,player,targets){
targets[0].logSkill('minihuangtian');
},
prompt:function(){
var player=_status.event.player;
var list=game.filterPlayer(function(target){
return target!=player&&target.hasZhuSkill('minihuangtian',player);
});
var str='将一张【闪】或【闪电】或黑桃手牌交给'+get.translation(list);
if(list.length>1) str+='中的一人';
return str;
},
filter:function(event,player){
if(player.group!='qun') return false;
if(player.countCards('h',{name:['shan','shandian']})+player.countCards('h',{suit:'spade'})==0) return false;
return game.hasPlayer(function(target){
return target!=player&&target.hasZhuSkill('minihuangtian',player)&&!target.hasSkill('minihuangtian3');
});
},
filterCard:function(card){
return card.name=='shan'||card.name=='shandian'||get.suit(card)=='spade';
},
log:false,
visible:true,
filterTarget:function(card,player,target){
return target!=player&&target.hasZhuSkill('minihuangtian',player)&&!target.hasSkill('minihuangtian3');
},
content:function(){
target.gain(cards,player,'giveAuto');
target.addTempSkill('minihuangtian3','phaseUseEnd');
},
ai:{
expose:0.3,
order:10,
result:{target:1},
},
},
minihuangtian3:{},
minihuangtian4:{
audio:'huangtian2',
trigger:{global:['useCardAfter','responseAfter']},
filter:function(event,player){
return event.player!=player&&event.card.isCard&&event.card.name=='shan'&&event.cards.filterInD().length>0&&event.player.group=='qun';
},
prompt2:function(event,player){
return '获得'+get.translation(event.cards.filterInD());
},
usable:1,
logTarget:'player',
content:function(){
player.gain(trigger.cards.filterInD(),'gain2');
},
},
miniyinlang:{
global:'miniyinlang_use',
audio:'yinlang',
trigger:{player:'phaseUseEnd'},
direct:true,
filter:function(event,player){
return game.hasPlayer(function(current){
return current.group&&current.group!='unknown';
});
},
content:function(){
'step 0'
var list=[];
game.countPlayer(function(current){
if(current.group&&current.group!='unknown') list.add(current.group);
});
list.sort(function(a,b){
return lib.group.indexOf(a)-lib.group.indexOf(b);
});
list.push('cancel2');
player.chooseControl(list).set('prompt',get.prompt2('miniyinlang')).set('ai',function(){
return _status.event.choice;
}).set('choice',function(){
var getn=function(group){
return game.countPlayer(function(current){
if(current.group!=group||current==player) return false;
if(get.attitude(current,player)>0) return -0.5;
if(!current.inRange(player)) return 1;
return 0.6;
});
}
list.sort(function(a,b){
return getn(b)-getn(a);
});
return list[0];
}());
'step 1'
if(result.control!='cancel2'){
player.logSkill('miniyinlang',game.filterPlayer(function(current){
return current.group==result.control;
}));
game.log(player,'选择了','#y'+get.translation(result.control+2));
for(var i of game.players){
if(i==player||i.group==result.control) i.addMark('miniyinlang',1);
}
}
},
marktext:'生',intro:{name:'引狼',name2:'生',content:'mark'},
subSkill:{
use:{
mod:{
playerEnabled:function(card,player,target){
if(game.hasPlayer(function(current){
return current.hasSkill('miniyinlang');
})&&player.hasMark('miniyinlang')&&!target.hasMark('miniyinlang')) return false;
},
},
},
},
},
minixiusheng:{
audio:'xiusheng',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current.hasMark('miniyinlang');
});
},
forced:true,
logTarget:function(event,player){
return game.filterPlayer(function(current){
return current.hasMark('miniyinlang');
});
},
content:function(){
var num=0;
for(var i of game.players){
if(i.hasMark('miniyinlang')){
var numx=i.countMark('miniyinlang');
i.removeMark('miniyinlang',numx);
num+=numx;
}
}
player.draw(num);
},
ai:{combo:'miniyinlang'},
},
minihuaibi:{
mod:{
maxHandcard:function(player,num){
if(player.storage.miniyinlang) return num+game.countPlayer(function(current){
return current.countMark('miniyinlang');
});
},
},
group:'minihuaibi_discard',
audio:'huaibi',
unique:true,
trigger:{player:'damageEnd'},
filter:function(event,player){
return event.source&&event.source.hasMark('miniyinlang');
},
forced:true,
zhuSkill:true,
content:function(){
player.draw();
},
ai:{combo:'miniyinlang'},
subSkill:{
discard:{
audio:'huaibi',
trigger:{player:'phaseDiscardBefore'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current.hasMark('miniyinlang');
})&&player.countCards('h')>player.hp;
},
forced:true,
firstDo:true,
content:function(){},
},
},
},
minikuangfu:{
audio:'xinkuangfu',
enable:'phaseUse',
usable:1,
delay:false,
filterTarget:function(card,player,target){
if(player==target) return player.countCards('e',function(card){
return lib.filter.cardDiscardable(card,player);
})>0;
return target.countDiscardableCards(player,'e')>0;
},
filter:function(event,player){
return game.hasPlayer(function(current){
return current.countCards('e');
});
},
content:function(){
'step 0'
if(player==target) player.chooseToDiscard('e',true);
else player.discardPlayerCard(target,'e',true);
'step 1'
player.chooseUseTarget('sha',true,false,'nodistance');
'step 2'
var bool=game.hasPlayer2(function(current){
return current.getHistory('damage',function(evt){
return evt.getParent(4)==event;
}).length>0
});
if(bool) player.draw(2);
},
ai:{
order:function(){
return get.order({name:'sha'})-0.3;
},
result:{
target:function(player,target){
var att=get.attitude(player,target);
if(att<0) return -2;
if(target==player) return 1;
return 0;
},
},
},
},
minilihun:{
audio:'lihun',
inherit:'lihun',
filterTarget:lib.filter.notMe,
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.countCards('h');
});
},
filterCard:()=>false,
selectCard:-1,
},
minizhuiji:{
mod:{
globalFrom:function(from,to){
if(from.hp>=to.hp) return -Infinity;
},
},
shaRelated:true,
trigger:{player:'useCardToPlayered'},
logTarget:'target',
filter:function(event,player){
if(event.card.name!='sha') return false;
return event.target.hp>=player.hp;
},
forced:true,
preHidden:true,
logTarget:'target',
content:function(){
trigger.getParent().directHit.push(trigger.target);
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(arg.card.name!='sha') return false;
return arg.target.hp>player.hp;
},
},
},
minishichou:{
group:['minishichou2','minishichou4'],
audio:'ol_shichou',
trigger:{player:'useCard2'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&game.hasPlayer(function(current){
return !event.targets.includes(current)&&lib.filter.filterTarget(event.card,player,current);
});
},
direct:true,
content:function(){
'step 0'
var num=Math.min(player.getDamagedHp()+1,game.countPlayer(function(current){
return !trigger.targets.includes(current)&&lib.filter.filterTarget(trigger.card,player,current);
}));
player.chooseTarget(get.prompt('minishichou'),'令至多'+get.cnNumber(num)+'名其他角色也成为'+get.translation(trigger.card)+'的目标',[1,num],function(card,player,target){
var evt=_status.event.getTrigger();
return target!=player&&!evt.targets.includes(target)&&lib.filter.targetEnabled2(evt.card,player,target)&&lib.filter.targetInRange(evt.card,player,target);
}).ai=function(target){
return get.effect(target,{name:'sha'},_status.event.player);
};
'step 1'
if(result.bool){
var targets=result.targets;
player.logSkill('minishichou',targets);
player.line(targets,trigger.card.nature);
trigger.targets.addArray(targets);
}
},
},
minishichou2:{
audio:'ol_shichou',
trigger:{source:'damageSource'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&player.countMark('minishichou3')<3;
},
forced:true,
locked:false,
content:function(){
var num=Math.min(trigger.num,3-player.countMark('minishichou3'));
player.draw(num);
player.addTempSkill('minishichou3');
player.addMark('minishichou3',num,false);
},
},
minishichou3:{charlotte:true,onremove:true},
minishichou4:{
audio:'ol_shichou',
trigger:{player:'useCardAfter'},
filter:function(event,player){
return event.card.name=='sha'&&!player.getHistory('sourceDamage',function(evt){
return evt.card==event.card;
}).length;
},
forced:true,
locked:false,
content:function(){
var card=get.cardPile2(function(card){
return card.name=='sha';
});
if(card) player.gain(card,'gain2');
},
},
minilijian:{
audio:'lijian',
trigger:{player:['useCard2','useCardToPlayer']},
filter:function(event,player){
if(event.minilijian||!event.targets) return false;
return (event.card.name=='sha'||event.card.name=='juedou')&&game.hasPlayer(function(current){
return current!=player&&current.hasSex('male')&&!event.targets.includes(current)&&lib.filter.targetEnabled2(event.card,player,current);
});
},
usable:1,
direct:true,
content:function(){
'step 0'
trigger.minilijian=true;
player.chooseTarget(get.prompt('minilijian'),'为'+get.translation(trigger.card)+'增加一个目标',function(card,player,target){
var evt=_status.event.getTrigger();
return !evt.targets.includes(target)&&target!=player&&target.hasSex('male')&&lib.filter.targetEnabled2(evt.card,player,target);
}).set('ai',function(target){
var evt=_status.event.getTrigger();
return get.effect(target,evt.card,evt.player,evt.player);
});
'step 1'
if(result.bool){
if(player!=game.me&&!player.isOnline()) game.delayx();
event.target=result.targets[0];
}
else{
player.storage.counttrigger.minilijian--;
event.finish();
}
'step 2'
player.logSkill('minilijian',target);
trigger.targets.push(target);
game.log(target,'成为了',trigger.card,'的额外目标');
},
},
minijiqiao:{
audio:'jiqiao',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return player.countCards('he')-player.countCards('he',{type:'trick'})>0;
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard(get.prompt2('minijiqiao'),[1,player.countCards('he')-player.countCards('he',{type:'trick'})],'he',function(card){
return get.type2(card)!='trick';
}).set('ai',function(card){
if(card.name=='bagua') return 10;
return 7-get.value(card);
}).logSkill='jiqiao';
'step 1'
if(result.bool){
event.cards=get.cards(2*result.cards.length);
player.showCards(event.cards);
}
else event.finish();
'step 2'
var gained=[];
var tothrow=[];
for(var i=0;i<event.cards.length;i++){
if(get.type2(event.cards[i])=='trick') gained.push(event.cards[i]);
else tothrow.push(event.cards[i]);
}
if(gained.length) player.gain(gained,'gain2');
else{
var card=get.cardPile(function(card){
return get.type2(card)=='trick';
});
if(card) player.gain(card,'gain2');
}
if(tothrow.length) game.cardsDiscard(tothrow);
},
},
minilinglong:{
derivation:['bagua_skill','minirejizhi','qicai'],
audio:'linglong',
group:['linglong_bagua','minilinglong_jizhi'],
locked:true,
mod:{
maxHandcard:function(player,num){
if(player.getEquips(3).length||player.getEquips(4).length) return;
return num+1;
},
targetInRange:function(card,player,target,now){
if(player.countCards('e')) return;
var type=get.type(card);
if(type=='trick'||type=='delay') return true;
},
},
},
minilinglong_jizhi:{
audio:'rejizhi',
inherit:'minirejizhi',
filter:function(event,player){
return !player.countCards('e')&&get.type2(event.card)=='trick';
},
},
minifuqi:{
group:'minifuqi_tieji',
audio:'fuqi',
trigger:{player:'useCard'},
filter:function(event,player){
return event.card&&(get.type(event.card)=='trick'||get.type(event.card)=='basic'&&!['shan','tao','jiu','du'].includes(event.card.name))&&game.hasPlayer(function(current){
return current!=player&&get.distance(current,player)<=2;
});
},
forced:true,
content:function(){
var targets=game.filterPlayer(function(current){
return current!=player&&get.distance(current,player)<=2;
});
for(var target of targets) target.popup('无法响应');
trigger.directHit.addArray(targets);
},
ai:{
ignoreSkill:true,
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(tag=='directHit_ai') return get.distance(arg.target,player)<=2;
if(!arg||arg.isLink||!arg.card||!get.tag(arg.card,'damage')) return false;
if(!arg.skill||!lib.skill[arg.skill]||lib.skill[arg.skill].charlotte||get.is.locked(arg.skill)||!arg.target.getSkills(true,false).includes(arg.skill)) return false;
},
},
subSkill:{
tieji:{
audio:'fuqi',
trigger:{source:'damageSource'},
filter:function(event,player){
return event.player!=player&&event.player.isIn();
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.addTempSkill('fengyin');
},
},
},
},
minijiaozi:{
audio:'jiaozi',
trigger:{source:'damageBegin1'},
filter:function(event,player){
return player.isMaxHandcard();
},
forced:true,
content:function(){
trigger.num++;
},
ai:{presha:true},
},
minitianming:{
audio:'tianming',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return event.card.name=='sha';
},
check:function(event,player){
var cards=player.getCards('he');
if(cards.length<=2){
for(var i=0;i<cards.length;i++){
if(cards[i].name=='shan'||cards[i].name=='tao') return false;
}
}
return true;
},
content:function(){
'step 0'
player.chooseToDiscard(2,true,'he');
player.draw(2);
'step 1'
player.chooseTarget('是否令一名角色弃置两张牌，然后摸两张牌？').set('ai',function(target){
var cards=target.getCards('he');
if(cards.length<=2){
for(var i=0;i<cards.length;i++){
if(cards[i].name=='shan'||cards[i].name=='tao') return 0;
}
}
return get.attitude(player,target)*(target==player?1.2:1);
});
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target);
target.chooseToDiscard(2,true,'he');
target.draw(2);
}
},
ai:{
effect:{
target:function(card,player,target,current){
if(card.name=='sha') return [1,0.5];
},
},
},
},
minimizhao:{
audio:'mizhao',
enable:'phaseUse',
usable:1,
filter:function(event,player){
return player.countCards('h');
},
check:function(card){
var player=_status.event.player;
if(ui.selected.cards.length&&!game.hasPlayer(function(current){
return get.attitude(player,current)>0;
})) return -1;
return 1/(get.value(card)||0.5);
},
filterCard:true,
selectCard:[1,Infinity],
filterTarget:lib.filter.notMe,
discard:false,
lose:false,
delay:false,
complexCard:true,
content:function(){
'step 0'
event.target1=targets[0];
targets[0].gain(cards,player,'giveAuto');
'step 1'
if(!game.hasPlayer(function(current){
return current!=player&&target.canCompare(current);
})) event.finish();
'step 2'
player.chooseTarget(true,'选择拼点目标',function(card,player,target){
return _status.event.target1.canCompare(target)&&target!=player;
}).set('ai',function(target){
var player=_status.event.player;
var eff=get.effect(target,{name:'sha'},_status.event.target1,player);
var att=get.attitude(player,target);
if(att>0){
return eff-10;
}
return eff;
}).set('target1',event.target1).set('forceDie',true);
'step 3'
if(result.bool){
event.target2=result.targets[0];
event.target1.line(event.target2);
event.target1.chooseToCompare(event.target2);
}
else event.finish();
'step 4'
if(!result.tie){
var list=[event.target1,event.target2];
if(!result.bool) list.reverse();
if(list[0].canUse({name:'sha',isCard:true},list[1],false)) list[0].useCard({name:'sha',isCard:true},list[1],false);
}
},
ai:{
order:1,
result:{
target:function(player,target){
var num1=game.countPlayer(function(current){
return get.attitude(player,current)>0;
}),num2=game.countPlayer(function(current){
return get.attitude(player,current)<0;
});
if(target.hasSkillTag('nogain')) return 0;
if(num1>0&&num2>0) return 1;
if(player.countCards('h',card=>get.value(card)>0)) return 0;
if(num1==0&&num2>1) return -1;
return 0;
},
},
},
},
minibeige:{
audio:'beige',
trigger:{global:'damageEnd'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.source&&event.player.isIn()&&player.countCards('he');
},
direct:true,
preHidden:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt2('minibeige',trigger.player)).set('ai',function(card){
var player=_status.event.player;
var target=_status.event.list[0];
var source=_status.event.list[1];
var att1=get.attitude(player,target);
var att2=get.attitude(player,source);
switch(get.suit(card)){
case 'heart': case 'diamond':
if(att1>0) return 10-get.value(card);
return 0;
break;
case 'club':
if(att2<0) return (7-get.value(card))*(source.countCards('he')?1:0);
return 0;
break;
case 'spade':
if(att2>0&&source.isTurnedOver()) return 20-get.value(card);
if(att2<0&&!source.isTurnedOver()) return 10-get.value(card);
return 0;
break;
}
}).setHiddenSkill('minibeige').set('list',[trigger.player,trigger.source]).logSkill='minibeige';
'step 1'
if(result.bool){
switch(get.suit(result.cards[0])){
case 'heart': case 'diamond':
player.line(trigger.player);
trigger.player.recover();
trigger.player.draw(2);
break;
case 'club':
player.line(trigger.source);
trigger.source.chooseToDiscard('he',2,true);
break;
case 'spade':
player.line(trigger.source);
trigger.source.turnOver();
break;
}
}
},
ai:{expose:0.25},
},
minizhuikong:{
audio:'zhuikong',
trigger:{global:'phaseZhunbeiBegin'},
check:function(event,player){
if(get.attitude(player,event.player)<-2){
var cards=player.getCards('h');
if(cards.length>player.hp) return true;
for(var i=0;i<cards.length;i++){
var useful=get.useful(cards[i]);
if(useful<5) return true;
if(get.number(cards[i])>9&&useful<7) return true;
}
}
return false;
},
filter:function(event,player){
return player.canCompare(event.player);
},
logTarget:'player',
content:function(){
'step 0'
player.chooseToCompare(trigger.player);
'step 1'
if(result.bool) trigger.player.addTempSkill('zishou2');
else{
trigger.player.addTempSkill('minizhuikong_distance');
trigger.player.storage.minizhuikong_distance.push(player);
}
},
subSkill:{
distance:{
init:function(player){
player.storage.minizhuikong_distance=[];
},
charlotte:true,
onremove:true,
mod:{
globalFrom:function(from,to,distance){
if(from.storage.minizhuikong_distance.includes(to)) return -Infinity;
},
},
},
},
},
miniqiuyuan:{
audio:'qiuyuan',
trigger:{target:'useCardToTarget'},
filter:function(event,player){
return event.card.name=='sha'&&game.players.length>2;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('miniqiuyuan'),[1,3],function(card,player,target){
return target!=player&&!_status.event.targets.includes(target)&&_status.event.playerx.canUse('sha',target,false);
}).set('ai',function(target){
var trigger=_status.event.getTrigger();
var player=_status.event.player;
return get.effect(target,trigger.card,trigger.player,player);
}).set('targets',trigger.targets).set('playerx',trigger.player);
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
event.targets=targets;
player.logSkill('miniqiuyuan',targets);
event.num=0;
event.list=[];
}
else event.finish();
'step 2'
var target=targets[num];
event.target=target;
target.chooseCard({name:'shan'},'交给'+get.translation(player)+'一张【闪】，或成为'+get.translation(trigger.card)+'的额外目标并弃置一张牌');
'step 3'
if(result.bool) player.gain(result.cards,target,'giveAuto');
else{
trigger.getParent().targets.push(target);
trigger.getParent().triggeredTargets2.push(target);
game.log(target,'成为了',trigger.card,'的额外目标');
target.chooseToDiscard('he',true);
}
if(event.num<event.targets.length-1){
event.num++;
event.goto(2);
}
'step 4'
game.delayx();
},
ai:{
expose:0.2,
effect:{
target:function(card,player,target){
if(card.name!='sha') return;
var players=game.filterPlayer();
if(get.attitude(player,target)<=0){
for(var i=0;i<players.length;i++){
var target2=players[i];
if(player!=target2&&target!=target2&&player.canUse(card,target2,false)&&
get.effect(target2,{name:'shacopy',nature:card.nature,suit:card.suit},player,target)>0&&
get.effect(target2,{name:'shacopy',nature:card.nature,suit:card.suit},player,player)<0){
if(target.hp==target.maxHp) return 0.3;
return 0.6;
}
}
}
else{
for(var i=0;i<players.length;i++){
var target2=players[i];
if(player!=target2&&target!=target2&&player.canUse(card,target2,false)&&
get.effect(target2,{name:'shacopy',nature:card.nature,suit:card.suit},player,player)>0){
if(player.canUse(card,target2)) return;
if(target.hp==target.maxHp) return [0,1];
return [0,0];
}
}
}
},
},
},
},
//张琪瑛
minidianhua:{
audio:'xinfu_dianhua',
trigger:{player:['phaseZhunbeiBegin','phaseJieshuBegin']},
frequent:true,
content:function(){
'step 0'
var num=1;
for(var i=0;i<lib.suit.length;i++){
if(player.hasMark('xinfu_falu_'+lib.suit[i])) num++;
}
var cards=get.cards(num);
if(lib.config.extension_十周年UI_enable){
var dialog=decadeUI.content.chooseGuanXing(player,cards,cards.length);
dialog.caption='【点化】';
game.broadcast(function(player,cards,callback){
if(!window.decadeUI) return;
var dialog=decadeUI.content.chooseGuanXing(player,cards,cards.length);
dialog.caption='【点化】';
dialog.callback=callback;
},player,cards,dialog.callback);
event.switchToAuto=function(){
var cards=dialog.cards[0].concat();
var cheats=[];
var next=player.getNext();
var friend=(event.triggername=='phaseJieshuBegin'?player.getNext():player);
var judges=friend.node.judges.childNodes;
if(judges.length>0) cheats=decadeUI.get.cheatJudgeCards(cards,judges,friend!=null);
if(friend) cards=decadeUI.get.bestValueCards(cards,friend);
else{
cards.sort(function(a,b){
return get.value(a,next)-get.value(b,next);
});
}
cards=cheats.concat(cards);
var time=500;
for(var i=0;i<cards.length;i++){
setTimeout(function(card,index,finished){
dialog.move(card,index,0);
if(finished) dialog.finishTime(cards.length<=1?250:1000);;
},time,cards[i],i,i>=cards.length-1);
time+=500;
}
}
if(event.isOnline()){
event.player.send(function(){
if(!window.decadeUI&&decadeUI.eventDialog)_status.event.finish();
},event.player);
event.player.wait();
decadeUI.game.wait();
}
else if(!event.isMine()){
event.switchToAuto();
}
event.finish();
return;
}
game.cardsGotoOrdering(cards);
var next=player.chooseToMove('点化：将卡牌以任意顺序置于牌堆顶');
next.set('list',[['牌堆顶',cards]]);
next.set('processAI',function(list){
var player=_status.event.player,target=(_status.event.getTrigger().name=='phaseZhunbei'?player:player.next);
var att=get.sgn(get.attitude(player,target));
var check=function(card){
var judge=player.getCards('j')[cards.length];
if(judge) return get.judge(judge)(card)*att;
return player.getUseValue(card)*att;
};
var cards=list[0][1].slice(0);
cards.sort(function(a,b){
return check(b)*att-check(a)*att;
});
return [cards];
});
'step 1'
if(result.bool){
var list=result.moved[0].slice(0);
while(list.length){
ui.cardPile.insertBefore(list.pop(),ui.cardPile.firstChild);
}
game.updateRoundNumber();
game.delayx();
}
},
},
minizhenyi:{
group:['oldzhenyi_spade','zhenyi_club','zhenyi_heart'],
audio:'xinfu_zhenyi',
inherit:'xinfu_zhenyi',
},
minicangchu:{
mod:{
maxHandcard:function(player,num){
return num+player.countMark('minicangchu');
},
},
group:['minicangchu2','minicangchu3'],
audio:'cangchu',
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
if(event.name=='phase'&&game.phaseNumber!=0) return false;
return player.countMark('minicangchu')<game.countPlayer();
},
forced:true,
content:function(){
player.addMark('minicangchu',Math.min(3,game.countPlayer()-player.countMark('minicangchu')));
},
marktext:'粮',
intro:{content:'mark',name:'粮'},
},
minicangchu2:{
audio:'cangchu',
trigger:{player:['gainAfter','recoverEnd'],global:'loseAsyncAfter'},
filter:function(event,player){
return player!=_status.currentPhase&&player.countMark('minicangchu')<game.countPlayer()&&(event.name=='recover'||event.getg(player).length);
},
forced:true,
usable:1,
content:function(){
player.addMark('minicangchu',1);
},
},
minicangchu3:{
audio:'cangchu',
trigger:{global:'die'},
filter:function(event,player){
return player.countMark('minicangchu')>game.countPlayer();
},
forced:true,
content:function(){
player.removeMark('minicangchu',player.countMark('minicangchu')-game.countPlayer());
},
},
miniliangying:{
audio:'reliangying',
trigger:{player:'phaseDiscardBegin'},
direct:true,
content:function(){
'step 0'
var map={};
var list=[];
for(var i=1;i<=player.countMark('minicangchu');i++){
var cn=get.cnNumber(i,true);
map[cn]=i;
list.push(cn);
}
list.push('cancel2');
event.map=map;
player.chooseControl(list).set('prompt',get.prompt('miniliangying')).set('prompt2','摸至多'+get.cnNumber(player.countMark('minicangchu'))+'张牌，然后交给等量的角色各一张牌').set('ai',function(){
var player=_status.event.player;
var num=Math.min(player.countMark('minicangchu'),game.countPlayer(function(current){
return get.attitude(player,current)>0;
}));
if(num>0) return get.cnNumber(num,true);
return 'cancel2';
});
'step 1'
event.list=[];
if(result.control=='cancel2'){event.finish();return;}
player.logSkill('miniliangying');
var num=event.map[result.control]||1;
event.num=num;
player.draw(num);
'step 2'
var num=Math.min(event.num,player.countCards('he'),game.players.length-1);
var next=player.chooseCardTarget({
prompt:'粮营：将'+get.cnNumber(num-1)+'至'+get.cnNumber(num)+'张牌交给其他角色',
position:'he',
animate:false,
filterCard:function(card){
for(var CT of _status.event.list){
if(CT.card==card) return false;
}
return true;
},
filterTarget:function(card,player,target){
for(var CT of _status.event.list){
if(CT.target==target) return false;
}
return target!=player;
},
ai1:function(card){
if(card.name=='shan') return 1;
return Math.random();
},
ai2:function(target){
var player=_status.event.player;
return get.attitude(player,target);
},
});
next.set('list',event.list);
if(num-event.list.length>1) next.set('forced',true);
'step 3'
if(result.bool){
var num=Math.min(event.num,player.countCards('he'),game.players.length-1);
var CT={
target:result.targets[0],
card:result.cards[0],
};
player.addGaintag(result.cards,'olsujian_given');
event.list.push(CT);
if(num-event.list.length>=1) event.goto(2);
}
else if(!event.list.length>0) event.finish();
'step 4'
var list=[];
var cards=[];
for(var obj of event.list){
cards.push(obj.card);
list.push([obj.target,obj.card]);
player.line(obj.target);
}
game.loseAsync({
gain_list:list,
player:player,
cards:cards,
giver:player,
animate:'giveAuto',
}).setContent('gaincardMultiple');
},
},
minishishou:{
audio:'reshishou',
trigger:{player:['useCard','damageEnd']},
filter:function(event,player){
if(!player.countMark('minicangchu')) return false;
return (event.name=='damage')?(event.hasNature('fire')):(event.card&&event.card.name=='jiu');
},
forced:true,
content:function(){
player.removeMark('minicangchu',1);
},
},
minizongkui:{
audio:'zongkui',
trigger:{global:'phaseBefore',player:['phaseBegin','enterGame']},
filter:function(event,player,name){
if(name=='phaseBefore'&&game.phaseNumber>0) return false;
return game.hasPlayer(function(current){
if((name=='phaseBefore'||name=='enterGame')&&!current.isMinHp()) return false;
return current!=player&&!current.hasMark('zongkui_mark');
});
},
direct:true,
content:function(){
'step 0'
event.logged=false;
if(event.triggername=='phaseBefore'||event.triggername=='enterGame'){
player.logSkill('minizongkui');
event.logged=true;
}
var targets=game.filterPlayer(function(current){
if((event.triggername=='phaseBefore'||event.triggername=='enterGame')&&!current.isMinHp()) return false;
return current!=player&&!current.hasMark('zongkui_mark');
});
if((event.triggername=='phaseBefore'||event.triggername=='enterGame')&&targets.length==1){
event._result={bool:true,targets:targets};
}
else{
var next=player.chooseTarget(event.logged?'请选择【纵傀】的目标':get.prompt('zongkui'),'令一名'+((event.triggername=='phaseBefore'||event.triggername=='enterGame')?'体力值最小的':'')+'其他角色获得“傀”标记',function(card,player,target){
if(_status.event.round&&!target.isMinHp()) return false;
return target!=player&&!target.hasMark('zongkui_mark');
}).set('ai',function(target){
var num=target.isMinHp()?0.5:1;
return num*get.threaten(target);
}).set('round',event.triggername=='phaseBefore'||event.triggername=='enterGame');
if(event.triggername=='phaseBefore'||event.triggername=='enterGame') next.set('forced',true);
}
'step 1'
if(result.bool){
var target=result.targets[0];
if(!event.logged) player.logSkill('minizongkui',target);
else player.line(target);
target.addMark('zongkui_mark',1);
game.delayx();
}
},
},
miniguju:{
audio:'guju',
inherit:'guju',
content:function(){
player.draw();
},
},
minilianzhu:{
audio:'lianzhu',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he');
},
filterTarget:lib.filter.notMe,
filterCard:true,
check:function(card){
var num=get.value(card);
if(get.color(card)=='black'){
if(num>=6) return 0;
return 9-num;
}
else return 7-num;
},
usable:1,
discard:false,
lose:false,
delay:false,
position:'he',
content:function(){
'step 0'
player.give(cards,target);
'step 1'
if(get.color(cards[0],player)=='red'){
player.chooseDrawRecover(2,true);
event.finish();
}
else{
target.chooseToDiscard('he',2,'弃置两张牌，或令'+get.translation(player)+'摸两张牌').set('ai',function(card){
if(!_status.event.goon) return -get.value(card);
return 6-get.value(card);
}).set('goon',get.attitude(target,player)<=0);
}
'step 2'
if(!result.bool) player.draw(2);
},
ai:{
order:3,
expose:0.2,
result:{
target:function(player,target){
if(ui.selected.cards.length&&get.color(ui.selected.cards[0])=='red'){
var att=get.attitude(player,target);
return 2+get.sgn(att)+att/114514;
}
return -1;
},
},
},
},
minixiahui:{
audio:'xiahui',
mod:{
ignoredHandcard:function(card,player){
if(get.color(card,player)=='black') return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&get.color(card,player)=='black') return false;
},
},
trigger:{global:'phaseEnd'},
forced:true,
logTarget:'player',
filter:function(event,player){
var target=event.player;
return target!=player&&target.getHistory('lose',function(evt){
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('minixiahui')) return true;
}
}).length;
},
content:function(){
trigger.player.loseHp();
},
group:'minixiahui_gain',
subSkill:{
gain:{
trigger:{global:'gainEnd'},
forced:true,
popup:false,
filter:function(event,player){
if(player==event.player) return false;
var evt=event.getl(player);
return evt&&evt.cards2&&evt.cards2.filter(function(card){
return get.color(card,player)=='black';
}).length>0;
},
content:function(){
trigger.player.addSkill('minixiahui_block');
var cards=trigger.getl(player).cards2.filter(function(card){
return get.color(card,player)=='black';
});
trigger.player.addGaintag(cards,'minixiahui');
},
},
block:{
mod:{
cardEnabled2:function(card){
if(get.itemtype(card)=='card'&&card.hasGaintag('minixiahui')) return false;
},
cardDiscardable:function(card){
if(card.hasGaintag('minixiahui')) return false;
},
},
charlotte:true,
forced:true,
popup:false,
trigger:{player:'changeHp'},
filter:function(event,player){
return event.num<0;
},
content:function(){
player.removeSkill('minixiahui_block');
},
onremove:function(player){
player.removeGaintag('minixiahui');
},
},
},
},
minilveming:{
audio:'xinfu_lveming',
inherit:'xinfu_lveming',
filterTarget:function(card,player,target){
return player!=target&&target.countCards('e')<=player.countCards('e');
},
mark:false,
content:function(){
'step 0'
var list=[1,2,3,4,5,6,7,8,9,10,11,12,13].map((i)=>get.strNumber(i));
target.chooseControl(list).set('ai',function(){
return get.rand(0,12);
}).set('prompt','掠命：请选择一个点数').set('prompt2','若'+get.translation(player)+'的判定点数与你选择的点数相同，则对你造成2点伤害，否则其随机获得你区域里的一张牌');
'step 1'
if(result.control){
target.$damagepop(result.control,'thunder');
event.num=result.index+1;
game.log(target,'选择的点数为','#y'+get.strNumber(event.num));
player.judge(function(card){
if(card.number==_status.event.getParent('minilveming').num) return 4;
return 0;
});
}
else event.finish();
'step 2'
if(result.bool) target.damage(2);
else player.gain(target.getCards('hej').randomGet(),target,'giveAuto','bySelf');
},
},
minitunjun:{
unique:true,
mark:true,
limited:true,
audio:'xinfu_tunjun',
enable:'phaseUse',
filterTarget:true,
skillAnimation:true,
animationColor:'metal',
content:function(){
'step 0'
player.awakenSkill('minitunjun');
event.num=player.getAllHistory('useSkill',function(evt){
return evt.skill=='minilveming';
}).length+1;
event.toequip=[];
'step 1'
var equip=get.cardPile(function(card){
var bool1=true;
for(var i=0;i<event.toequip.length;i++){
if(get.type(card)=='equip'&&get.subtype(card)==get.subtype(event.toequip[i])) bool1=false;
}
return (get.type(card)=='equip'&&!event.toequip.includes(card)&&target.canEquip(card)&&bool1);
});
if(equip) event.toequip.push(equip);
else event.num=0;
event.num--;
'step 2'
if(event.num>0) event.goto(1);
'step 3'
for(var i=0;i<event.toequip.length;i++){
target.chooseUseTarget(event.toequip[i],true).set('animate',false).set('nopopup',true);
}
},
ai:{
order:1,
result:{
player:function(player,target){
if(get.attitude(player,target)<=0) return 0;
if(target.countCards('e')+player.getAllHistory('useSkill',function(evt){
return evt.skill=='minilveming';
}).length<3) return 0;
return 1/(target.countCards('e')+1);
},
},
},
},
minijixu:{
audio:'xinfu_jixu',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h');
},
filterTarget:lib.filter.notMe,
selectTarget:[1,4],
usable:1,
multitarget:true,
multiline:true,
content:function(){
'step 0'
targets.sortBySeat();
event.num=0;
'step 1'
if(!event.caicuolist) event.caicuolist=[];
targets[event.num].chooseBool('是否押杀？').ai=function(event,player){
var evt=_status.event.getParent();
if(get.attitude(targets[event.num],evt.player)>0) return evt.player.countCards('h','sha')?false:true;
return Math.random()<0.5;
};
'step 2'
var target=targets[event.num];
var num1=result.bool?1:-1;
var num2=player.countCards('h','sha')?1:-1;
if(num1!=num2){
event.caicuolist.push(target);
target.chat('猜错');
game.log(target,'猜','#y错','了');
}
else{
target.chat('猜对');
game.log(target,'猜','#g对','了');
}
event.num++;
game.delay();
if(event.num<targets.length) event.goto(1);
'step 3'
if(event.caicuolist.length){
for(var i of event.caicuolist){
player.discardPlayerCard(i,'he',true);
player.useCard({name:'sha',isCard:true},i,false);
}
}
var num=targets.length-event.caicuolist.length+1;
player.addTempSkill('minijixu_hand');
player.draw(num);
player.addMark('minijixu_hand',num,false);
},
ai:{
order:function(){
return get.order({name:'sha'})+0.6;
},
result:{
target:function(player,target){
return get.effect(target,{name:'guohe_copy2'},player,target);
},
},
expose:0.25,
},
subSkill:{
hand:{
charlotte:true,
onremove:true,
mod:{
maxHandcard:function(player,num){
return num+player.countMark('minijixu_hand');
},
},
intro:{content:'手牌上限+#'},
},
},
},
//许劭
minipingjian:{
getList:function(){
return Object.keys(lib.characterPack.MiNikill).filter(function(i){
if(!lib.characterPack.MiNikill[i][4]) return true;
return !lib.characterPack.MiNikill[i][4].includes('unseen');
});
},
init:function(player){
player.addSkill('minipingjian_remove');
if(!player.storage.minipingjian_remove) player.storage.minipingjian_remove={};
},
onremove:function(player){
player.removeSkill('minipingjian_remove');
},
derivation:'minipingjian_faq',
group:'minipingjian_use',
audio:'pingjian',
trigger:{player:['damageEnd','phaseJieshuBegin']},
frequent:true,
content:function(){
'step 0'
var allList=((!_status.connectMode&&lib.config.extension_活动武将_PingJianName)?lib.config.extension_活动武将_PingJianName:lib.skill.minipingjian.getList()).filter(i=>lib.character[i]);
var list=[],skills=[],map=[];
allList.randomSort();
var name2=event.triggername;
for(var i=0;i<allList.length;i++){
var name=allList[i];
var skills2=lib.character[name][3];
for(var j=0;j<skills2.length;j++){
if(player.getStorage('minipingjian').includes(skills2[j])) continue;
if(skills2[j]=='minipingjian') continue;
if(skills.includes(skills2[j])){
list.add(name);
if(!map[name]) map[name]=[];
map[name].push(skills2[j]);
skills.add(skills2[j]);
continue;
}
var list2=[skills2[j]];
game.expandSkills(list2);
for(var k=0;k<list2.length;k++){
var info=lib.skill[list2[k]];
if(!info||!info.trigger||!info.trigger.player||info.silent||info.limited||info.juexingji||info.hiddenSkill||
info.dutySkill||info.groupSkill||(info.priority&&typeof info.priority=='number')||info.firstDo||info.lastDo) continue;
if(info.trigger.player==name2||Array.isArray(info.trigger.player)&&info.trigger.player.includes(name2)){
if(/*info.init||info.onChooseToUse||*/info.ai&&(info.ai.combo||info.ai.notemp||info.ai.neg)) continue;
if(info.init) info.init(player,list2[k]);
if(info.filter){
try{
var bool=info.filter(trigger,player,name2);
if(!bool) continue;
}
catch(e){
continue;
}
}
list.add(name);
if(!map[name]) map[name]=[];
map[name].push(skills2[j]);
skills.add(skills2[j]);
break;
}
}
}
if(list.length>2) break;
}
if(skills.length) player.chooseControl(skills).set('dialog',['请选择要发动的技能',[list,'character']]);
else event.finish();
'step 1'
player.markAuto('minipingjian',[result.control]);
player.addTempSkill(result.control);
player.storage.minipingjian_remove[result.control]=(trigger.name=='damage'?trigger:'phaseJieshu');
},
},
minipingjian_use:{
audio:'pingjian',
enable:'phaseUse',
usable:1,
content:function(){
'step 0'
var allList=((!_status.connectMode&&lib.config.extension_活动武将_PingJianName)?lib.config.extension_活动武将_PingJianName:lib.skill.minipingjian.getList()).filter(i=>lib.character[i]);
var list=[],skills=[],map=[];
allList.randomSort();
for(var i=0;i<allList.length;i++){
var name=allList[i];
var skills2=lib.character[name][3];
for(var j=0;j<skills2.length;j++){
if(player.getStorage('minipingjian').includes(skills2[j])) continue;
if(skills2[j]=='minipingjian'||get.is.locked(skills2[j],player)) continue;
var info=lib.translate[skills2[j]+'_info'];
if(skills.includes(skills2[j])||(info&&info.indexOf('当你于出牌阶段')!=-1&&info.indexOf('当你于出牌阶段外')!=-1)){
list.add(name);
if(!map[name]) map[name]=[];
map[name].push(skills2[j]);
skills.add(skills2[j]);
continue;
}
var list2=[skills2[j]];
game.expandSkills(list2);
for(var k=0;k<list2.length;k++){
var info=lib.skill[list2[k]];
if(!info||!info.enable||info.charlotte||info.limited||info.juexingji||info.hiddenSkill||info.dutySkill||info.groupSkill) continue;
if((info.enable=='phaseUse'||(Array.isArray(info.enable)&&info.enable.includes('phaseUse')))||
(info.enable=='chooseToUse'||(Array.isArray(info.enable)&&info.enable.includes('chooseToUse')))){
if(/*info.init||info.onChooseToUse||*/info.ai&&(info.ai.combo||info.ai.notemp||info.ai.neg)) continue;
var evt=event.getParent(2);
if(info.init) info.init(player,list2[k]);
if(info.onChooseToUse) info.onChooseToUse(evt);
if(info.filter){
try{
var bool=info.filter(evt,player);
if(!bool) continue;
}
catch(e){
continue;
}
}
else if(info.viewAs&&typeof info.viewAs!='function'){
try{
if(evt.filterCard&&!evt.filterCard(info.viewAs,player,evt)) continue;
if(info.viewAsFilter&&info.viewAsFilter(player)==false) continue;
}
catch(e){
continue;
}
}
list.push(name);
if(!map[name]) map[name]=[];
map[name].push(skills2[j]);
skills.add(skills2[j]);
break;
}
}
}
if(list.length>2) break;
}
if(skills.length) player.chooseControl(skills).set('dialog',['请选择要发动的技能',[list,'character']]);
else event.finish();
'step 1'
player.markAuto('minipingjian',[result.control]);
player.addTempSkill(result.control);
player.storage.minipingjian_remove[result.control]='phaseUse';
},
ai:{
order:12,
result:{player:1},
},
},
minipingjian_remove:{
group:'minipingjian_skill',
charlotte:true,
trigger:{player:['phaseUseEnd','damageEnd','phaseJieshuBegin']},
filter:function(event,player){
return Object.keys(player.storage.minipingjian_remove).find(function(skill){
if(event.name!='damage') return player.storage.minipingjian_remove[skill]==event.name;
return player.storage.minipingjian_remove[skill]==event;
});
},
direct:true,
lastDo:true,
priority:-Infinity,
content:function(){
var skills=Object.keys(player.storage.minipingjian_remove).filter(function(skill){
if(trigger.name!='damage') return player.storage.minipingjian_remove[skill]==trigger.name;
return player.storage.minipingjian_remove[skill]==trigger;
});
player.removeSkill(skills);
for(var skill of skills) delete player.storage.minipingjian_remove[skill];
},
},
minipingjian_skill:{
charlotte:true,
trigger:{player:['useSkill','logSkillBegin']},
filter:function(event,player){
if(get.info(event.skill).charlotte) return false;
var skill=event.sourceSkill||event.skill;
return player.storage.minipingjian_remove[skill];
},
direct:true,
firstDo:true,
priority:Infinity,
content:function(){
var skill=trigger.sourceSkill||trigger.skill;
player.removeSkill(skill);
delete player.storage.minipingjian_remove[skill];
},
},
//貂蝉
minirelijian:{
onChooseToUse:function(event){
if(event.type=='phase'&&!game.online&&!event.minirelijian_targets){
var evtx=event.getParent('phaseUse');
var list=[],player=event.player;
for(var target of game.filterPlayer2()){
if(target.getHistory('damage',function(evt){
return evt.card&&evt.card.name=='juedou'&&evt.getParent(3).name=='minirelijian'&&evt.getParent(3).player==player;
}).length) list.push(target);
}
event.set('minirelijian_targets',list);
}
},
audio:'lijian',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(function(target){
if(event.minirelijian_targets.includes(target)) return false;
return game.hasPlayer(function(current){
if(event.minirelijian_targets.includes(current)) return false;
return current!=target&&current.canUse({name:'juedou'},target);
});
});
},
filterTarget:function(card,player,target){
if(_status.event.minirelijian_targets.includes(target)) return false;
if(ui.selected.targets.length) return target.canUse({name:'juedou'},ui.selected.targets[0]);
return game.hasPlayer(function(current){
return current.canUse({name:'juedou'},target);
});
},
selectTarget:2,
targetprompt:['先出杀','后出杀'],
multitarget:true,
filterCard:true,
check:function(card){
return 10-get.value(card);
},
position:'he',
usable:2,
content:function(){
targets[1].useCard({name:'juedou',isCard:true},'nowuxie',targets[0],'noai').animate=false;
game.delay(0.5);
},
ai:{
order:8,
expose:0.4,
threaten:4.8,
result:{
target:function(player,target){
if(!ui.selected.targets.length) return -3;
return get.effect(target,{name:'juedou'},ui.selected.targets[0],target);
},
},
},
},
minirebiyue:{
audio:'biyue',
trigger:{player:'phaseJieshuBegin'},
forced:true,
locked:false,
content:function(){
player.draw(1+player.getHistory('useSkill',function(evt){
return evt.skill=='minirelijian';
}).length);
},
},
//何太后
minizhendu:{
audio:'zhendu',
trigger:{global:'phaseUseBegin'},
filter:function(event,player){
return event.player.isIn()&&player.countCards('h')&&event.player.hasUseTarget({name:'jiu'},null,true);
},
direct:true,
preHidden:true,
content:function(){
'step 0'
var nono=(Math.abs(get.attitude(player,trigger.player))<3);
if(player==trigger.player||get.damageEffect(trigger.player,player,player)<=0||!trigger.player.hasUseTarget({name:'jiu'},null,true)) nono=true;
if(trigger.player.hp>2) nono=true;
if(trigger.player.hp>1&&player.countCards('h')<3&&(trigger.player.canUse('sha',player)&&!player.countCards('h','shan')&&trigger.player.countCards('h')>=3)) nono=true;
var next=player.chooseToDiscard(get.prompt2('minizhendu',trigger.player),'he');
next.set('ai',function(card){
if(_status.event.nono) return -1;
return 7-get.useful(card);
});
next.set('logSkill',['minizhendu',trigger.player]);
next.set('nono',nono);
next.setHiddenSkill('minizhendu');
'step 1'
if(result.bool) trigger.player.chooseUseTarget({name:'jiu'},true,'noTargetDelay','nodelayx');
else event.finish();
'step 2'
if(result.bool&&trigger.player!=player){
trigger.player.damage();
trigger.player.addTempSkill('minizhendu2');
trigger.player.addMark('minizhendu2',1,false);
}
},
ai:{expose:0.3},
},
minizhendu2:{
mark:true,
marktext:'毒',
charlotte:true,
onremove:true,
intro:{content:'计算与其他角色的距离+#'},
mod:{
globalFrom:function(from,to,distance){
return distance+from.countMark('minizhendu2');
},
},
},
miniqiluan:{
group:'miniqiluan_draw',
audio:'qiluan2',
trigger:{global:'dying'},
prompt:'是否发动【戚乱】摸一张牌？',
preHidden:true,
frequent:true,
content:function(){
player.draw();
},
subfrequent:['use'],
subSkill:{
draw:{
audio:'qiluan2',
trigger:{source:'dieAfter'},
prompt:'是否发动【戚乱】摸两张牌？',
forced:true,
locked:false,
preHidden:true,
content:function(){
player.draw(2);
},
},
},
},
//孙悟空
'mini72bian':{
onChooseToUse:function(event){
if(event.type=='phase'&&!game.online&&!event['mini72bian_type']){
var evtx=event.getParent('phaseUse');
var list=['basic','trick','equip'],player=event.player;
player.getHistory('lose',function(evt){
var evt2=evt.getParent();
if(evt2.name=='useSkill'&&evt2.skill=='mini72bian') list.remove(get.type2(evt.cards2[0]));
});
event.set('mini72bian_type',list);
}
},
nobracket:true,
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he',function(card){
return event['mini72bian_type'].includes(get.type2(card));
});
},
filterCard:function(card,player){
return _status.event['mini72bian_type'].includes(get.type2(card));
},
check:function(card){
var player=_status.event.player;
if(player.hasSkill('mini72bian_'+get.type2(card))) return -1;
return 5-get.value(card);
},
position:'he',
prepare:function(cards,player){
player.$throw(cards,1000);
game.log(player,'将',cards,'置入了弃牌堆');
},
discard:false,
loseTo:'discardPile',
visible:true,
content:function(){
var list=['basic','trick','equip'];
var type=list[(list.indexOf(get.type2(cards[0]))+1)%3];
var card=get.cardPile2(function(card){
return get.type2(card)==type;
});
if(card){
player.gain(card,'draw');
game.log(player,'获得了一张','#g'+get.translation(type)+'牌');
}
else{
player.log('无牌可得了吗？');
game.log('但是牌堆中已经没有','#g'+get.translation(type)+'牌','了！');
player.addTempSkill('mini72bian_'+get.type2(cards[0]),'washCard');
}
},
ai:{
order:1,
result:{player:1},
},
subSkill:{basic:{charlotte:true},trick:{charlotte:true},equip:{charlotte:true}},
},
miniruyi:{
locked:true,
audio:'ext:活动武将/audio/skill:true',
derivation:'miniruyi_jingubang',
group:['miniruyi_jingubang','miniruyi_jingubang2'],
ai:{
effect:{
target:function(card,player,target){
if(player==target&&get.type(card)=='equip'&&get.subtype(card)=='equip1'){
if(!target.hasEmptySlot(1)) return;
return 0;
}
},
},
},
},
miniruyi_jingubang:{
init:function(player){
if(!player.storage.miniruyi_jingubang) player.storage.miniruyi_jingubang=1;
},
onremove:true,
mod:{
attackRange:function(player,num){
if(!player.getEquip('miniruyi_jingubang')&&!player.hasEnabledSlot(1)) return;
if(_status.miniruyiCheck) return num+_status.miniruyiCheck-1;
return num+player.storage.miniruyi_jingubang-1;
},
},
equipSkill:true,
audioname2:{Mbaby_sunwukong:'miniruyi'},
trigger:{player:'phaseBegin'},
filter:function(event,player){
return player.hasEmptySlot(1)||player.getEquip('miniruyi_jingubang');
},
direct:true,
content:function(){
'step 0'
var cards=player.getEquips('miniruyi_jingubang');
player.chooseControl('1','2','3','4','cancel2').set('prompt','是否调整'+(cards.length?get.translation(cards):'如意金箍棒')+'的攻击范围？').set('choiceList',[
'将'+(card?get.translation(card):'如意金箍棒')+'的攻击范围调整为1 → 你使用【杀】不计入次数限制',
'将'+(card?get.translation(card):'如意金箍棒')+'的攻击范围调整为2 → 你于回合内使用的第一张【杀】造成的伤害+1',
'将'+(card?get.translation(card):'如意金箍棒')+'的攻击范围调整为3 → 你使用【杀】无法被响应',
'将'+(card?get.translation(card):'如意金箍棒')+'的攻击范围调整为4 → 你使用【杀】可以额外指定一个目标'
]).set('ai',function(){
var player=_status.event.player;
if(!player.hasSha()) return '4';
for(var i=0;i<=3;i++){
_status.miniruyiCheck=[2,1,3,4][i];
if(game.hasPlayer(function(current){
return player.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},player,player)>0;
})){
delete _status.miniruyiCheck;
return i+1;
}
}
if(_status.miniruyiCheck) delete _status.miniruyiCheck;
return '4';
});
'step 1'
if(result.control!='cancel2'){
var num=parseInt(result.control),cards=player.getEquips('miniruyi_jingubang');
player.logSkill('miniruyi_jingubang');
player.storage.miniruyi_jingubang=num;
player.popup(num);
game.log(player,'将','#g'+(cards.length?get.translation(cards):'如意金箍棒'),'的攻击范围调整为','#y'+num);
}
},
},
miniruyi_jingubang2:{
mod:{
selectTarget:function(card,player,range){
if(!player.getEquip('miniruyi_jingubang')&&!player.hasEmptySlot(1)) return;
var num=player.storage.miniruyi_jingubang;
if(card.name=='sha'&&range[1]!=-1&&num==4) range[1]++;
},
},
equipSkill:true,
audioname2:{Mbaby_sunwukong:'miniruyi'},
trigger:{player:'useCard'},
filter:function(event,player){
var num=player.storage.miniruyi_jingubang;
if(event.card.name!='sha'||!player.hasEnabledSlot(1)) return false;
if(!player.getEquip('miniruyi_jingubang')&&!player.hasEnabledSlot(1)) return false;
if(num==2) return player.getHistory('useCard',function(evt){
return evt.card.name=='sha';
}).indexOf(event)==0&&_status.currentPhase&&player==_status.currentPhase;
return num!=4;
},
forced:true,
locked:false,
content:function(){
var num=player.storage.miniruyi_jingubang;
switch(num){
case 1:
trigger.addCount=false;
if(player.stat[player.stat.length-1].card.sha>0) player.stat[player.stat.length-1].card.sha--;
game.log(trigger.card,'不计入次数');
break;
case 2:
trigger.baseDamage++;
game.log(trigger.card,'造成的伤害+1');
break;
case 3:
trigger.directHit.addArray(game.players);
game.log(trigger.card,'不可被响应');
break;
}
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(!player.getEquip('miniruyi_jingubang')&&!player.hasEnabledSlot(1)) return false;
return arg.card.name=='sha'&&((_status.miniruyiCheck&&_status.miniruyiCheck==3)||player.storage.miniruyi_jingubang==3);
},
},
},
miniqitian:{
unique:true,
audio:'ext:活动武将/audio/skill:true',
derivation:['minihuoyan','minijindouyun'],
trigger:{player:['changeHp','enterGame'],global:'phaseBefore'},
filter:function(event,player){
if(player.hp!=1) return false;
return event.name!='phase'||game.phaseNumber==0;
},
juexingji:true,
forced:true,
skillAnimation:true,
animationColor:'fire',
content:function(){
'step 0'
player.awakenSkill('miniqitian');
player.loseMaxHp();
'step 1'
player.addSkillLog('minihuoyan');
player.addSkillLog('minijindouyun');
},
},
minihuoyan:{
locked:true,
ai:{
viewHandcard:true,
skillTagFilter:function(player,arg,target){
return target!=player&&!_status.auto;
},
},
},
minijindouyun:{
nobracket:true,
locked:true,
mod:{
globalFrom:function(from,to,distance){
return distance-1;
},
globalTo:function(from,to,distance){
return distance+1;
},
},
},
//大懒猫
minizuzhou:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseBegin'},
check:function(event,player){
if(player.hp+player.countCards('hs',{name:'tao'})<=1) return false;
if(event.player==player) return player.countCards('h',{name:['sha','shan']})>=3&&player.countCards('h',{name:'sha'})<3&&player.countCards('h',{name:'shan'})<3;
return get.attitude(player,event.player)<0&&event.player.countCards('h',{name:'sha'})>2;
},
logTarget:'player',
content:function(){
'step 0'
player.loseHp();
'step 1'
player.chooseControl().set('choiceList',[
'令'+get.translation(trigger.player)+'本回合手牌中所有的【杀】视为【闪】',
'令'+get.translation(trigger.player)+'本回合手牌中所有的【闪】视为【杀】',
]).set('ai',function(){
var player=_status.event.player;
return player==_status.event.target?1:0;
}).set('target',trigger.player);
'step 2'
trigger.player.addTempSkill('minizuzhou2');
trigger.player.storage.minizuzhou2=result.index;
},
ai:{expose:0.2},
},
minizuzhou2:{
charlotte:true,
onremove:true,
mod:{
cardname:function(card,player,name){
var list=['sha','shan'];
if(player.storage.minizuzhou2==1) list.reverse();
if(card.name==list[0]) return list[1];
},
},
},
minimoyu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
check:function(event,player){
return player.hp+player.countCards('hs',{name:'tao'})<=2;
},
content:function(){
player.addTempSkill('minimoyu2');
player.addMark('minimoyu2',2,false);
player.addTempSkill('minimoyu3',{player:'minimoyu3After'});
player.addMark('minimoyu3',2,false);
},
},
minimoyu2:{
group:'zishou2',
charlotte:true,
onremove:true,
mod:{
maxHandcard:function(player,num){
return num+player.countMark('minimoyu2');
},
},
trigger:{player:'phaseEnd'},
filter:function(event,player){
return player.isDamaged();
},
forced:true,
content:function(){
player.recover();
},
},
minimoyu3:{
charlotte:true,
onremove:true,
trigger:{player:'phaseBegin'},
firstDo:true,
direct:true,
content:function(){
player.addTempSkill('minimoyu4');
player.addMark('minimoyu4',2,false);
},
},
minimoyu4:{
charlotte:true,
onremove:true,
audio:'minimoyu',
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed;
},
forced:true,
content:function(){
trigger.num+=player.countMark('minimoyu4');
},
},
minisanlian:{
audio:'ext:活动武将/audio/skill:true',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h',function(card){
return lib.skill.minisanlian.filterCard(card,player);
});
},
filterCard:function(card,player){
if(ui.selected.cards.length){
var cardx=ui.selected.cards[0];
return get.type2(card)==get.type2(cardx);
}
return player.countCards('h',function(cardx){
return get.type2(card)==get.type2(cardx);
})>=3;
},
selectCard:3,
check:function(card){
return 6-get.value(card);
},
complexCard:true,
content:function(){
'step 0'
player.draw(player.getDamagedHp());
'step 1'
for(var i of game.filterPlayer().sortBySeat(player)){
player.line(i);
i.damage();
}
var card=cards[0];
for(var cardx of cards){
if(get.name(cardx,player)!=get.name(card,player)){
event.finish();
break;
}
}
'step 2'
for(var i of game.filterPlayer().sortBySeat(player)){
if(i==player) continue;
player.line(i);
player.discardPlayerCard(i,'he',true);
}
},
ai:{
order:10,
result:{
player:function(player){
if(player.hp+player.countCards('hs',{name:['tao','jiu']})<2) return -1;
return game.countPlayer(function(current){
return get.sgn(get.damageEffect(current,player,player));
});
},
},
},
},
//王荣
miniminsi:{
audio:'minsi',
inherit:'minsi',
content:function(){
player.draw(cards.length*2).gaintag=['miniminsi2'];
player.addTempSkill('miniminsi2');
},
},
miniminsi2:{
onremove:function(player){
player.removeGaintag('miniminsi2');
},
mod:{
targetInRange:function(card,player,target){
if(!card.cards) return;
for(var i of card.cards){
if(!i.hasGaintag('miniminsi2')) return;
}
return true;
},
ignoredHandcard:function(card,player){
if(card.hasGaintag('miniminsi2')) return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&card.hasGaintag('miniminsi2')) return false;
},
aiOrder:function(player,card,num){
if(get.itemtype(card)=='card'&&card.hasGaintag('miniminsi2')) return num-0.1;
},
},
},
minijijing:{
audio:'jijing',
trigger:{player:'damageEnd'},
frequent:true,
content:function(){
'step 0'
player.judge();
'step 1'
player.chooseToDiscard('是否弃置任意张点数之和不小于'+get.cnNumber(num)+'的牌并回复1点体力？','he').set('selectCard',function(){
var num=0;
for(var i=0;i<ui.selected.cards.length;i++){
num+=get.number(ui.selected.cards[i]);
}
if(num>=_status.event.num) return ui.selected.cards.length;
return ui.selected.cards.length+2;
}).set('ai',function(card){
return 6-get.value(card);
}).set('num',result.number).set('complexCard',true);
'step 2'
if(result.bool) player.recover();
},
},
minimanwang:{
init:function(){
lib.skill.sppanqin.subSkill.eff.filter=function(event,player){
return event.card.name=='nanman'&&event.getParent(2).name=='sppanqin'&&player.countMark('spmanwang')<4&&(player.hasSkill('spmanwang')||player.hasSkill('minimanwang'))&&event.cards.length<=event.targets.length;
};
},
derivation:['sppanqin','minihuoshou'],
audio:'spmanwang',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he')>0;
},
filterCard:true,
position:'he',
selectCard:[1,Infinity],
check:function(card){
var player=_status.event.player;
var max=Math.min(player.isDamaged()?3:2,4-player.countMark('spmanwang'));
if(!max&&!player.hasSkill('sppanqin')) return 0;
if(max==0&&ui.selected.length>0) return 0;
return 7-ui.selected.cards.length-get.value(card);
},
content:function(){
var num=Math.min(cards.length,4-player.countMark('spmanwang'));
if(num>=1) player.addSkill('sppanqin');
if(num>=2) player.draw();
if(num>=3) player.recover();
if(num>=4){
player.draw(2);
player.removeSkill('sppanqin');
}
player.addTempSkill('minihuoshou',{player:'phaseBegin'});
},
ai:{
order:2,
result:{
player:function(player,target){
if(player.getUseValue({name:'nanman'})<=0) return 0;
if(player.getStat('skill').spmanwang&&player.hasSkill('sppanqin')) return 0;
return 1;
},
},
},
},
//银河射手
miniliushi:{
audio:'cxliushi',
inherit:'cxliushi',
group:'miniliushi_damage',
subSkill:{
damage:{
audio:'cxliushi',
trigger:{source:'damageSource'},
filter:function(event,player){
return event.card&&event.card.name=='sha';
},
logTarget:'player',
forced:true,
locked:false,
content:function(){
trigger.player.addMark('cxliushi2',1);
trigger.player.addSkill('cxliushi2');
},
},
},
},
//
minilulve:{
audio:'lulve',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
var hs=player.countCards('h');
return hs>0&&game.hasPlayer(function(target){
var ts=target.countCards('h');
return target!=player&&ts>0&&hs>=ts;
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minilulve'),function(card,player,target){
var hs=player.countCards('h'),ts=target.countCards('h');
return target!=player&&ts>0&&hs>=ts;
}).set('ai',function(target){
var player=_status.event.player,att=get.attitude(player,target);
if(target.isTurnedOver()) return att/10;
if(!player.hasShan()&&target.canUse({name:'sha',isCard:true},player,false)&&get.effect(player,{name:'sha',isCard:true},target,player)<0&&player.hp<4) return 0;
return -att*Math.sqrt(target.countCards('h'));
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minilulve',target);
var str=get.translation(player);
target.chooseControl().set('choiceList',[
'将所有手牌交给'+str+'，然后其将武将牌翻面',
'将武将牌翻面，然后视为对'+str+'使用【杀】',
]).set('ai',function(){
var player=_status.event.player,target=_status.event.getParent().player;
if(player.isTurnedOver()) return 1;
if(!target.hasShan()&&player.canUse({name:'sha',isCard:true},target,false)&&get.effect(target,{name:'sha',isCard:true},player,player)<0) return 0;
return Math.random()<0.5?0:1;
});
}
else event.finish();
'step 2'
if(result.index==0){
target.give(target.getCards('h'),player);
player.turnOver();
event.finish();
}
else target.turnOver();
'step 3'
if(target.canUse({name:'sha',isCard:true},player,false)) target.useCard({name:'sha',isCard:true},player,false);
},
},
//曹节
minishouxi:{
audio:'shouxi',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
var list=lib.inpile.filter(function(i){
if(player.getStorage('minishouxi').includes(i)) return false;
var type=get.type2(i);
return type=='basic'||type=='trick';
});
if(!list.length) return false;
return event.card.name=='sha'&&event.player.isIn();
},
direct:true,
content:function(){
'step 0'
var list=lib.inpile.filter(function(i){
if(player.getStorage('minishouxi').includes(i)) return false;
var type=get.type2(i);
return type=='basic'||type=='trick';
});
for(var i=0;i<list.length;i++){
list[i]=[get.type(list[i]),'',list[i]];
}
player.chooseButton([get.prompt('minishouxi',trigger.player),[list,'vcard']]).set('ai',function(button){
return 1+Math.random();
});
'step 1'
if(result.bool){
player.logSkill('minishouxi');
var name=result.links[0][2];
event.vcard=result.links;
event.name=name;
player.markAuto('minishouxi',[name]);
}
else event.finish();
'step 2'
var name=event.name;
trigger.player.chooseToDiscard(function(card){
return card.name==_status.event.name;
}).set('ai',function(card){
if(_status.event.att<0){
return 10-get.value(card);
}
return 0;
}).set('att',get.attitude(trigger.player,player)).set('name',name).set('dialog',['守玺：请弃置一张【'+get.translation(name)+'】，否则此【杀】对'+get.translation(player)+'无效且'+get.translation(player)+'从牌堆中获得一张【'+get.translation(name)+'】',[event.vcard,'vcard']]);
'step 3'
if(result.bool) trigger.player.gainPlayerCard(player);
else{
trigger.excluded.push(player);
var card=get.cardPile2(function(card){
return card.name==event.name;
});
if(card) player.gain(card,'gain2');
}
},
ai:{
effect:{
target:function(card,player,target,current){
var list=lib.inpile.filter(function(i){
if(target.getStorage('minishouxi').includes(i)) return false;
var type=get.type2(i);
return type=='basic'||type=='trick';
});
if(card.name=='sha'&&get.attitude(player,target)<0&&!player.countCards('h',function(card){
return list.includes(card.name);
})) return 0.2;
},
},
},
},
minihuimin:{
//写在前面当filter位置[doge]
group:'minihuimin_log',
audio:'huimin',
subSkill:{
log:{
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current.countCards('h')<=current.hp;
});
},
direct:true,
content:function(){
'step 0'
var num=1,sum=0;
for(var target of game.filterPlayer()){
if(target.countCards('h')>target.hp) continue;
sum++;
var att=get.attitude(player,target);
if(att>0) num++;
if(att<0) num--;
}
var info='摸'+get.cnNumber(sum)+'张牌';
var func=function(){
for(var target of game.filterPlayer()){
var bool=(target.countCards('h')>target.hp);
target.prompt('<span class=\"texiaotext\" style=\"color:'+(bool?'#FF0000':'#00FF00')+'\">'+(bool?'×':'√')+'</span>');
}
};
if(event.player==game.me) func();
else if(event.isOnline()) player.send(func);
if(sum>1) info+='，然后展示'+get.cnNumber(sum-1)+'张手牌，然后你选择一名手牌数小于等于体力值的角色，从该角色开始，所有手牌数小于等于体力值的角色依次选择并获得其中一张';
player.chooseBool(get.prompt('minihuimin'),info).set('choice',num>=0);
'step 1'
if(result.bool){
player.logSkill('minihuimin');
var next=game.createEvent('minihuimin');
next.player=player;
next.setContent(lib.skill.minihuimin.content);
}
},
},
},
content:function(){
'step 0'
event.list=game.filterPlayer(function(current){
return current.countCards('h')<=current.hp;
}).sortBySeat();
player.draw(event.list.length);
if(event.list.length==1) event.finish();
'step 1'
player.chooseTarget(true,function(card,player,target){
var list=_status.event.list;
return list.includes(target);
},'惠民：请选择一名角色作为分牌起点').set('ai',function(target){
var player=_status.event.player;
var list=_status.event.list;
var att=get.attitude(player,target);
var getNum=function(target){
var num=0,targets=list.slice(0);
for(var i=0;i<targets.length;i++){
if(att>0) num+=(targets.length-i);
if(att<0) num-=(targets.length-i);
}
return num;
};
return getNum(target);
}).set('list',event.list);
'step 2'
if(result.bool){
player.line(result.targets,'green');
var index=event.list.indexOf(result.targets[0]);
if(index<0) index=0;
var tmp=event.list.splice(index);
event.list=tmp.concat(event.list);
var yuanzhong=event.list[event.list.length-1];//掉队的冤种[doge]
game.log(player,'选择了',result.targets,'作为分牌起点'/*+'，',yuanzhong,'被',player,'落下'*/);
yuanzhong.chat(['我成冤种了','555没我份','怎能如此对我','太狠心啦2333'].randomGet());
event.list.remove(yuanzhong);
if(event.list.length>0) player.chooseCard('h','选择要分配的手牌',event.list.length,true);
else event.finish();
}
'step 3'
var cards=result.cards;
player.lose(cards,ui.ordering);
event.togain=cards;
if(result.bool&&cards.length){
var dialog=ui.create.dialog('惠民',cards,true);
_status.dieClose.push(dialog);
dialog.videoId=lib.status.videoId++;
event.dialogID=dialog.videoId;
game.addVideo('cardDialog',null,['惠民',get.cardsInfo(cards),dialog.videoId]);
game.broadcast(function(cards,id){
var dialog=ui.create.dialog('惠民',cards,true);
_status.dieClose.push(dialog);
dialog.videoId=id;
},cards,dialog.videoId);
}
else event.finish();
'step 4'
game.delay();
'step 5'
if(event.list.length&&event.togain.length){
event.current=event.list.shift();
var next=event.current.chooseButton(true,function(button){
return get.value(button.link,_status.event.player);
});
next.set('dialog',event.dialogID);
next.set('closeDialog',false);
next.set('dialogdisplay',true);
next.set('cardFilter',event.togain.slice(0));
next.set('filterButton',function(button){
return _status.event.cardFilter.includes(button.link);
})
}
else{
for(var i=0;i<ui.dialogs.length;i++){
if(ui.dialogs[i].videoId==event.dialogID){
var dialog=ui.dialogs[i];
dialog.close();
_status.dieClose.remove(dialog);
break;
}
}
if(event.togain.length){
game.cardsDiscard(event.togain);
}
game.broadcast(function(id){
var dialog=get.idDialog(id);
if(dialog){
dialog.close();
_status.dieClose.remove(dialog);
}
},event.dialogID);
game.addVideo('cardDialog',null,event.dialogID);
event.finish();
}
'step 6'
var card=result.links[0],target=event.current;
if(card){
target.gain(card,'gain2');
event.togain.remove(card);
}
var capt=get.translation(target)+'选择了'+get.translation(card);
game.broadcastAll(function(card,id,name,capt){
var dialog=get.idDialog(id);
if(dialog){
dialog.content.firstChild.innerHTML=capt;
for(var i=0;i<dialog.buttons.length;i++){
if(dialog.buttons[i].link==card){
dialog.buttons[i].querySelector('.info').innerHTML=name;
break;
}
}
game.addVideo('dialogCapt',null,[dialog.videoId,dialog.content.firstChild.innerHTML]);
}
},card,event.dialogID,function(target){
if(target._tempTranslate) return target._tempTranslate;
var name=target.name;
if(lib.translate[name+'_ab']) return lib.translate[name+'_ab'];
return get.translation(name);
}(target),capt);
if(event.togain.length) event.goto(5);
else{
for(var i=0;i<ui.dialogs.length;i++){
if(ui.dialogs[i].videoId==event.dialogID){
var dialog=ui.dialogs[i];
dialog.close();
_status.dieClose.remove(dialog);
break;
}
}
if(event.togain.length){
game.cardsDiscard(event.togain);
}
game.broadcast(function(id){
var dialog=get.idDialog(id);
if(dialog){
dialog.close();
_status.dieClose.remove(dialog);
}
},event.dialogID);
game.addVideo('cardDialog',null,event.dialogID);
event.finish();
}
},
},
//唐姬
minikangge:{
group:['minikangge_draw','minikangge_dying'],
audio:'kangge',
trigger:{player:'phaseBegin'},
filter:function(event,player){
return game.countPlayer()>1;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget('请选择【抗歌】的目标','其于回合外摸牌后，你摸等量的牌；其进入濒死状态时，你可令其回复体力至1点；其死亡后，你弃置所有牌并失去1点体力',lib.filter.notMe,true).set('ai',function(target){
return get.attitude(_status.event.player,target)>0;
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minikangge',target);
player.addSkill('minikangge_clear');
player.storage.minikangge=target;
player.markSkill('minikangge');
game.delayx();
}
},
intro:{content:'已指定$为目标'},
subSkill:{
draw:{
audio:'kangge',
trigger:{
global:['gainAfter','loseAsyncAfter'],
},
forced:true,
filter:function(event,player){
if(player.countMark('minikangge_draw')>=3) return false;
var target=player.storage.minikangge;
return target&&target!=_status.currentPhase&&event.getg(target).length>0;
},
logTarget:'player',
content:function(){
var num=Math.min(3-player.countMark('minikangge_draw'),trigger.getg(player.storage.minikangge).length);
player.addMark('minikangge_draw',num,false);
player.draw(num);
},
},
clear:{
trigger:{global:'phaseBeginStart'},
forced:true,
firstDo:true,
popup:false,
charlotte:true,
filter:function(event,player){
return player.countMark('minikangge_draw')>0;
},
content:function(){
player.removeMark('minikangge_draw',player.countMark('minikangge_draw'),false);
},
},
dying:{
audio:'kangge',
trigger:{global:'dying'},
logTarget:'player',
filter:function(event,player){
return event.player==player.storage.minikangge&&event.player.hp<1&&!player.hasSkill('minikangge_temp');
},
check:function(event,player){
return get.attitude(player,event.player)>0;
},
prompt2:'令其将体力值回复至1点',
round:1,
content:function(){
trigger.player.recover(1-trigger.player.hp);
},
},
},
},
minijielie:{
audio:'jielie',
trigger:{player:'damageBegin4'},
direct:true,
content:function(){
'step 0'
var target=player.storage.minikangge,str;
if(target){
event.target=target;
str='，且令'+get.translation(target)+'从弃牌堆中获得等量的花色牌';
}
else str='';
player.chooseControl(lib.suit.slice(0),'cancel2').set('prompt',get.prompt('minijielie')).set('prompt2','防止伤害并改为失去等量体力'+str).set('ai',function(){
var player=_status.event.player;
var target=player.storage.minikangge;
if(target&&get.attitude(player,target)<=0) return 'cancel2';
return lib.suit.randomGet();
});
'step 1'
if(result.control!='cancel2'){
event.suit=result.control;
player.logSkill('minijielie');
trigger.cancel();
player.loseHp();
if(!target) event.finish();
}
else event.finish();
'step 2'
player.line(target);
var cards=[];
while(cards.length<trigger.num){
var card=get.discardPile(function(card){
return get.suit(card,false)==event.suit&&!cards.includes(card);
});
if(card) cards.push(card);
else break;
}
if(cards.length) target.gain(cards,'gain2');
},
},
//李白
minishixian:{
derivation:['minishixian_qiangjinjiu','minishixian_jingyesi','minishixian_xiakexing','minishixian_xinglunan'],
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseBegin'},
forced:true,
frequent:true,
content:function(){
'step 0'
if(player.additionalSkills.minishixian) player.removeAdditionalSkill('minishixian');
var cards=get.cards(4);
for(var i=cards.length-1;i--;i>=0){
ui.cardPile.insertBefore(cards[i],ui.cardPile.firstChild);
}
game.updateRoundNumber();
event.cards=cards;
player.showCards(cards,get.translation(player)+'发动了【诗仙】');
'step 1'
var map={
'heart':'minishixian_qiangjinjiu',
'diamond':'minishixian_jingyesi',
'spade':'minishixian_xiakexing',
'club':'minishixian_xinglunan'
},list=[];
for(var i in map){
if(cards.some(card=>get.suit(card,player)==i)) list.push(map[i]);
}
if(list.length) player.addAdditionalSkill('minishixian',list);
event.cards=cards.filter(function(card){
return cards.some(function(cardx){
if(cardx==card) return false;
return get.suit(card,player)==get.suit(cardx,player);
});
});
if(event.cards.length) player.chooseBool('诗仙：是否获得'+get.translation(event.cards)+'？').set('frequentSkill','minishixian');
else event.finish();
'step 2'
if(result.bool) player.gain(cards,'gain2');
},
subSkill:{
//将进酒
qiangjinjiu:{
nobracket:true,
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseBegin'},
filter:function(event,player){
if(event.player==player) return false;
return player.countCards('h')&&event.player.countCards('he');
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard(get.prompt2('minishixian_qiangjinjiu',trigger.player)).set('ai',function(card){
var player=_status.event.player;
var target=_status.event.target;
if(get.attitude(player,target)>0) return 0;
return 6-get.value(card);
}).set('target',trigger.player).logSkill=['minishixian_qiangjinjiu',trigger.player];
'step 1'
if(result.bool){
if(!trigger.player.countCards('e')) event._result={bool:true,index:1};
else player.chooseControl().set('choiceList',[
'弃置'+get.translation(trigger.player)+'装备区里的所有装备牌',
'获得'+get.translation(trigger.player)+'手牌中的所有【酒】（若其手牌中没有【酒】则改为获得其一张牌）',
]).set('ai',()=>0);
}
else event.finish();
'step 2'
if(result.index==0){
trigger.player.discard(trigger.player.getCards('e')).discarder=player;
var card=get.cardPile2(card=>card.name=='jiu');
if(card) trigger.player.gain(card,'gain2');
}
else{
if(trigger.player.countCards('h',{name:'jiu'})) player.gain(trigger.player.getCards('h',{name:'jiu'}),trigger.player,'give');
else player.gainPlayerCard(trigger.player,'he',true);
}
},
},
//静夜思
jingyesi:{
nobracket:true,
audio:'ext:活动武将/audio/skill:true',
trigger:{player:['phaseUseEnd','phaseDiscardEnd']},
direct:true,
content:function(){
'step 0'
var card=get[trigger.name=='phaseDiscard'?'bottomCards':'cards']()[0];
if(trigger.name=='phaseDiscard'){
player.logSkill('minishixian_jingyesi');
player.gain(card,'gain2');
event.finish();
}
else{
event.card=card;
player.chooseControl('ok').set('dialog',['静夜思',[card]]);
player.chooseUseTarget(card,false).logSkill='minishixian_jingyesi';
}
'step 1'
if(!result.bool) ui.cardPile.insertBefore(card,ui.cardPile.firstChild);
game.updateRoundNumber();
},
},
//侠客行
xiakexing:{
nobracket:true,
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'useCard',source:'damageSource'},
filter:function(event,player){
if(event.name=='useCard') return get.translation(event.card.name).indexOf('剑')!=-1&&player.hasUseTarget(get.autoViewAs({name:'wanjian'},[]));
return event.card&&event.card.name=='sha'&&player.getEquips(1).length&&event.player.isIn()&&player.canCompare(event.player);
},
direct:true,
content:function(){
'step 0'
if(trigger.name=='useCard'){
player.logSkill('minishixian_xiakexing');
player.chooseUseTarget(true,{name:'wanjian'},[]);
event.finish();
}
else player.chooseBool('是否和'+get.translation(trigger.player)+'拼点？','若你赢，其减1点体力上限；若你没赢，弃置你装备区里的武器牌').set('choice',player.hasCard(function(card){
return get.value(card)<=5||get.number(card)>10;
})&&(get.attitude(player,trigger.player)<=0||trigger.player.countCards('h')>=4));
'step 1'
if(result.bool){
player.logSkill('minishixian_xiakexing',trigger.player);
player.chooseToCompare(trigger.player);
}
else event.finish();
'step 2'
if(result.bool) trigger.player.loseMaxHp();
else{
var cards=player.getEquips(1);
if(cards.length) player.discard(cards);
}
},
},
//行路难
xinglunan:{
nobracket:true,
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'useCardAfter'},
filter:function(event,player){
if(player==_status.currentPhase||event.card.name!='sha'||event.player==player) return false;
return event.targets&&event.targets.includes(player);
},
forced:true,
locked:false,
content:function(){
player.addTempSkill('minishixian_xingluBuff',{player:'phaseBegin'});
player.addMark('minishixian_xingluBuff',1,false);
},
},
xingluBuff:{
nobracket:true,
charlotte:true,
onremove:true,
intro:{content:'其他角色计算与你的距离+#'},
mod:{
globalTo:function(from,to,distance){
return distance+to.countMark('minishixian_xingluBuff');
},
},
},
},
},
//郭图
minijigong:{
audio:'jigong',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
player.chooseControl('一张','两张','三张','cancel2').set('prompt',get.prompt2('minijigong')).set('ai',()=>'三张');
'step 1'
if(result.control!='cancel2'){
player.logSkill('minijigong');
player.addTempSkill('minijigong2');
player.draw(1+result.index);
}
},
},
minijigong2:{
charlotte:true,
mod:{
maxHandcardBase:function(player){
if(game.online) return (player.getStat('damage')||0)+1;
var num=0;
player.getHistory('sourceDamage',function(evt){
num+=evt.num;
});
return num+1;
},
},
audio:'jigong',
trigger:{player:'phaseDiscardBegin'},
filter:function(event,player){
if(player.isHealthy()) return false;
var num=0;
player.getHistory('sourceDamage',function(evt){
num+=evt.num;
});
if(!num) return false;
var num2=0;
player.getHistory('gain',function(evt){
var evtx=evt.getParent(2);
if(evtx.name=='minijigong'&&evtx.player==player) num2+=evt.cards.length;
});
return num>=num2;
},
forced:true,
content:function(){
player.recover();
},
},
minishifei:{
audio:'shifei',
enable:['chooseToUse','chooseToRespond'],
filter:function(event,player){
if(!_status.currentPhase||event.minishifei) return false;
if(!event.filterCard({name:'shan',isCard:true},player,event)) return false;
if(event.name!='chooseToUse'&&!lib.filter.cardRespondable({name:'shan',isCard:true},player,event)) return false;
return true;
},
checkx:function(event,player){
if(get.attitude(player,_status.currentPhase)>0) return true;
var num=(event.shanRequired||1);
if(player.countCards('hs',{name:'shan'})-num>1) return false;
return game.hasPlayer(function(current){
if(current==_status.currentPhase) return false;
return _status.currentPhase.countCards('h')+1<=current.countCards('h');
});
},
delay:false,
content:function(){
'step 0'
player.line(_status.currentPhase,'green');
_status.currentPhase.draw();
'step 1'
if(_status.currentPhase.isMaxHandcard(true)){
var evt=event.getParent(2);
evt.set('minishifei',true);
evt.goto(0);
event.finish();
return;
}
if(game.hasPlayer(current=>current.countCards('he'))){
player.chooseTarget('选择一名角色弃置其一张牌',true,function(card,player,target){
return target.countCards('he');
}).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe_copy2'},player,player);
});
}
else event._result={bool:false};
'step 2'
var evt=event.getParent(2);
if(result.bool){
var target=result.targets[0];
player.line(target,'green');
player.discardPlayerCard(target,'he',true);
evt.result={bool:true,card:{name:'shan',isCard:true},cards:[]};
evt.redo();
}
else{
evt.set('minishifei',true);
evt.goto(0);
}
},
ai:{
order:8,
respondShan:true,
result:{
player:function(player){
return lib.skill.minishifei.checkx(_status.event,player)?1:0;
},
},
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondShan')&&current<0){
if(!player.isMaxHandcard()) return 0;
}
},
},
},
},
//南华老仙
minijinghe:{
audio:'jinghe',
inherit:'jinghe',
filter:function(event,player){
return !player.hasSkill('minijinghe_clear');
},
content:function(){
'step 0'
player.when('phaseBegin').then(()=>game.countPlayer(current=>current.removeAdditionalSkill('minijinghe_'+player.playerid)));
player.showCards(cards,get.translation(player)+'发动了【经合】');
event.skills=lib.skill.minijinghe.derivation.randomGets(4);
player.addTempSkill('minijinghe_clear',{player:'phaseBegin'});
event.targets.sortBySeat();
event.num=0;
'step 1'
event.target=targets[num];
event.num++;
event.target.chooseControl(event.skills,'cancel2').set('choiceList',event.skills.map(function(i){
return '<div class="skill">【'+get.translation(lib.translate[i+'_ab']||get.translation(i).slice(0,2))+'】</div><div>'+get.skillInfoTranslation(i,player)+'</div>';
})).set('displayIndex',false).set('prompt','选择获得一个技能');
'step 2'
var skill=result.control;
if(skill!='cancel2'){
event.skills.remove(skill);
target.addAdditionalSkill('minijinghe_'+player.playerid,skill);
target.popup(skill);
game.log(target,'获得了技能','#g【'+get.translation(skill)+'】');
}
if(event.num<event.targets.length) event.goto(1);
if(target!=game.me&&!target.isOnline2()) game.delayx();
},
ai:{
threaten:3,
order:10,
result:{target:1},
},
derivation:['minileiji','minibiyue','new_retuxi','minimingce','xinzhiyan','nhyinbing','nhhuoqi','nhguizhu','nhxianshou','nhlundao','nhguanyue','nhyanzheng'],
},
minigongxiu:{
audio:'gongxiu',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return player.getHistory('useSkill',evt=>evt.skill=='minijinghe').length;
},
direct:true,
content:function(){
'step 0'
event.list1=[];
event.list2=[];
event.addIndex=0;
var choices=[];
game.countPlayer(function(current){
if(current.additionalSkills['minijinghe_'+player.playerid]) event.list1.push(current);
else event.list2.push(current);
});
event.list1.sortBySeat();
if(event.list1.length) choices.push('令'+get.translation(event.list1)+(event.list1.length>1?'各':'')+'摸一张牌');
else event.addIndex++;
event.list2.sortBySeat();
if(event.list2.length) choices.push('令'+get.translation(event.list2)+(event.list2.length>1?'各':'')+'弃置一张手牌');
player.chooseControl('cancel2').set('choiceList',choices).set('prompt',get.prompt('minigongxiu')).set('',function(){
var evt=_status.event.getParent();
if(evt.list2.filter(function(current){
return get.attitude(player,current)<=0&&!current.hasSkillTag('noh');
}).length-evt.list1.length>1) return 1-evt.addIndex;
return 0;
});
'step 1'
if(result.control!='cancel2'){
if(result.index+event.addIndex==0){
player.logSkill('minigongxiu',event.list1);
game.asyncDraw(event.list1);
}
else{
player.logSkill('minigongxiu',event.list2);
for(var i of event.list2) i.chooseToDiscard('h',true);
event.finish();
}
}
else event.finish();
'step 2'
game.delayx();
},
},
//严夫人
minichanni:{
audio:'channi',
inherit:'channi',
content:function(){
'step 0'
player.addTempSkill('minichanni_effect',{player:'minichanniAfter'});
player.give(cards,target);
'step 1'
if(target.countCards('h')>0){
game.broadcastAll(function(num){
lib.skill.minichanni_backup.selectCard=[1,num];
},cards.length);
var next=target.chooseToUse();
next.set('openskilldialog','将至多'+get.cnNumber(cards.length)+'张手牌当做【决斗】使用');
next.set('norestore',true);
next.set('addCount',false);
next.set('_backupevent','minichanni_backup');
next.set('custom',{
add:{},
replace:{window:function(){}}
});
next.backup('minichanni_backup');
}
else event.finish();
'step 2'
if(result.bool){
var evts=target.getHistory('useCard',function(evt){
return evt.card.name=='juedou'&&evt.getParent(2)==event;
});
if(!evts.length) return;
var num=evts[0].cards.length;
if(target.hasHistory('sourceDamage',function(evt){
return evt.card&&evt.card.name=='juedou'&&evt.getParent(4)==event;
})) target.draw(num);
}
},
subSkill:{
backup:{
filterCard:function(card){
return get.itemtype(card)=='card';
},
viewAs:{name:'juedou'},
position:'h',
filterTarget:lib.filter.targetEnabled,
check:(card)=>get.name(card)=='sha'?7:5.5-get.value(card),
log:false,
precontent:function(){
delete event.result.skill;
},
},
effect:{
charlotte:true,
trigger:{global:'damageBegin2'},
filter:function(event,player){
if(!player.countCards('h')) return false;
var evt=event.getParent(5);
return evt.skill=='minichanni'&&evt.player==player&&evt.targets[0]==event.player;
},
prompt2:function(event,player){
return '弃置所有手牌，防止即将对'+get.translation(event.player)+'造成的伤害';
},
content:function(){
player.discard(player.getCards('h'));
trigger.cancel();
},
},
},
},
mininifu:{
audio:'nifu',
trigger:{global:'phaseEnd'},
filter:function(event,player){
return player.countCards('h')<3;
},
forced:true,
content:function(){
player.drawTo(3);
},
},
//公孙渊
minihuaiyi:{
audio:'huaiyi',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h');
},
usable:1,
content:function(){
'step 0'
player.showHandcards(get.translation(player)+'发动了【怀异】');
if(!player.countDiscardableCards(player,'h')) event.finish();
'step 1'
player.chooseToDiscard('h',[1,Infinity],function(card,player){
return !ui.selected.cards.some(cardx=>get.color(cardx,player)!=get.color(card,player));
},true).set('complexCard',true).set('ai',function(card){
var player=_status.event.player;
var num=game.countPlayer(current=>current.countGainableCards(player,'he')&&get.effect(current,{name:'shunshou_copy2'},player,player)>0);
if(ui.selected.cards.length>=num) return 0;
var suits={};
for(var i of player.getDiscardableCards(player,'h')){
if(!suits[get.suit(i,player)]) suits[get.suit(i,player)]=1;
else suits[get.suit(i,player)]++;
}
if(!Object.keys(suits).some(suit=>suits[suit]<num)){
return num/(get.value(card)||0.5);
}
if(suits[get.suit(card,player)]>=num) return (num/suits[get.suit(card,player)])/(get.value(card)||0.5);
return 0;
});
'step 2'
if(!result.bool){event.finish();return;}
var color=get.color(result.cards[0],player);
var cards=player.getCards('h',card=>get.color(card)==color&&player.canRecast(card));
if(cards.length) player.recast(cards);
event.num=result.cards.length;
'step 3'
player.chooseTarget('请选择至多'+get.cnNumber(event.num)+'名有牌的其他角色，获得这些角色的各一张牌。',[1,num],function(card,player,target){
return target!=player&&target.countGainableCards(player,'he')>0;
}).set('ai',function(target){
return -get.attitude(_status.event.player,target)+0.5;
});
'step 4'
if(result.bool){
var targets=result.targets.sortBySeat();
player.line(targets);
player.gainMultiple(targets,'he');
}
},
ai:{
order:9,
result:{
player:function(player,target){
return game.countPlayer(current=>current.countGainableCards(player,'he')&&get.effect(current,{name:'shunshou_copy2'},player,player)>0);
},
},
},
},
//群张辽
minimubing:{
audio:'mubing',
enable:'phaseUse',
usable:1,
content:function*(event,map){
var player=map.player;
var cards=get.cards(4,true);
var dialog=['募兵：请选择你要获得的牌和弃置的牌'];
dialog.push('<div class="text center">牌堆顶（已选点数和：0）</div>');
dialog.push(cards);
if(player.countCards('h')>0){
dialog.push('<div class="text center">手牌（已选点数和：0）</div>');
dialog.push(player.getCards('h'));
}
var result=yield player.chooseButton(dialog).set('filterButton',button=>{
return !get.owner(button.link)||lib.filter.cardDiscardable(button.link,_status.event.player);
}).set('ai',button=>{
var player=_status.event.player;
if(get.owner(button.link)){
var sum=_status.event.sum;
var num=0;
for(var i of ui.selected.buttons){
if(get.owner(i.link)) num+=i.number;
}
if(num>=sum) return 0;
if(button.link.number+num>=sum) return 15-get.value(button.link);
if(!ui.selected.buttons.some(but=>get.owner(but.link))){
var min=_status.event.min;
if(button.link.number<min&&!player.countCards('h',function(card){
return card!=button.link&&button.link.number+card.number>min;
})) return 0;
return button.link.number;
}
return Math.max(5-get.value(button.link),button.link.number);
}
return get.value(button.link,player);
}).set('sum',cards.reduce((num,card)=>num+=get.value(card,player)>0?get.number(card,false):0,0)).set('min',cards.find(card=>{
return !cards.some(cardx=>cardx!=card&&cardx.number<card.number);
}).number).set('filterOk',()=>{
return ui.selected.buttons.reduce((num,but)=>num+=but.link.number*(get.owner(but.link)?1:-1),0)>=0;
}).set('selectButton',()=>{
var dialog=get.idDialog(event.videoId);
if(dialog){
var num1=0,num2=0;
ui.selected.buttons.forEach(but=>{
if(!get.owner(but.link)) num1+=but.link.number;
else num2+=but.link.number;
});
dialog.content.childNodes[1].innerHTML='<div class="text center">牌堆顶（已选点数和：'+num1+'）</div>';
if(dialog.content.childNodes[3]) dialog.content.childNodes[3].innerHTML='<div class="text center">牌堆顶（已选点数和：'+num2+'）</div>';
}
return [1,Infinity];
});
if(result.bool){
var gain=result.links.filter(i=>cards.includes(i));
var discard=result.links.filter(i=>!cards.includes(i));
cards.removeArray(gain);
if(discard.length) player.discard(discard);
if(gain.length) player.gain(gain,'gain2').gaintag.add('minimubing');
}
if(cards.length){
player.$throw(cards,1000);
game.cardsDiscard(cards);
game.log(cards,'被置入了弃牌堆');
}
},
onremove:function(player){
player.removeGaintag('minimubing');
},
ai:{
order:9,
result:{player:1},
},
},
miniziqu:{
audio:'ziqu',
trigger:{source:'damageBegin2'},
filter:function(event,player){
return !player.getStorage('miniziqu_round').includes(event.player)&&event.player.countCards('he')>0;
},
check:function(event,player){
var target=event.player;
var eff=get.damageEffect(target,player,player);
if(get.attitude(player,target)>0){
if(eff>=0) return false;
return true;
}
if(eff<=0) return true;
if(target.hp==1) return false;
if(event.num>1) return false;
var cards=target.getCards('he');
for(var i=0;i<cards.length;i++){
if(get.number(cards[i])>10) return true;
}
return false;
},
logTarget:'player',
content:function(){
'step 0'
player.addTempSkill('miniziqu_round','roundStart');
player.markAuto('miniziqu_round',[trigger.player]);
trigger.cancel();
if(trigger.player!=player){
trigger.player.chooseCard(true,'he',function(card,player){
return !player.countCards('he',function(cardx){
return cardx.number>card.number;
});
});
}
else event.finish();
'step 1'
if(result.bool) trigger.player.give(result.cards,player);
},
subSkill:{
round:{
charlotte:true,
mark:true,
intro:{content:'本轮已对$发动过此技能'},
},
},
},
minidiaoling:{
audio:'diaoling',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h',card=>card.hasGaintag('minimubing'))&&game.countPlayer()>1;
},
filterCard:function(card,player){
return card.hasGaintag('minimubing');
},
selectCard:[1,Infinity],
filterTarget:lib.filter.notMe,
check:function(card){
var player=_status.event.player;
if(ui.selected.cards.some(cardx=>Math.abs(get.number(cardx,player)-get.number(card,player))<=1)) return 10-get.value(card);
return 5-get.value(card);
},
complexCard:true,
complexSelect:true,
discard:false,
lose:false,
delay:0,
content:function(){
'step 0'
player.give(cards,target);
'step 1'
var nums=[];
for(var card of cards) nums.add(get.number(card,player));
nums.sort((a,b)=>a-b);
if(cards.length>1&&cards.length==nums.length&&nums[nums.length-1]-nums[0]==nums.length-1){
player.chooseTarget('请选择至多'+get.cnNumber(nums.length-1)+'名有牌的其他角色，获得这些角色的各一张牌。',[1,nums.length-1],function(card,player,target){
return target!=player&&target.countGainableCards(player,'he')>0;
}).set('ai',function(target){
return -get.attitude(_status.event.player,target)+0.5;
});
}
else event.finish();
'step 2'
if(result.bool){
var targets=result.targets.sortBySeat();
player.line(targets);
player.gainMultiple(targets,'he');
}
},
ai:{
order:8,
result:{target:1},
},
},
//SP张郃
minizhouxuan:{
group:'minizhouxuan_use',
audio:'spolzhouxuan',
trigger:{player:'phaseDiscardBegin'},
filter:function(event,player){
return player.countCards('h')>0&&player.getExpansions('minizhouxuan').length<5;
},
direct:true,
content:function(){
'step 0'
player.chooseCard('h',get.prompt('minizhouxuan'),[1,5-player.getExpansions('minizhouxuan').length],'将至多'+get.cnNumber(5-player.getExpansions('minizhouxuan').length)+'张手牌置于武将牌上').set('ai',function(card){
if(ui.selected.cards.length>=player.needsToDiscard()) return 6-get.value(card);
return 100-get.useful(card);
});
'step 1'
if(result.bool){
var cards=result.cards;
player.logSkill('minizhouxuan');
player.addToExpansion(cards,player,'give').gaintag.add('minizhouxuan');
}
},
marktext:'旋',
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
subSkill:{
use:{
trigger:{player:['useCard','respond']},
filter:function(event,player){
if(player.getExpansions('minizhouxuan').length) return true;
return event.name!='respond'&&event.cards&&event.cards.length;
},
direct:true,
content:function(){
'step 0'
if(player.getExpansions('minizhouxuan').length){
player.logSkill('minizhouxuan');
var bool=(!player.isMaxHandcard(true));
player.draw(bool?player.getExpansions('minizhouxuan').length:1);
player.loseToDiscardpile(player.getExpansions('minizhouxuan').randomGets(bool&&player.getExpansions('minizhouxuan').length>1?2:1));
event.finish();
}
else player.chooseBool(get.prompt('minizhouxuan'),'令'+get.translation(trigger.cards)+'结算完毕后置于武将牌上，称为“旋”').set('choice',(get.type(trigger.card)!='equip'||(trigger.card.name=='baiyin'&&player.isDamaged()))&&get.type(trigger.card)!='delay');
'step 1'
if(result.bool){
player.logSkill('minizhouxuan');
player.addTempSkill('minizhouxuan_use2');
player.markAuto('minizhouxuan_use2',[trigger.card]);
}
},
},
use2:{
charlotte:true,
onremove:true,
trigger:{player:'useCardAfter'},
filter:function(event,player){
return event.cards.filterInD('oej').length&&player.getStorage('minizhouxuan_use2').includes(event.card);
},
forced:true,
popup:false,
content:function(){
player.addToExpansion(trigger.cards.filterInD('oej'),'gain2').gaintag.add('minizhouxuan');
},
},
},
},
//嫦娥
minidaoyao:{
audio:'ext:活动武将/audio/skill:2',
enable:'phaseUse',
filter:function(card,player){
return player.countDiscardableCards(player,'h');
},
filterCard:lib.filter.cardDiscardable,
check:function(card){
return 6-get.value(card);
},
usable:1,
content:function(){
var card=get.cardPile2(card=>card.name=='tao');
if(card) player.gain(card,'gain2');
player.draw(2+(card?0:1));
},
ai:{
order:9,
result:{player:1},
},
},
minibenyue:{
unique:true,
derivation:'miniguanghan',
audio:'ext:活动武将/audio/skill:2',
trigger:{
global:['loseAsyncAfter'],
player:['recoverEnd','gainAfter'],
},
filter:function(event,player){
if(event.name=='gain'||event.name=='loseAsync'){
if(!event.getg(player).some(card=>card.name=='tao')) return false;
return player.countCards('h',{name:'tao'})>=3;
}
else{
var num=0;
game.getAllGlobalHistory('changeHp',evt=>{
if(evt.getParent().name=='recover'&&evt.player==player) num+=evt.num;
});
return num>=3;
}
},
forced:true,
juexingji:true,
skillAnimation:true,
animationColor:'silver',
content:function(){
player.awakenSkill('minibenyue');
if(player.maxHp<15) player.gainMaxHp(15-player.maxHp);
player.addSkillLog('miniguanghan');
},
},
miniguanghan:{
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'damageEnd'},
filter:function(event,player){
if(!event.player.isIn()) return false;
return lib.skill.miniguanghan.logTarget(event,player).length;
},
logTarget:function(event,player){
var target=event.player;
return game.filterPlayer(current=>{
if(current!=target.getPrevious()&&current!=target.getNext()) return false;
return current!=player;
});
},
forced:true,
content:function(){
'step 0'
event.targets=lib.skill.miniguanghan.logTarget(trigger,player).sortBySeat();
'step 1'
var target=event.targets.shift();
event.target=target;
target.chooseToDiscard('h','广寒：弃置一张手牌，或失去1点体力').set('ai',card=>{
var player=_status.event.player;
if(card.name=='tao'||card.name=='jiu') return 0;
if(player.hasSkill('zhaxiang')&&player.hp>1) return 0;
return 6-get.value(card);
});
'step 2'
if(!result.bool) target.loseHp(trigger.num);
if(event.targets.length) event.goto(1);
},
ai:{threaten:5},
},
//朱儁
minigongjian:{
audio:'gongjian',
inherit:'gongjian',
content:function(){
'step 0'
event.targets=trigger.parent.gongjian_targets.filter(function(target){
return trigger.targets.includes(target);
});
event.num=0;
'step 1'
var target=targets[num];
player.discardPlayerCard(target,true,'he',[1,2]).set('forceAuto',true);
'step 2'
event.num++;
if(event.num<targets.length) event.goto(1);
else{
var cards=[];
game.getGlobalHistory('cardMove',function(evt){
if(evt.player&&evt.hs&&evt.type=='discard'&&evt.getParent(3)==event){
for(var i of evt.hs){
if(get.type(i,evt.player)=='basic'&&get.position(i,true)=='d') cards.add(i);
}
}
});
if(cards.length) player.gain(cards,'gain2');
}
},
},
//神
miniwuqian:{
derivation:'wushuang',
audio:'ol_wuqian',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
if(!_status.currentPhase||player!=_status.currentPhase) return false;
if(!['sha','juedou'].includes(event.card.name)||!event.isFirstTarget) return false;
return player.getHistory('useCard',function(evt){
return (evt.card.name=='sha'||evt.card.name=='juedou');
}).indexOf(event.getParent())==0;
},
forced:true,
logTarget:'targets',
content:function(){
for(var target of trigger.targets){
target.addTempSkill('qinggang2');
target.storage.qinggang2.add(trigger.card);
if(trigger.card.name=='sha'){
var id=target.playerid;
var map=trigger.getParent().customArgs;
if(!map[id]) map[id]={};
if(typeof map[id].shanRequired=='number') map[id].shanRequired++;
else map[id].shanRequired=2;
}
else{
var id=target.playerid;
var idt=target.playerid;
var map=trigger.getParent().customArgs;
if(!map[idt]) map[idt]={};
if(!map[idt].shaReq) map[idt].shaReq={};
if(!map[idt].shaReq[id]) map[idt].shaReq[id]=1;
map[idt].shaReq[id]++;
}
}
},
ai:{
unequip_ai:true,
skillTagfilter:function(player,tag,arg){
if(arg&&arg.card&&!player.getHistory('useCard',function(evt){
return (evt.card.name=='sha'||evt.card.name=='juedou');
}).length&&['sha','juedou'].includes(arg.card.name)) return true;
return false;
},
},
},
minishenfen:{
unique:true,
mark:true,
limited:true,
audio:'ol_shenfen',
enable:'phaseUse',
filter:function(event,player){
return player.hp>3;
},
skillAnimation:true,
animationColor:'metal',
content:function(){
'step 0'
player.awakenSkill('minishenfen');
player.loseHp(3);
event.delay=false;
event.targets=game.filterPlayer();
event.targets.remove(player);
event.targets.sort(lib.sort.seat);
player.line(event.targets,'green');
event.targets2=event.targets.slice(0);
event.targets3=event.targets.slice(0);
'step 1'
if(event.targets2.length){
event.targets2.shift().damage('nocard');
event.redo();
}
'step 2'
if(event.targets.length){
event.current=event.targets.shift()
if(event.current.countCards('e')) event.delay=true;
event.current.discard(event.current.getCards('e')).delay=false;
}
'step 3'
if(event.delay) game.delay(0.5);
event.delay=false;
if(event.targets.length) event.goto(2);
'step 4'
if(event.targets3.length){
var target=event.targets3.shift();
target.chooseToDiscard(4,'h',true).delay=false;
if(target.countCards('h')) event.delay=true;
}
'step 5'
if(event.delay) game.delay(0.5);
event.delay=false;
if(event.targets3.length) event.goto(4);
},
ai:{
order:10,
result:{
player:function(player){
if(player.hp<5||player.hasUnknown()) return 0;
return game.countPlayer(function(current){
if(current!=player){
return get.sgn(get.damageEffect(current,player,player));
}
});
},
},
},
},
gongxin_re_lvmeng:{audio:2},
minishelie:{
audio:'shelie',
inherit:'shelie',
forced:true,
},
minigongxin:{
audio:'gongxin',
audioname2:{Mbaby_lvmeng:'gongxin_re_lvmeng'},
trigger:{player:'useCardToPlayered',target:'useCardToTargeted'},
filter:function(event,player){
if(event.player==event.target||event.targets.length!=1) return false;
return (player==event.player?event.target:event.player).countCards('h');
},
logTarget:function(event,player){
return player==event.player?event.target:event.player;
},
check:function(event,player){
return get.attitude(player,player==event.player?event.target:event.player)<=0;
},
usable:1,
content:function(){
'step 0'
var target=(player==trigger.player?trigger.target:trigger.player);
event.target=target;
event.videoId=lib.status.videoId++;
var cards=target.getCards('h');
if(player.isOnline2()){
player.send(function(cards,id){
ui.create.dialog('攻心',cards).videoId=id;
},cards,event.videoId);
}
event.dialog=ui.create.dialog('攻心',cards);
event.dialog.videoId=event.videoId;
if(!event.isMine()){
event.dialog.style.display='none';
}
player.chooseButton().set('filterButton',function(button){
return get.color(button.link)=='red';
}).set('dialog',event.videoId).set('ai',function(button){
return get.value(button.link);
});
'step 1'
if(result.bool){
event.card=result.links[0];
var func=function(card,id){
var dialog=get.idDialog(id);
if(dialog){
for(var i=0;i<dialog.buttons.length;i++){
if(dialog.buttons[i].link==card){
dialog.buttons[i].classList.add('selectedx');
}
else{
dialog.buttons[i].classList.add('unselectable');
}
}
}
}
if(player.isOnline2()){
player.send(func,event.card,event.videoId);
}
else if(event.isMine()){
func(event.card,event.videoId);
}
player.chooseControl('获得此牌','置于牌堆顶');
}
else{
if(player.isOnline2()){
player.send('closeDialog',event.videoId);
}
event.dialog.close();
event.finish();
}
'step 2'
if(player.isOnline2()){
player.send('closeDialog',event.videoId);
}
event.dialog.close();
var card=event.card;
if(result.control=='置于牌堆顶'){
player.showCards(card,'置于牌堆顶');
target.lose(card,ui.cardPile,'insert','visible');
game.log(player,'将',event.card,'置于牌堆顶');
}
else player.gain(card,target,'give');
},
ai:{expose:0.25},
},
miniqixing:{
unique:true,
audio:'qixing',
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
return event.name!='phase'||game.phaseNumber==0;
},
forced:true,
content:function(){
player.markAuto('miniqixing',game.cardsGotoSpecial(get.cards(7)).cards);
},
mark:true,
intro:{
onunmark:function(storage,player){
if(storage&&storage.length){
player.$throw(storage,1000);
game.cardsDiscard(storage);
game.log(storage,'被置入了弃牌堆');
storage.length=0;
}
},
mark:function(dialog,content,player){
if(content&&content.length){
if(player==game.me||player.isUnderControl()){
dialog.addAuto(content);
}
else{
return '共有'+get.cnNumber(content.length)+'张星';
}
}
},
content:function(content,player){
if(content&&content.length){
if(player==game.me||player.isUnderControl()){
return get.translation(content);
}
return '共有'+get.cnNumber(content.length)+'张星';
}
}
},
group:'miniqixing_draw',
subSkill:{
draw:{
trigger:{player:'phaseDrawEnd'},
filter:function(event,player){
return player.storage.miniqixing&&player.storage.miniqixing.length;
},
direct:true,
content:function(){
'step 0'
var cards=player.getStorage('miniqixing');
if(!cards.length||!player.countCards('h')){
event.finish();
return;
}
var next=player.chooseToMove('七星：是否交换“星”和手牌？');
next.set('list',[
[get.translation(player)+'（你）的星',cards],
['手牌区',player.getCards('h')],
]);
next.set('filterMove',function(from,to){
return typeof to!='number';
});
next.set('processAI',function(list){
var player=_status.event.player,cards=list[0][1].concat(list[1][1]).sort(function(a,b){
return get.value(a)-get.value(b);
}),cards2=cards.splice(0,player.storage.miniqixing.length);
return [cards2,cards];
});
'step 1'
if(result.bool){
var pushs=result.moved[0],gains=result.moved[1];
pushs.removeArray(player.storage.miniqixing);
gains.removeArray(player.getCards('h'));
if(!pushs.length||pushs.length!=gains.length) return;
player.logSkill('miniqixing');
player.lose(pushs,ui.special,'toStorage');
game.log(player,'将',pushs,'作为“星”置于武将牌上');
player.gain(gains,'gain2','log','fromStorage');
player.storage.miniqixing.addArray(pushs);
player.storage.miniqixing.removeArray(gains);
player.markSkill('miniqixing');
}
}
},
},
},
minikuangfeng:{
audio:'kuangfeng',
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return player.storage.miniqixing&&player.storage.miniqixing.length;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget([1,Math.min(game.players.length,player.getStorage('miniqixing').length)],get.prompt2('minikuangfeng')).set('ai',function(target){
var player=_status.event.player;
var eff=get.damageEffect(target,player,player);
if(target.hp==1||!ui.selected.targets.length) return eff;
return 0;
});
'step 1'
if(result.bool){
event.targets=result.targets.sortBySeat();
player.chooseButton(['请选择要移去的“星”',player.getStorage('miniqixing')],true,result.targets.length).set('ai',function(button){
return -get.value(button.link);
});
}
else event.finish();
'step 2'
var cards=result.links;
player.logSkill('minikuangfeng',targets);
player.$throw(cards,2000);
player.unmarkAuto('miniqixing',cards);
game.cardsDiscard(cards);
for(var i of targets) i.damage();
},
},
minidawu:{
audio:'dawu',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return player.storage.miniqixing&&player.storage.miniqixing.length;
},
direct:true,
content:function(){
'step 0'
player.chooseButton([get.prompt('minidawu'),player.getStorage('miniqixing')]).set('ai',function(button){
return 1/Math.max(0.01,get.value(button.link));
});
'step 1'
if(result.bool){
var cards=result.links;
player.logSkill('minidawu');
player.$throw(cards,2000);
player.unmarkAuto('miniqixing',cards);
game.cardsDiscard(cards);
player.addTempSkill('minidawu_damage',{player:'phaseBegin'});
}
},
subSkill:{
damage:{
charlotte:true,
mark:true,
intro:{content:'受到的非属性伤害-1'},
trigger:{player:'damageBegin3'},
filter:function(event){
return event.num>0&&!event.nature;
},
forced:true,
content:function(){
trigger.num--;
},
ai:{
effect:{
target:function(card,player,target){
if(player.hasSkillTag('jueqing',false,target)) return;
if(get.nature(card)) return;
var num=get.tag(card,'damage');
if(num){
if(num>1) return 0.5;
return 0;
}
},
},
},
},
},
},
miniguixin:{
audio:'guixin',
trigger:{player:'damageEnd'},
check:function(event,player){
if(player.isTurnedOver()||event.num>1||(game.countPlayer()-1<5&&game.countPlayer(function(current){
return get.attitude(player,current)<=0&&current.countGainableCards(player,'hej')>0;
})>=game.countPlayer(function(currentx){
return get.attitude(player,currentx)>0&&currentx.countGainableCards(player,'hej')>0;
}))) return true;
var num=game.countPlayer(function(current){
if(current.countCards('he')&&current!=player&&get.attitude(player,current)<=0) return true;
if(current.countCards('j')&&current!=player&&get.attitude(player,current)>0) return true;
});
return num>=2;
},
content:function(){
'step 0'
var targets=game.filterPlayer();
targets.remove(player);
targets.sort(lib.sort.seat);
event.targets=targets;
event.count=trigger.num;
'step 1'
event.count--;
event.num=0;
event.numx=0;
player.line(targets,'green');
player.chooseControl('手牌区','装备区','判定区').set('ai',function(){
if(game.hasPlayer(function(current){
return current.countCards('j')&&current!=player&&get.attitude(player,current)>0;
})) return 2;
return Math.floor(Math.random()*3);
}).set('prompt','请选择优先获得的区域');
'step 2'
event.range={
手牌区:['h','e','j'],
装备区:['e','h','j'],
判定区:['j','h','e'],
}[result.control||'手牌区'];
'step 3'
if(num<event.targets.length){
var target=event.targets[num];
var range=event.range;
for(var i=0;i<range.length;i++){
var cards=target.getCards(range[i]);
if(cards.length){
var card=cards.randomGet();
event.numx++;
player.gain(card,target,'giveAuto','bySelf');
break;
}
}
event.num++;
}
'step 4'
if(num<event.targets.length) event.goto(3);
'step 5'
if(event.numx>4&&!player.isTurnedOver()) player.turnOver();
'step 6'
if(event.count>0&&player.hasSkill('miniguixin')) player.chooseBool(get.prompt2('new_guixin')).ai=function(){
return lib.skill.miniguixin.check({num:event.count},player);
};
else event.finish();
'step 7'
if(event.count&&result.bool) event.goto(1);
},
ai:{
maixie:true,
maixie_hp:true,
threaten:function(player,target){
if(target.hp==1) return 2.5;
return 1;
},
effect:{
target:function(card,player,target){
if(get.tag(card,'damage')){
if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
if(target.hp==1) return 0.8;
if(target.isTurnedOver()) return [0,3];
var num=game.countPlayer(function(current){
if(current.countCards('he')&&current!=player&&get.attitude(player,current)<=0){
return true;
}
if(current.countCards('j')&&current!=player&&get.attitude(player,current)>0){
return true;
}
});
if(num>2) return [0,1];
if(num==2) return [0.5,1];
}
},
},
},
},
miniwushen:{
mod:{
cardnature:function(card){
if(get.suit(card)=='heart'&&get.name(card)=='sha') return false;
},
targetInRange:function(card){
if(get.suit(card)=='heart'&&get.name(card)=='sha') return true;
},
},
group:'miniwushen_wusheng',
audio:'wushen',
trigger:{source:'damageBegin1'},
forced:true,
locked:false,
filter:function(event,player){
return event.card&&event.card.name=='sha'&&get.suit(event.card)=='heart';
},
content:function(){
trigger.num++;
},
ai:{
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondSha')&&current<0) return 0.6
},
},
directHit_ai:true,
skillTagfilter:function(player,tag,arg){
return arg.card.name=='sha'&&get.suit(arg.card)=='heart';
},
},
subSkill:{
wusheng:{
audio:'wushen',
enable:['chooseToRespond','chooseToUse'],
filterCard:function(card,player){
return get.suit(card)=='heart';
},
position:'hs',
viewAs:{name:'sha'},
viewAsFilter:function(player){
if(!player.countCards('hs',{suit:'heart'})) return false;
return true;
},
prompt:'将一张红桃手牌当作杀使用或打出',
check:function(card){
var val=get.value(card);
if(_status.event.name=='chooseToRespond') return 1/Math.max(0.1,val);
return 8-val;
},
ai:{
respondSha:true,
skillTagFilter:function(player){
if(!player.countCards('hs',{suit:'heart'})) return false;
return true;
},
},
},
},
},
miniwuhun:{
audio:'wuhun2',
group:['miniwuhun_mark','miniwuhun_die','wuhun22','wuhun23'],
trigger:{player:'damageEnd'},
forced:true,
filter:function(event,player){
return event.source!=undefined;
},
content:function(){
trigger.source.addMark('miniwuhun_mark',trigger.num);
},
subSkill:{
die:{
audio:'wuhun2',
skillAnimation:true,
animationColor:'soil',
trigger:{player:['die','dyingAfter']},
filter:function(event,player){
if(event.name=='dying'&&!player.isIn()) return false;
return game.hasPlayer(function(current){
return current!=player&&current.hasMark('miniwuhun_mark');
});
},
forced:true,
forceDie:true,
content:function(){
'step 0'
var num=0;
for(var i=0;i<game.players.length;i++){
var current=game.players[i];
if(current!=player&&current.countMark('miniwuhun_mark')>num){
num=current.countMark('miniwuhun_mark');
}
}
player.chooseTarget('请选择【武魂】的目标',true,function(card,player,target){
return target!=player&&target.countMark('miniwuhun_mark')==_status.event.num;
}).set('ai',function(target){
return -get.attitude(_status.event.player,target);
}).set('forceDie',true).set('num',num);
'step 1'
if(result.bool&&result.targets&&result.targets.length){
var target=result.targets[0];
event.target=target;
player.line(target,{color:[255, 255, 0]});
game.delay(2);
}
'step 2'
target.judge(function(card){
if(['tao','taoyuan'].includes(card.name)) return 10;
return -10;
});
'step 3'
if(!result.bool) target.loseHp(5);
},
},
mark:{
marktext:'魇',
intro:{
name:'梦魇',
content:'mark',
},
},
},
ai:{
threaten:0.1,
notemp:true,
},
},
miniyeyan:{
audio:'yeyan',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('miniyeyan'),lib.filter.notMe).set('ai',function(target){
if(get.attitude(player,target)<0&&target.hp==1) return 2;
if(get.attitude(player,target)<0) return 1;
return 0;
});
'step 1'
if(result.bool){
player.logSkill('miniyeyan',result.targets[0]);
result.targets[0].damage('fire');
}
else event.finish();
},
},
miniqinyin:{
audio:'qinyin',
trigger:{player:'phaseDiscardEnd'},
direct:true,
filter:function(event,player){
return player.getHistory('lose',function(evt){
return evt.type=='discard'&&evt.getParent('phaseDiscard')==event;
}).length;
},
content:function(){
'step 0'
event.forceDie=true;
var recover=0,lose=0,players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(players[i].hp<players[i].maxHp){
if(get.attitude(player,players[i])>0){
if(players[i].hp<2){
lose--;
recover+=0.5;
}
lose--;
recover++;
}
else if(get.attitude(player,players[i])<0){
if(players[i].hp<2){
lose++;
recover-=0.5;
}
lose++;
recover--;
}
}
else{
if(get.attitude(player,players[i])>0){
lose--;
}
else if(get.attitude(player,players[i])<0){
lose++;
}
}
}
player.chooseControl('失去体力','回复体力','cancel2').set('ai',function(){
if(lose>recover&&lose>0) return 0;
if(lose<recover&&recover>0) return 1;
return 2;
}).set('prompt',get.prompt2('miniqinyin'));
'step 1'
if(result.control!='cancel2'){
player.logSkill('miniqinyin');
event.bool=(result.control=='回复体力');
if(event.bool) game.playAudio('skill','qinyin1');
else game.playAudio('skill','qinyin2');
event.num=0;
event.players=game.filterPlayer();
}
else event.finish();
'step 2'
if(event.num<event.players.length){
var target=event.players[event.num];
if(event.bool) target.recover();
else target.loseHp();
event.num++;
event.redo();
}
},
ai:{expose:0.2},
},
minilongnu:{
audio:'nzry_longnu',
trigger:{player:'phaseUseBegin'},
forced:true,
content:function(){
'step 0'
var list=[
'失去1点体力并摸两张牌，本回合你的红色手牌均视为火杀且无距离限制',
'减1点体力上限，本回合你的黑色手牌均视为雷杀且无使用次数限制'
];
player.chooseControl().set('choiceList',list).set('ai',function(){
if(player.countCards()<=3&&player.maxHp-player.hp<=1) return 0;
return 1;
});
'step 1'
if(result.index==0){
player.loseHp();
player.draw(2);
player.addTempSkill('minilongnu_1');
}
else{
player.loseMaxHp();
player.addTempSkill('minilongnu_2');
}
},
subSkill:{
'1':{
mod:{
cardname:function(card,player){
if(get.color(card)=='red') return 'sha';
},
cardnature:function(card,player){
if(get.color(card)=='red') return 'fire';
},
targetInRange:function(card){
if(card.name=='sha'&&card.hasNature('fire')) return true;
},
},
ai:{
respondSha:true,
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondSha')&&current<0) return 0.6
},
},
},
},
'2':{
mod:{
cardname:function(card,player){
if(get.color(card)=='black') return 'sha';
},
cardnature:function(card,player){
if(get.color(card)=='black') return 'thunder';
},
cardUsable:function(card,player){
if(card.name=='sha'&&card.hasNature('thunder')) return Infinity;
},
},
ai:{
respondSha:true,
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondSha')&&current<0) return 0.6
},
},
},
},
},
ai:{
fireAttack:true,
halfneg:true,
},
},
minijieying:{
audio:'nzry_jieying',
locked:true,
global:'minijieying_all',
group:['minijieying_1','minijieying_2','minijieying_3'],
subSkill:{
'1':{
audio:'nzry_jieying',
trigger:{player:['linkBefore','enterGame'],global:'phaseBefore'},
forced:true,
filter:function(event,player){
if(event.name=='link') return player.isLinked();
return (event.name!='phase'||game.phaseNumber==0)&&!player.isLinked();
},
content:function(){
if(trigger.name!='link') player.link(true);
else trigger.cancel();
},
},
'2':{
trigger:{player:'phaseJieshuBegin'},
direct:true,
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&!current.isLinked();
});
},
content:function(){
'step 0'
player.chooseTarget(get.prompt('minijieying'),'横置一名其他角色',function(card,player,target){
return target!=player&&!target.isLinked();
}).ai=function(target){
return 1+Math.random();
};
'step 1'
if(result.bool){
player.logSkill('minijieying',result.targets[0]);
result.targets[0].link(true);
}
else event.finish();
},
},
'3':{
audio:'nzry_jieying',
trigger:{player:'damageBegin2'},
forced:true,
content:function(){
player.draw();
},
},
all:{
mod:{
maxHandcard:function(player,num){
if(player.isLinked()) return num+2*game.countPlayer(function(current){
return current.hasSkill('minijieying');
});
},
},
},
},
ai:{
effect:{
target:function(card){
if(card.name=='tiesuo') return 'zeroplayertarget';
},
},
},
},
miniduorui:{
audio:'drlt_duorui',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.countCards('h');
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('miniduorui'),function(card,player,target){
if(player==target) return false;
return target.countCards('h');
}).set('ai',function(target){
return -get.attitude(player,target)*(target.getDamagedHp()+1);
});
'step 1'
if(result.bool){
player.logSkill('miniduorui',result.targets[0]);
player.gainPlayerCard(result.targets[0],'h',true,'visible');
result.targets[0].addTempSkill('miniduorui_target');
}
else event.finish();
'step 2'
player.popup(get.translation(get.color(result.cards[0])));
player.addTempSkill('miniduorui_'+get.color(result.cards[0]));
},
subSkill:{
target:{charlotte:true},
red:{
audio:'drlt_duorui',
trigger:{player:'useCard'},
forced:true,
filter:function(event,player){
return event.card&&get.color(event.card)=='red';
},
content:function(){
trigger.directHit.addArray(game.filterPlayer(function(current){
return current.hasSkill('miniduorui_target');
}));
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
return arg.target.hasSkill('miniduorui_target')&&get.color(arg.card)=='red';
},
},
},
black:{
audio:'drlt_duorui',
trigger:{player:'useCard'},
forced:true,
filter:function(event,player){
return event.card&&get.color(event.card)=='black';
},
content:function(){
trigger.directHit.addArray(game.filterPlayer(function(current){
return current.hasSkill('miniduorui_target');
}));
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
return arg.target.hasSkill('miniduorui_target')&&get.color(arg.card)=='black';
},
},
},
},
},
minizhiti:{
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha'&&game.countPlayer(function(current){
return current.isDamaged();
})>2) return num+1;
},
},
audio:'drlt_zhiti',
trigger:{player:'phaseDrawBegin2'},
forced:true,
filter:function(event,player){
return game.countPlayer(function(current){
return current.isDamaged();
})>1;
},
content:function(){
trigger.num++;
},
},
//劝退
miniquantui:{
marktext:'学',
intro:{content:'mark',name2:'学'},
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
game.addGlobalSkill('miniquantui_remove');
player.chooseTarget(get.prompt2('miniquantui'),[1,2],lib.filter.notMe).set('ai',function(target){
return !target.hasMark('miniquantui')&&-get.attitude(player,target);
});
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
player.logSkill('miniquantui',targets);
for(var i of targets) i.addMark('miniquantui',1);
}
},
ai:{
threaten:4.5,
expose:0.25,
},
subSkill:{
remove:{
charlotte:true,
trigger:{player:'phaseBegin'},
filter:function(event,player){
return player.hasMark('miniquantui')&&game.hasPlayer(function(current){
return current.hasSkill('miniquantui');
});
},
forced:true,
content:function(){
'step 0'
player.removeMark('miniquantui',player.countMark('miniquantui'));
'step 1'
player.chooseControl().set('choiceList',[
'本回合不能对其他角色使用牌',
'失去1点体力',
]).set('ai',function(){
if((player.countCards('h')<player.getHandcardLimit())||player.hp<=2) return 0;
return 1;
});
'step 2'
if(result.index==0) player.addTempSkill('miniquantui_block');
else player.loseHp();
},
},
block:{
mark:true,
intro:{content:'不能对其他角色使用牌'},
mod:{
playerEnabled:function(card,player,target){
if(player!=target) return false;
},
},
},
},
},
minishehu:{
trigger:{player:'useCardToPlayer'},
filter:function(event,player){
return event.card.name=='sha'&&event.target.hasMark('miniquantui')&&event.target.countCards('h');
},
forced:true,
logTarget:'target',
content:function(){
player.discardPlayerCard('h',true,trigger.target);
},
ai:{
unequip_ai:true,
combo:'miniquantui',
skillTagFilter:function(player,tag,arg){
if(arg&&arg.name=='sha'&&arg.target&&arg.target.hasMark('miniquantui')) return true;
return false;
},
},
},
minidingli:{
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'logSkill'},
filter:function(event,player){
return event.skill=='miniquantui_remove'&&event.player!=player;
},
check:function(event,player){
if(event.player.hp>=player.hp&&player.isHealthy()) return false;
return true;
},
round:1,
logTarget:'player',
content:function(){
if(trigger.player.hp>=player.hp) player.recover();
else player.draw(Math.min(2,player.hp-trigger.player.hp));
},
ai:{combo:'miniquantui'},
},
minirenjie:{
unique:true,
group:'minirenjie_lose',
audio:'renjie2',
trigger:{player:['enterGame','damageEnd'],global:'phaseBefore'},
filter:function(event,player){
if(event.num=='damage') return event.num>0;
return event.name!='phase'||game.phaseNumber==0;
},
notemp:true,
forced:true,
content:function(){
player.addMark('minirenjie',trigger.num||1);
},
marktext:'忍',
intro:{name:'忍',content:'mark'},
subSkill:{
lose:{
audio:'renjie2',
trigger:{player:'loseAfter'},
filter:function(event,player){
if(event.type!='discard'||!event.cards2) return false;
var evt=event.getParent('phaseDiscard');
return evt&&evt.name=='phaseDiscard'&&evt.player==player;
},
forced:true,
content:function(){
player.addMark('minirenjie',trigger.cards2.length);
},
},
},
},
minijilve:{
unique:true,
audio:'jilue',
derivation:['minijilve_guicai','minijilve_fangzhu','minijilve_wansha','minijilve_jizhi'],
group:['minijilve_guicai','minijilve_fangzhu','minijilve_wansha','minijilve_jizhi'],
trigger:{player:['useSkill','logSkillBegin']},
filter:function(event,player){
if(!lib.skill.minijilve.derivation.includes(event.skill)) return false;
return player.getHistory('useSkill',evt=>lib.skill.minijilve.derivation.includes(evt.skill)).length==1;
},
frequent:true,
content:function(){
player.draw();
},
subSkill:{
guicai:{
audio:'jilue_guicai',
trigger:{global:'judge'},
filter:function(event,player){
return player.countCards('hes')&&player.hasMark('minirenjie');
},
direct:true,
content:function(){
'step 0'
player.chooseCard(get.prompt2('minijilve_guicai'),'hes',function(card){
var player=_status.event.player;
var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
if(mod2!='unchanged') return mod2;
var mod=game.checkMod(card,player,'unchanged','cardRespondable',player);
if(mod!='unchanged') return mod;
return true;
}).set('ai',function(card){
var trigger=_status.event.getTrigger();
var player=_status.event.player;
var judging=_status.event.judging;
var result=trigger.judge(card)-trigger.judge(judging);
var attitude=get.attitude(player,trigger.player);
if(attitude==0){
if(player.isDamaged()&&get.suit(card,player)=='heart') return 10;
if(get.suit(card,player)=='club') return 8;
return 0;
}
if(attitude>0){
if(result==0){
if(player.isDamaged()&&get.suit(card,player)=='heart') return 10;
if(get.suit(card,player)=='club') return 8;
return 0;
}
return result-get.value(card)/2;
}
else{
if(result==0){
if(player.isDamaged()&&get.suit(card)=='heart') return 10;
if(get.suit(card)=='club') return 8;
return 0;
}
return -result-get.value(card)/2;
}
}).set('judging',trigger.player.judging[0]);
'step 1'
if(result.bool) player.respond(result.cards,'highlight','minijilve_guicai','noOrdering');
else event.finish();
'step 2'
if(result.bool){
player.removeMark('minirenjie',1);
if(trigger.player.judging[0].clone){
trigger.player.judging[0].clone.delete();
game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
}
game.cardsDiscard(trigger.player.judging[0]);
trigger.player.judging[0]=result.cards[0];
trigger.orderingCards.addArray(result.cards);
game.log(trigger.player,'的判定牌改为',result.cards[0]);
game.delay(2);
event.card=result.cards[0];
}
else event.finish();
'step 3'
if(get.suit(card,player)=='heart') player.recover();
if(get.suit(card,player)=='club') player.draw(2);
},
ai:{
rejudge:true,
tag:{rejudge:1},
},
},
fangzhu:{
audio:'jilue_fangzhu',
trigger:{player:'damageEnd'},
filter:function(event,player){
return player.hasMark('minirenjie');
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minijilve_fangzhu'),lib.filter.notMe).ai=function(target){
if(target.hasSkillTag('noturn')) return 0;
if(target.isTurnedOver()) return get.attitude(player,target);
return -get.attitude(player,target);
}
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minijilve_fangzhu',target);
player.removeMark('minirenjie',1);
target.turnOver();
target.draw();
}
},
ai:{
maixie:true,
maixie_hp:true,
effect:{
target:function(card,player,target){
if(get.tag(card,'damage')){
if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
if(target.hp<=1) return;
if(!target.hasFriend()) return;
var hastarget=false;
var turnfriend=false;
var players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(get.attitude(target,players[i])<0&&!players[i].isTurnedOver()){
hastarget=true;
}
if(get.attitude(target,players[i])>0&&players[i].isTurnedOver()){
hastarget=true;
turnfriend=true;
}
}
if(get.attitude(player,target)>0&&!hastarget) return;
if(turnfriend||target.hp==target.maxHp) return [0.5,1];
if(target.hp>1) return [1,0.5];
}
},
},
},
},
wansha:{
audio:'wansha_shen_simayi',
trigger:{global:'dying'},
filter:function(event,player){
if(!_status.currentPhase||player.hasSkill('minijilve_miniwansha')) return false;
return player.hasMark('minirenjie')&&player==_status.currentPhase;
},
check:function(event,player){
return get.attitude(player,event.player)<0;
},
logTarget:'player',
content:function(){
player.removeMark('minirenjie',1);
player.addTempSkill('minijilve_miniwansha',['phaseZhunbeiAfter','phaseJudgeAfter','phaseDrawAfter','phaseUseAfter','phaseDiscardAfter','phaseJieshuAfter','phaseAfter']);
game.log(player,'获得了','#g【完杀】','效果');
},
},
miniwansha:{
charlotte:true,
global:'minijilve_miniwanshax',
mark:true,
marktext:'杀',
intro:{content:()=>lib.translate.miniwansha_info},
},
miniwanshax:{
mod:{
cardSavable:function(card,player){
if(!_status.currentPhase||!_status.currentPhase.hasSkill('minijilve_miniwansha')) return;
if(player!=_status.currentPhase&&card.name=='tao') return false;
},
cardEnabled:function(card,player){
if(!_status.currentPhase||!_status.currentPhase.hasSkill('minijilve_miniwansha')) return;
if(player!=_status.currentPhase&&card.name=='tao') return false;
},
},
},
jizhi:{
audio:'jilue_jizhi',
trigger:{player:'useCard'},
filter:function(event,player){
return get.type2(event.card)=='trick'&&event.card.isCard&&player.hasMark('minirenjie');
},
content:function(){
'step 0'
player.removeMark('minirenjie',1);
player.draw();
'step 1'
var card=result[0];
event.card=card;
if(['basic','trick','equip'].includes(get.type2(card))){
if(['basic','trick'].includes(get.type2(card))){
player.addTempSkill('minirejizhi_'+get.type2(card));
player.addMark('minirejizhi_'+get.type2(card),1,false);
event.finish();
}
else player.chooseTarget('集智：是否将'+get.translation(card)+'置入一名其他角色的装备栏？',function(card,player,target){
return target!=player&&target.canEquip(_status.event.card);
}).set('card',card).set('ai',function(target){
var player=_status.event.player;
var card=_status.event.card;
if((player.canEquip(_status.event.card)||get.equipValue(_status.event.card,target)<0)&&get.equipValue(card)>0) return 0;
return get.attitude(player,target);
});
}
else event.finish();
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target);
player.$give(card,target,false);
game.delay(0.5);
target.equip(card);
}
},
},
},
},
minijuejing:{
mod:{
maxHandcard:function(player,num){
return num+3;
},
},
audio:'xinjuejing',
inherit:'xinjuejing',
},
minilonghun:{
audio:'relonghun',
inherit:'relonghun',
group:['minilonghun_num','minilonghun_gain'],
subSkill:{
num:{
charlotte:true,
trigger:{player:'useCard'},
filter:function(event,player){
return event.skill=='minilonghun'&&['sha','tao'].includes(event.card.name)&&event.cards&&event.cards.length==2;
},
forced:true,
popup:false,
content:function(){
trigger.baseDamage++;
player.draw();
},
},
gain:{
charlotte:true,
trigger:{player:['useCardAfter','respondAfter']},
autodelay:function(event){
return event.name=='respond'?0.5:false;
},
filter:function(event,player){
return event.skill=='minilonghun'&&['shan','wuxie'].includes(event.card.name)&&event.cards&&event.cards.length==2&&_status.currentPhase&&_status.currentPhase!=player&&_status.currentPhase.countGainableCards(player,'he');
},
logTarget:()=>_status.currentPhase,
forced:true,
popup:false,
content:function(){
player.line(_status.currentPhase,'green');
player.gainPlayerCard(_status.currentPhase,'he',true);
},
},
},
},
minipoxi:{
audio:'drlt_poxi',
enable:'phaseUse',
filterTarget:function(card,player,target){
return target!=player&&target.countCards('h');
},
usable:1,
content:function(){
'step 0'
var chooseButton;
event.list1=[];
event.list2=[];
if(player.countCards('h')) chooseButton=player.chooseButton(3,['你的手牌',player.getCards('h'),get.translation(target.name)+'的手牌',target.getCards('h')]);
else chooseButton=player.chooseButton(3,[get.translation(target.name)+'的手牌',target.getCards('h')]);
chooseButton.set('target',target);
chooseButton.set('ai',function(button){
var player=_status.event.player;
var target=_status.event.target;
var ps=[];
var ts=[];
for(var i=0;i<ui.selected.buttons.length;i++){
var card=ui.selected.buttons[i].link;
if(target.getCards('h').includes(card)) ts.push(card);
else ps.push(card);
}
var card=button.link;
var owner=get.owner(card);
var val=get.value(card)||1;
if(owner==target){
if(ts.length>1) return 0;
if(ts.length==0||player.hp>3) return val;
return 2*val;
}
return 7-val;
});
chooseButton.set('filterButton',function(button){
for(var i=0;i<ui.selected.buttons.length;i++){
if(get.suit(button.link)==get.suit(ui.selected.buttons[i].link)) return false;
};
return true;
});
'step 1'
if(result.bool){
var list=result.links;
for(var i=0;i<list.length;i++){
if(get.owner(list[i])==player) event.list1.push(list[i]);
else event.list2.push(list[i]);
}
if(event.list1.length&&event.list2.length){
game.loseAsync({
lose_list:[
[player,event.list1],
[target,event.list2]
],
discarder:player,
}).setContent('discardMultiple');
}
else if(event.list2.length) target.discard(event.list2).discarder=player;
else player.discard(event.list1);
};
'step 2'
if(event.list1.length+event.list2.length!=3) return;
if(event.list1.length==0) player.loseMaxHp();
if(event.list1.length==2){
player.recover();
player.draw();
}
if(event.list1.length==3) player.draw(3);
},
ai:{
order:13,
result:{target:-1},
},
},
minishenwei:{
global:'minishenwei_damage',
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return !current.hasMark('minishenwei');
});
},
direct:true,
content:function(){
'step 0'
var num=(player.hp==1?[1,2]:1);
player.chooseTarget(get.prompt2('minishenwei'),function(card,player,target){
return !target.hasMark('minishenwei');
},num).set('ai',function(target){
var player=_status.event.player,num=2;
if(target==player) num=1;
return (get.attitude(player,target)-4)*num;
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minishenwei',target);
target.addMark('minishenwei',1);
}
},
marktext:'卫',
intro:{name2:'卫',content:'mark'},
ai:{
expose:0.25,
threaten:4.8,
},
subSkill:{
damage:{
trigger:{player:'damageBegin4'},
filter:function(event,player){
return player.hasMark('minishenwei')&&game.hasPlayer(function(current){
return current.hasSkill('minishenwei');
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minishenwei'),'将伤害转移给一名拥有〖神卫〗的角色',function(card,player,target){
return target.hasSkill('minishenwei');
}).set('ai',function(target){
var player=_status.event.player,att=get.attitude(player,target);
if(att>0&&player.hp>1&&target.hp<=1) return 0;
return -att+114514;
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minishenwei',target);
player.removeMark('minishenwei',player.countMark('minishenwei'));
event.trigger('removeShenWei');
trigger.player=target;
}
},
},
},
},
minielai:{
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'removeShenWei'},
filter:function(event,player){
return player.isDamaged()||game.hasPlayer(function(current){
return current!=player&&player.inRange(current);
});
},
forced:true,
content:function(){
'step 0'
if(!game.hasPlayer(function(current){
return current!=player&&player.inRange(current);
})) result.index=0;
else if(player.isHealthy()) result.index=1;
else player.chooseControl().set('choiceList',[
'回复1点体力',
'对攻击范围内的一名其他角色造成1点伤害'
]).set('ai',function(){
var num=3;
if(player.hasSkill('minikuangxi')&&game.hasPlayer(function(current){
return current.hasMark('minishenwei');
})) num--;
if(player.hp>=num&&game.hasPlayer(function(current){
return current!=player&&get.damageEffect(current,player,player)>0;
})) return 1;
return 0;
});
'step 1'
if(result.index==0){
player.recover();
event.finish();
}
else player.chooseTarget('请选择【恶来】的目标','对一名攻击范围内的一名其他角色造成1点伤害',true,function(card,player,target){
return target!=player&&player.inRange(target);
}).set('ai',function(target){
var player=_status.event.player;
return get.damageEffect(target,player,player)+114514;
});
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target);
target.damage();
}
},
ai:{combo:'minishenwei'},
},
minikuangxi:{
trigger:{source:'damageBegin1'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current.hasMark('minishenwei');
});
},
forced:true,
content:function(){
trigger.num++;
},
ai:{combo:'minishenwei'},
},
minijishi:{
mod:{
maxHandcard:function(player,num){
return num+3;
},
},
audio:'ext:活动武将/audio/skill:2',
group:['minijishi_recover','minijishi_lose'],
marktext:'药',
intro:{name2:'药',content:'mark'},
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
if(player.countMark('minijishi')>=3) return false;
return event.name!='phase'||game.phaseNumber==0;
},
forced:true,
locked:false,
content:function(){
player.addMark('minijishi',Math.min(3,3-player.countMark('minijishi')));
},
ai:{threaten:10},
subSkill:{
recover:{
audio:'minijishi',
trigger:{global:'dying'},
filter:function(event,player){
return event.player.hp<=0&&player.hasMark('minijishi');
},
prompt2:function(event,player){
return '令'+get.translation(event.player)+'回复体力至1点';
},
logTarget:'player',
check:function(event,player){
return get.recoverEffect(event.player,player,player)>0;
},
content:function(){
player.removeMark('minijishi',1);
trigger.player.recover(1-trigger.player.hp);
},
},
lose:{
audio:'minijishi',
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
var bool=false;
if(event.name=='gain'&&player==event.player) return false;
var evt=event.getl(player);
if(!evt||!evt.cards2||!evt.cards2.length) return false;
for(var i of evt.cards2){
if(get.color(i,player)=='red'&&i.original=='h') bool=true;
}
if(!bool) return false;
return player!=_status.currentPhase&&player.countMark('minijishi')<3;
},
forced:true,
locked:false,
content:function(){
var num=0,evt=trigger.getl(player);
for(var i of evt.cards2){
if(get.color(i,player)=='red'&&i.original=='h'&&num<3-player.countMark('minijishi')) num++;
}
player.addMark('minijishi',num);
},
},
},
},
minitaoxian:{
group:'minitaoxian_use',
audio:'ext:活动武将/audio/skill:2',
enable:'chooseToUse',
filterCard:function(card){
return get.suit(card)=='heart';
},
viewAs:{name:'tao'},
viewAsFilter:function(player){
if(!player.countCards('hes',{suit:'heart'})) return false;
return true;
},
position:'hes',
prompt:'将一张红桃牌当作桃使用',
check:function(card){
if(_status.event.type=='dying') return 1/Math.max(0.1,get.value(card));
return 8-get.value(card);
},
ai:{threaten:10},
subSkill:{
use:{
audio:'minitaoxian',
trigger:{global:'useCard'},
filter:function(event,player){
return event.player!=player&&event.card.name=='tao';
},
forced:true,
locked:false,
content:function(){
player.draw();
},
},
},
},
minishenzhen:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.hasMark('minijishi');
},
direct:true,
content:function(){
'step 0'
var map={};
var list=[];
for(var i=1;i<=player.countMark('minijishi');i++){
var cn=get.cnNumber(i,true);
map[cn]=i;
list.push(cn);
}
list.push('cancel2');
event.map=map;
player.chooseControl(list).set('prompt',get.prompt2('minishenzhen')).set('ai',function(){
var player=_status.event.player;
var num=Math.min(player.countMark('minijishi'),Math.max(game.countPlayer(function(current){
return get.attitude(player,current)>0&&current.isDamaged()&&get.recoverEffect(current,player,player)>0;
}),game.countPlayer(function(current){
return get.attitude(player,current)<0;
})));
if(num>0) return get.cnNumber(num,true);
return 'cancel2';
});
'step 1'
if(result.control!='cancel2'){
player.logSkill('minishenzhen');
var num=event.map[result.control]||1;
event.num=num;
player.removeMark('minijishi',num);
player.chooseControl('回血','扣血').set('prompt','请选择一种效果').set('ai',function(card){
if(game.countPlayer(function(current){
return get.attitude(player,current)>0&&current.isDamaged()&&get.recoverEffect(current,player,player)>0;
})>=game.countPlayer(function(current){
return get.attitude(player,current)<0;
})) return '回血';
return '扣血';
});
}
else event.finish();
'step 2'
event.control=result.control;
switch(result.control){
case '回血':
player.chooseTarget('请选择回复体力的目标',[1,Math.min(num,game.countPlayer(function(current){
return current.isDamaged();
}))],true,function(card,player,target){
return target.isDamaged();
}).set('ai',function(target){
var player=_status.event.player;
return get.recoverEffect(target,player,player);
});
break;
case '扣血':
player.chooseTarget('请选择失去体力的目标',[1,Math.min(num,game.countPlayer())],true).set('ai',function(target){
var player=_status.event.player;
return -get.attitude(player,target);
});
break;
}
'step 3'
if(result.bool){
result.targets.sortBySeat();
player.line(result.targets);
game.log(player,'选择了',result.targets);
if(event.control=='回血') for(var i of result.targets) i.recover();
else for(var i of result.targets) i.loseHp();
}
},
ai:{
threaten:10,
combo:'minijishi',
},
},
minigjtianyi:{
audio:'stianyi',
derivation:'minizuoxing',
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
juexingji:true,
skillAnimation:true,
animationColor:'gray',
filter:function(event,player){
return !game.hasPlayer(function(current){
return !current.getAllHistory('damage').length;
});
},
content:function(){
'step 0'
player.awakenSkill('minigjtianyi');
player.gainMaxHp(2);
player.recover();
'step 1'
player.chooseTarget(true,'令一名角色获得技能【佐幸】').set('ai',function(target){
return get.attitude(_status.event.player,target);
});
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target,'green');
target.storage.minizuoxing=player;
target.addSkillLog('minizuoxing');
}
},
},
minizuoxing:{
audio:'zuoxing',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
var target=player.storage.minizuoxing;
return player.hasSkill('minizuoxing')&&target&&target.isIn()&&target.maxHp>1;
},
check:function(event,player){
var target=player.storage.minizuoxing;
if(get.attitude(player,target)<=0) return true;
return target.maxHp>3&&!player.hasJudge('lebu');
},
prompt:function(event,player){
return get.prompt('minizuoxing')+'（令'+get.translation(player.storage.minizuoxing)+'减少1点体力上限，'+get.translation(player.storage.minizuoxing)+'当前体力上限：'+player.storage.minizuoxing.maxHp+'）';
},
content:function(){
player.line(player.storage.minizuoxing,'fire');
player.storage.minizuoxing.loseMaxHp();
player.addTempSkill('minizuoxing_2');
},
subSkill:{
'2':{
charlotte:true,
audio:'zuoxing',
enable:'phaseUse',
usable:1,
filter:function(event,player){
for(var i of lib.inpile){
if(get.type(i)=='trick'&&event.filterCard({name:i,isCard:true},player,event)) return true;
}
return false;
},
chooseButton:{
dialog:function(event,player){
var list=[];
for(var i of lib.inpile){
if(get.type(i)=='trick'&&event.filterCard({name:i,isCard:true},player,event)) list.push(['锦囊','',i]);
}
return ui.create.dialog('佐幸',[list,'vcard']);
},
check:function(button){
return _status.event.player.getUseValue({name:button.link[2],isCard:true});
},
backup:function(links,player){
return {
audio:'zuoxing',
viewAs:{
name:links[0][2],
isCard:true,
},
filterCard:()=>false,
selectCard:-1,
popname:true,
}
},
prompt:function(links,player){
return '请选择'+get.translation(links[0][2])+'的目标';
},
},
ai:{
order:1,
result:{player:1},
},
},
},
},
minihuishi:{
audio:'sghuishi',
enable:'phaseUse',
limited:true,
skillAnimation:true,
animationColor:'water',
filterTarget:true,
selectTarget:function(){
var player=_status.event.player;
for(var target of game.filterPlayer()){
var list=target.getSkills(null,false,false).filter(function(skill){
if(target.awakenedSkills.includes(skill)) return false;
var info=lib.skill[skill];
return info&&info.juexingji;
});
var bool1=(!list.length&&player.maxHp>=3);
var bool2=(list.length&&player.maxHp>=game.players.length);
target.prompt((bool1?'可摸牌':'')+((bool1&&bool2)?'<br>':'')+(bool2?'可觉醒':''));
}
return 1;
},
content:function(){
'step 0'
player.awakenSkill('minihuishi');
var list=target.getSkills(null,false,false).filter(function(skill){
if(target.awakenedSkills.includes(skill)) return false;
var info=lib.skill[skill];
return info&&info.juexingji;
});
if(!list.length&&player.maxHp>=3){
target.draw(4);
event.goto(2);
return;
}
if(list.length&&player.maxHp>=game.players.length){
if(list.length==1) event._result={control:list[0]};
else player.chooseControl(list).set('prompt','选择一个觉醒技，令'+get.translation(target)+'可无视条件发动该技能');
}
else event.goto(2);
'step 1'
target.storage.minihuishi_mark=result.control;
target.markSkill('minihuishi_mark');
var info=lib.skill[result.control];
if(info.filter&&!info.charlotte&&!info.minihuishi_filter){
info.minihuishi_filter=info.filter;
info.filter=function(event,player){
if(player.storage.minihuishi_mark) return true;
return this.minihuishi_filter.apply(this,arguments);
};
}
'step 2'
player.loseMaxHp(2);
},
subSkill:{mark:{intro:{content:'发动【$】时无视条件'}}},
ai:{
order:0.1,
expose:0.2,
result:{
target:function(player,target){
if(player.maxHp<5) return 0;
var list=target.getSkills(null,false,false).filter(function(skill){
var info=lib.skill[skill];
return info&&info.juexingji;
});
if(list.length&&player.maxHp>=game.players.length) return 10*list.length;
if(target.hasJudge('lebu')||target.hasSkillTag('nogain')) return 0;
if(!list.length&&player.maxHp>=3) return 4;
return 0;
},
},
},
},
minishenfu:{
audio:'shenfu',
trigger:{player:['phaseEnd','phaseAfter']},
filter:function(event,player,name){
if(name=='phaseEnd') return true;
return player.getHistory('useSkill',function(evt){
return evt.skill=='minishenfu';
}).length;
},
direct:true,
content:function(){
'step 0'
if(event.triggername=='phaseAfter'){
player.logSkill('minishenfu');
player.draw(Math.min(5,player.getHistory('useSkill',function(evt){
return evt.skill=='minishenfu';
}).length-1));
event.finish();
return;
}
event.targets=[];
event.goto(player.countCards('h')%2==1?1:4);
'step 1'
player.chooseTarget(get.prompt('minishenfu'),'对一名其他角色造成1点雷属性伤害',function(card,player,target){
return target!=player&&!_status.event.getParent().targets.includes(target);
}).set('ai',function(target){
var player=_status.event.player;
return get.damageEffect(target,player,player,'thunder')*(target.hp==1?2:1);
});
'step 2'
if(result.bool){
var target=result.targets[0];
event.target=target;
targets.push(target);
player.logSkill('minishenfu',target,'thunder');
target.damage('thunder');
}
else event.finish();
'step 3'
if(target.isDead()) event.goto(1);
else event.finish();
'step 4'
if(!game.hasPlayer(function(target){
return !event.targets.includes(target);
})){event.finish();return;}
player.chooseTarget(get.prompt('minishenfu'),'令一名角色摸一张牌或弃置其一张手牌',function(card,player,target){
return !_status.event.getParent().targets.includes(target);
}).set('ai',function(target){
var att=get.attitude(_status.event.player,target);
var delta=target.hp-target.countCards('h');
if(Math.abs(delta)==1&&get.sgn(delta)==get.sgn(att)) return 3*Math.abs(att);
if(att>0||target.countCards('h')>0) return Math.abs(att);
return 0;
});
'step 5'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minishenfu',target,'wood');
targets.push(target);
if(target.countCards('h')==0) event._result={index:0};
else player.chooseControl('摸一张牌','弃置卡牌').set('prompt','选择一项令'+get.translation(target)+'执行…').set('goon',get.attitude(player,target)>0?0:1).set('ai',()=>_status.event.goon);
}
else event.finish();
'step 6'
if(result.index==0) target.draw();
else player.discardPlayerCard(target,'he',true);
'step 7'
if(target.hp==target.countCards('h')) event.goto(4);
},
ai:{expose:0.25},
},
miniqixian:{
mod:{
maxHandcardBase:function(player,num){
return 7;
},
},
trigger:{player:'phaseUseEnd'},
direct:true,
content:function(){
'step 0'
player.chooseCard(get.prompt('miniqixian'),'将一张牌移出游戏，于回合结束时归还手牌中','he').set('ai',function(card){
var player=_status.event.player;
if(player.countCards('h')%2==0&&get.position(card)=='h'&&game.hasPlayer(function(target){
return get.damageEffect(target,player,player,'thunder')>0;
})) return 15;
if(get.position(card)=='h'&&player.needsToDiscard()) return 10;
if(get.position(card)=='e'&&get.value(card)<=0) return 5;
return (get.position(card)=='h'?2:1)*-get.value(card);
});
'step 1'
if(result.bool){
player.logSkill('miniqixian');
player.addTempSkill('miniqixian2',{player:'miniqixian2After'});
player.addToExpansion(result.cards,player,'give').gaintag.add('miniqixian2');
}
},
},
miniqixian2:{
charlotte:true,
trigger:{player:'phaseAfter'},
forced:true,
content:function(){
player.gain(player.getExpansions('miniqixian2'),'gain2');
},
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
},
minifeifu:{
mod:{
aiValue:function(player,card,num){
if(get.name(card)!='shan'&&get.color(card)!='black') return;
var cards=player.getCards('hs',function(card){
return get.name(card)=='shan'||get.color(card)=='black';
});
cards.sort(function(a,b){
return (get.name(b)=='shan'?1:2)-(get.name(a)=='shan'?1:2);
});
var geti=function(){
if(cards.includes(card)){
return cards.indexOf(card);
}
return cards.length;
};
if(get.name(card)=='shan') return Math.min(num,[6,4,3][Math.min(geti(),2)])*0.6;
return Math.max(num,[6.5,4,3][Math.min(geti(),2)]);
},
aiUseful:function(){
return lib.skill.minifeifu.mod.aiValue.apply(this,arguments);
},
},
audio:'ext:活动武将/audio/skill:2',
enable:['chooseToRespond','chooseToUse'],
filterCard:function(card){
return get.color(card)=='black';
},
locked:false,
position:'hes',
viewAs:{name:'shan'},
viewAsFilter:function(player){
if(!player.countCards('hes',{color:'black'})) return false;
},
prompt:'将一张黑色牌当作【闪】使用或打出',
check:()=>1,
ai:{
order:2,
respondShan:true,
skillTagFilter:function(player){
if(!player.countCards('hes',{color:'black'})) return false;
},
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondShan')&&current<0) return 0.6
},
},
},
},
minisijun:{
audio:'sijun',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.countMark('yizhao')>ui.cardPile.childNodes.length;
},
check:function(event,player){
return ui.cardPile.childNodes.length;
},
content:function(){
'step 0'
player.removeMark('yizhao',player.countMark('yizhao'));
if(!ui.cardPile.childNodes.length) event.finish();
'step 1'
var pile=Array.from(ui.cardPile.childNodes);
if(pile.length<3) return;
var bool=false,max=Math.pow(2,Math.min(100,pile.length)),index;
for(var i=0;i<max;i++){
var num=0;
index=i.toString(2);
while(index.length<pile.length){
index=('0'+index);
}
for(var k=0;k<index.length;k++){
if(index[k]=='1') num+=get.number(pile[k]);
if(num>36) break;
}
if(num==36){
bool=true;
break;
}
}
if(bool){
var cards=[];
for(var k=0;k<index.length;k++){
if(index[k]=='1') cards.push(pile[k]);
}
player.gain(cards,'gain2');
event.finish();
}
'step 2'
var total=0,cards=[];
for(var i=0;i<ui.cardPile.childNodes.length;i++){
var card=ui.cardPile.childNodes[i];
total+=get.number(card);
cards.push(card);
if(total>=36) break;
}
if(cards.length) player.gain(cards,'gain2');
},
},
//神二乔
minishuangshu:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseZhunbeiBegin'},
frequent:true,
content:function(){
var cards=get.cards(2),bool1=false,bool2=false;
game.cardsGotoOrdering(cards);
player.showCards(cards,get.translation(player)+'发动了【双姝】');
for(var i of cards){
if(get.suit(i,false)=='diamond') bool1=true;
if(get.suit(i,false)=='heart') bool2=true;
}
if(bool1){
game.log(player,'强化了技能','#g【娉婷】');
player.addTempSkill('minishuangshu_pingting');
}
if(bool2){
game.log(player,'强化了技能','#g【移筝】');
player.addTempSkill('minishuangshu_yizheng');
}
if(!bool1&&!bool2) player.gain(cards,'gain2');
else game.cardsDiscard(cards);
},
subSkill:{
pingting:{
charlotte:true,
mark:true,
marktext:'婷',
intro:{content:'本回合发动【双姝】可多选择一项'},
},
yizheng:{
charlotte:true,
mark:true,
marktext:'筝',
intro:{content:'本回合发动【移筝】可多选择一项'},
},
},
},
minipingting:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
player.chooseButton([
'###'+get.prompt('minipingting')+'###'+'选择并于本阶段获得下列至多'+get.cnNumber(player.hasSkill('minishuangshu_pingting')?3:2)+'项效果',[[
['distance','本阶段使用的第一张牌无距离限制'],
['return','本阶段使用第二张牌指定目标后获得此牌'],
['draw','本阶段使用的第三张牌结算完成后摸两张牌'],
['reuse','本阶段使用的第四张牌额外结算一次'],
],'textbutton']
]).set('ai',function(button){
var player=_status.event.player;
var num=player.countCards('hs',function(card){
return player.hasUseTarget(card)&&player.getUseValue(card)>0;
});
switch(button.link){
case 'distance':{
if(game.hasPlayer(function(target){
return player.hasCard('hs',function(card){
return player.canUse(card,target,false)&&player.canUse(card,target)&&get.effect(target,card,player,player)>0;
});
})) return 1;
return 0.5;
break;
}
case 'return':{
if(num>=2) return 2;
return 0.6;
break;
}
case 'draw':{
if(num>=3) return 4;
return 0.7;
break;
}
case 'reuse':{
if(num>=4) return 3;
return 0.8;
break;
}
}
}).set('selectButton',[1,player.hasSkill('minishuangshu_pingting')?3:2]);
'step 1'
if(result.bool){
player.logSkill('minipingting');
for(var i of result.links) player.addTempSkill('minipingting_'+i,{player:'phaseUseAfter'});
}
},
subSkill:{
distance:{
charlotte:true,
onremove:true,
mark:true,
marktext:'①',
intro:{content:'本阶段使用的第一张牌无距离限制'},
//为适配联机进行的代码退化[doge]
mod:{
targetInRange:function(card,player,target){
//if(game.online){
if(!player.storage.minipingting_distance) return true;
//}
/*
else{
var evt=_status.event.getParent('phaseUse');
if(evt&&evt.name=='phaseUse'&&!player.getHistory('useCard',function(evt2){
return evt2.getParent('phaseUse')==evt;
}).length) return true;
}
*/
},
},
trigger:{player:'useCard1'},
filter:function(event,player){
return !player.storage.minipingting_distance/*&&player.isOnline()*/;
},
direct:true,
firstDo:true,
content:function(){
player.storage.minipingting_distance=true;
},
},
return:{
charlotte:true,
mark:true,
marktext:'②',
intro:{content:'本阶段使用第二张牌指定目标后获得此牌'},
audio:'minipingting',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
if(!event.isFirstTarget) return false;
var evt=event.getParent('phaseUse');
return evt&&evt.player==player&&player.getHistory('useCard',function(evt2){
return evt2.getParent('phaseUse')==evt;
}).indexOf(event.getParent())==1&&event.cards&&event.cards.filterInD().length;
},
forced:true,
content:function(){
player.gain(trigger.cards.filterInD(),'gain2');
},
ai:{
result:{
player:function(card,player,target){
var evt=_status.event.getParent('phaseUse');
if(['equip','delay'].includes(get.type(card))&&evt&&evt.player==player&&player.getHistory('useCard',function(evt2){
return evt2.getParent('phaseUse')==evt;
}).length==1) return 0.3;
},
},
},
},
draw:{
charlotte:true,
mark:true,
marktext:'③',
intro:{content:'本阶段使用的第三张牌结算完成后摸两张牌'},
audio:'minipingting',
trigger:{player:'useCardAfter'},
filter:function(event,player){
var evt=event.getParent('phaseUse');
return evt&&evt.player==player&&player.getHistory('useCard',function(evt2){
return evt2.getParent('phaseUse')==evt;
}).indexOf(event)==2;
},
forced:true,
content:function(){
player.draw(2);
},
},
reuse:{
//group:'minipingting_buff',
charlotte:true,
mark:true,
marktext:'④',
intro:{content:'本阶段使用的第四张牌额外结算一次'},
audio:'minipingting',
trigger:{player:'useCard'},
filter:function(event,player){
var evt=event.getParent('phaseUse');
return evt&&evt.player==player&&player.getHistory('useCard',function(evt2){
return evt2.getParent('phaseUse')==evt;
}).indexOf(event)==3&&event.targets/*&&!event.reuse_buff*/;
},
forced:true,
content:function(){
//trigger.reuse_buff=player;
trigger.effectCount++;
game.log(trigger.card,'额外结算一次');
},
ai:{
result:{
player:function(card,player,target){
var evt=_status.event.getParent('phaseUse');
if(card.name=='tiesuo'&&evt&&evt.player==player&&player.getHistory('useCard',function(evt2){
return evt2.getParent('phaseUse')==evt;
}).length==3) return 'zerotarget';
},
},
},
},
/*
buff:{
charlotte:true,
trigger:{global:'useCardToTargeted'},
filter:function(event,player){
return event.parent.reuse_buff==player&&event.targets.length==event.parent.triggeredTargets4.length;
},
direct:true,
lastDo:true,
content:function(){
trigger.getParent().targets=trigger.getParent().targets.concat(trigger.targets);
trigger.getParent().triggeredTargets4=trigger.getParent().triggeredTargets4.concat(trigger.targets);
},
},
*/
},
},
miniyizheng:{
canMove:function(type){
return game.hasPlayer(function(target){
return target.countCards('e',function(card){
return game.hasPlayer(function(current){
return current!=target&&current.canEquip(card)&&get.subtype(card)==type;
});
});
});
},
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
if(!player.canMoveCard(null,true)) return false;
return [1,2,3,4].some(num=>lib.skill.miniyizheng.canMove('equip'+num));
},
direct:true,
content:function(){
'step 0'
var choiceList=[];
if(lib.skill.miniyizheng.canMove('equip1')) choiceList.push(['equip1','移动一张武器牌']);
if(lib.skill.miniyizheng.canMove('equip2')) choiceList.push(['equip2','移动一张防具牌']);
if([3,4].some(num=>lib.skill.miniyizheng.canMove('equip'+num))) choiceList.push(['equip6','移动一张坐骑牌']);
player.chooseButton([
'###'+get.prompt('miniyizheng')+'###'+'选择移动至多'+get.cnNumber(player.hasSkill('minishuangshu_yizheng')?2:1)+'种副类别的装备牌',[choiceList,'textbutton']
]).set('ai',function(button){
var player=_status.event.player,choice=[];
for(var i of ['equip2','equip6','equip1']){
if(game.hasPlayer(function(target){
if(current==player||get.attitude(player,target)>=0) return false;
return target.countCards('e',function(card){
return game.hasPlayer(function(current){
return current.canEquip(card)&&get.subtype(card)==i&&get.value(card,target)>0&&get.attitude(player,current)>0&&get.value(card,current)>0;
});
});
})&&!choice.includes(['equip3','equip4'].includes(i)?'equip6':i)) choice.push(['equip3','equip4'].includes(i)?'equip6':i);
}
if(choice.includes(button.link)) return 3-choice.indexOf(button.link);
return -1;
}).set('selectButton',[1,player.hasSkill('minishuangshu_yizheng')?2:1]);
'step 1'
if(result.bool){
result.links.sort(function(a,b){
return ['equip1','equip2','equip6'].indexOf(a)-['equip1','equip2','equip6'].indexOf(b);
});
player.logSkill('miniyizheng');
event.choiceList=result.links;
event.count=0;
event.list=[];
}
else event.finish();
'step 2'
var subtype=event.choiceList.shift();
event.list.push(subtype);
if(subtype=='equip6'){
event.list.addArray(['equip3','equip4']);
event.list.remove('equip6');
}
'step 3'
player.chooseTarget(2,function(card,player,target){
if(ui.selected.targets.length){
var from=ui.selected.targets[0];
return target!=from&&from.countCards('e',card=>target.canEquip(card)&&_status.event.list.includes(get.subtype(card)));
}
return _status.event.list.some(type=>lib.skill.miniyizheng.canMove(type));
}).set('ai',function(target){
var player=_status.event.player;
if(!ui.selected.targets.length){
var getMoveValue=function(player,types){
var cards=player.getCards('e',function(card){
return game.hasPlayer(function(current){
return current!=player&&current.canEquip(card)&&types.includes(get.subtype(card));
});
});
cards.sort((a,b)=>get.value(b,player)-get.value(a,player));
return get.value(cards[0],player);
};
return (1-get.sgn(get.attitude(player,target)))*getMoveValue(target,_status.event.list);
}
var from=ui.selected.targets[0];
var cards=from.getCards('e',function(card){
return game.hasPlayer(function(current){
return current!=from&&current.canEquip(card)&&types.includes(get.subtype(card));
});
});
cards.sort((a,b)=>get.value(b,from)-get.value(a,from));
return get.sgn(get.attitude(player,target))*get.value(cards[0],target);
}).set('multitarget',true).set('targetprompt',['被移走','移动目标']).set('prompt','请选择移动的目标').set('prompt2','将一名角色装备区中的'+get.translation(event.list[0])+'移动到另一名角色的装备区中').set('list',event.list);
'step 4'
if(result.bool){
player.line2(result.targets,'green');
event.targets=result.targets;
}
else event.goto(8);
'step 5'
game.delay();
'step 6'
var cards=targets[0].getCards('e',function(card){
return event.list.includes(get.subtype(card))&&targets[1].canEquip(card);
});
if(cards.length==1) event._result={bool:true,links:cards};
else player.choosePlayerCard('e',true,targets[0]).set('filterButton',function(button){
return _status.event.cards.includes(button.link);
}).set('ai',function(button){
var player=_status.event.player;
var targets=_status.event.targets;
var from=targets[0],to=targets[1];
if(get.sgn(get.attitude(player,from))*get.value(button.link,from)>0) return 1/114514;
return get.sgn(get.attitude(player,to))*get.value(button.link,to);
}).set('cards',cards).set('targets',result.targets);
'step 7'
if(result.bool){
var link=result.links[0];
if(get.position(link)=='e'){
event.count++;
targets[1].equip(link);
targets[0].$give(link,targets[1],false);
}
game.delay();
}
'step 8'
if(event.choiceList.length){
event.list=[];
event.goto(2);
}
'step 9'
switch(event.count){
case 1: player.recover(); break;
case 2: player.addTempSkill('miniyizheng_draw',{player:'phaseBegin'}); break;
}
},
subSkill:{
draw:{
charlotte:true,
mark:true,
intro:{content:'失去一张牌后，摸一张牌'},
audio:'miniyizheng',
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
var evt=event.getl(player);
if(!evt||!evt.cards2||!evt.cards2.length) return false;
return true;
},
forced:true,
content:function(){
player.draw(trigger.getl(player).cards2.length);
},
},
},
},
//神貂蝉
minimeihun:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseJieshuBegin',target:'useCardToTargeted'},
filter:function(event,player){
if(event.name!='phaseJieshu'&&game.getGlobalHistory('useCard',function(evt){
return evt.card.name=='sha'&&evt.targets.includes(player);
}).indexOf(event.getParent())!=0) return false;
return game.hasPlayer(function(current){
return current!=player&&current.countCards('he');
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('minimeihun'),function(card,player,target){
return target!=player&&target.countCards('he');
}).set('ai',function(target){
var player=_status.event.player;
return -get.sgn(get.attitude(player,target))*target.countCards('he');
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('minimeihun',target);
event.target=target;
player.chooseControl(lib.suit.slice(0).reverse()).set('prompt','请声明一个花色').set('ai',function(){
var target=_status.event.target,cards=target.getCards('he');
var suits=lib.suit.slice(0);
suits.sort(function(a,b){
var num=function(suit){
return cards.filter(function(card){
return get.suit(card)==suit;
}).length;
};
return num(b)-num(a);
});
return suits[0];
}).set('target',target);
}
else event.finish();
'step 2'
var suit=result.control;
player.chat(get.translation(suit+2));
game.log(player,'选择了','#y'+get.translation(suit+2));
if(target.countCards('he',{suit:suit})) player.gain(target.getCards('he',{suit:suit}),target,'giveAuto');
else if(target.countCards('h')) player.gainPlayerCard(target,true,'h','visible');
},
},
minihuoxin:{
audio:'ext:活动武将/audio/skill:2',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(function(target){
return lib.skill.minihuoxin.filterTarget(null,player,target);
})&&player.countCards('he');
},
filterTarget:function(card,player,target){
if(!ui.selected.targets.length){
return game.hasPlayer(function(current){
return current!=target&&target.canCompare(current);
});
}
return ui.selected.targets[0].canCompare(target);
},
selectTarget:2,
multitarget:true,
multiline:true,
targetprompt:['发起人','拼点目标'],
filterCard:true,
check:function(card){
return 1/(get.value(card)||0.5);
},
position:'he',
usable:1,
content:function(){
'step 0'
event.list=[];
targets[0].chooseToCompare(targets[1]);
'step 1'
for(var target of targets){
if(result.winner!==target) event.list.push(target);
}
event.list.sortBySeat();
var suits=lib.suit.slice(0).reverse();
suits.push('cancel2');
player.chooseControl(suits).set('prompt',get.translation(event.list)+'拼点没赢，是否声明一个花色令其进行选择？').set('ai',function(){
var currents=_status.event.list,cards=[];
for(var i of currents) cards.addArray(i.getCards('he'));
var suits=lib.suit.slice(0);
suits.sort(function(a,b){
var num=function(suit){
return cards.filter(function(card){
return get.suit(card)==suit;
}).length;
};
return num(b)-num(a);
});
return suits[0];
}).set('list',event.list);
'step 2'
var suit=result.control;
if(suit!='cancel2'){
player.chat(get.translation(suit+2));
game.log(player,'选择了','#y'+get.translation(suit+2));
event.suit=suit;
}
else event.finish();
'step 3'
var target=event.list.shift();
event.target=target;
player.line(target);
if(!target.countCards('he',{suit:event.suit})) event._result={index:1};
else target.chooseControl().set('choiceList',[
'交给'+get.translation(player)+'所有的'+get.translation(event.suit)+'牌',
'不能使用或打出'+get.translation(event.suit)+'牌直到你的下个回合结束'
]).set('ai',()=>1);
'step 4'
if(result.index==0) player.gain(target.getCards('he',{suit:event.suit}),target,'giveAuto');
else{
target.addTempSkill('minihuoxin_use',{player:'phaseEnd'});
target.markAuto('minihuoxin_use',[event.suit]);
}
'step 5'
if(event.list.length) event.goto(3);
},
ai:{
order:12,
result:{
target:function(player,target){
return -target.countCards('h');
},
},
},
subSkill:{
use:{
charlotte:true,
onremove:true,
intro:{name:'魅惑',content:'不能使用或打出$花色的牌'},
mod:{
cardEnabled2:function(card,player){
if(player.getStorage('minihuoxin_use').includes(get.suit(card))) return false;
},
},
},
},
},
//神太
minidulie:{
audio:'dulie',
inherit:'dulie',
filter:function(event,player){
return event.card.name=='sha';
},
group:'minidulie_dying',
subSkill:{
dying:{
audio:'tspowei2',
trigger:{player:'dying'},
filter:function(event,player){
return !player.storage.minidulie_dying;
},
skillAnimation:true,
animationColor:'fire',
direct:true,
content:function(){
player.storage.minidulie_dying=true;
var num=game.countPlayer(current=>current.hasMark('minidulie'));
if(num){
player.logSkill('minidulie_dying');
player.recover(num-player.hp);
}
},
},
},
},
minichongwei:{
audio:'tspowei3',
forced:true,
group:['minichongwei_init','minichongwei_move','minichongwei_use','minichongwei_remove'],
subSkill:{
remove:{
audio:'tspowei3',
trigger:{global:'damageEnd'},
filter:function(event,player){
return event.player&&event.player.isIn()&&event.player.hasMark('minidulie');
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.removeMark('minidulie',trigger.player.countMark('minidulie'));
},
},
use:{
audio:'tspowei3',
trigger:{global:'phaseBegin'},
filter:function(event,player){
return event.player!=player&&event.player.hasMark('minidulie')&&(player.countCards('h')>0||player.hp>=event.player.hp&&event.player.countCards('h')>0);
},
direct:true,
content:function(){
'step 0'
var list=[],target=trigger.player,choiceList=[
'弃置一张牌并对其造成1点伤害',
'获得其一张手牌',
];
event.target=target;
if(player.hasCard(function(card){
return lib.filter.cardDiscardable(card,player,'minichongwei_use');
},'h')) list.push('选项一');
else choiceList[0]='<span style="opacity:0.5">'+choiceList[0]+'</span>';
if(player.hp>=target.hp&&target.countCards('h')>0) list.push('选项二');
else choiceList[1]='<span style="opacity:0.5">'+choiceList[1]+'</span>';
player.chooseControl(list,'cancel2').set('prompt',get.prompt('minichongwei',target)).set('choiceList',choiceList).set('ai',function(){
var evt=_status.event.getParent();
if(evt.player.hasCard(function(card){
return lib.filter.cardDiscardable(card,evt.player,'minichongwei_use')&&get.value(card,evt.player)<7;
},'h')&&get.damageEffect(evt.target,evt.player,evt.player)>0) return '选项一';
if(evt.player.hp>=evt.target.hp&&evt.target.countCards('h')>0&&get.attitude(evt.player,evt.target)<=0&&!evt.target.hasSkillTag('noh')) return '选项二';
return 'cancel2';
});
'step 1'
if(result.control!='cancel2'){
if(result.control=='选项二'){
player.logSkill('minichongwei_use',target);
player.gainPlayerCard(target,'h',true);
event.goto(3);
}
}
else event.finish();
'step 2'
player.chooseToDiscard('h',true).logSkill=['minichongwei_use',target];
target.damage();
'step 3'
player.addTempSkill('tspowei_inRange');
},
ai:{expose:0.2},
},
init:{
audio:'tspowei3',
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
if(!lib.skill.minichongwei.subSkill.init.logTarget(event,player).length) return false;
return event.name!='phase'||game.phaseNumber==0;
},
logTarget:function(event,player){
return game.filterPlayer((current)=>current!=player&&!current.hasMark('minidulie'));
},
forced:true,
content:function(){
var list=game.filterPlayer((current)=>current!=player&&!current.hasMark('minidulie')).sortBySeat();
for(var i of list) i.addMark('minidulie',1,false);
},
},
move:{
audio:'tspowei3',
trigger:{player:'phaseBegin'},
filter:function(event,player){
return game.hasPlayer((current)=>current!=player&&current.hasMark('minidulie'));
},
forced:true,
content:function(){
var list=game.filterPlayer((current)=>current!=player&&current.hasMark('minidulie')).sortBySeat();
var map={};
for(var i of list){
var num=i.countMark('minidulie');
i.removeMark('minidulie',num);
map[i.playerid]=num;
}
for(var i of list){
var next=i.next;
if(next==player) next=next.next;
next.addMark('minidulie',map[i.playerid]);
}
},
},
},
},
minipowei:{
unique:true,
derivation:'minishenzhu',
audio:'tspowei1',
trigger:{global:'phaseEnd'},
filter:function(event,player){
return !game.hasPlayer(current=>current.hasMark('minidulie'));
},
forced:true,
skillAnimation:true,
animationColor:'metal',
content:function(){
'step 0'
player.awakenSkill('minipowei');
player.addSkillLog('minishenzhu');
'step 1'
var num=0;
game.countPlayer2(current=>{
var history=current.actionHistory;
for(var i=history.length-1;i>=0;i--){
num+=history[i].useSkill.filter(evt=>evt.skill=='minichongwei_remove').length;
if(history[i].isRound) break;
}
});
if(num) player.draw(num);
},
},
minishenzhu:{
audio:'shenzhu',
inherit:'shenzhu',
group:'minishenzhu_wusheng',
subSkill:{
wusheng:{
audio:'shenzhu',
trigger:{player:'phaseBegin'},
forced:true,
content:function(){
var card=get.cardPile(card=>card.name=='sha');
if(card) player.gain(card,'gain2');
},
},
},
},
//喵
//核心逗猫
minidoumao:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:['phaseBegin','phaseEnd']},
filter:function(event,player){
return player.countCards('he');
},
direct:true,
content:function(){
'step 0'
if(event.triggername=='phaseEnd'){
player.logSkill('minidoumao');
player.chooseToDiscard(true);
event.finish();
}
else{
player.chooseCardTarget({
prompt:get.prompt('minidoumao'),
prompt2:'弃置一张牌，失去【逗猫】并令一名其他角色获得【逗猫】，然后其摸一张牌',
//filterTarget:function(card,player,target){
//return !target.hasSkill('minidoumao');
//},
filterTarget:lib.filter.notMe,
filterCard:lib.filter.cardDiscardable,
position:'he',
ai1:function(card){
return 7-get.value(card);
},
ai2:function(target){
var player=_status.event.player;
var att=get.attitude(player,target);
//集智
if(target.hasSkill('minimiaojizhi')) return 10*(-get.sgn(att));
//枪舞
if(player.hasSkill('minimiaoqiangwu')){
player._minimiaoqiangwu_check=true;
var cards=player.getCards('hs',function(card){
return card.name=='sha'&&player.canUse(card,target);
});
if(cards.length>1){
if(att>=0) return 0;
var sum=0;
for(var card of cards) sum+=get.effect(target,card,player,player);
if(sum<=0) return 0;
else{
while(sum<1||sum>10){
if(sum<1) sum=sum*10;
if(sum>10) sum=sum/10;
}
return sum;
}
}
return 0;
}
if(player._minimiaoqiangwu_check) delete player._minimiaoqiangwu_check;
//顺位传递
var players=game.filterPlayer(function(current){
if(current.hasSkill('minimiaojizhi')||current.hasSkill('minimiaoqiangwu')) return false;
return current!=player&&!current.isTurnedOver()&&get.attitude(player,current)>0&&get.attitude(current,player)>0;
}).sortBySeat(player);
if(players.length) return target==players[0]?(att*(target.getSkills().some(skill=>skill.indexOf('minimiao')==0)?0.5:1)):-1;
//普通传递
return get.sgn(att)+att/114514;
},
});
}
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minidoumao',target);
player.discard(result.cards);
player.removeSkill('minidoumao');
target.addSkillLog('minidoumao');
}
else event.finish();
'step 2'
target.draw();
},
mark:true,
marktext:'猫',
intro:{content:'嘿！有只猫在你身边欸！'},
},
//喵蔡文姬
minimiaobeige:{
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'damageEnd'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.source&&event.source.isIn()&&event.player.isIn()&&player.countCards('he');
},
direct:true,
preHidden:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt2('minimiaobeige',trigger.player)).set('ai',function(card){
var player=_status.event.player;
var target=_status.event.list[0];
var source=_status.event.list[1];
var att1=get.attitude(player,target);
var att2=get.attitude(player,source);
switch(get.suit(card,player)){
case 'heart': case 'diamond':
if(att1>0) return 10-get.value(card);
return 0;
break;
case 'club':
if(att2<0) return (7-get.value(card))*(source.countCards('he')?1:0);
return 0;
break;
case 'spade':
if(att2>0&&source.isTurnedOver()) return 20-get.value(card);
if(att2<0&&!source.isTurnedOver()) return 10-get.value(card);
return 0;
break;
}
}).setHiddenSkill('minimiaobeige').set('list',[trigger.player,trigger.source]).logSkill='minimiaobeige';
'step 1'
if(result.bool){
switch(get.suit(result.cards[0],player)){
case 'heart':
player.line(trigger.player);
trigger.player.recover();
break;
case 'diamond':
player.line(trigger.player);
trigger.player.draw(2);
break;
case 'club':
player.line(trigger.source);
trigger.source.chooseToDiscard('he',2,true);
break;
case 'spade':
player.line(trigger.source);
trigger.source.turnOver();
break;
}
if(player.hasSkill('minidoumao')){event.finish();return;}
player.chooseButton([
'悲歌：是否额外选择一个效果执行',
[[
['heart','令'+get.translation(trigger.player)+'回复1点体力'],
['diamond','令'+get.translation(trigger.player)+'摸两张牌'],
['club','令'+get.translation(trigger.source)+'弃置两张牌'],
['spade','令'+get.translation(trigger.source)+'将武将牌翻面']
].filter(list=>list[0]!=get.suit(result.cards[0],player)),'textbutton']
]).set('ai',function(button){
var player=_status.event.player;
var target=_status.event.list[0];
var source=_status.event.list[1];
var att1=get.attitude(player,target);
var att2=get.attitude(player,source);
switch(button.link){
case 'heart':
if(att1>0) return 3;
return 0;
break;
case 'diamond':
if(att1>0) return 2;
return 0;
break;
case 'club':
if(att2<0) return 1;
return 0;
break;
case 'spade':
if(att2>0&&source.isTurnedOver()) return 5;
if(att2<0&&!source.isTurnedOver()) return 4;
return 0;
break;
}
}).set('list',[trigger.player,trigger.source]);
}
else event.finish();
'step 2'
if(result.bool){
if(result.links.includes('heart')){
player.line(trigger.player);
trigger.player.recover();
}
if(result.links.includes('diamond')){
player.line(trigger.player);
trigger.player.draw(2);
}
if(result.links.includes('club')){
player.line(trigger.source);
trigger.source.chooseToDiscard('he',2,true);
}
if(result.links.includes('spade')){
player.line(trigger.source);
trigger.source.turnOver();
}
}
},
ai:{expose:0.25},
},
minimiaoduanchang:{
group:'duanchang',
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'dying'},
filter:function(event,player){
if(player.hasSkill('minidoumao')) return false;
return event.getParent().name=='damage'&&event.source&&event.source.countCards('he');
},
forced:true,
logTarget:'source',
content:function(){
trigger.source.chooseToDiscard('he',true,2);
},
},
//喵貂蝉
minimiaolijian:{
audio:'ext:活动武将/audio/skill:2',
inherit:'sblijian',
filter:function(event,player){
return !player.hasSkill('minidoumao')&&lib.skill.sblijian.filter(event,player)&&!player.getStat('skill').minimiaolijian_lijian;
},
usable:1,
group:'minimiaolijian_lijian',
subSkill:{
lijian:{
audio:'minimiaolijian',
inherit:'sblijian',
filter:function(event,player){
return player.hasSkill('minidoumao')&&lib.skill.sblijian.filter(event,player)&&!player.getStat('skill').minimiaolijian;
},
usable:1,
selectCard:[2,Infinity],
selectTarget:()=>ui.selected.cards.length,
filterOk:()=>ui.selected.targets.length==ui.selected.cards.length,
prompt:()=>lib.translate.minimiaolijian_info,
},
},
},
minimiaobiyue:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseJieshuBegin'},
forced:true,
content:function(){
player.draw(Math.min(5,game.countPlayer2(function(current){
return current.getHistory('damage').length>0;
})+(player.hasSkill('minidoumao')?1:2)));
},
},
//喵蔡夫人
minimiaoqieting:{
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'phaseEnd'},
filter:function(event,player){
return event.player!=player;
},
direct:true,
content:function(){
'step 0'
var list=['摸一张牌'],target=trigger.player,str=get.translation(target);
event.target=target;
if(target.hasSkill('minidoumao')&&target.countCards('h')>0) list.push('观看'+str+'的两张手牌并获得其中一张');
if(!target.hasSkill('minidoumao')&&target.countCards('e',function(card){
return player.canEquip(card);
})>0) list.push('将'+str+'装备区内的一张牌移动至自己的装备区');
player.chooseControl('cancel2').set('choiceList',list).set('prompt',get.prompt('minimiaoqieting',target)).set('ai',function(){
var evt=_status.event.getParent();
var player=evt.player,target=evt.target;
var list=_status.event.choiceList;
if(get.attitude(player,target)>0||list.length==1) return 0;
if(target.hasSkill('minidoumao')) return 1;
var val=(target.hasSkillTag('noe')?6:0);
if(target.countCards('e',function(card){
return player.canEquip(card)&&get.value(card,target)>val&&get.effect(player,card,player,player)>0;
})>0) return 1;
return 0;
}).set('list',list);
'step 1'
if(result.control!='cancel2'){
player.logSkill('minimiaoqieting',target);
if(result.index==0){
player.draw();
event.finish();
}
else if(target.hasSkill('minidoumao')){
player.choosePlayerCard(target,'h',2,true);
player.addExpose(0.2);
event.goto(3);
}
else{
player.addExpose(0.1);
player.choosePlayerCard(target,'e',true).set('filterButton',function(button){
return _status.event.player.canEquip(button.link);
}).set('ai',function(button){
var player=_status.event.player;
return get.effect(player,button.link,player,player);
});
}
}
else event.finish();
'step 2'
if(result.bool){
var card=result.cards[0];
target.$give(card,player,false);
game.delay(0.5);
player.equip(card);
}
event.finish();
'step 3'
if(result.bool) player.chooseButton(['选择获得一张牌',result.cards],true);
else event.finish();
'step 4'
if(result.bool){
var card=result.links[0];
if(lib.filter.canBeGained(card,player,target)) player.gain(card,target,'giveAuto','bySelf');
else game.log('但',card,'不能被',player,'获得！');
}
},
},
minimiaoxianzhou:{
unique:true,
limited:true,
audio:'ext:活动武将/audio/skill:2',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he')>0;
},
filterCard:true,
selectCard:[1,Infinity],
check:function(card){
var player=_status.event.player;
if(ui.selected.cards.length>=player.hp) return 0;
return 7-get.value(card);
},
filterTarget:lib.filter.notMe,
discard:false,
lose:false,
delay:false,
skillAnimation:true,
animationColor:'gray',
content:function(){
'step 0'
player.addSkill('minimiaoxianzhou_restore');
player.awakenSkill('minimiaoxianzhou');
player.give(cards,target);
'step 1'
var list=game.filterPlayer(function(current){
return target.inRange(current);
});
if(list.length){
var max=Math.min(list.length,cards.length);
target.chooseTarget([1,max],'献州：对至多'+get.cnNumber(max)+'名范围内的角色各造成1点伤害，或点“取消”令'+get.translation(player)+'回复'+cards.length+'点体力',function(card,player,target){
return _status.event.list.includes(target);
}).set('list',list).set('ai',function(target){
var player=_status.event.player;
return get.damageEffect(target,player,player);
});
}
else event._result={bool:false};
'step 2'
if(result.bool){
var targets=result.targets.sortBySeat();
target.line(targets,'green');
for(var i of targets) i.damage('nocard',target);
}
else player.recover(cards.length);
},
ai:{
order:1,
result:{
target:1,
player:function(player){
var bool=true,players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(players[i]!=player&&get.attitude(player,players[i])>2&&get.attitude(players[i],player)>2){
bool=false;break;
}
}
if(bool) return -10;
if(player.hp==1) return 1;
return -10;
}
},
},
subSkill:{
restore:{
audio:'minimiaoxianzhou',
trigger:{global:'logSkill'},
filter:function(event,player){
if(event.skill!='minidoumao'||!event.targets) return false;
return event.targets[0]==player;
},
forced:true,
locked:false,
content:function(){
player.restoreSkill('minimiaoxianzhou');
player.removeSkill('minimiaoxianzhou_restore');
},
},
},
},
//喵张星彩
minimiaoshenxian:{
audio:'ext:活动武将/audio/skill:2',
trigger:{global:['loseAfter','loseAsyncAfter']},
filter:function(event,player){
if(event.type!='discard'||event.getlx===false) return false;
if(event.name=='lose'&&event.player==player) return false;
var cards=event.cards2.slice(0);
var evt=event.getl(player);
if(evt&&evt.cards) cards.removeArray(evt.cards);
return cards.filter(function(card){
var type=get.type(card,null,event.hs&&event.hs.includes(card)?event.player:false);
if(!player.hasSkill('minidoumao')) return type!='equip';
return type=='basic';
}).length;
},
usable:1,
frequent:true,
content:function(){
'step 0'
if(trigger.delay==false) game.delay();
'step 1'
player.draw();
},
},
minimiaoqiangwu:{
mod:{
targetInRange:function(card,player,target){
if(player._minimiaoqiangwu_check) return;
if(card.name=='sha'&&!target.hasSkill('minidoumao')) return true;
},
cardUsableTarget:function(card,player,target){
if(card.name=='sha'&&target.hasSkill('minidoumao')) return Infinity;
},
},
audio:'ext:活动武将/audio/skill:2',
trigger:{source:'damageSource'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&player.hasSkill('minidoumao');
},
forced:true,
locked:false,
content:function(){
player.draw();
},
},
//喵祝融
minimiaojuxiang:{
group:'juxiang1',
audio:'ext:活动武将/audio/skill:2',
preHidden:['juxiang1','minimiaojuxiang'],
trigger:{player:'useCard',source:'damageSource',global:['useCardAfter','loseAfter']},
filter:function(event,player,name){
if(event.name!='lose'&&(!event.card||event.card.name!='nanman')) return false;
if(name=='useCard') return game.hasPlayer(function(current){
return current!=player&&current.hasSkill('minidoumao');
});
if(name=='useCardAfter') return event.cards.filterInD().length&&event.player!=player;
if(event.name=='damage') return !event.player.hasSkill('minidoumao');
if(event.type!='discard'||event.getlx===false) return false;
var cards=event.cards2.slice(0);
var evt=event.getl(player);
if(evt&&evt.cards) cards.removeArray(evt.cards);
return cards.filter(function(card){
return card.name=='nanman'&&get.position(card,true)=='d';
}).length;
},
forced:true,
content:function(){
'step 0'
var name=event.triggername;
if(trigger.name=='damage') player.draw();
else if(trigger.name=='lose'){
var cards=trigger.cards2.slice(0);
var evt=trigger.getl(player);
if(evt&&evt.cards) cards.removeArray(evt.cards);
player.gain(cards.filter(function(card){
return card.name=='nanman'&&get.position(card,true)=='d';
}),'gain2');
}
else if(name=='useCardAfter'&&trigger.cards.filterInD().length) player.gain(trigger.cards.filterInD(),'gain2');
else trigger.directHit.addArray(game.filterPlayer(function(current){
return current!=player&&current.hasSkill('minidoumao');
}));
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
return arg&&arg.card&&arg.card.name=='nanman'&&arg.target&&arg.target!=player&&arg.target.hasSkill('minidoumao');
},
effect:{
target:function(card){
if(card.name=='nanman') return [0,1];
},
},
},
},
minimiaolieren:{
group:['minirelieren','minimiaolieren_gain'],
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return game.hasPlayer(function(target){
return player.canCompare(target);
})&&player.getHistory('useSkill',function(evt){
return evt.targets&&evt.skill=='minidoumao';
}).length;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('minimiaolieren'),'对一名角色发动【烈刃①】',function(card,player,target){
return player.canCompare(target);
}).set('ai',function(target){
return -get.attitude(player,target)*target.countCards('e')/target.countCards('h');
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('minimiaolieren',target);
player.chooseToCompare(target).clear=false;
}
else event.finish();
'step 2'
if(result.bool){
if(target.countGainableCards(player,'he')) player.gainPlayerCard(target,true,'he');
ui.clear();
}
},
ai:{expose:0.25},
subSkill:{
gain:{
trigger:{player:'chooseToCompareAfter'},
filter:function(event,player){
if(!['minimiaolieren','minirelieren'].includes(event.getParent().name)) return false;
return get.position(event.card2,true)=='o';
},
direct:true,
content:function(){
player.gain(trigger.card2,'gain2');
},
},
},
},
minimiaochangbiao:{
audio:'changbiao',
mod:{
targetInRange:function(card,player,target){
if(card.minimiaochangbiao) return true;
},
selectTarget:function(card,player,num){
if(player.hasSkill('minidoumao')&&card.minimiaochangbiao&&num[1]!=-1) num[1]++;
},
},
enable:'phaseUse',
usable:1,
position:'hs',
viewAs:{
name:'sha',
minimiaochangbiao:true,
},
locked:false,
filter:function(event,player){
return player.countCards('hs')>0;
},
filterCard:true,
selectCard:[1,Infinity],
position:'hs',
check:function(card){
var player=_status.event.player;
if(ui.selected.cards.length){
var list=game.filterPlayer(function(current){
return current!=player&&player.canUse('sha',current,false)&&get.effect(current,{name:'sha'},player,player)>0;
}).sort(function(a,b){
return get.effect(b,{name:'sha'},player,player)-get.effect(a,{name:'sha'},player,player);
});
if(!list.length) return 0;
var target=list[0];
if(target.mayHaveShan()&&!player.hasSkillTag('directHit_ai',true,{
target:target,
card:card,
},true)) return 0;
return 6.5-get.value(card);
}
return 6.3-get.value(card);
},
onuse:function(result,player){
player.addTempSkill('minimiaochangbiao_draw');
},
subSkill:{
draw:{
trigger:{player:'phaseUseEnd'},
forced:true,
charlotte:true,
filter:function(event,player){
return player.getHistory('sourceDamage',function(evxt){
var evt=evxt.getParent();
return evt&&evt.name=='sha'&&evt.skill=='minimiaochangbiao'&&evt.getParent('phaseUse')==event;
}).length>0;
},
content:function(){
var num=0;
player.getHistory('sourceDamage',function(evxt){
var evt=evxt.getParent();
if(evt&&evt.name=='sha'&&evt.skill=='minimiaochangbiao'&&evt.getParent('phaseUse')==trigger) num+=evt.cards.length;
});
player.draw(num);
},
},
},
ai:{
order:function(item,player){
return get.order({name:'sha'},player)+0.3*(Math.min(player.getCardUsable('sha'),player.countCards('hs','sha')+player.hasCard(function(card){
return card.name!='sha'&&get.value(card,player)<6.3;
},'hs')?1:0)>1?-1:1);
},
},
},
//喵黄月英
minimiaojizhi:{
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'useCard'},
filter:function(event,player){
if(get.type2(event.card)!='trick') return false;
return event.player==player||(!player.hasSkill('minidoumao')&&!player.hasSkill('minimiaojizhi_used'));
},
frequent:true,
content:function(){
player.draw();
if(trigger.player!=player) player.addTempSkill('minimiaojizhi_used');
},
subSkill:{used:{charlotte:true}},
},
minimiaoqicai:{
mod:{
targetInRange:function(card,player,target,now){
var type=get.type2(card);
if(type=='trick'||type=='delay') return true;
},
canBeDiscarded:function(card){
if(get.position(card)=='e'&&get.subtype(card)=='equip2') return false;
},
},
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'logSkill'},
filter:function(event,player){
if(event.skill!='minidoumao'||!event.targets) return false;
return event.targets[0]!=player;
},
forced:true,
content:function(){
var card=get.cardPile2(function(card){
return get.type2(card)=='trick';
});
if(card) player.gain(card,'gain2');
},
},
minimiaoguose:{
audio:'ext:活动武将/audio/skill:2',
inherit:'sbguose',
content:function(){
'step 0'
if(target.hasJudge('lebu')) target.discard(target.getJudge('lebu'));
else player.useCard({name:'lebu'},target,cards).audio=false;
'step 1'
player.draw(target.hasSkill('minidoumao')?2:1);
if(target.hasSkill('minidoumao')) player.chooseToDiscard(true,'he','国色：请弃置一张牌');
},
ai:{
order:9,
result:{
target:function(player,target){
var num=(target.hasSkill('minidoumao')?2:1);
if(target.hasJudge('lebu')) return -get.effect(target,{name:'lebu'},player,target)*num;
return get.effect(target,{name:'lebu'},player,target)*num;
},
},
},
},
minimiaoliuli:{
audio:'ext:活动武将/audio/skill:2',
trigger:{target:'useCardToTarget'},
filter:function(event,player){
if(event.card.name!='sha') return false;
if(!player.countCards('he')) return false;
return game.hasPlayer(function(current){
return player.inRange(current)&&current!=event.player&&current!=player&&lib.filter.targetEnabled(event.card,event.player,current);
});
},
direct:true,
preHidden:true,
content:function(){
"step 0"
player.chooseCardTarget({
position:'he',
filterCard:lib.filter.cardDiscardable,
filterTarget:function(card,player,target){
var trigger=_status.event;
if(player.inRange(target)&&target!=trigger.source){
if(lib.filter.targetEnabled(trigger.card,trigger.source,target)) return true;
}
return false;
},
selectTarget:function(){
return _status.event.player.hasSkill('minidoumao')?1:[1,2];
},
complexSelect:true,
ai1:function(card){
return get.unuseful(card)+9;
},
ai2:function(target){
var player=_status.event.player;
var att=get.attitude(player,target);
if(player.countCards('h','shan')) return -att;
if(!ui.selected.targets.length){
if(att<5) return 6-att;
if(hp==1&&!player.countCards('h','shan')) return 10-att;
if(player.hp==2&&!player.countCards('h','shan')) return 8-att;
}
return -1;
},
prompt:get.prompt2('minimiaoliuli'),
source:trigger.player,
card:trigger.card,
}).setHiddenSkill('minimiaoliuli');
"step 1"
if(result.bool){
var targets=result.targets.sortBySeat();
player.logSkill('minimiaoliuli',targets);
player.discard(result.cards);
var evt=trigger.getParent();
evt.triggeredTargets2.remove(player);
evt.targets.remove(player);
evt.targets.addArray(targets);
}
},
ai:{
effect:{
target:function(card,player,target){
if(target.countCards('he')==0) return;
if(card.name!='sha') return;
var min=1;
var friend=get.attitude(player,target)>0;
var vcard={name:'shacopy',nature:card.nature,suit:card.suit};
var players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(player!=players[i]&&get.attitude(target,players[i])<0&&target.canUse(card,players[i])){
if(!friend) return 0;
if(get.effect(players[i],vcard,player,player)>0){
if(!player.canUse(card,players[0])) return [0,0.1];
min=0;
}
}
}
return min;
},
},
},
},
//喵王异
minimiaozhenlie:{
audio:'ext:活动武将/audio/skill:2',
inherit:'zhenlie',
content:function(){
'step 0'
player.loseHp();
trigger.getParent().excluded.add(player);
'step 1'
if(trigger.player[player.hasSkill('minidoumao')?'countDiscardableCards':'countGainableCards'](player,'he')){
player[player.hasSkill('minidoumao')?'discardPlayerCard':'gainPlayerCard'](trigger.player,'he',true);
}
},
},
minimiaomiji:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return game.hasPlayer(function(target){
if(player.hasSkill('minidoumao')&&target!=player) return false;
return target.isDamaged();
});
},
direct:true,
frequent:true,
content:function(){
'step 0'
if(player.hasSkill('minidoumao')) player.chooseBool(get.prompt2('minimiaomiji')).set('frequentSkill','minimiaomiji');
else{
var targets=game.filterPlayer(function(target){
if(player.hasSkill('minidoumao')&&target!=player) return false;
return target.isDamaged();
});
var str='摸'+get.cnNumber(player.getDamagedHp())+'张牌';
if(!player.hasSkill('minidoumao')) str='选择场上的一名受伤的角色，摸等同于其损失体力值的牌（至多五张）';
player.chooseTarget(get.prompt('minimiaomiji'),str+'，然后你可以将等量的牌交给一名其他角色',function(card,player,target){
if(player.hasSkill('minidoumao')&&target!=player) return false;
return target.isDamaged();
}).set('ai',function(target){
return target.getDamagedHp();
});
}
'step 1'
if(result.bool){
var target=result.targets[0]||player;
player.logSkill('minimiaomiji');
player.line(target);
var num=Math.min(5,target.getDamagedHp());
event.num=num;
player.draw(num);
}
else event.finish();
'step 2'
var check=player.countCards('h')-event.num;
player.chooseCardTarget({
selectCard:event.num,
filterTarget:lib.filter.notMe,
ai1:function(card){
var player=_status.event.player;
if(player.maxHp-player.hp==1&&card.name=='du') return 30;
var check=_status.event.check;
if(check<1) return 0;
if(player.hp>1&&check<2) return 0;
return get.unuseful(card)+9;
},
ai2:function(target){
var att=get.attitude(_status.event.player,target);
if(ui.selected.cards.length==1&&ui.selected.cards[0].name=='du') return 1-att;
return att-2;
},
prompt:'秘计：是否将'+get.cnNumber(event.num)+'张手牌交给一名其他角色？',
}).set('check',check);
'step 3'
if(result.bool){
player.line(result.targets);
player.give(result.cards,result.targets[0]);
}
},
},
//喵春哥
minimiaojueqing:{
audio:'ext:活动武将/audio/skill:2',
trigger:{source:'damageBefore'},
direct:true,
content:function(){
'step 0'
if(!player.hasSkill('minidoumao')){
player.chooseBool(get.prompt('minimiaojueqing'),'失去'+trigger.num+'点体力，令即将对其造成的伤害翻倍至'+(trigger.num*2)+'点').set('choice',player.hp>trigger.num&&trigger.player.hp>trigger.num&&get.attitude(player,trigger.player)<0);
}
else event.goto(2);
'step 1'
if(result.bool){
event.logged=true;
player.logSkill('minimiaojueqing');
player.loseHp(trigger.num);
trigger.num*=2;
}
'step 2'
if(!event.logged) player.logSkill('minimiaojueqing');
trigger.cancel();
trigger.player.loseHp(trigger.num);
},
},
minimiaoshangshi:{
group:'minishangshi',
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'logSkill'},
filter:function(event,player){
if(event.skill!='minidoumao'||!event.targets) return false;
return event.player==player||event.targets.includes(player);
},
forced:true,
locked:false,
content:function(){
player[(trigger.player==player?'gain':'lose')+'MaxHp']();
},
},
//喵甄姬
minimiaoluoshen:{
inherit:'miniluoshen',
audio:'ext:活动武将/audio/skill:2',
trigger:{player:['phaseZhunbeiBegin','phaseEnd']},
filter:function(event,player){
return !player.hasSkill('minidoumao')||event.name=='phaseZhunbei';
},
},
minimiaoqingguo:{
mod:{
aiValue:function(player,card,num){
if(!player.hasSkill('minidoumao')) return;
if(get.name(card)!='shan'&&get.color(card)!='black') return;
var cards=player.getCards('hs',function(card){
return get.name(card)=='shan'||get.color(card)=='black';
});
cards.sort(function(a,b){
return (get.name(b)=='shan'?1:2)-(get.name(a)=='shan'?1:2);
});
var geti=function(){
if(cards.includes(card)){
return cards.indexOf(card);
}
return cards.length;
};
if(get.name(card)=='shan') return Math.min(num,[6,4,3][Math.min(geti(),2)])*0.6;
return Math.max(num,[6.5,4,3][Math.min(geti(),2)]);
},
aiUseful:function(){
return lib.skill.minimiaoqingguo.mod.aiValue.apply(this,arguments);
},
},
locked:false,
audio:'ext:活动武将/audio/skill:2',
enable:['chooseToRespond','chooseToUse'],
filterCard:function(card){
return get.color(card)=='black';
},
position:'hes',
viewAs:{name:'shan'},
viewAsFilter:function(player){
if(!player.countCards('hes',{color:'black'})) return false;
},
prompt:'将一张黑色牌当闪打出',
check:()=>1,
ai:{
order:2,
respondShan:true,
skillTagFilter:function(player){
if(!player.countCards('hes',{color:'black'})) return false;
},
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondShan')&&current<0) return 0.6
},
},
},
group:'minimiaoqingguo_jijiu',
subSkill:{
jijiu:{
audio:'minimiaoqingguo',
mod:{
aiValue:function(player,card,num){
if(player.hasSkill('minidoumao')) return;
if(get.name(card)!='tao'&&get.name(card)!='shan') return;
var cards=player.getCards('hs',function(card){
return get.name(card)=='tao'||get.name(card)=='shan';
});
cards.sort(function(a,b){
return (get.name(a)=='tao'?1:2)-(get.name(b)=='tao'?1:2);
});
var geti=function(){
if(cards.includes(card)){
return cards.indexOf(card);
}
return cards.length;
};
return Math.max(num,[6.5,4,3,2][Math.min(geti(),2)]);
},
aiUseful:function(){
return lib.skill.minimiaoqingguo_jijiu.mod.aiValue.apply(this,arguments);
},
},
locked:false,
enable:'chooseToUse',
viewAsFilter:function(player){
return !player.hasSkill('minidoumao')&&player.countCards('hs',{name:'shan'})>0;
},
filterCard:{name:'shan'},
viewAs:{name:'tao'},
prompt:'将一张【闪】当作【桃】使用',
check:function(card){
return 15-get.value(card);
},
},
},
},
//喵孙尚香
minimiaojieyin:{
audio:'ext:活动武将/audio/skill:2',
inherit:'minijieyin',
content:function(){
'step 0'
if(get.position(cards[0])=='e'){
player.$give(cards,target);
target.equip(cards[0]);
}
else player.give(cards,target,true);
'step 1'
player.recover();
player.draw();
'step 2'
if(player.hasSkill('minidoumao')){event.finish();return;}
player.chooseBool('结姻：是否令'+get.translation(target)+'回复1点体力并摸一张牌？').set('choice',get.attitude(player,target)>0);
'step 3'
if(result.bool){
player.line(target);
target.recover();
target.draw();
}
},
},
minimiaoxiaoji:{
audio:'ext:活动武将/audio/skill:2',
trigger:{
player:'loseAfter',
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
var evt=event.getl(player);
return evt&&evt.player==player&&evt.es&&evt.es.length>0;
},
frequent:true,
content:function(){
'step 0'
event.count=trigger.getl(player).es.length;
'step 1'
event.count--;
player.draw(2);
if(player.hasSkill('minidoumao')){event.goto(3);return;}
player.chooseTarget('是否弃置场上的一张牌？',function(card,player,target){
return target.countDiscardableCards(player,'ej');
}).set('ai',target=>{
var player=_status.event.player;
var att=get.attitude(player,target);
if(att>0&&(target.countCards('j')>0||target.countCards('e',function(card){
return get.value(card,target)<0;
}))) return 2;
if(att<0&&target.countCards('e')>0&&!target.hasSkillTag('noe')) return -1;
return 0;
});
'step 2'
if(result.bool) player.discardPlayerCard(result.targets[0],'ej',true);
'step 3'
if(event.count>0&&player.hasSkill('minimiaoxiaoji')) player.chooseBool('是否再次发动【枭姬】？').set('frequentSkill','minimiaoxiaoji');
else event.finish();
'step 4'
if(result.bool){
player.logSkill('minimiaoxiaoji');
event.goto(1);
}
},
ai:{
noe:true,
reverseEquip:true,
effect:{
target:function(card,player,target,current){
if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) return [1,3];
},
},
},
},
//喵小乔
minimiaotianxiang:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'damageBegin3'},
filter:function(event,player){
return player.countCards('h',{suit:'heart'})&&event.num>0;
},
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
filterCard:function(card,player){
return get.suit(card)=='heart'&&lib.filter.cardDiscardable(card,player);
},
filterTarget:lib.filter.notMe,
ai1:function(card){
return 10-get.value(card);
},
ai2:function(target){
var player=_status.event.player;
var num=(target.hasSkill('minidoumao')?2:1);
var att=get.attitude(player,target);
return -att*num;
},
prompt:get.prompt2('minimiaotianxiang')
});
'step 1'
if(result.bool){
var target=result.targets[0],cards=result.cards;
player.logSkill('minimiaotianxiang',target);
target.gain(cards,player,'give');
player.addTempSkill('minimiaotianxiang2');
trigger.cancel();
target.damage(trigger.source?trigger.source:'nosource',trigger.nature,trigger.num).set('card',trigger.card).set('cards',trigger.cards).minimiaotianxiang2=[player];
}
},
ai:{
maixie_defend:true,
effect:{
target:function(card,player,target){
if(player.hasSkillTag('jueqing',false,target)) return;
if(get.tag(card,'damage')&&target.countCards('h')>1) return 0.7;
},
},
threaten:function(player,target){
if(!target.countCards('h')) return 2;
},
},
},
minimiaotianxiang2:{
charlotte:true,
trigger:{global:['damageAfter','damageCancelled','damageZero']},
filter:function(event,player){
return event.minimiaotianxiang2&&event.minimiaotianxiang2.includes(player)&&event.player.isIn();
},
direct:true,
content:function(){
player.line(trigger.player);
if(trigger.player.hasSkill('minidoumao')) trigger.player.damage();
else player.discardPlayerCard(trigger.player,'he',true);
},
},
minimiaohongyan:{
mod:{
suit:function(card,suit){
if(suit=='spade') return 'heart';
},
},
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'judgeEnd'},
filter:function(event,player){
if(event.player.hasSkill('minidoumao')) return false;
return get.suit(event.result.card,event.player)=='heart';
},
forced:true,
locked:false,
content:function(){
player.recover();
player.draw();
},
},
},
dynamicTranslate:{
minizhongjian:function(player){
return '出牌阶段限'+(player.hasSkill('recaishi2')?'两':'一')+'次，你可以选择一名本回合内未选择过的角色。你令其获得一项效果：①其下次造成伤害后弃置两张牌，然后你摸一张牌。②其下次受到伤害后摸两张牌，然后你摸一张牌。';
},
minijiaozhao:function(player){
return [lib.translate.minijiaozhao_info,lib.translate.minijiaozhao_1_info,lib.translate.minijiaozhao_2_info][player.countMark('minidanxin')];
},
minipingting:function(player){
return '出牌阶段开始时，你可以选择以下选项中的至多'+get.cnNumber(2+player.hasSkill('minishuangshu_pingting')?1:0)+'项：⒈本阶段使用的第一张牌无距离限制。⒉本阶段使用第二张牌指定目标后获得此牌对应的所有实体牌。⒊本阶段使用的第三张牌结算完毕后摸两张牌。⒋本阶段使用的第四张牌额外结算一次。';
},
miniyizheng:function(player){
return '出牌阶段结束时，你可以选择以下选项中的至多'+get.cnNumber(1+player.hasSkill('minishuangshu_yizheng')?1:0)+'项：⒈移动场上的一张武器牌。⒉移动场上的一张防具牌。⒊移动场上的一张坐骑牌。然后若你于本次技能结算中移动了：一张牌，你回复1点体力；两张牌，直到你的下回合开始，当你失去一张牌时，摸一张牌。';
},
minimanwang:function(player){
var num=4-player.countMark('spmanwang');
var str='出牌阶段，你可以弃置任意张牌。然后你依次执行以下选项中的前X项：';
var list=[
'⒈获得〖叛侵〗。',
'⒉摸一张牌。',
'⒊回复1点体力。',
'⒋摸两张牌并失去〖叛侵〗。',
];
for(var i=0;i<4;i++){
if(i==num){
str+='<span style="text-decoration: line-through;">';
}
str+=list[i];
}
if(num<4) str+='</span>';
return str+'然后你获得〖祸首〗直到你的下个回合开始。';
},
miniguixiu:function(player){
return lib.translate[(player.storage.miniguixiu?'miniguixiux':'miniguixiu')+'_info'];
},
miniyoulong:function(player){
if(player.storage.miniyoulong) return '转换技，每回合限一次，你可以废除你的一个装备栏，视为使用一张未以此法使用过的：阴，普通锦囊牌；<span class="bluetext">阳，基本牌。</span>';
return '转换技，每回合限一次，你可以废除你的一个装备栏，视为使用一张未以此法使用过的：<span class="bluetext">阴，普通锦囊牌；</span>阳，基本牌。';
},
},
translate:{
MiNi_wei:'欢乐三国杀·魏国',
MiNi_shu:'欢乐三国杀·蜀国',
MiNi_wu:'欢乐三国杀·吴国',
MiNi_qun:'欢乐三国杀·群雄',
MiNi_shen:'欢乐三国杀·神将',
MiNi_change:'一样？不一样？',
MiNi_shengzhiyifa:'欢乐三国杀·杂谈',
MiNi_miaoKill:'欢乐三国杀·喵系列',
//牌
miniyanxiao_card:'言笑',
miniyanxiao_card_info:'判定阶段开始时，获得此牌和判定区内的所有牌。',
minilingren_basic:' ',
minilingren_trick:' ',
minilingren_equip:' ',
//魏
Mbaby_caoang:'欢杀曹昂',
Mbaby_caopi:'欢杀曹丕',
Mbaby_zhenji:'欢杀甄宓',
Mbaby_caoren:'欢杀曹仁',
Mbaby_dianwei:'欢杀典韦',
Mbaby_guojia:'欢杀郭嘉',
Mbaby_guohuai:'欢杀郭淮',
Mbaby_zhangchunhua:'欢杀张春华',
Mbaby_wangyi:'欢杀王异',
Mbaby_xiahoudun:'欢杀夏侯惇',
Mbaby_xuzhu:'欢杀许诸',
Mbaby_zhangliao:'欢杀张辽',
Mbaby_zhanghe:'欢杀张郃',
Mbaby_yujin:'欢杀于禁',
Mbaby_xuhuang:'欢杀徐晃',
Mbaby_xunyu:'欢杀荀彧',
Mbaby_dengai:'欢杀邓艾',
Mbaby_caozhi:'欢杀曹植',
Mbaby_sp_caiwenji:'SP欢杀蔡琰',
Mbaby_caoying:'欢杀曹婴',
Mbaby_caorui:'欢杀曹叡',
Mbaby_xiahouyuan:'欢杀夏侯渊',
Mbaby_haozhao:'欢杀郝昭',
Mbaby_xizhicai:'欢杀戏志才',
Mbaby_xinxianying:'欢杀辛宪英',
Mbaby_guohuanghou:'欢杀郭皇后',
Mbaby_caozhen:'欢杀曹真',
Mbaby_zhongyao:'欢杀钟繇',
Mbaby_lidian:'欢杀李典',
Mbaby_xunyou:'欢杀荀攸',
Mbaby_caoxiu:'欢杀曹休',
Mbaby_sp_jiangwei:'SP欢杀姜维',
Mbaby_zhonghui:'欢杀钟会',
Mbaby_zhangchangpu:'欢杀张昌蒲',
Mbaby_yangxiu:'欢杀杨修',
Mbaby_simayi:'欢杀司马懿',
Mbaby_dufuren:'欢杀杜夫人',
Mbaby_caozhang:'欢杀曹彰',
Mbaby_caocao:'欢杀曹操',
Mbaby_sp_pangde:'SP欢杀庞德',
Mbaby_wenyang:'欢杀文鸯',
Mbaby_xiahoulingnv:'欢杀夏侯令女',
Mbaby_chenqun:'欢杀陈群',
Mbaby_wangji:'欢杀王基',
Mbaby_jsp_guanyu:'SP欢杀关羽',
Mbaby_kuailiangkuaiyue:'欢杀蒯良蒯越',
Mbaby_wenqin:'OL文钦',
Mbaby_wenqin_prefix:'OL',
Mbaby_sp_jiaxu:'SP欢杀贾诩',
Mbaby_yinfuren:'欢杀尹夫人',
Mbaby_sp_caoren:'SP欢杀曹仁',
Mbaby_guojia:'欢杀郭嘉',
Mbaby_caohong:'欢杀曹洪',
Mbaby_sb_caocao:'SP欢杀曹操',
miniluoshen:'洛神',
miniluoshen_info:'准备阶段，你可以进行一次判定并获得判定牌，若判定结果为黑色，你可重复此流程。',
miniqiaobian:'巧变',
miniqiaobian_info:'①你可以弃置一张手牌并跳过自己的一个阶段（准备阶段和结束阶段除外）。若你以此法跳过了摸牌阶段，则你可以获得至多两名其他角色的各一张手牌；若你以此法跳过了出牌阶段，则你可以移动场上的一张牌。②结束阶段，若你本回合至少跳过了三个阶段，则你摸两张牌。',
minikangkai:'慷忾',
minikangkai_info:'锁定技，每回合限两次。当一名角色成为【杀】的目标后，若你至该角色的距离为1，你摸一张牌。然后你可以交给其一张牌并展示之，若此牌为装备牌，该角色可以使用此牌。',
minishangshi:'伤逝',
minishangshi_info:'当你的手牌数小于X时，你可以将手牌摸至X张（X为你已损失的体力值且至少为1）。',
minifangzhu:'放逐',
minifangzhu_info:'当你受到伤害后，你可以令一名其他角色将武将牌翻面，然后该角色摸一张牌。',
miniqiangxi:'强袭',
miniqiangxi_info:'出牌阶段对每名其他角色限一次，你可以失去1点体力并摸一张牌，对你攻击范围内的一名其他角色造成1点伤害；其他角色受到伤害时，你可以弃置一张装备牌并令伤害值+1。',
miniyizhong:'毅重',
miniyizhong_info:'锁定技，当你的防具栏没有牌且未被废除时，梅花【杀】对你无效。',
minijiezi:'截辎',
minijiezi_info:'锁定技，每轮限两次，其他角色跳过摸牌阶段后，你摸两张牌。',
minijushou:'据守',
minijushou_info:'结束阶段，你可以翻面并摸四张牌，然后你可以使用一张装备牌。',
minichenqing:'陈情',
minichenqing_info:'每回合限一次，当一名角色进入濒死状态时，你可以令另一名角色摸五张牌，然后其弃置四张牌。若其以此法弃置的四张牌花色各不相同，则视为该角色对濒死的角色使用一张【桃】。',
minituntian:'屯田',
minituntian_info:'当你于回合外失去牌后，你可以进行判定。若判定结果不为♥，则你将此牌置于你的武将牌上，称之为【田】。结束阶段，你可以弃置一张牌并进行〖屯田〗判定。锁定技，你计算与其他角色的距离时-X（X为你武将牌上【田】的数目）。',
minijiushi:'酒诗',
minijiushi1:'酒诗',
minijiushi3:'酒诗',
minijiushi_info:'当你需要使用【酒】时，若你的武将牌正面向上，你可以翻面并视为使用一张【酒】。当你受到伤害后，若你的武将牌背面向上，你可以翻面。当你翻面时，你可以获得牌堆中的一张随机锦囊牌。',
miniluoying:'落英',
miniluoying_discard:'落英',
miniluoying_judge:'落英',
miniluoying_info:'当其他角色的梅花牌因弃置或判定而进入弃牌堆时，你可以获得之。你的梅花牌不计入手牌上限。',
miniquhu:'驱虎',
miniquhu_backup:'驱虎',
miniquhu_info:'出牌阶段各限一次，你可以：①弃置两张牌，对一名其他角色造成1点伤害；②对自己造成1点伤害，然后摸一张牌。',
minijieming:'节命',
minijieming_info:'当你受到1点伤害后，你可令一名角色将手牌摸至X张（X为其体力上限且至多为4）。',
minimingjian:'明鉴',
minimingjian2:'明鉴',
minimingjian_info:'出牌阶段限一次，你可以将任意张手牌交给一名其他角色，该角色于其下个回合的手牌上限+1，使用【杀】的次数上限+1。',
minixingshuai:'兴衰',
minixingshuai_info:'主公技，限定技，当你进入濒死状态时，其他魏势力角色可依次令你回复1点体力，然后这些角色依次受到1点伤害并摸一张牌。',
minixingshang:'行殇',
minixingshang_info:'当有角色死亡后，你可以获得该角色的所有牌并摸一张牌。',
minilingren:'凌人',
minilingren_info:'每回合限一次，当你于出牌阶段使用带有「伤害」这一标签的基本牌或普通锦囊牌指定目标后，你可以猜测其中的一个目标的手牌中是否有基本牌，锦囊牌或装备牌。若你至少猜对了：一项，此牌对该角色的伤害+1；两项，你摸两张牌；三项，你获得技能〖奸雄〗和〖行殇〗直到下回合开始。',
minifujian:'伏间',
minifujian_info:'锁定技，结束阶段，你随机观看一名的其他角色的一张手牌。',
minihuchi:'虎痴',
minihuchi_info:'结束阶段，若你的手牌数小于2，则你将手牌数补至两张；当你使用的【杀】被抵消后，你获得1枚“痴”；出牌阶段限一次，你可以移去所有“痴”，然后摸等量的牌。',
minijingce:'精策',
minijingce_info:'锁定技，结束阶段，你摸X张牌（X为你本回合使用牌的花色数+1且至多为3）。',
tiandu_xizhicai:'天妒',
minichouce:'筹策',
minichouce_info:'当你受到1点伤害后，你可以判定，若结果为：黑色，你获得一名角色区域里的一张牌；红色，你选择一名角色，其摸一张牌，若其是〖先辅〗选择的角色，则改为摸两张牌。',
minishensu:'神速',
minishensu_info:'你可以选择一至三项：1.跳过判定阶段和摸牌阶段；2.跳过出牌阶段；3.跳过弃牌阶段并将武将牌翻面。你每选择一项，视为你对一名其他角色使用一张无距离限制的雷【杀】。',
minishebian:'设变',
minishebian_info:'当你翻面时，你可以移动场上的一张装备牌，然后回复1点体力。',
minizhongjian:'忠鉴',
minizhongjian_info:'出牌阶段限一次，你可以选择一名本回合内未选择过的角色。你令其获得一项效果：①其下次造成伤害后弃置两张牌，然后你摸一张牌。②其下次受到伤害后摸两张牌，然后你摸一张牌。',
minicaishi:'才识',
minicaishi_info:'摸牌阶段结束时，若你此阶段摸的牌：花色相同，本回合你将〖忠鉴〗中『出牌阶段限一次』修改为『出牌阶段限两次』；花色不同，你可以弃置一张牌，然后回复1点体力。',
minijiaozhao:'矫诏',
minijiaozhao2:'矫诏',
minijiaozhao_info:'出牌阶段限一次，你可以展示一张手牌并声明一个基本牌或普通锦囊牌，本阶段你可以将此牌当作你声明的牌使用（你不是此牌的合法目标）。',
minijiaozhao_1:'矫诏·2级',
minijiaozhao_1_info:'出牌阶段限两次，你可以展示一张手牌并声明一个基本牌或普通锦囊牌，本阶段你可以将此牌当作你声明的牌使用（每种类型限一次，且你不是此牌的合法目标）。',
minijiaozhao_2:'矫诏·3级',
minijiaozhao_2_info:'出牌阶段限三次，你可以展示一张手牌并声明一个基本牌或普通锦囊牌，本阶段你可以将此牌当作你声明的牌使用（每种牌名限一次）。',
minidanxin:'殚心',
minidanxin_info:'当你受到伤害后，你可以摸一张牌并升级〖矫诏〗。',
miniqingjian:'清俭',
miniqingjian_info:'每回合限一次，当你于摸牌阶段外获得牌时，你可以展示任意张牌并交给一名其他角色，然后你摸一张牌。',
minisidi:'司敌',
minisidi_info:'结束阶段，你可以将至多两张非基本牌置于武将牌上，称为“司”。其他角色的出牌阶段开始时，你可以移去一张“司”。若如此做，其本阶段内不能使用或打出与“司”颜色相同的牌。此阶段结束时，若其于此阶段内未使用过：【杀】，你视为对其使用一张【杀】。锦囊牌，你摸两张牌。',
minihomo:'活墨',
minihomo_info:'每回合限两次，当你需要使用一张基本牌时，你可以将一张黑色非基本牌置于牌堆顶，然后视为使用此基本牌。',
minizuoding:'佐定',
minizuoding_info:'一名角色于其回合内使用黑桃牌指定目标后，若本回合内没有角色受到过伤害，则你可以令其中一名目标角色摸一张牌',
minixunxun:'恂恂',
minixunxun_info:'摸牌阶段，你可以观看牌堆顶的四张牌，然后将其中的两张牌置于牌堆顶，并将其余的牌以任意顺序置于牌堆底。结束阶段，你获得牌堆底的两张牌。',
minizhengbing:'整兵',
minizhengbing_info:'你通过〖突袭〗获得的牌不计入手牌上限；出牌阶段，你可以重铸你通过〖突袭〗获得的牌，若你以此法重铸的牌为你手牌中的最后一张通过〖突袭〗获得的牌，你额外摸一张牌。',
miniqice:'奇策',
miniqice_info:'出牌阶段限一次，你可以将任意张手牌当作任意一张普通锦囊牌使用。',
minizhiyu:'智愚',
minizhiyu_info:'当你受到伤害后，你可以摸两张牌并弃置一张牌，然后展示所有手牌，然后若你的手牌的颜色均相同且伤害来源的手牌数大于你的手牌数，你可以令伤害来源将手牌数弃置至与你一致。',
miniqingxi:'倾袭',
miniqingxi_info:'当你使用【杀】或【决斗】指定目标后，你可以令其选择一项：①弃置X张手牌（X为你攻击范围内的角色数，且当你装备区内有武器牌/没有武器牌时至多为4/2），若如此做，其弃置你的此武器牌；②令此牌的伤害值+1且你进行判定，若结果为红色，则其不能响应此牌；若结果为黑色，你摸两张牌。',
minikunfen:'困奋',
minikunfen_info:'结束阶段开始时，你可以失去1点体力。若如此做，你摸两张牌，然后可以视为使用一张【火攻】。',
minifengliang:'逢亮',
minifengliang_info:'觉醒技，当你进入濒死状态时，你减1点体力上限，将体力值回复至3点，然后获得技能〖挑衅〗。',
miniquanji:'权计',
miniquanji_info:'当你受到1点伤害后，你可以摸两张牌。出牌阶段，你可以将任意张手牌置于武将牌上，称为“权”。你的手牌上限+X（X为武将牌上“权”的数量且X至多为5）。',
minijilei:'鸡肋',
minijilei_info:'当你受到有来源的伤害后，你可以声明一种牌的类别。若如此做，你从牌堆中获得一张此类型的牌，且伤害来源不能使用、打出或弃置此类别的手牌直到其下个回合开始。',
miniyanjiao:'严教',
miniyanjiao_info:'出牌阶段限一次，你可以选择一名角色。该角色从牌堆顶亮出三张牌，选择并获得点数之和不大于总点数一半（至少为1）的牌，然后你获得剩余的牌（若你选的角色是自己，则弃置剩余的牌）。',
minifankui:'反馈',
minifankui_info:'当你受到1点伤害后，你可以进行一次判定，若判定结果为红桃，你获得一名角色的一张牌，否则你获得伤害来源的一张牌。',
miniguicai:'鬼才',
miniguicai_info:'当一名角色的判定牌生效前，你可以打出一张牌代替之，然后若此牌的花色为：红桃，你回复1点体力；梅花，你摸两张牌。',
miniyise:'异色',
miniyise_info:'其他角色得到你的牌后，若这些牌中：有红色牌，你可摸一张牌或令其回复1点体力；有黑色牌，你可令其下次受到【杀】造成的伤害时，此伤害+1。',
minishunshi:'顺世',
minishunshi_info:'准备阶段开始时，或当你受到伤害后，你可将一张牌交给一名其他角色并获得如下效果直到你的回合结束：下个摸牌阶段的额定摸牌数+1，下个出牌阶段使用【杀】的次数上限+1且无视防具，下个弃牌阶段手牌上限+1。',
minijiangchi:'将驰',
minijiangchi_info:'出牌阶段开始时，你可以选择一项：①摸一张牌，直到你的下个回合开始，受到伤害后摸一张牌。②摸三张牌，然后本回合内不能使用或打出【杀】且手牌上限+2。③本回合使用【杀】无距离限制且可以多使用一张【杀】。',
minijianxiong:'奸雄',
minijianxiong_info:'当你受到1点伤害后，你可以选择一项：①摸两张牌；②获得对你造成伤害的牌并摸一张牌。',
minihujia:'护驾',
minihujia_info:'主公技，当你需要使用或打出一张【闪】时，你可以令其他魏势力角色选择是否打出一张【闪】。若有角色响应，则你视为使用或打出了一张【闪】，且该角色可以令你摸一张牌。',
minijuesi:'决死',
minijuesi_info:'出牌阶段，你可以弃置一张【杀】并选择攻击范围内的一名有牌的其他角色，该角色弃置一张牌，然后若其弃置的牌不是【杀】且你的体力值不大于该角色，你摸两张牌；若其弃置的牌是【杀】，则视为对其使用【决斗】。',
minichoujue:'仇决',
minichoujue_info:'觉醒技，一名角色的回合结束时，若你的手牌数和体力值相差3或更多，你减1点体力上限并获得技能〖背水〗，然后将〖膂力〗改为“在自己的回合时每回合限两次”。',
minibeishui:'背水',
minibeishui_info:'觉醒技，准备阶段，若你的手牌数或体力值不大于2，你减1点体力上限并获得技能〖清剿〗，然后将〖膂力〗改为受到伤害后也可以发动。',
miniweilie:'炜烈',
miniweilie_info:'每局游戏限X次。出牌阶段，你可以弃置一张牌并令一名角色回复1点体力并摸一张牌（X为你〖浮萍①〗中的记录数+1）。',
minifaen:'法恩',
minifaen_info:'①当一名角色翻面或者横置后，你可以令其摸一张牌。②当一名横置的角色受到伤害时，你可以弃置一张牌并防止此伤害。',
miniqizhi:'奇制',
miniqizhi_info:'当你于回合内使用基本牌或锦囊牌指定目标后，你可以弃置不是此牌目标的一名角色的一张牌。若弃置的牌与使用的牌类型相同，你摸一张牌；类型不同，其摸一张牌。',
minijinqu:'进趋',
minijinqu_info:'你可以跳过弃牌阶段并摸两张牌。若如此做，你将手牌弃置至X张。（X为你于此回合发动过〖奇制〗的次数+1）',
minijinghong:'惊鸿',
minijinghong_info:'准备阶段，你可以选择至多X名其他角色（X为场上存活人数-1，且X至多为4），然后你依次随机展示这些角色的各一张牌，其若展示的牌为：黑色，你获得此牌，且此牌不计入你的手牌上限；红色，其弃置此牌。',
minispluoshen:'洛神',
minispluoshen_info:'你可以将一张黑色牌当作【闪】使用或打出。若如此做，每轮限一次，你可以于此牌结算完成后进行一次判定并获得判定牌，若判定结果为黑色，你可以重复此流程。',
minispwusheng:'武圣',
minispwusheng_info:'①回合开始时，你从牌堆或弃牌堆中获得一张红色牌。②你可以将一张红色牌当作【杀】使用或打出。③你使用的非转化红色【杀】造成的伤害+1，你使用方片【杀】无距离限制。',
minidanji:'单骑',
minidanji_info:'觉醒技，当你本局游戏使用或打出的牌数不小于5时，或当本局游戏造成不少于6点伤害后，你将体力值回复至上限，然后获得技能〖驭马〗和〖怒斩〗。',
mininuzhan:'怒斩',
mininuzhan_info:'锁定技，你使用非锦囊牌转化的【杀】不计入次数限制，你使用锦囊牌转化的【杀】造成的伤害+1。',
minishenshi:'审时',
minishenshi_info:'①出牌阶段限一次，你可以将一张牌交给一名其他角色，然后对其造成1点伤害，若该角色因此死亡，则你可以令一名角色将手牌摸至四张。②其他角色对你造成伤害后，你可以观看该角色的手牌，然后交给其一张牌，其失去此牌后，你将手牌摸至四张。',
minihuiqi:'彗企',
minihuiqi_info:'觉醒技，一名角色回合结束时，若包括你在内仅有三名角色于此回合成为过牌的目标，你回复1点体力，获得技能〖偕举〗。',
minixieju:'偕举',
minixieju_info:'出牌阶段限一次，你可以令任意名本回合成为过牌的目标的角色依次将一张黑色牌当作【杀】使用。',
minijianshu:'间书',
minijianshu_info:'出牌阶段限一次，你可以将一张手牌交给一名其他角色，并选择另一名其他角色，你令前者与后者拼点。赢的角色随机交给你一张牌，没赢的角色失去1点体力。若有角色因此死亡，你令你〖间书〗于此阶段发动的次数上限+1。',
miniyongdi:'拥嫡',
miniyongdi_info:'限定技，出牌阶段，你可以选择一名角色，若其：体力上限最少，其加1点体力上限；体力值最少，其回复1点体力；手牌数最少，其摸X张牌（X为其体力上限且至多为5）。',
miniyongbi:'拥嬖',
miniyongbi_info:'限定技。出牌阶段，你可以将任意手牌交给一名其他角色，然后将〖媵予〗的发动时机改为“准备阶段和结束阶段开始时”。若这些牌中包含的花色数：大于1，则你与其本局游戏的手牌上限+2；大于2，则当你或其于本局游戏内受到大于1的伤害时，此伤害-1。',
miniweikui:'伪溃',
miniweikui_info:'出牌阶段限一次，你可以失去1点体力并选择一名有手牌的其他角色，你观看其手牌：若其手牌中没有【闪】，则视为你对其使用【杀】，且本回合你计算与其的距离视为1；若其手牌中有【闪】，你获得其中一张牌并回复1点体力。',
minilizhan:'励战',
minilizhan_info:'结束阶段，你可以令任意名已受伤的角色摸一张牌，然后你摸X张牌（X为手牌数等于体力值的目标角色数）。',
minishenglun:'胜论',
minishenglun_info:'出牌阶段限一次，你可以选择至多两名其他角色，然后你依次与目标角色依次比较你与其的：体力、手牌数、已装备武器牌数、已装备防具牌数、已装备坐骑牌数（你对应的数值比其大则获得1枚“胜”标记，否则获得1枚“负”标记）。当你的“胜”/“负”标记数达到10后，你回复1点体力/对一名角色造成1点伤害，然后发动〖遗计〗并失去所有的“胜”/“负”标记。',
miniyuanhu:'援护',
miniyuanhu_info:'①出牌阶段限两次，你可将一张装备牌置入一名角色的装备区内并摸一张牌，若此牌为：武器牌，你弃置与其距离为1的另一名角色区域的一张牌；防具牌，其摸一张牌；坐骑牌，其回复1点体力。②回合结束时，若你本回合未发动过〖援护①〗，则你从牌堆中获得一张装备牌。',
minisbjianxiong:'奸雄',
minisbjianxiong_info:'①游戏开始时，你可获得至多2枚“治世”标记。②当你受到伤害后，你可获得伤害牌，摸2-X张牌（X为“治世”数），然后你可弃1枚“治世”。',
//蜀
Mbaby_guanyu:'欢杀关羽',
Mbaby_zhugeliang:'欢杀诸葛亮',
Mbaby_liubei:'欢杀刘备',
Mbaby_machao:'欢杀马超',
Mbaby_zhurong:'欢杀祝融',
Mbaby_zhangfei:'欢杀张飞',
Mbaby_zhaoyun:'欢杀赵云',
Mbaby_huangzhong:'欢杀黄忠',
Mbaby_weiyan:'欢杀魏延',
Mbaby_liaohua:'欢杀廖化',
Mbaby_pangtong:'欢杀庞统',
Mbaby_menghuo:'欢杀孟获',
Mbaby_jiangwei:'欢杀姜维',
Mbaby_liushan:'欢杀刘禅',
Mbaby_fazheng:'欢杀法正',
Mbaby_madai:'欢杀马岱',
Mbaby_guanping:'欢杀关平',
Mbaby_liufeng:'欢杀刘封',
Mbaby_wuyi:'欢杀吴懿',
Mbaby_guanyinping:'欢杀关银屏',
Mbaby_zhangxingcai:'欢杀张星彩',
Mbaby_dongyun:'欢杀董允',
Mbaby_sp_sunshangxiang:'SP欢杀孙尚香',
Mbaby_xushu:'欢杀徐庶',
Mbaby_masu:'欢杀马谡',
Mbaby_qinmi:'欢杀秦宓',
Mbaby_zhugezhan:'欢杀诸葛瞻',
Mbaby_wuxian:'欢杀吴苋',
Mbaby_shamoke:'欢杀沙摩柯',
Mbaby_xiahoushi:'欢杀夏侯氏',
Mbaby_guansuo:'欢杀关索',
Mbaby_mayunlu:'欢杀马云禄',
Mbaby_wangping:'欢杀王平',
Mbaby_jianyong:'欢杀简雍',
Mbaby_zhugeguo:'欢杀诸葛果',
Mbaby_sp_zhugeliang:'欢杀卧龙',
Mbaby_baosanniang:'欢杀鲍三娘',
Mbaby_huaman:'欢杀花鬘',
Mbaby_zhaoxiang:'欢杀赵襄',
Mbaby_xiahouba:'欢杀夏侯霸',
Mbaby_yanyan:'欢杀严颜',
Mbaby_chendao:'欢杀陈到',
Mbaby_liyan:'欢杀李严',
Mbaby_liuchen:'欢杀刘谌',
Mbaby_yangwan:'欢杀杨婉',
Mbaby_huangyueying:'欢杀黄月英',
Mbaby_zhoucang:'欢杀周仓',
Mbaby_lvkai:'欢杀吕凯',
Mbaby_sunqian:'欢杀孙乾',
Mbaby_ganfuren:'欢杀甘夫人',
Mbaby_liuyong:'欢杀刘永',
Mbaby_mizhu:'欢杀糜竺',
Mbaby_mifuren:'欢杀糜夫人',
Mbaby_wangyue:'欢杀王悦',
Mbaby_xf_yiji:'欢杀伊籍',
Mbabysp_zhangfei:'SP欢杀张飞',
Mbaby_wolongfengchu:'欢杀卧龙凤雏',
Mbaby_wangtao:'欢杀王桃',
miniwusheng:'武圣',
miniwusheng_info:'锁定技。①你使用红色【杀】造成的伤害+1。②回合开始时，你从牌堆或弃牌堆中获得一张红色【杀】。',
miniguanxing:'观星',
miniguanxing_info:'准备阶段和结束阶段，你可以观看牌堆顶的X张牌（场上人数为2时X为3，否则X为5）并可以调整这些牌于牌堆顶或牌堆底。',
minikongcheng:'空城',
minikongcheng_info:'锁定技，若你没有手牌，你不能成为【杀】、【决斗】和【顺手牵羊】的目标。',
minirende:'仁德',
minirende_info:'出牌阶段结束时，你可以令至多两名角色各摸一张牌。',
minirerende:'仁德',
minirerende_info:'出牌阶段，你可以将至少一张手牌交给其他角色，然后你于此阶段内不能再以此法交给该角色牌，且该角色使用红色【杀】不能指定你为目标直到你的下个回合开始；若你于此阶段内给出的牌首次达到两张，你可以视为使用一张基本牌或普通锦囊牌。',
minijijiang:'激将',
minijijiang_info:'主公技。①当你需要使用或打出【杀】时，蜀势力角色可以代替你进行此操作，若如此做，你与响应【激将】的角色各摸一张牌。②每回合限一次，你的回合外，一名其他蜀势力角色使用或打出【杀】时，其可以令你摸一张牌。',
miniyuma:'驭马',
miniyuma_info:'锁定技，你计算与其他角色的距离-1；当你失去装备区中的坐骑牌时，你摸两张牌。',
minitieji:'铁骑',
minitieji_info:'当你使用【杀】指定目标后，你可以令目标角色本回合非锁定技失效，然后你进行一次判定，若判定结果为：红色，此【杀】强制命中；黑色，你摸两张牌。',
minijuxiang:'巨象',
minijuxiang_info:'锁定技。①【南蛮入侵】对你无效。②其他角色弃置【南蛮入侵】后，你获得之。③其他角色使用【南蛮入侵】结算完毕后，你获得此牌对应的所有实体牌，若此牌造成伤害，你摸一张牌。',
minilieren:'烈刃',
minilieren_info:'当你使用【杀】对目标角色造成伤害后，你可以弃置目标角色一张手牌，若此牌点数小于【杀】的点数，你获得此牌。',
minirelieren:'烈刃',
minirelieren_info:'当你使用【杀】指定目标后，你可以和目标角色进行拼点，然后你获得其的拼点牌。若你赢，你获得其一张牌。',
minitishen:'替身',
minitishen_info:'你的回合外，当目标角色含有你的【杀】结算完毕后，若你未受到此牌造成的伤害，则你获得此牌。当你使用的【杀】被【闪】抵消后，你本阶段使用的下一张【杀】不可被响应且造成的伤害+1。',
miniyajiao:'涯角',
miniyajiao_info:'当你于回合外使用或打出一张手牌时，你可以亮出牌堆顶的一张牌，并可以将之交给任意一名角色。当你于回合内发动一次〖龙胆〗后，你于结束阶段摸一张牌。',
miniliegong:'烈弓',
miniliegong_info:'你的攻击范围无限。当你使用【杀】指定目标后，若目标角色的手牌数不大于你，则该角色不能使用【闪】；若目标角色的体力值不小于你，此【杀】伤害+1。',
minikuanggu:'狂骨',
minikuanggu_info:'当你对一名角色造成1点伤害后，你可以回复1点体力或摸一张牌',
miniqimou:'奇谋',
miniqimou_info:'限定技，出牌阶段，你可以失去任意点体力并摸一张牌，本回合你计算与其他角色的距离-X且你可以多使用X张【杀】（X为你失去的体力值）。',
minidangxian:'当先',
minidangxian_info:'回合开始时，你进行一个额外的出牌阶段并从牌堆中获得一张【杀】。',
minifuli:'伏枥',
minifuli_info:'限定技，当你处于濒死状态时，你可以将体力回复至X点并将手牌数摸至X张，然后若X大于3，你翻面（X为全场势力数）。',
minilianhuan:'连环',
minilianhuan_info:'出牌阶段开始时，你可以选择至多两名角色，这些角色重置或横置其武将牌，然后若你也是【连环】的目标角色，则你摸一张牌。',
minihuoshou:'祸首',
minihuoshou_info:'锁定技，【南蛮入侵】对你无效；当其他角色使用【南蛮入侵】时，你代替其成为此牌的伤害来源并摸一张牌。',
minitiaoxin:'挑衅',
minitiaoxin_info:'出牌阶段开始时，你可以弃置一名其他角色至多两张手牌，然后若弃置的牌中含有【杀】，你弃置一张牌。',
minizhiji:'志继',
minizhiji_info:'觉醒技，准备阶段，若你没有手牌，你须回复1点体力或摸两张牌，然后减1点体力上限，并获得技能〖观星〗。',
minifangquan:'放权',
minifangquan_info:'你可以跳过你的出牌阶段，然后于此回合结束时选择一名其他角色，其进行一个额外回合。',
miniruoyu:'若愚',
miniruoyu_info:'主公技，觉醒技。准备阶段，若你的体力值为全场最少，你增加1点体力上限并回复1点体力，然后获得技能〖激将〗。',
minienyuan:'恩怨',
minienyuan_info:'当你获得一名其他角色的牌后，你可以令其摸一张牌；其他角色获得你的牌后，你可以摸一张牌。',
minixuanhuo:'眩惑',
minixuanhuo_info:'摸牌阶段，你可以选择一名其他角色，除非该角色对你选择的另一名角色使用一张【杀】，否则你获得其一张牌。',
miniqianxi:'潜袭',
miniqianxi2:'潜袭',
miniqianxi_info:'准备阶段，你可以摸两张牌并弃置其中的一张，然后你令一名与你距离为1的角色于本回合无法使用或打出与你弃置的牌颜色相同的手牌。',
minilongyin:'龙吟',
minilongyin_info:'当一名角色于其出牌阶段使用【杀】时，你可弃置一张牌令此【杀】不计入出牌阶段使用次数。若此【杀】为红色，则你摸一张牌；若你以此法弃置的牌与此【杀】的花色相同，则你重置〖竭忠〗。',
minixiansi:'陷嗣',
minixiansi_info:'准备阶段开始时，你可以弃置至多两名其他角色的各一张牌。若你弃置的是装备区里的牌且你在目标角色的攻击范围内，其视为对你使用一张【杀】。结算完成后，若〖陷嗣〗只选择了一名角色，则你摸一张牌。',
minibingzheng:'秉正',
minibingzheng_info:'出牌阶段结束时，你可以令一名角色弃置一张手牌或摸一张牌。然后若其手牌数等于体力值，你摸一张牌，且你可以交给该角色一张牌。',
miniliangzhu:'良助',
miniliangzhu_info:'当一名角色于其出牌阶段内回复体力时，你可以选择一项：1、摸一张牌；2、令该角色摸两张牌；3、获得该角色装备区里的武器牌。',
minifanxiang:'返乡',
minifanxiang_info:'觉醒技，准备阶段开始时，若你已发动过〖良助〗，你加1点体力上限并回复1点体力，失去技能〖良助〗并获得技能〖枭姬〗和〖舞剑〗。',
miniwujian:'舞剑',
miniwujian_info:'出牌阶段，你可以将装备区中的牌当作【杀】使用（每个装备栏每回合限一次，且该【杀】不计入次数限制）。',
minijujian:'举荐',
minijujian_info:'准备阶段和结束阶段，你可以弃置一张非基本牌并选择一名角色，令其选择一项：1.摸两张牌；2.回复1点体力；3.将其武将牌翻转至正面朝上并重置之。',
minihuxiao:'虎啸',
minihuxiao3:'虎啸',
minihuxiao_info:'锁定技，当你造成火属性伤害时，你于此回合内对目标角色使用牌没有次数限制。',
miniwuji:'武继',
miniwuji_info:'觉醒技，结束阶段开始时，若你于此回合内造成过3点或更多伤害，则你加1点体力上限并回复1点体力，然后从场上、牌堆或弃牌堆中获得【青龙偃月刀】。',
minisanyao:'散谣',
minisanyao_info:'出牌阶段限一次，你可以弃置至多四张牌并对等量的其他角色各造成1点伤害。',
minizhuandui:'专对',
minizhuandui_info:'当你使用【杀】指定目标/成为【杀】的目标后，你可以与目标角色/此【杀】使用者拼点，若你赢，此杀不能被【闪】响应/对你无效。当你拼点胜利后，你摸一张牌。',
minizuilun:'罪论',
minizuilun_info:'结束阶段，你可以观看牌堆顶的四张牌，你每满足以下一项便保留一张，然后以任意顺序放回其余的牌：1.你于此回合内造成过伤害；2.你于此回合内未弃置过牌；3.手牌数为全场最少。若均不满足，你选择一名其他角色，与其各失去1点体力。',
miniqiangwu:'枪舞',
miniqiangwu_info:'出牌阶段，你可以进行判定并获得判定牌。然后直到回合结束，你使用点数小于判定结果的【杀】时不受距离限制，且你使用点数大于判定结果的【杀】时无使用次数限制。',
minixiantu:'献图',
minixiantu_info:'一名其他角色的出牌阶段开始时，你可以摸两张牌，然后交给其两张牌。若如此做，此阶段结束时，若该角色本阶段未造成过伤害，你失去1点体力。',
minifumian:'福绵',
minifumian_info:'准备阶段，你可以选择一项：1.摸牌阶段多摸一张牌；2.使用红色牌可以多选择一个目标。若与你上回合选择的选项不同，则该选项数值+1并复原此技能。',
minidaiyan:'怠宴',
minidaiyan_info:'结束阶段，你可以令一名角色从牌堆中获得一张红桃基本牌，然后若其于上回合未成为过此技能的目标，则你摸一张牌。',
minijili:'蒺藜',
minijili_info:'当你于一回合内使用或打出第X张牌时，你可以摸X张牌（X为你的攻击范围）。结束阶段，你可以弃置一张牌并摸一张牌。',
miniqiaoshi:'樵拾',
miniqiaoshi_info:'其他角色的结束阶段，若其手牌数不小于你，你可以与其各摸一张牌。',
miniyanyu:'燕语',
miniyanyu_info:'出牌阶段，你可以重铸【杀】。回合结束时，若你本回合因〖燕语〗重铸过【杀】，则你可以令一名角色摸一张牌（若该角色不为你则改为摸两张牌）。',
minizhengnan:'征南',
minizhengnan_info:'当一名角色进入濒死状态时，若你未因其发动过〖征南〗，则你回复[1]点体力并摸[1]张牌，然后获得下列技能中的任意一个：〖武圣〗、〖当先〗和〖制蛮〗（若技能全部拥有则改为摸[3]张牌，若你因自己发动〖征南〗，则本次技能结算中所有[ ]中的数值+1）。',
minixiefang:'撷芳',
minixiefang_info:'锁定技，你计算与其他角色的距离时-X，你的手牌上限+X（X为女性角色数且X至少为1）。',
minifengpo:'凤魄',
minifengpo_info:'当你于回合内第一次使用【杀】或【决斗】指定一个目标后，你可以选择一项：1.摸X张牌；2.令此牌的伤害值基数+X。（X为其手牌中红色牌的数量且X至多为4）',
minifeijun:'飞军',
minifeijun_info:'出牌阶段限一次，你可以弃置一张牌，然后选择一项：⒈令一名其他角色交给你一张牌；⒉令一名其他角色弃置一张装备区的牌。',
minibinglve:'兵略',
minibinglve_info:'锁定技，当你发动〖飞军〗时，你摸一张牌，若目标角色与你之前指定的目标均不相同，则你再摸X张牌（X为成为过你发动〖飞军〗目标的存活角色数）。',
miniqiaoshui:'巧说',
miniqiaoshui_info:'①你的锦囊牌不计入手牌上限。②出牌阶段，你可与一名其他角色拼点。若你赢，你使用的下一张基本牌或普通锦囊牌可以增加或减少一个目标；若你没赢，你本回合不能再发动〖巧说②〗。',
miniqirang:'祈禳',
miniqirang_info:'①当你使用装备牌，你可获得牌堆中的一张锦囊牌。②当你使用锦囊牌指定唯一目标时，你可以为此牌额外指定一个目标。',
miniyuhua:'羽化',
miniyuhua_info:'锁定技。①你的非基本牌不计入手牌上限。②结束阶段，你观看牌堆顶的两张牌，将其中一张牌置于牌堆顶或牌堆底，然后获得另一张牌。',
minibazhen:'八阵',
minibazhen_info:'锁定技。①若你的装备区没有防具牌，你视为装备【八卦阵】。②当你的【八卦阵】判定失效时，你摸一张牌。',
minihuoji:'火计',
minihuoji_info:'①你可以将一张红色牌当作【火攻】使用。②当你使用【火攻】需要弃牌时，你可以观看牌堆顶的四张牌，选择其中一张符合要求的牌作为需要弃置的牌，然后将其余的牌放回牌堆顶。',
minixushen:'许身',
minixushen2:'许身',
minixushen_info:'限定技，当你进入濒死状态后，你可以回复1点体力并获得技能〖镇南〗，然后若你脱离濒死状态且“欢杀关索”不在场，你可令一名其他角色选择是否用“欢杀关索”代替其武将并令其摸三张牌。',
minisouying:'薮影',
minisouying_info:'每回合限一次，当你对其他角色（或其他角色对你）使用【杀】或普通锦囊牌指定唯一目标后，你可以弃置一张牌。若如此做，你获得此牌对应的所有实体牌（或令此牌对你无效）。',
minizhanyuan:'战缘',
minizhanyuan_info:'觉醒技，你的回合内，当你因〖蛮嗣〗累计获得超过7张牌后，你可以选择一名其他角色。若如此做，你与其获得技能〖系力〗，然后你失去技能〖蛮嗣〗',
minifuhan:'扶汉',
minifuhan_info:'限定技，回合开始时，你可以移去所有"梅影"标记并摸等量的牌，然后从X张蜀势力武将牌中选择并获得至多两个技能（限定技、觉醒技、隐匿技、使命技、主公技除外）。若此时你是体力值最低的角色，你回复1点体力（X为场上角色数，且X至少为4）。',
minifuhan_append:'<span style="font-family:yuanli">欢杀〖扶汉〗将池：<br>活动武将扩展页面自定义欢杀〖评鉴〗将池的全部蜀国武将（未自定义将池/联机模式默认为欢乐三国杀全武将）。</span>',
minifuhan_faq:'欢杀〖扶汉〗将池',
minifuhan_faq_info:'<br>活动武将扩展页面自定义欢杀〖评鉴〗将池中的全部蜀国武将（未自定义将池/联机模式默认为欢乐三国杀全武将）。',
minibaobian:'豹变',
minibaobian_info:'锁定技，当你受到伤害后，你获得以下未获得的第一个技能：〖挑衅〗、〖咆哮〗、〖神速〗。',
minijuzhan:'拒战',
minijuzhan_info:'当你成为其他角色【杀】的目标后，你可以与其各摸一张牌，然后其本回合内不能再对你使用牌。当你使用【杀】指定一名角色为目标后，你可以获得其一张牌，然后你本回合内不能再对其使用红色【杀】。',
miniwanglie:'往烈',
miniwanglie2:'往烈',
miniwanglie_info:'出牌阶段，你使用牌无距离限制。当你于出牌阶段内使用牌时，你可以令此牌不能被响应，且本回合结束时，你摸等同于此牌造成的伤害数的牌，然后你本回合不能再使用牌。',
miniduliang:'督粮',
miniduliang2:'督粮',
miniduliang_info:'出牌阶段限一次，你可以获得一名其他角色的一张手牌，然后选择一项：1.令其观看牌堆顶的两张牌，然后获得其中的基本牌和装备牌；2.令其于下个摸牌阶段额外摸一张牌，然后交给你一张牌。',
minizhanjue:'战绝',
minizhanjue_info:'出牌阶段，若你本阶段内因〖战绝〗获得过的牌数小于3，则你可以将所有手牌当做【决斗】使用。此【决斗】使用结算结束后，你摸一张牌，然后所有因此【决斗】受到过伤害的角色也各摸一张牌。若你因此【决斗】受到过伤害，则你可以弃置伤害来源的一张牌。',
miniqinwang:'勤王',
miniqinwang_info:'主公技。出牌阶段限一次，你可以令所有其他蜀势力角色依次选择是否交给你一张基本牌，然后你可以令选择是的角色摸一张牌（以此法获得的牌本回合不计算在〖战绝〗使用的牌中）。',
miniyouyan:'诱言',
miniyouyan_info:'①出牌阶段限一次，你可以弃置任意张牌。②出牌阶段/弃牌阶段各限一次，当你的牌因弃置进入弃牌堆后，你可以从牌堆中获得本次弃牌中没有的花色的牌各一张。',
minirejizhi:'集智',
minirejizhi_info:'当你使用锦囊牌时，你可以摸一张牌。若此牌为：基本牌，你本回合手牌上限+1；锦囊牌，你本回合使用【杀】的额定次数+1；装备牌，你可以将此牌置入一名其他角色的装备区。',
minireqicai:'奇才',
minireqicai_info:'锁定技，你使用锦囊牌无距离限制，你装备区内的武器牌和防具牌不能被其他角色弃置。',
minizhongyong:'忠勇',
minizhongyong_info:'当你使用的【杀】结算完毕后，你可以将此【杀】或目标角色使用的【闪】交给一名目标角色以外的其他角色，若其中包含：红色牌，获得牌的角色可以对你攻击范围内的角色使用一张【杀】；黑色牌，你与获得牌的角色各摸一张牌。',
minidaopu:'刀仆',
minidaopu_info:'锁定技，若你的你的武器栏未被废除且装备区中没有武器牌，则你视为装备【青龙偃月刀】；若你的装备区中有【青龙偃月刀】，则你使用红色【杀】造成的伤害+1。',
minitunan:'图南',
minitunan_info:'出牌阶段限一次，你可以选择至多两名角色，这些角色依次展示牌堆顶的一张牌并选择一项：使用此牌（无距离限制）；将此牌当作普通【杀】使用。',
miniqianya:'谦雅',
miniqianya_info:'当你成为锦囊牌的目标后，你可以将任意张手牌交给一名其他角色，然后你从牌堆中获得一张非装备牌。',
minishushen:'淑慎',
minishushen_info:'①一名角色受到伤害时，你可以失去1点体力并防止此伤害，然后你与其各摸一张牌。②当你回复1点体力后，你可以令一名其他角色摸一张牌。',
minihuangsi:'皇思',
minihuangsi_info:'限定技，当你处于濒死状态时，你可以将体力值回复至1并弃置所有手牌，然后你可以令一名角色摸X+2张牌（X为你以此法弃置的手牌数）。',
minifengxiang:'封乡',
minifengxiang_info:'锁定技，当你受到伤害后，你摸一张牌，然后手牌中“隙”最多的角色各回复1点体力。',
miniziyuan:'资援',
miniziyuan_info:'出牌阶段限一次，你可以将任意张手牌交给一名其他角色，若这些牌的点数之和：不小于13，该角色回复1点体力；不大于13，你摸一张牌。',
minijugu:'巨贾',
minijugu_info:'锁定技。①你的手牌上限+X。②回合开始时，你可以视为对至多X名角色使用【五谷丰登】。（X为你的体力上限）',
miniguixiu:'闺秀',
miniguixiu_info:'锁定技，每回合限一次，结束阶段，若你的体力值为：奇数，你摸一张牌；偶数，你回复1点体力。',
miniguixiux:'闺秀·改',
miniguixiux_info:'锁定技，每回合限一次，结束阶段或当你进入濒死状态时，若你的体力值为：奇数，你摸一张牌；偶数，你回复1点体力。',
minicunsi:'存嗣',
minicunsi_info:'限定技，出牌阶段，你可以令一名其他角色获得技能〖勇决〗，然后修改技能〖闺秀〗，最后你失去所有体力并令其摸X张牌（X为你失去的体力数+1）。',
miniyongjue:'勇决',
miniyongjue_info:'①其他角色出牌阶段使用的第一张【杀】结算完毕后，你可以获得之。②当你受到有点数的【杀】造成的伤害时，你可以弃置一张点数大于等于此【杀】点数的牌并防止此伤害。',
minihuguan:'护关',
minihuguan_info:'一名角色于其出牌阶段使用第一张红色牌时，你可以选择一个花色并选择一项：①令其本回合此花色的牌不计入手牌上限；②令其本回合不能弃置此花色的手牌。',
minimingluan:'鸣鸾',
minimingluan_info:'其他角色的结束阶段，若本回合有角色回复过体力，你可以摸等同于当前回合角色手牌数的牌，然后将手牌弃至五张。',
minijijie:'机捷',
minijijie_info:'①出牌阶段限一次，你可以观看牌堆底的一张牌，然后将其交给任意一名角色。②每轮限一次，一名角色于其出牌阶段内一次性得到超过一张牌时，你可以发动〖机捷①〗。',
minijiyuan:'急援',
minijiyuan_info:'①当你交给一名其他角色牌时，你可令该角色摸一张牌。②当一名角色进入濒死时，你可令其摸X张牌并清空〖机捷①〗的发动计数（X为你发动〖机捷①〗的次数）。',
minisppaoxiao:'咆哮',
minisppaoxiao_info:'锁定技。①你使用【杀】无距离和次数限制。②你使用本回合第一次之后的【杀】造成的伤害+1，使用本回合第二次之后的【杀】无视防具且不可被响应。',
minixvhe:'虚吓',
minixvhe_info:'锁定技，当你使用的【杀】被【闪】抵消后，或你使用或打出【闪】时，你摸一张牌。',
minirewusheng:'武圣',
minirewusheng_info:'①回合开始时，你从牌堆或弃牌堆中获得一张红色牌。②你可以将一张红色牌当作【杀】使用或打出。③你使用的红色【杀】造成的伤害+1。',
minituodao:'拖刀',
minituodao_info:'锁定技，当你使用或打出【闪】时，你令你使用的下一张【杀】的伤害基数+1。',
miniyoulong:'游龙',
miniyoulong_info:'转换技，每回合限一次，你可以废除你的一个装备栏，视为使用一张未以此法使用过的：阴，普通锦囊牌；阳，基本牌。',
miniyaopei:'摇佩',
miniyaopei_info:'其他角色的弃牌阶段结束时，若其本阶段弃置过牌，则你可以弃置一张牌。若此牌与其本阶段弃置的任意牌的花色相同，你回复1点体力并摸两张牌；否则你选择一项：①其摸两张牌，你回复1点体力。②其回复1点体力，你摸两张牌。',
//吴
Mbaby_bulianshi:'欢杀步练师',
Mbaby_chengpu:'欢杀程普',
Mbaby_daqiao:'欢杀大乔',
Mbaby_ganning:'欢杀甘宁',
Mbaby_huanggai:'欢杀黄盖',
Mbaby_lusu:'欢杀鲁肃',
Mbaby_luxun:'欢杀陆逊',
Mbaby_lvmeng:'欢杀吕蒙',
Mbaby_sunce:'欢杀孙策',
Mbaby_sunluban:'欢杀孙鲁班',
Mbaby_sunluyu:'欢杀孙鲁育',
Mbaby_sunquan:'欢杀孙权',
Mbaby_sunshangxiang:'欢杀孙尚香',
Mbaby_taishici:'欢杀太史慈',
Mbaby_wuguotai:'欢杀吴国太',
Mbaby_xiaoqiao:'欢杀小乔',
Mbaby_xusheng:'欢杀徐盛',
Mbaby_zhoutai:'欢杀周泰',
Mbaby_zhouyu:'欢杀周瑜',
Mbaby_zhugejin:'欢杀诸葛瑾',
Mbaby_zumao:'欢杀祖茂',
Mbabysp_xiaoqiao:'SP欢杀小乔',
Mbaby_zhuzhi:'欢杀朱治',
Mbaby_ol_sunjian:'欢杀孙坚',
Mbaby_sunliang:'欢杀孙亮',
Mbaby_zhangzhang:'欢杀张昭张紘',
Mbaby_zhoufei:'欢杀周妃',
Mbaby_zhugeke:'欢杀诸葛恪',
Mbaby_xushi:'欢杀徐氏',
Mbaby_buzhi:'欢杀步骘',
Mbaby_lukang:'欢杀陆抗',
Mbabysp_daqiao:'SP欢杀大乔',
Mbaby_sunhao:'欢杀孙皓',
Mbaby_re_jsp_pangtong:'SP欢杀庞统',
Mbaby_luyusheng:'欢杀陆郁生',
Mbaby_zhuhuan:'欢杀朱桓',
Mbaby_yanjun:'欢杀严畯',
Mbaby_re_sunyi:'欢杀孙翊',
Mbaby_zhangxuan:'欢杀张嫙',
Mbaby_zhoufang:'欢杀周鲂',
Mbaby_luji:'欢杀陆绩',
Mbaby_sundeng:'欢杀孙登',
Mbaby_panjun:'欢杀潘濬',
Mbaby_dingfeng:'欢杀丁奉',
Mbaby_dc_sunru:'欢杀孙茹',
Mbaby_xuezong:'欢杀薛综',
Mbaby_sb_huanggai:'SP欢杀黄盖',
minizhiheng:'制衡',
minizhiheng_info:'出牌阶段结束时，你可以弃置任意张手牌并将手牌数补至四张。',
minirezhiheng:'制衡',
minirezhiheng_info:'出牌阶段限一次，你可以弃置任意张牌并摸等量张牌。若你以此法弃置了全部手牌，则你额外摸一张牌。若本阶段你第一次发动〖制衡〗获得的牌未包含延时锦囊牌，则本阶段你可以额外发动一次〖制衡〗。若本阶段你第二次发动〖制衡〗获得的牌均为基本牌，则本阶段你可以额外发动一次〖制衡〗。',
minijiuyuan:'救援',
minijiuyuan_info:'主公技，锁定技。①其他吴势力角色对你使用的【桃】的回复值+1。②其他吴势力角色于其回合内回复体力时，可以改为令你回复1点体力，然后其摸一张牌。',
miniqixi:'奇袭',
miniqixi_info:'你可以将一张黑色牌当作【过河拆桥】使用。出牌阶段开始时，你可以弃置一名角色的一张牌。',
minifenwei:'奋威',
minifenwei_info:'限定技，当一名角色使用的锦囊牌指定了至少两名角色为目标时，你可以令此牌对其中任意名角色无效，然后你摸一张牌。当你失去最后的手牌后，你重置〖奋威〗。',
miniwanrong:'国色',
miniwanrong_info:'当你失去方片牌时，摸一张牌。',
miniguose:'婉容',
miniguose_info:'出牌阶段限一次，你可以将一张方片花色牌当作【乐不思蜀】使用，或弃置一张方片花色牌并弃置场上的一张【乐不思蜀】。',
minizhaxiang:'诈降',
minizhaxiang_info:'锁定技，你使用红色【杀】无距离限制且不能被闪避，你使用【杀】的次数上限+1.',
minifanjian:'反间',
minifanjian_info:'出牌阶段开始时，你可以令一名其他角色摸一张牌，然后你对其造成1点伤害。',
miniqianxun:'谦逊',
miniqianxun_info:'锁定技，当你成为锦囊牌的唯一目标时，你摸一张牌，然后可以交给一名其他角色一张手牌。',
minitianyi:'天义',
minitianyi_info:'出牌阶段开始时，你可以选择一项：①本回合使用【杀】的次数上限+1，且使用【杀】造成伤害后回复1点体力；②摸一张牌，本回合使用【杀】无距离限制且无视目标角色的防具。',
minihaoshi:'好施',
minihaoshi_info:'摸牌阶段，你可以多摸两张牌，然后若你的手牌数大于5，你须弃置X张手牌或将X张手牌交给一名手牌数最少的其他角色（X为你手牌数的一半，向下取整）。',
miniganlu:'甘露',
miniganlu_info:'锁定技，出牌阶段开始时，你选择一项：①移动场上的一张装备牌；②交换场上装备区中的两张副类别相同的装备牌的位置；③摸一张牌。',
minibuyi:'补益',
minibuyi_info:'每回合限三次，一名角色进入濒死状态时，你可以展示其一张手牌，若此牌为基本牌，该角色弃置此牌并回复1点体力。',
minipojun:'破军',
minipojun2:'破军',
minipojun_info:'当你使用【杀】指定目标时，你可以将其至多X张牌移出游戏直至回合结束（X为其体力值），然后若其中有：装备牌，你弃置其中的一张；【闪】，你摸一张牌。',
minianxu:'安恤',
minianxu_info:'出牌阶段开始和结束时，你可以获得一名手牌数最多的其他角色的一张手牌，然后若此牌的花色为黑桃，该角色摸一张牌。',
minilihuo:'疠火',
minilihuo_info:'当你声明使用普通【杀】时，你可以将此【杀】改为火【杀】。若以此法使用的【杀】造成的伤害大于1，则此【杀】结算后你失去1点体力；你使用火【杀】选择目标后，可以额外指定一个目标。当你于回合内第一次因火【杀】造成伤害后，你摸一张牌。',
minichunlao:'醇醪',
minichunlao2:'醇醪',
minichunlao_info:'结束阶段，若你没有“醇”，你可以将至少一张【杀】置于你的武将牌上，称为“醇”。当一名角色处于濒死状态时，你可以移去一张“醇”，视为该角色使用一张【酒】，然后若此“醇”的颜色为：红色，你回复1点体力；黑色，你摸两张牌。',
minizenhui:'谮毁',
minizenhui_info:'出牌阶段限一次，当你使用【杀】或普通锦囊牌指定唯一目标时，你可以令其选择一项：①交给你一张牌；②失去1点体力。',
minijiaojin:'骄矜',
minijiaojin_info:'当你成为其他角色使用【杀】或普通锦囊牌的目标后，你可以弃置一张手牌并令此牌对你无效。',
minihongyuan:'弘援',
minihongyuan_info:'摸牌阶段，你可以令至多两名角色各摸一张牌。',
minixingwu:'星舞',
minixingwu_info:'出牌阶段限一次，你可以翻面并弃置一张手牌，然后弃置一名角色装备区里的一张牌并对其造成2点伤害（若该角色为女性角色则改为1点）。',
miniluoyan:'落雁',
miniluoyan_info:'锁定技，当你发动〖星舞〗后，你获得〖天香〗和〖红颜〗直至你的下个出牌阶段开始。',
minihuimou:'回眸',
minihuimou_info:'当你于回合外使用或打出红桃牌时，或发动〖天香〗弃置红桃牌后，你可以令一名背面朝上的角色翻至正面。',
miniyinbing:'引兵',
miniyinbing_info:'弃牌阶段开始前，你可以将至少一张非基本牌称作「引兵」牌置于武将牌上。每当你受到【杀】的伤害后，你移去一张「引兵」牌并摸一张牌。',
minijuedi:'绝地',
minijuedi_info:'锁定技，准备阶段，若你的武将牌上有「引兵」牌，你选择一项：1.移去「引兵」牌，将手牌补至体力上限+1；2.将「引兵」牌交给一名体力值不大于你的其他角色，其回复1点体力并摸等量的牌。',
minimeibu:'魅步',
minimeibu_info:'其他角色的出牌阶段开始时，你可以弃置一张牌，令该角色于本阶段内拥有〖止息〗，且你获得其因〖止息〗弃置的牌。',
minijieyin:'结姻',
minijieyin_info:'出牌阶段限一次，你可以选择一名其他角色，交给其一张手牌或将装备区内的一张装备牌置于其装备区，然后你回复1点体力并摸一张牌。若其体力值小于你，你可以令其回复1点体力；若其体力值大于等于你，你可以令其摸一张牌。',
minibuqu:'不屈',
minibuqu_info:'锁定技。①当你处于濒死状态时，若你的“创”标记数小于4，则你获得1枚“创”并将体力值回复至1点。②你的手牌上限+X（X为你的“创”标记数）。',
minirebuqu:'不屈',
minirebuqu_info:'锁定技。①当你受到伤害或失去体力时，若你的“创”标记数小于4，则你获得1枚“创”并取消之。②你的手牌上限+X（X为你的“创”标记数）。',
miniqingchuang:'清创',
miniqingchuang_info:'出牌阶段限一次，你可以弃置一张【桃】或【酒】，然后移去1枚“创”并摸一张牌。',
minijiang:'激昂',
minijiang_info:'当你使用【杀】或【决斗】时指定目标后，或成为其他角色使用【杀】或【决斗】时指定目标后，你可以摸一张牌。',
minihunzi:'魂姿',
minihunzi_info:'觉醒技，游戏开始时或当你的体力值发生变化时，若你的体力值为1，你减1点体力上限，然后获得技能〖英姿〗和〖英魂〗。',
minihunzi_old:'魂姿',
minihunzi_old_info:'觉醒技，准备阶段，若你的体力值为1，你减1点体力上限，然后获得技能〖英姿〗和〖英魂〗。',
minizhiba:'制霸',
minizhiba2:'制霸',
minizhiba_info:'主公技，其他吴势力角色的出牌阶段限一次，其可以交给你一张【杀】或【决斗】。',
minikeji:'克己',
minikeji_info:'弃牌阶段开始时，若你于本回合的出牌阶段内没有过使用或打出过【杀】，则你可以跳过此阶段并摸一张牌。',
miniqinxue:'勤学',
miniqinxue_info:'觉醒技，结束阶段，若你的手牌数不小于你的体力值的三倍，则你调整体力上限与体力值一致，失去技能〖克己〗并获得技能〖攻心〗。',
minitianxiang:'天香',
minitianxiang2:'天香',
minitianxiang_info:'当你即将受到伤害时，你可以弃置一张红桃手牌并将伤害转移给一名其他角色，然后你选择一项：①令其摸一张牌：②令其摸X张牌（X为其损失的体力值）。',
minianguo:'安国',
minianguo_info:'出牌阶段限一次，你可以选择一名角色，若其手牌数为全场最少，其摸一张牌；体力值为全场最低，回复1点体力；装备区内牌数为全场最少，随机使用一张装备牌。然后若该角色有未执行的效果且你满足条件，你执行之。',
miniyinghun:'英魂',
miniyinghun_info:'准备阶段开始时，你可令一名其他角色执行一项：1.摸X张牌；2.摸一张牌，然后弃置X张牌（X为你已损失的体力值）。',
miniwulie:'武烈',
miniwulie_info:'限定技，回合开始时，你可以失去任意点体力并获得Y枚「烈」，然后你可以指定至多Y名其他角色，令这些角色各获得1枚「烈」（Y为你以此法失去的体力值）。有「烈」的角色受到伤害时，其可以移去1枚「烈」，然后防止此伤害。',
miniwulie2:'武烈',
miniwulie2_info:'移去1枚「烈」，然后防止此伤害',
minikuizhu:'溃诛',
minikuizhu_info:'弃牌阶段结束后，你可以选择一项：①令至多X名角色各摸一张牌。②对任意名体力值之和不大于X的角色各造成1点伤害。（X为你此阶段弃置的牌数）',
minichezheng:'掣政',
minichezheng_info:'锁定技，你的出牌阶段内，攻击范围内不包含你的其他角色不能成为你使用【杀】的目标。出牌阶段结束时，你摸X张牌（X为攻击范围内不包含你的其他角色数且X至少为2）。',
minilijun:'立军',
minilijun_info:'主公技，每个出牌阶段限一次，其他吴势力角色使用【杀】结算后，你摸一张牌，然后你可以令其摸一张牌。',
miniguzheng:'固政',
miniguzheng_info:'其他角色的弃牌阶段结束时，你可以令其获得本阶段内进入弃牌堆的牌中的一张，然后你获得剩余的牌（若没有剩余的牌则改为摸一张牌）。',
miniliangyin:'良姻',
miniliangyin_info:'当有牌移至游戏外时，你可以令一名角色摸一张牌；当有牌从游戏外加入任意角色的手牌时，你可以令一名角色弃置一张牌。',
miniaocai:'傲才',
miniaocai_info:'当你于回合外需要使用或打出一张基本牌时，你可以观看牌堆顶的三张牌（若你没有手牌则改为四张）。若你观看的牌中有此牌，你可以使用打出之。',
miniduwu:'黩武',
miniduwu_info:'出牌阶段，你可以弃置X张牌对你攻击范围内的一名其他角色造成1点伤害（X为该角色的体力值）。若该角色因此法进入濒死状态且存活，则你于濒死状态结算后摸一张牌，且本回合不能再发动〖黩武〗。',
miniwengua:'问卦',
miniwengua2:'问卦',
miniwengua_info:'{其他角色}/{你}的出牌阶段限一次，{其可以交给你一张牌并展示}/{你可以展示一张牌}，若此牌为锦囊牌，则你加1点体力上限（体力上限至多加至5点）并回复1点体力，你可以将此牌置于牌堆顶或牌堆底，然后{你与其}/{你}从另一端摸一张牌。',
minifuzhu:'伏诛',
minifuzhu_info:'其他角色的结束阶段，若牌堆剩余牌数不大于你体力上限的十倍，则你可以依次对其使用牌堆中所有的【杀】（不能超过游戏人数），然后洗牌。',
minihongde:'弘德',
minihongde_info:'当你一次性获得至少两张牌后，你可以令一名其他角色摸一张牌。每回合限两次，当你失去牌后，你可以摸一张牌。',
minidingpan:'定叛',
minidingpan_info:'出牌阶段限X次，你可以令一名装备区里有牌的角色摸一张牌，然后其选择一项：1.令你弃置其装备区里的一张牌；2.获得其装备区里的所有牌，若如此做，你对其造成1点伤害。（X为场上的存活势力数）',
minijueyan:'决堰',
minijueyan_info:'出牌阶段限一次，你可以废除一个装备栏，然后根据选择执行对应的效果：①武器栏，本回合内你可以多使用三张【杀】；②防具栏，摸三张牌，本回合手牌上限+3；③2个坐骑栏，回复1点体力，本回合获得技能〖集智〗，且本回合你使用的牌无距离限制。',
minihuairou:'怀柔',
minihuairou_info:'出牌阶段，你可以将一张你已废除装备栏对应副类别的装备牌置入弃牌堆，然后选择一个基本牌或锦囊牌的牌名从牌堆中或弃牌堆获得之（每种牌名每回合限一次）。',
miniyanxiao:'言笑',
miniyanxiao_info:'出牌阶段，你可以将一张方片称为“言笑”牌置于一名角色的判定区内。判定区内有“言笑”牌的角色下个判定阶段开始时，其获得判定区里的所有牌，然后其进行一次判定，若判定结果为：红色，其摸一张牌；黑色，其本回合使用【杀】的次数上限+1。',
minianxian:'安娴',
minianxian_info:'当你不因〖安娴〗使用【杀】指定目标时，你可以令其弃置一张手牌；当你成为【杀】的目标时，你可以弃置一张手牌，令此【杀】对你无效，然后使用者摸一张牌，若你弃置了方片牌，则你视为对此【杀】的使用者使用一张【杀】。',
minicanshi:'残蚀',
minicanshi2:'残蚀',
minicanshi_info:'摸牌阶段开始时，你可以多摸X张牌（X为已受伤的角色数）。若如此做，当你于此回合内使用【杀】时，你弃置一张牌。',
minichouhai:'仇海',
minichouhai_info:'锁定技，当你受到【杀】造成的伤害时，若你没有牌，则此伤害+1。',
miniguolun:'过论',
miniguolun_info:'出牌阶段限一次，你可以展示一名其他角色的手牌，然后你可以选择你的一张牌，你与其交换这两张牌。然后若你展示的牌的点数比其展示的牌的点数小，你摸两张牌；若其展示的牌的点数比你展示的牌的点数小，其摸一张牌，你回复1点体力。',
minisongsang:'送丧',
minisongsang_info:'锁定技，其他角色死亡后，你增加1点体力上限，然后回复1点体力。',
minizhente:'贞特',
minizhente_info:'当你成为其他角色使用基本牌或普通锦囊牌的目标后，你可令使用者选择一项：1.本回合不能再使用与此牌颜色相同的牌；2.此牌对你无效。 ',
minizhiwei:'至微',
minizhiwei2:'至微',
minizhiwei_info:'游戏开始时/你的回合开始时，若场上没有因此法被选择过的角色存活，则你选择一名其他角色。该角色造成伤害后，你摸一张牌，该角色受到伤害后，你可以交给其一张手牌。你弃牌阶段弃置的牌可以交给该角色。',
minifenli:'奋励',
minifenli_info:'若你的手牌数/体力值/装备区的牌数为全场最多，你可以跳过判定和摸牌阶段/出牌阶段/弃牌阶段。',
minipingkou:'平寇',
minipingkou_info:'回合结束时，你可以对至多X名其他角色各造成1点伤害（X为你本回合跳过的阶段数）。若你选择的角色数小于你本回合跳过的阶段数，则你选择其中一名装备区有牌的目标角色，获得其装备区中的一张牌。',
miniguanchao:'观潮',
miniguanchao_info:'出牌阶段开始时，你可以选择获得一项效果直到回合结束：1.本回合你使用【杀】的额定次数+1，当你使用牌时，若你本回合使用过的所有牌的点数为严格递增，你摸一张牌；2.本回合你计算与其他角色距离-1，当你使用牌时，若你本回合使用过的所有牌的点数为严格递减，你摸一张牌。',
minixunxian:'逊贤',
minixunxian_info:'每名角色的回合限一次，当你使用或打出的牌进入弃牌堆后，你可以将这些牌交给一名其他角色。',
minisyxiongyi:'凶疑',
minisyxiongyi_info:'限定技。当你处于濒死状态时，若剩余武将牌堆中：有“欢杀徐氏”，则你可以将体力值回复至3点，并将此武将牌替换为“欢杀徐氏”；没有“欢杀徐氏”，则你可以将体力值回复至1点并获得〖魂姿〗。',
minishezang:'奢葬',
minishezang_info:'每回合限一次。当你或你回合内的其他角色进入濒死状态时，你可以从牌堆中获得每种花色的牌各一张。',
miniyoudi:'诱敌',
miniyoudi_info:'结束阶段，你可以令一名其他角色弃置你一张手牌。若弃置的牌：不是【杀】，则你获得其一张牌并摸一张牌；不是黑色牌且你的体力上限小于5，则你增加1点体力上限。',
minizhenglun:'整论',
minizhenglun_info:'摸牌阶段，若你没有“橘”，你可以少摸一张牌并获得一个“橘”。',
minikuangbi:'匡弼',
minikuangbi_info:'①出牌阶段限一次，你可以令一名其他角色将至多三张牌置于你的武将牌上，然后你可以令其摸等量张牌。②回合开始时，你获得武将牌上所有的“匡弼”牌。③当你失去手牌中最后一张因〖匡弼②〗获得的牌时，你摸一张牌并回复1点体力。',
miniguanwei:'观微',
miniguanwei_info:'每回合限一次，一名角色的出牌阶段结束时，若其本阶段使用过重复花色的牌，则你可以弃置一张牌，令该角色摸两张牌并进行一个额外的出牌阶段。',
minigongqing:'公清',
minigongqing_info:'锁定技，当你受到伤害时，若伤害来源的攻击范围：小于3，此伤害减至1点；大于等于3，你摸一张牌。',
miniduanbing:'短兵',
miniduanbing_info:'①你使用【杀】可以额外选择一名距离为1的角色为目标。②当你于一回合首次使用【杀】指定与你距离不小于1的角色后，你令其需额外使用一张【闪】响应此【杀】。',
minifenxun:'奋迅',
minifenxun_info:'①出牌阶段限一次，你可以选择一名其他角色，本回合你计算与其的距离视为1。②回合结束时，你摸X张牌（X为本回合距离你1以内的受到过伤害的角色数）。',
minixiecui:'撷翠',
minixiecui_info:'一名角色于其回合内第一次使用牌造成伤害时，你可以令此伤害+1。然后若其手牌数大于其体力值，则该角色获得此伤害牌对应的实体牌且其本回合的手牌上限+1。',
minifunan:'复难',
minifunan_info:'其他角色使用或打出牌响应你使用的牌时，你可获得其使用或打出的牌。',
minijiexun:'诫训',
minijiexun_info:'结束阶段，你可以选择一种花色，然后令一名角色摸等同于场上此花色牌数张牌，然后其弃置X张牌（X为此前〖诫训〗的发动次数）。若其因此法弃置了所有牌，则清空〖诫训〗的发动次数。',
minisbkurou:'苦肉',
minisbkurou_info:'出牌阶段，你可以失去1点体力，然后你的手牌上限和体力上限+1直到你的下个回合开始，然后当你使用【桃】时，你重置此技能。',
minisbzhaxiang:'诈降',
minisbzhaxiang_info:'锁定技。①当你失去1点体力后，你摸三张牌。②回合结束时，你摸X张牌。③你于每回合使用的前X张【杀】无距离和次数限制且不可被响应。（X为你已损失体力值的一半，向上取整）',
//群
Mbaby_zuoci:'欢杀左慈',
Mbaby_gaoshun:'欢杀高顺',
Mbaby_caifuren:'欢杀蔡夫人',
Mbaby_lijue:'欢杀李傕',
Mbaby_xuyou:'欢杀许攸',
Mbaby_gongsunzan:'欢杀公孙瓒',
Mbaby_pangde:'欢杀庞德',
Mbaby_jushou:'欢杀沮授',
Mbaby_liru:'欢杀李儒',
Mbaby_dongzhuo:'欢杀董卓',
Mbaby_zhangjiao:'欢杀张角',
Mbaby_huatuo:'欢杀华佗',
Mbaby_lvbu:'欢杀吕布',
Mbaby_sp_diaochan:'SP欢杀貂蝉',
Mbaby_diaochan:'欢杀貂蝉',
Mbaby_huaxiong:'欢杀华雄',
Mbaby_yuji:'欢杀于吉',
Mbaby_zhangliang:'欢杀张梁',
Mbaby_zhangbao:'欢杀张宝',
Mbaby_yanwen:'欢杀颜良文丑',
Mbaby_caiwenji:'欢杀蔡琰',
Mbaby_liubiao:'欢杀刘表',
Mbaby_yuanshao:'欢杀袁绍',
Mbaby_yuanshu:'欢杀袁术',
Mbaby_chengong:'欢杀陈宫',
Mbaby_jiaxu:'欢杀贾诩',
Mbaby_liuzhang:'欢杀刘璋',
Mbaby_panfeng:'欢杀潘凤',
Mbaby_sp_machao:'SP欢杀马超',
Mbaby_jsp_huangyueying:'欢杀黄月英',
Mbaby_quyi:'欢杀麴义',
Mbaby_liuxie:'欢杀刘协',
Mbaby_fuhuanghou:'欢杀伏寿',
Mbaby_zhangqiying:'欢杀张琪瑛',
Mbaby_chunyuqiong:'欢杀淳于琼',
Mbaby_beimihu:'欢杀卑弥呼',
Mbaby_dongbai:'欢杀董白',
Mbaby_zhangji:'欢杀张济',
Mbaby_sp_taishici:'SP欢杀太史慈',
Mbaby_xushao:'欢杀许劭',
Mbaby_hetaihou:'欢杀何太后',
Mbaby_wangrong:'欢杀王荣',
Mbaby_sp_menghuo:'SP欢杀孟获',
Mbaby_caoxing:'欢杀曹性',
Mbabysp_zhenji:'SP欢杀甄宓',
Mbaby_liangxing:'欢杀梁兴',
Mbaby_caojie:'欢杀曹节',
Mbaby_tangji:'欢杀唐姬',
Mbaby_libai:'欢杀李白',
Mbaby_guotufengji:'欢杀郭图逢纪',
Mbaby_re_nanhualaoxian:'欢杀南华老仙',
Mbaby_yanfuren:'欢杀严夫人',
Mbaby_gongsunyuan:'欢杀公孙渊',
Mbaby_sp_zhangliao:'SP欢杀张辽',
Mbaby_sp_ol_zhanghe:'SP欢杀张郃',
Mbaby_zhujun:'欢杀朱儁',
miniweidi:'伪帝',
miniweidi_info:'弃牌阶段结束时，你可以将其中一张弃置的牌交给一名其他角色。',
minimingce:'明策',
minimingce_info:'出牌阶段开始时，你可以令一名其他角色视为对其攻击范围内另一名角色使用一张【杀】。',
minichenglve:'成略',
minichenglve_info:'出牌阶段限一次，你可以摸一张牌，然后弃置一张手牌。若如此做，直到本回合结束，你使用与弃置牌花色相同的牌无距离和次数限制。',
miniguhuo:'蛊惑',
miniguhuo_info:'锁定技。①你使用【杀】或伤害性锦囊牌结算完毕后，若此牌未造成伤害，你将此牌移出游戏并摸一张牌，然后于当前回合结束获得此牌。②每回合限一次，你使用【杀】或伤害性锦囊牌结算完毕后，若此牌造成伤害，你摸一张牌。',
minijijun:'集军',
minijijun_info:'锁定技，当你使用【杀】或普通锦囊牌指定唯一目标时，或成为【杀】的目标时，你进行一次判定，若结果为黑色，你将此牌置于武将牌上，称为“兵”。',
minifangtong:'方统',
minifangtong_info:'结束阶段，你可以选择一项：①弃置一张“兵”，摸一张牌；②弃置两张“兵”，回复1点体力；③弃置三张“兵”，对一名角色造成两点雷属性伤害。',
minizhoufu:'咒缚',
minizhoufu2:'咒缚',
minizhoufu_info:'出牌阶段限一次，你可以用一张牌对一名其他角色施“咒”或移去一名其他角色的“咒”。当有“咒”的角色判定时，将“咒”作为判定牌；一名角色的回合结束时，你令本回合移除过“咒”的角色各失去1点体力。',
miniyingbing:'影兵',
miniyingbing_info:'锁定技，有“咒”的角色使用与“咒”颜色相同的牌时，你摸一张牌；若这是你第二次因该“咒”摸牌，其移去该“咒”。',
miniqieting:'窃听',
miniqieting_info:'锁定技，其他角色的结束阶段，若其手牌数大于你，则你摸一张牌。',
minireqieting:'窃听',
minireqieting_info:'其他角色的回合结束时，若其手牌数大于你，则你摸一张牌，然后若其本回合内未对其他角色造成过伤害，则你可选择一项：①摸一张牌。②观看其两张手牌并获得其中的一张。③将其装备区内的一张牌移动至你的装备区。',
minixianzhou:'献州',
minixianzhou_info:'限定技，出牌阶段，你可将所有手牌交给一名其他角色，然后其可以对其攻击范围内的至多X名角色各造成1点伤害（X为你以此法给出的牌数）。',
minirexianzhou:'献州',
minirexianzhou_info:'限定技，出牌阶段，你可将任意张牌交给一名其他角色，然后你回复X点体力并对其攻击范围内的至多X名角色各造成1点伤害（X为你以此法给出的牌数）。',
minibiyue:'翩仪',
minibiyue_info:'结束阶段，你可以摸一张牌，若你的武将牌已翻面，则改为摸三张牌。',
minijianchu:'鞬出',
minijianchu_info:'当你使用【杀】指定一名角色为目标后，你可以弃置其一张牌，然后若此牌类型：不为基本牌，你摸一张牌且此【杀】强制命中；为基本牌，你令此【杀】不计入次数限制。',
miniyaowu:'耀武',
miniyaowu_info:'锁定技，一名角色使用【杀】对你造成伤害时，若此【杀】为红色/黑色，其摸一张牌/你摸一张牌。然后你获得此【杀】对应的所有实体牌。',
miniyangwei:'扬威',
miniyangwei_info:'当你于出牌阶段使用有颜色的【杀】后，你可以于本阶段使用一张与此牌颜色不同的【杀】（无次数限制且不计入次数限制）。出牌阶段结束后，若你本回合使用【杀】的次数大于2，你回复1点体力。',
miniqiaomeng:'趫猛',
miniqiaomeng_info:'当你使用【杀】对一名角色造成伤害时，你可以获得该角色区域内的一张牌。若此牌是坐骑牌，此伤害+1。',
miniyicong:'义从',
miniyicong_info:'锁定技，你计算与其他角色的距离时-X，其他角色计算与你的距离时+Y。（X为你的体力值，Y为你的已损失体力值）',
minishendao:'神道',
minishendao_info:'你的判定牌生效前，你可以将判定结果改为任意花色。',
minixinsheng:'新生',
minixinsheng_info:'当你受到伤害后，你可以展示牌堆顶的三张牌，然后获得其中每种花色的牌各一张。',
minixianzhen:'陷阵',
minixianzhen_info:'锁定技。你于回合内首次使用【杀】造成伤害时，此伤害+1；你于回合内使用的第一张【杀】被闪避后，你摸一张牌。',
minijinjiu:'禁酒',
minijinjiu_info:'锁定技。①你的【酒】均视为【杀】且不计入出牌阶段的使用次数。②其他角色使用的【酒】进入弃牌堆后，你获得之。③你的回合内，其他角色不能使用【酒】。',
miniluanji:'乱击',
miniluanji_info:'你可以将两张与你本回合以此法转化的花色均不相同的手牌当【万箭齐发】使用。若你以此法使用的【万箭齐发】未造成伤害，则你可以在此牌结算完成后摸X张牌。（X为此牌的目标数）',
minixueyi:'血裔',
minixueyi_draw:'血裔',
minixueyi_info:'主公技，锁定技，游戏开始时，你获得X个“裔”标记（X为场上群势力角色的数目）。出牌阶段/当你处于濒死状态时，你可以移去1枚“裔”标记，然后回复1点体力并摸一张牌。你的手牌上限+Y（Y为你拥有的“裔”标记数的两倍）。',
minijiuchi:'酒池',
minijiuchi_info:'你可以将一张黑色手牌当作【酒】使用。',
minibenghuai:'崩坏',
minibenghuai_info:'锁定技，结束阶段，若你的体力不为全场最少，你须减1点体力或体力上限，然后摸一张牌。',
miniwansha:'完杀',
miniwansha_info:'锁定技，你的回合内，只有你可以使用【桃】。',
minimieji:'灭计',
minimieji_info:'出牌阶段限一次，你可以将一张黑色牌置于牌堆顶，然后令有一名手牌的其他角色弃置一张锦囊或弃置两张非锦囊牌。',
minishibei:'矢北',
minishibei_info:'锁定技，当你受到伤害后，若此伤害是你本回合第一次受到的伤害，则你回复1点体力并摸一张牌，否则你失去1点体力。',
minijijiu:'急救',
minijijiu_info:'你的回合外，你可以将一张红色牌当作【桃】使用，然后你可以弃置一名其他角色的一张手牌。',
minireqingnang:'青囊',
minireqingnang_info:'出牌阶段限一次，你可以令任意名角色各加1点体力上限并回复1点体力，然后你弃置X张牌（X为目标角色数-1）。若如此做，你的下个回合开始时，这些角色减1点体力上限。',
miniqingnang:'青囊',
miniqingnang_info:'出牌阶段限一次，你可以令一名角色回复1点体力。',
minileiji:'雷击',
minileiji_info:'①当你使用或打出一张【闪】或【闪电】时，你可令一名其他角色进行一次判定：若结果为梅花，其受到1点雷属性伤害，然后你回复1点体力；若结果为黑桃，其受到2点雷属性伤害。②你的手牌上限+2。',
minihuangtian:'黄天',
minihuangtian2:'黄天',
minihuangtian4:'黄天',
minihuangtian_info:'主公技。①其他群势力角色的出牌阶段限一次，其可以交给你一张【闪】或【闪电】或黑桃手牌。②每回合限一次，你可以获得其他群势力角色使用或打出的【闪】。',
minishuangxiong:'双雄',
minishuangxiong_info:'摸牌阶段，你可以放弃摸牌，改为展示牌堆顶的三张牌并选择获得其中一种颜色的所有牌。然后，你本回合内可以将与这些牌颜色不同的一张手牌当作【决斗】使用。每回合限三次，当你受到【决斗】造成的伤害时，你可以获得对方于此决斗中打出的所有【杀】。',
miniyinlang:'引狼',
miniyinlang_info:'出牌阶段结束时，你可以选择场上的一个势力。若如此做，你与场上与你选择势力相同的角色各获得1枚“生”标记。有“生”标记的角色使用牌无法指定没有“生”的角色为目标。',
minixiusheng:'休生',
minixiusheng_info:'锁定技，准备阶段，你移去场上所有的“生”标记，然后你摸等量的牌。',
minihuaibi:'怀璧',
minihuaibi_info:'主公技，锁定技，你的手牌上限+X（X场上的“生”标记数）；有“生”标记的角色对你造成伤害后，你摸一张牌。',
minikuangfu:'狂斧',
minikuangfu_info:'出牌阶段限一次，你可以弃置场上的一张装备牌，然后视为使用一张无对应实体牌的【杀】（无视距离且不计入次数限制），然后若此【杀】造成了伤害，你摸两张牌。',
minilihun:'离魂',
minilihun_info:'出牌阶段限一次，你可以选择一名其他角色，你将武将牌翻面并获得其所有手牌。出牌阶段结束时，你交给其X张牌。（X为该角色的体力值）',
minizhuiji:'追击',
minizhuiji_info:'锁定技，你计算体力值小于等于你的角色的距离视为1，体力值大于等于你的角色无法响应你对其使用的【杀】。',
minishichou:'誓仇',
minishichou2:'誓仇',
minishichou4:'誓仇',
minishichou_info:'①当你使用【杀】指定目标后，你可以选择X+1名角色成为此【杀】的额外目标（X为你已损失的体力值）。②你使用【杀】结算完成后，若此牌未造成伤害，则你从牌堆中获得一张【杀】。③每回合限三次，当你使用【杀】造成1点伤害后，你摸一张牌。',
minilijian:'离间',
minilijian_info:'每回合限一次，你使用的【杀】或【决斗】可以额外指定一名男性角色为目标。',
minijiqiao:'机巧',
minijiqiao_info:'出牌阶段开始时，你可以弃置任意张非锦囊牌，然后你亮出牌堆顶两倍数量的牌并获得其中的锦囊牌，若其中没有锦囊牌，则你从牌堆或弃牌堆中获得一张锦囊牌。',
minilinglong:'玲珑',
minilinglong_info:'锁定技，若你的装备区没有防具牌，你视为装备【八卦阵】；若你的装备区没有坐骑牌，你的手牌上限+1；若你的装备区没有牌，你视为拥有〖集智〗和〖奇才〗。',
minilinglong_jizhi:'集智',
minilinglong_jizhi_info:'当你使用锦囊牌时，你可以摸一张牌。若此牌为：基本牌，你本回合手牌上限+1；锦囊牌，你本回合使用【杀】的额定次数+1；装备牌，你可以将此牌置入一名其他角色的装备区。',
minifuqi:'伏骑',
minifuqi_info:'锁定技，当你使用牌时，你令所有与你距离不大于2的其他角色不能使用或打出牌响应此牌；当你对其他角色造成伤害后，你令其本回合非锁定技失效。',
minijiaozi:'骄恣',
minijiaozi_info:'锁定技，当你造成伤害时，若你的手牌数为全场最多，则此伤害+1。',
minitianming:'天命',
minitianming_info:'当你成为【杀】的目标时，你可以弃置两张牌（不足则全弃，无牌则不弃），然后摸两张牌。然后你可以选择一名角色，令其弃置两张牌（不足则全弃，无牌则不弃），然后摸两张牌。',
minimizhao:'密诏',
minimizhao_info:'出牌阶段限一次，你可以将任意张手牌交给一名其他角色。若如此做，你令该角色与你指定的另一名有手牌的角色拼点，视为拼点赢的角色对没赢的角色使用一张【杀】。',
minibeige:'悲歌',
minibeige_info:'当一名角色受到【杀】造成的伤害后，你可以弃置一张牌，然后若此牌为：①红色，其回复1点体力并摸两张牌；②梅花，伤害来源弃置两张牌；③黑桃，伤害来源将武将牌翻面。',
minizhuikong:'惴恐',
minizhuikong_info:'其他角色的准备阶段，你可以与该角色拼点。若你赢，该角色本回合使用的牌不能指定除该角色外的角色为目标。若你没赢，其本回合至你的距离视为1。',
miniqiuyuan:'求援',
miniqiuyuan_info:'当你成为【杀】的目标时，你可以令至多三名不为此【杀】的使用者的其他角色选择一项：①交给你一张【闪】；②成为此【杀】的额外目标并弃置一张牌。',
minidianhua:'点化',
minidianhua_info:'准备阶段或结束阶段，你可以观看牌堆顶的X张牌（X为你的「紫薇」「后土」「玉清」「勾陈」标记数的总和+1），然后你将这些牌以任意顺序放回牌堆顶。',
minizhenyi:'真仪',
minizhenyi_info:'你可以在以下时机弃置相应的标记来发动以下效果：一名角色的判定牌生效前，你可以弃置一枚「紫薇」，然后将判定结果改为黑桃5或红桃5；你的回合外，你可以弃置一枚「后土」，然后将你的一张手牌当【桃】使用；当你造成伤害时，你可以弃置一枚「玉清」，然后令此伤害+1；当你受到伤害后，你可以弃置一张「勾陈」，然后你从牌堆中随机获得三种类型的牌各一张。',
minicangchu:'仓储',
minicangchu2:'仓储',
minicangchu3:'仓储',
minicangchu_info:'锁定技。①游戏开始时，你获得3个“粮”。你的手牌上限+X（X为“粮”数）。②每回合限一次，当你于回合外获得牌时/回复体力后，你获得一个“粮”。③你的“粮”数不能超过存活角色数。',
miniliangying:'粮营',
miniliangying_info:'弃牌阶段开始时，你可以摸至多X张牌，然后交给等量的角色各一张牌。（X为你的“粮”数）',
minishishou:'失守',
minishishou_info:'锁定技，当你使用【酒】时或受到火焰伤害后，你移去一个“粮”。',
minizongkui:'纵傀',
minizongkui_info:'回合开始时，你可以指定一名未拥有“傀”标记的其他角色，令其获得一枚“傀”标记。游戏开始时，你指定一名体力值最少且没有“傀”标记的其他角色，令其获得一枚“傀”标记。',
miniguju:'骨疽',
minilianzhu:'连诛',
minilianzhu_info:'出牌阶段限一次，你可将一张牌交给一名其他角色。若此牌为红色，你摸两张牌或回复1点体力。若此牌为黑色，目标角色选择一项：①弃置两张牌；②令你摸两张牌。',
minixiahui:'黠慧',
minixiahui_info:'锁定技，①你的黑色牌不计入手牌上限。②当有其他角色获得你的黑色牌后，其于下次扣减体力前不能使用，打出，弃置这些牌。③一名其他角色的回合结束时，若其本回合失去过“黠慧”牌，则其失去1点体力。',
minilveming:'掠命',
minilveming_info:'出牌阶段限一次，你可以选择一名装备区牌数不大于你的的角色，令其选择一个点数，然后你进行判定：若点数相同，你对其造成2点伤害；若点数不同，则你随机获得其区域内的一张牌。',
minitunjun:'屯军',
minitunjun_info:'限定技。出牌阶段，你可以选择一名角色，令其随机使用牌堆中的X张装备牌（X为你本局游戏发动过〖掠命〗的次数+1）。',
minijixu:'击虚',
minijixu_info:'出牌阶段限一次，若你有手牌，你可以令至多四名其他角色猜测你的手牌中是否有【杀】。所有角色猜测结束后，你依次弃置所有猜错的角色的一张牌并视为对其使用一张【杀】，然后你摸X张牌且本回合的手牌上限+X（X为猜对的角色数+1）。',
minipingjian:'评荐',
minipingjian_use:'评荐',
minipingjian_info:'结束阶段开始时/当你受到伤害后/出牌阶段限一次，你可以令系统从“欢杀〖评鉴〗将池”中随机检索出三张拥有发动时机为结束阶段开始时/当你受到伤害后/出牌阶段的技能的武将牌。然后你可以选择尝试发动其中一个技能。每个技能每局只能选择一次。',
minipingjian_append:'<span style="font-family:yuanli">欢杀〖评鉴〗将池：<br>活动武将扩展页面自定义欢杀〖评鉴〗将池（未自定义将池/联机模式则默认为欢乐三国杀全武将）。</span>',
minipingjian_faq:'欢杀〖评鉴〗将池',
minipingjian_faq_info:'<br>活动武将扩展页面自定义欢杀〖评鉴〗将池（未自定义将池/联机模式则默认为欢乐三国杀全武将）。',
minirelijian:'离间',
minirelijian_info:'出牌阶段限两次，你可以弃置一张牌并选择两名角色（不能选择本回合因你发动〖离间〗受到伤害的角色），视为一名角色对另一名角色使用一张【决斗】（不可被【无懈可击】响应）。',
minirebiyue:'闭月',
minirebiyue_info:'结束阶段开始时，你摸X张牌（X为你本回合发动〖离间〗的次数+1）。',
minizhendu:'鸩毒',
minizhendu2:'鸩毒',
minizhendu_info:'一名角色的出牌阶段开始时，你可以弃置一张牌，令该角色视为使用一张【酒】；若该角色不是你，你对其造成1点伤害，且本回合其计算与他人的距离时+1。',
miniqiluan:'戚乱',
miniqiluan_info:'一名角色进入濒死状态时，你可以摸一张牌。当你击杀任意角色后，你摸2张牌。',
'mini72bian':'72变',
'mini72bian_info':'每回合每种类型限一次，出牌阶段，你可以将一张基本牌/锦囊牌/装备牌置入弃牌堆，然后从牌堆中获得一张锦囊牌/装备牌/基本牌。',
miniruyi:'如意',
miniruyi_info:'锁定技，若你未装备武器且你的武器栏未被废除，你视为装备【如意金箍棒】。',
miniruyi_jingubang:'如意金箍棒',
miniruyi_jingubang2:'如意金箍棒',
miniruyi_jingubang_info:'回合开始时，你可以将【如意金箍棒】的攻击范围调整至1，2，3，4之间的任意值。当【如意金箍棒】的攻击范围为：1，你使用【杀】不计入次数限制；2，你于回合内使用的第一张【杀】造成的伤害+1；3，你使用【杀】无法被响应；4，你使用【杀】可以额外选择一个目标。',
miniqitian:'齐天',
miniqitian_info:'觉醒技，游戏开始时或当你的体力值发生变化时，若你的体力值为1，你减1点体力上限，然后获得技能〖火眼〗和〖筋斗云〗。',
minihuoyan:'火眼',
minihuoyan_info:'锁定技，其他角色的手牌始终对你可见。',
minijindouyun:'筋斗云',
minijindouyun_info:'锁定技，你计算与其他角色的距离-1；其他角色计算与你的距离+1。',
minizuzhou:'诅咒',
minizuzhou_info:'一名角色的回合开始时，你可以失去1点体力，然后选择一项：①令其本回合手牌中的所有【杀】视为【闪】；②令其本回合手牌中的所有【闪】视为【杀】。',
minimoyu:'摸鱼',
minimoyu2:'摸鱼',
minimoyu4:'摸鱼',
minimoyu_info:'出牌阶段开始时，你可以令本回合手牌上限+2，下回合摸牌阶段额外摸两张牌。若如此做，你本回合不能对其他角色使用牌，且回合结束时回复1点体力。',
minisanlian:'三连',
minisanlian_info:'出牌阶段，你可以弃置三张类型相同的手牌，然后摸X张牌（X为你已损失的体力值），对所有角色各造成1点伤害，若你弃置的牌名均相同，则你弃置所有其他角色各一张牌。',
miniminsi:'敏思',
miniminsi2:'敏思',
miniminsi_info:'出牌阶段限一次，你可以弃置任意张点数之和为13的牌，然后摸两倍数量的牌。本回合你使用这些牌无距离限制且这些牌本回合不计入手牌上限。',
minijijing:'吉境',
minijijing_info:'当你受到伤害后，你可以进行一次判定，然后你可以弃置任意张点数之和不小于判定结果点数的牌并回复1点体力。',
minimanwang:'蛮王',
minimanwang_info:'出牌阶段，你可以弃置任意张牌。然后你依次执行以下选项中的前X项：⒈获得〖叛侵〗。⒉摸一张牌。⒊回复1点体力。⒋摸两张牌并失去〖叛侵〗。然后你获得〖祸首〗直到你的下个回合开始。',
miniliushi:'流矢',
miniliushi_info:'①出牌阶段，你可以将一张红桃牌置于牌堆顶，视为对一名角色使用一张【杀】（此【杀】无距离限制且不计入使用次数）。②当你使用【杀】造成伤害后，受到伤害的角色获得一个“流”，有“流”的角色手牌上限-X（X为其“流”数）。',
minilulve:'掳掠',
minilulve_info:'出牌阶段开始时，你可选择一名有手牌且手牌数不大于你的角色。其选择一项：①将所有手牌交给你，然后你将武将牌翻面。②将武将牌翻面，然后其视为对你使用一张【杀】。',
minishouxi:'守玺',
minishouxi_info:'当你成为【杀】的目标后，你可声明一种本局未因〖守玺〗声明过的基本或锦囊牌牌名，然后除非使用者弃置一张你声明的牌，并获得你的一张牌；否则此【杀】对你无效，且你从剩余牌堆中获得一张牌名与其相同的牌。',
minihuimin:'惠民',
minihuimin_info:'结束阶段，你可以摸X张牌，然后展示X-1张手牌（X为手牌数小于等于体力值的角色数），然后你选择一名手牌数小于等于体力值的角色，从该角色开始，所有手牌数小于等于体力值的角色依次选择并获得其中一张。',
minikangge:'抗歌',
minikangge_info:'回合开始时，你选择一名其他角色作为“抗歌”角色（覆盖之前选择的“抗歌”角色）。该角色每次于其回合外获得牌后，你摸等量的牌（每回合至多摸三张）；其进入濒死状态时，你可令其回复体力至1点（每轮限一次）。',
minijielie:'节烈',
minijielie_info:'当你受到伤害时，你可以防止此伤害并选择一种花色，然后你失去1点体力，令“抗歌”角色从弃牌堆中随机获得X张此花色的牌（X为伤害值）。',
minishixian:'诗仙',
minishixian_info:'锁定技，回合开始时，你失去因〖诗仙〗获得的技能并展示牌堆顶的四张牌，然后根据花色获得对应技能：红桃〖静夜思〗；方片〖行路难〗；黑桃〖侠客行〗；梅花〖将进酒〗，然后你可获得其中含有重复花色的牌。',
minishixian_qiangjinjiu:'将进酒',
minishixian_qiangjinjiu_info:'其他角色的回合开始时，你可以弃置一张手牌，然后选择一项：⒈弃置其装备区里的所有的牌，然后令其从牌堆中获得一张【酒】；⒉获得其手牌中所有【酒】（若其手牌中没有【酒】则改为获得其一张牌）。',
minishixian_jingyesi:'静夜思',
minishixian_jingyesi_info:'①出牌阶段结束时，你可以观看牌堆顶一张牌，然后你可以使用此牌。②弃牌阶段结束时，你获得牌堆底的一张牌。',
minishixian_xiakexing:'侠客行',
minishixian_xiakexing_info:'①当你使用了牌名含有“剑”的武器牌时，你视为使用一张【万箭齐发】。②当你使用【杀】造成伤害后，若你的装备区里有武器牌，你可以与受伤角色拼点。若你赢，该角色减1点体力上限；若你没赢，你弃置装备区里的武器牌。',
minishixian_xinglunan:'行路难',
minishixian_xingluBuff:'行路难',
minishixian_xinglunan_info:'其他角色使用目标角色包含你的【杀】结算完毕后，若当前回合角色不为你，则其他角色计算与你的距离时+1直到你的下回合开始。',
minijigong:'急攻',
minijigong_info:'出牌阶段开始时，你可以摸至多三张牌。若如此做，你本回合的手牌上限基数改为X+1，且弃牌阶段结束时，若X不小于Y，则你回复1点体力。（X为你本回合内造成的伤害值之和，Y为你本回合内因〖急攻〗摸牌而获得的牌的数量总和）',
minishifei:'饰非',
minishifei_info:'当你需要使用或打出【闪】时，你可以令当前回合角色摸一张牌。然后若其手牌数不为全场唯一最多，则你弃置一名角色的一张牌，视为你使用或打出了一张【闪】。',
minigongxiu:'共修',
minigongxiu_info:'结束阶段，若你本回合内发动过〖经合〗，则你选择一项：①令所有本回合内成为过〖经合〗目标的角色各摸一张牌；②令所有本回合内未成为过〖经合〗目标的角色各弃置一张手牌。',
minijinghe:'经合',
minijinghe_info:'出牌阶段限一次，你可以展示四张牌名各不相同的牌并选择等量的角色。系统从“写满技能的天书”中随机选择等量的技能，然后这些角色依次选择获得其中的一个。',
minichanni:'谗逆',
minichanni_info:'出牌阶段限一次，你可将任意张手牌交给一名其他角色，然后其可以将等量的手牌当做【决斗】使用。若其因此【决斗】造成了伤害，则其摸X张牌（X为此【决斗】对应的实体牌数）。其因此【决斗】受到伤害时，你可以弃置所有手牌并防止此伤害。',
mininifu:'匿伏',
mininifu_info:'锁定技，一名角色的回合结束时，你将手牌摸至三张。',
minihuaiyi:'怀异',
minihuaiyi_info:'出牌阶段限一次，你可以展示所有手牌，然后弃置任意张花色相同的手牌，并重铸剩余此花色的手牌，然后你可以获得至多X名角色的各一张牌（X为你本次弃置的牌数）。',
minimubing:'募兵',
minimubing_info:'出牌阶段限一次，你可以观看牌堆顶的四张牌，然后你可以弃置任意张手牌，获得任意张展示的牌（你弃置的牌点数和不得小于你获得的牌的点数之和），将其余牌置入弃牌堆。',
miniziqu:'资取',
miniziqu_info:'每名角色每轮限一次，你对其他角色造成伤害时，你可防止此伤害，令其将其的一张点数最大的牌交给你。',
minidiaoling:'调令',
minidiaoling_info:'出牌阶段，你可以将任意张因〖募兵〗获得的牌交给一名其他角色，若以此法给出的牌数大于1且这些牌的点数连续，你可以获得场上至多X名角色的各一张手牌（X为你本次交出的〖募兵〗牌数-1）。',
minizhouxuan:'周旋',
minizhouxuan_info:'①弃牌阶段开始时，你可将任意张手牌称为“旋”置于武将牌上（你至多拥有五张“旋”）。②当你使用或打出一张牌时，你摸一张牌，然后移去一张“旋”，若你的手牌不是场上唯一最多，则改为摸X张牌，然后移去2张“旋”（X为你的“旋”的数量）。③当你使用牌时，若你没有“旋”，你可令此牌结算完毕后将此牌对应的所有实体牌称为“旋”置于武将牌上。',
minidaoyao:'捣药',
minidaoyao_info:'出牌阶段限一次，你可以弃置一张手牌，然后从牌堆中获得一张【桃】并摸两张牌（若牌堆中没有【桃】则改为摸三张牌）。',
minibenyue:'奔月',
minibenyue_info:'觉醒技。当你得到【桃】后，若你的手牌中有三张【桃】，或当你回复体力后，若你本局游戏累计回复至少3点体力。则你将体力上限增加至15点并获得技能〖广寒〗。',
miniguanghan:'广寒',
miniguanghan_info:'锁定技。一名角色受到伤害后，该角色的非你上家和非你下家依次选择一项：①弃置一张牌；②失去等量的体力。',
minigongjian:'攻坚',
minigongjian_info:'每回合限一次，当有角色使用【杀】指定第一个目标后，若此【杀】的目标和本局游戏内被使用的上一张【杀】的目标有交集，则你可以依次弃置交集中所有角色的至多两张牌，然后获得以此法弃置的所有基本牌。',
//神
Mbaby_shen_lvbu:'欢杀神吕布',
Mbaby_shen_guanyu:'欢杀神关羽',
Mbaby_shen_zhugeliang:'欢杀神诸葛亮',
Mbaby_shen_lvmeng:'欢杀神吕蒙',
Mbaby_shen_liubei:'欢杀神刘备',
Mbaby_shen_zhangliao:'欢杀神张辽',
Mbaby_shen_caocao:'欢杀神曹操',
Mbaby_shen_zhouyu:'欢杀神周瑜',
Mbaby_shen_sunquan:'欢杀神孙权',
Mbaby_shen_simayi:'欢杀神司马懿',
Mbaby_shen_zhaoyun:'欢杀神赵云',
Mbaby_shen_ganning:'欢杀神甘宁',
Mbaby_shen_luxun:'欢杀神陆逊',
Mbaby_shen_dianwei:'欢杀神典韦',
Mbaby_shen_huatuo:'欢杀神华佗',
Mbaby_shen_guojia:'欢杀神郭嘉',
Mbaby_shen_zhenji:'欢杀神甄宓',
Mbaby_shen_zhangjiao:'OL神张角',
Mbaby_shen_zhangjiao_prefix:'OL神',
Mbaby_shen_daxiaoqiao:'欢杀神大乔小乔',
Mbaby_shen_diaochan:'欢杀神貂蝉',
Mbaby_sunwukong:'欢杀孙悟空',
Mbaby_dalanmao:'欢杀大懒猫',
Mbaby_change:'欢杀嫦娥',
Mbaby_shen_taishici:'欢杀神太史慈',
miniwuqian:'无前',
miniwuqian_info:'锁定技，当你于回合内第一次使用【杀】或【决斗】指定目标后，则你令此牌无视目标角色的防具且视为具有〖无双〗效果。',
minishenfen:'神愤',
minishenfen_info:'限定技，出牌阶段，你可以失去3点体力，对所有其他角色各造成1点伤害。这些角色弃置装备区内的所有牌，然后弃置四张手牌。',
minishelie:'涉猎',
minishelie_info:'锁定技，摸牌阶段，你放弃摸牌，改为亮出牌堆顶的五张牌，并获得其中不同花色的牌各一张。',
minigongxin:'攻心',
minigongxin_info:'每回合限一次，当你使用牌指定其他角色为唯一目标后，或成为其他角色使用牌的唯一目标后，你可观看对方的手牌。然后你可以展示其中的一张红色牌并选择一项：①获得此牌。②将此牌置于牌堆顶。',
miniqixing:'七星',
miniqixing_info:'游戏开始时，你将牌堆顶的七张牌置于你的武将牌上，称之为“星”。摸牌阶段结束后，你可用任意数量的手牌等量交换这些“星”。',
minikuangfeng:'狂风',
minikuangfeng_info:'出牌阶段结束时，你可选择任意名角色并将等量的“星”置入弃牌堆，然后对这些角色各造成1点伤害。',
minidawu:'大雾',
minidawu_info:'结束阶段，你可以将一张“星”置入弃牌堆。当你于下回合开始前受到非属性伤害时，此伤害-1。',
miniguixin:'归心',
miniguixin_info:'当你受到1点伤害后，你可以随机获得所有其他角色区域一张牌，若你本次以此法获得的牌不少于五张且你正面向上，你翻面。',
miniwushen:'武神',
miniwushen_info:'你可以将红桃手牌视为【杀】使用或打出；你使用红桃【杀】无距离限制且造成的伤害+1。',
miniwuhun:'武魂',
miniwuhun_info:'锁定技，当你受到伤害后，伤害来源获得X个“梦魇”标记（X为伤害点数）。锁定技，当你死亡或脱离濒死时，你选择一名“梦魇”标记数量最多的其他角色，令该角色进行判定：若判定结果不为【桃】或【桃园结义】，则该角色失去5点体力。',
miniqinyin:'琴音',
miniqinyin_info:'弃牌阶段结束时，若你于此阶段内弃置过牌，则你可以选择一项：1. 令所有角色各回复1点体力；2. 令所有角色各失去1点体力。',
miniyeyan:'业炎',
miniyeyan_info:'出牌阶段开始时，你可以对一名其他角色造成1点火焰伤害。',
minilongnu:'龙怒',
minilongnu_info:'锁定技，出牌阶段开始时，你须选择一项：①失去1点体力并摸两张牌，本回合你的红色手牌均视为无距离限制的火【杀】； ②减1点体力上限，本回合你的黑色手牌均视为无次数限制的雷【杀】。',
minijieying:'结营',
minijieying_info:'锁定技，游戏开始时或当你的武将牌重置时，你横置；所有已横置的角色手牌上限+2；结束阶段，你可以横置一名其他角色。当你受到伤害时，你摸一张牌。',
miniduorui:'夺锐',
miniduorui_info:'出牌阶段开始时，你可以观看一名其他角色的手牌并获得其中一张，本回合你使用该颜色的牌不能被其响应。',
minizhiti:'止啼',
minizhiti_info:'锁定技，若已受伤角色数：大于1，你摸牌阶段摸牌数+1；大于2， 你使用【杀】的次数上限+1。',
miniquantui:'劝学',
miniquantui_info:'出牌阶段开始时，你可令至多两名其他角色各获得1枚“学”。有“学”的角色回合开始时移除“学”并选择一项：① 出牌阶段不能对其他角色使用牌；②失去1点体力。',
minishehu:'射虎',
minishehu_info:'锁定技，当你对拥有“学”的角色使用【杀】时，你弃置其一张手牌。',
minidingli:'鼎立',
minidingli_info:'每轮限一次，其他角色移除“学”时，如果其体力值不小于你，你可以回复1点体力；如果其体力值小于你，你可以摸X张牌（X为其与你的体力值之差且至多为2）。',
minirenjie:'忍戒',
minirenjie_info:'锁定技，游戏开始时/当你受到伤害后/当你于弃牌阶段弃牌后，你获得1/X/Y枚“忍”标记。（X为伤害值，Y为你本次的弃牌数）',
minijilve:'极略',
minijilve_info:'①你可以于合理的时机弃置1枚“忍”并发动以下技能：〖鬼才〗、〖放逐〗、〖完杀〗、〖集智〗。②当你于每回合第一次发动〖极略①〗时，你可以摸一张牌。',
minijilve_guicai:'鬼才',
minijilve_guicai_info:'当一名角色的判定牌生效前，你可以弃置1枚“忍”并打出一张牌代替之，然后若此牌的花色为：红桃，你回复1点体力；梅花，你摸两张牌。',
minijilve_fangzhu:'放逐',
minijilve_fangzhu_info:'当你受到伤害后，你可以弃置1枚“忍”并令一名其他角色翻面，然后该角色摸一张牌。',
minijilve_jizhi:'集智',
minijilve_jizhi_info:'当你使用锦囊牌时，你可以弃置1枚“忍”并摸一张牌。若此牌为：基本牌，你本回合手牌上限+1；锦囊牌，你本回合使用【杀】的额定次数+1；装备牌，你可以将此牌置入一名其他角色的装备区。',
minijilve_wansha:'完杀',
minijilve_miniwansha:'完杀',
minijilve_wansha_info:'当一名角色于你的回合内进入濒死状态时，你可以弃置1枚“忍”，于本阶段获得〖完杀〗效果。',
minijuejing:'绝境',
minijuejing_info:'锁定技，你的手牌上限+3；当你进入或脱离濒死状态时，你摸一张牌。',
minilonghun:'龙魂',
minilonghun_info:'你可以将同花色的一至两张牌按下列规则使用或打出：红桃当【桃】，方块当火【杀】，梅花当【闪】，黑桃当普【无懈可击】。若你以此法使用了两张红色牌，则此牌回复值或伤害值+1且你摸一张牌。若你以此法使用了两张黑色牌，则你获得当前回合角色一张牌。',
minipoxi:'魄袭',
minipoxi_info:'出牌阶段限一次，你可以观看一名其他角色的手牌，然后你可以弃置你与其手牌中的三张花色不同的牌。若如此做，根据此次弃置你的牌的数量执行以下效果：没有，你减1点体力上限；两张，你回复1点体力并摸一张牌；三张，你摸三张牌。',
minishenwei:'神卫',
minishenwei_info:'准备阶段，你可以令一名没有“卫”标记的角色获得1枚“卫”标记（若你的体力值为1则改为至多两名角色）。有“卫”标记的角色受到伤害时，该角色可以弃置其“卫”标记并将伤害转移给你。',
minielai:'恶来',
minielai_info:'锁定技，当场上的“卫”标记被移除时，你须选择一项：①回复1点体力；②对一名攻击范围内的其他角色造成1点伤害。',
minikuangxi:'狂袭',
minikuangxi_info:'锁定技，当场上存在“卫”标记时，你造成的伤害+1。',
minijishi:'济世',
minijishi_info:'游戏开始时，你获得3枚“药”标记（你至多拥有3枚“药”标记）。当有角色进入濒死状态时，你可以弃置1枚“药”标记并令其回复至1点体力。当你于回合外失去红色手牌时，你获得等量的“药”标记。你的手牌上限+3。',
minitaoxian:'桃仙',
minitaoxian_info:'你可以将一张红桃牌当【桃】使用；其他角色使用【桃】时，你摸一张牌。',
minishenzhen:'神针',
minishenzhen_info:'回合开始时，你可以弃置任意枚“药”标记，然后选择一项：1.令等量角色各回复1点体力；2.令等量角色各失去1点体力。',
minigjtianyi:'天翊',
minigjtianyi_info:'觉醒技，准备阶段，若场上的所有存活角色均于本局游戏内受到过伤害，则你加2点体力上限并回复1点体力，然后令一名角色获得技能〖佐幸〗。',
minizuoxing:'佐幸',
minizuoxing_info:'出牌阶段开始时，若令你获得〖佐幸〗的角色存活且体力上限大于1，则你可以令其减1点体力上限。若如此做，你于本回合获得如下效果：出牌阶段限一次，你可以视为使用一张普通锦囊牌。',
minihuishi:'辉逝',
minihuishi_info:'限定技，出牌阶段，你可选择一名角色。若其有未发动的觉醒技且你的体力上限不小于存活人数，则你选择其中一个技能，令其发动此技能无视条件；若其没有未发动的觉醒技且你的体力上限不小于3，其摸四张牌。然后你减2点体力上限。',
minishenfu:'神赋',
minishenfu_info:'①回合结束时，若你的手牌数为：奇数，你可对一名其他角色造成1点雷属性伤害，若其死亡，你可重复此流程；偶数，你可选择一名角色，你令其摸一张牌或弃置其一张牌，若其手牌数等于体力值，你可重复此流程。（重复流程中不能选择本次技能结算中已经选择过的角色）②回合结束后，你摸X张牌（X为你本回合发动〖神赋〗的次数且至多为5）。',
miniqixian:'七弦',
miniqixian2:'七弦',
miniqixian_info:'锁定技，你的手牌上限视为7。出牌阶段结束时，你可以将一张牌移出游戏，此牌于回合结束后归还。',
minifeifu:'飞凫',
minifeifu_info:'你可以将一张黑色牌当作【闪】使用或打出。',
minisijun:'肆军',
minisijun_info:'准备阶段，若“黄”数大于牌堆的牌数，你可以移去所有“黄”，然后从牌堆中随机获得任意张点数之和为36的牌。',
minishuangshu:'双姝',
minishuangshu_pingting:'双姝·娉婷',
minishuangshu_yizheng:'双姝·移筝',
minishuangshu_info:'准备阶段，你可以展示牌堆顶的两张牌。若其中包含：方片牌，本回合发动〖娉婷〗可选择的选项上限数+1；红桃牌，本回合发动〖移筝〗可选择的选项上限数+1；只有黑色牌，你获得展示的牌。',
minipingting:'娉婷',
minipingting_info:'出牌阶段开始时，你可以选择以下选项中的至多两项：⒈本阶段使用的第一张牌无距离限制。⒉本阶段使用第二张牌指定目标后获得此牌对应的所有实体牌。⒊本阶段使用的第三张牌结算完毕后摸两张牌。⒋本阶段使用的第四张牌额外结算一次。',
miniyizheng:'移筝',
miniyizheng_info:'出牌阶段结束时，你可以选择以下选项中的至多一项：⒈移动场上的一张武器牌。⒉移动场上的一张防具牌。⒊移动场上的一张坐骑牌。然后若你于本次技能结算中移动了：一张装备牌，你回复1点体力；两张装备牌，直到你的下回合开始，当你失去一张牌时，摸一张牌。',
minimeihun:'魅魂',
minimeihun_info:'结束阶段，或你于当前回合首次成为【杀】的目标后，你可以选择一名其他角色，然后声明一个花色，令其交给你所有你此花色的牌，若其没有此花色的牌，则你观看其手牌并获得其中一张。',
minihuoxin:'惑心',
minihuoxin_info:'出牌阶段限一次，你可以弃置一张牌并令两名角色拼点，然后你可以声明一个花色，没赢的角色须选择一项：①令你获得其所有此花色的牌；②其不能使用或打出你此次声明的花色的牌直到其下个回合结束。',
minidulie:'笃烈',
minidulie_info:'锁定技。①当你成为【杀】的目标时，你进行判定。若结果为红桃，则取消此目标。②当你首次进入濒死状态时，你将体力回复至X点（X为场上拥有“围”标记的角色数）。',
minichongwei:'重围',
minichongwei_info:'①游戏开始时，你令所有其他角色获得1个“围”。②一名角色受到伤害后，若其有“围”，则其移去“围”。③回合开始时，你选择所有有“围”的角色。这些角色失去“围”，然后这些角色的第一个不为你的下家获得等量的“围”。④一名其他角色的回合开始时，若其有“围”，则你可以选择一项：⒈弃置一张手牌并对其造成1点伤害。⒉若其体力值不大于你，则你获得其一张手牌。选择完成后，你视为在其攻击范围内直到回合结束。',
minipowei:'破围',
minipowei_info:'觉醒技。一名角色的回合结束时，若场上角色均没有“围”标记，你获得技能〖神著〗，然后摸Y张牌（Y为本轮移去的“围”数）。',
minishenzhu:'神著',
minishenzhu_info:'锁定技。①回合开始时，你从牌堆或弃牌堆获得一张【杀】。②当你使用有对应实体牌的非转化【杀】结算结束后，你选择一项：1.摸一张牌，且本回合使用【杀】的次数上限+1。2.摸三张牌，且本回合不能再使用【杀】。',
//喵
Mmiao_caiwenji:'喵蔡琰',
Mmiao_diaochan:'喵貂蝉',
Mmiao_caifuren:'喵蔡夫人',
Mmiao_zhangxingcai:'喵张星彩',
Mmiao_zhurong:'喵祝融',
Mmiao_huangyueying:'喵黄月英',
Mmiao_daqiao:'喵大乔',
Mmiao_wangyi:'喵王异',
Mmiao_zhangchunhua:'喵张春华',
Mmiao_zhenji:'喵甄宓',
Mmiao_sunshangxiang:'喵孙尚香',
Mmiao_xiaoqiao:'喵小乔',
minidoumao:'逗猫',
minidoumao_info:'①回合开始时，你可以弃置一张牌并选择一名其他角色，你失去〖逗猫〗并令其获得〖逗猫〗，然后其摸一张牌。②回合结束时，你弃置一张牌。',
minimiaobeige:'悲歌',
minimiaobeige_info:'当一名角色受到【杀】造成的伤害后，你可以弃置一张牌，根据此牌花色执行相应效果：红桃，其回复1点体力；方片：其摸两张牌；梅花，伤害来源弃置两张牌；黑桃，伤害来源将武将牌翻面。然后若你没有技能〖逗猫〗，则你可以选择一个效果执行。',
minimiaoduanchang:'断肠',
minimiaoduanchang_info:'锁定技。①杀死你的角色失去所有技能。②当你受到有来源的伤害进入濒死状态后，若你没有技能〖逗猫〗，则伤害来源须弃置两张牌。',
minimiaolijian:'离间',
minimiaolijian_info:'出牌阶段限一次，你可以选择至少两名其他角色并弃置X张牌（X为你选择的角色数，若你没有技能〖逗猫〗则改为弃置X-1张牌）。然后每名你选择的角色依次视为对这些角色中与其逆时针座次最近的另一名角色使用一张【决斗】。',
minimiaobiyue:'闭月',
minimiaobiyue_info:'锁定技，结束阶段，你摸Y张牌（Y为本回合受到过伤害的角色数+1（若你没有技能〖逗猫〗则改为+2），且X至多为5）。',
minimiaoqieting:'窃听',
minimiaoqieting_info:'其他角色的回合结束时，你可以选择[ ]中的一项：[“摸一张牌”]。若其拥有技能〖逗猫〗，[ ]中添加“观看其两张手牌并获得其中一张”，否则[ ]中添加“将其装备区里的一张牌置入自己的装备区”。',
minimiaoxianzhou:'献州',
minimiaoxianzhou_info:'限定技，出牌阶段，你可以交给一名其他角色任意张手牌，然后其选择令你回复X点体力或对其攻击范围内的至多X名角色各造成1点伤害（X为你交给其的牌数）。当你因〖逗猫①〗获得〖逗猫〗后，你重置技能〖献州〗。',
minimiaoshenxian:'甚贤',
minimiaoshenxian_info:'每回合限一次，其他角色因弃置失去基本牌后（若你没有〖逗猫〗则改为非装备牌），你可以摸一张牌',
minimiaoqiangwu:'枪舞',
minimiaoqiangwu_info:'①你对没有/有技能〖逗猫〗的角色使用【杀】无距离/次数限制。②若你拥有技能〖逗猫〗，当你使用【杀】造成伤害后，你摸一张牌。',
minimiaojuxiang:'巨象',
minimiaojuxiang_info:'锁定技。①【南蛮入侵】对你无效。②其他角色弃置【南蛮入侵】后，你获得之。③其他角色使用【南蛮入侵】结算完毕后，你获得此牌对应的所有实体牌。④拥有技能〖逗猫〗的角色无法响应你使用的【南蛮入侵】。⑤当你使用【南蛮入侵】对没有技能〖逗猫〗的角色造成伤害后，你摸一张牌。',
minimiaolieren:'烈刃',
minimiaolieren_info:'①当你使用【杀】指定目标后，你可以和目标角色进行拼点，然后你获得其的拼点牌。若你赢，你获得其一张牌。②出牌阶段开始时，若你本回合因发动〖逗猫①〗失去过〖逗猫〗，你可以选择一名角色，对其发动〖烈刃①〗。',
minimiaochangbiao:'长标',
minimiaochangbiao_info:'出牌阶段限一次，你可以将任意张手牌当做【杀】使用（无距离限制，若你拥有技能〖逗猫〗，则此牌可以额外指定一名目标）。若你因此【杀】对目标角色造成过伤害，则你于出牌阶段结束时摸X张牌（X为此【杀】对应的实体牌数量）。',
minimiaojizhi:'集智',
minimiaojizhi_info:'①当你使用锦囊牌时，你可以摸一张牌。②每回合限一次，其他角色使用锦囊牌时，若你没有技能〖逗猫〗，你可以摸一张牌。',
minimiaoqicai:'奇才',
minimiaoqicai_info:'锁定技。①你使用锦囊牌无距离限制，你装备区内的防具牌不能被其他角色弃置。②其他角色因〖逗猫①〗获得〖逗猫〗后，你从牌堆中获得一张锦囊牌。',
minimiaoguose:'国色',
minimiaoguose_info:'出牌阶段限四次。你可以选择一项：1.将一张♦牌当【乐不思蜀】使用；2.弃置场上一张【乐不思蜀】。然后你摸一张牌（若目标角色拥有技能〖逗猫〗则改为摸两张牌并弃置一张牌）。',
minimiaoliuli:'流离',
minimiaoliuli_info:'当你成为【杀】的目标时，你可以弃置一张牌并将此【杀】转移给一名你攻击范围内的不为此【杀】使用者的角色（若你没有技能〖逗猫〗，则改为至多两名角色）。',
minimiaozhenlie:'贞烈',
minimiaozhenlie_info:'当你成为其他角色使用【杀】或普通锦囊牌的目标后，你可以失去1点体力并令此牌对你无效，然后弃置使用者一张牌（若你没有技能〖逗猫〗，则改为获得使用者一张牌）。',
minimiaomiji:'秘计',
minimiaomiji_info:'结束阶段，你可以摸X张牌，然后可以将等量的牌交给一名其他角色（X为Y已损失的体力值，Y为你，若你没有技能〖逗猫〗则本次技能结算中Y改为你发动〖秘计〗时选择场上的一名已受伤角色，且X至多为5）。',
minimiaojueqing:'绝情',
minimiaojueqing_info:'当你即将造成伤害时，你依次执行：①若你没有技能〖逗猫〗，你可以失去等同于伤害值的体力，然后令此伤害值翻倍；②你将此次伤害事件改为令受伤角色失去等同于伤害值的体力。',
minimiaoshangshi:'伤势',
minimiaoshangshi_info:'①当你的手牌数小于X时，你将手牌摸至X张（X为你已损失的体力值，且X至少为1）。②当你因发动〖逗猫①〗失去〖逗猫〗时，你加1点体力上限；当你因〖逗猫①〗获得〖逗猫〗时，你减1点体力上限。',
minimiaoluoshen:'洛神',
minimiaoluoshen_info:'①准备阶段，你可以进行判定，然后你获得此牌，若结果为黑色，你可以重复此流程。②回合结束时，若你没有技能〖逗猫〗，则你可以发动〖洛神①〗。',
minimiaoqingguo:'倾国',
minimiaoqingguo_info:'①你可以将一张黑色牌当作【闪】使用或打出。②若你没有技能〖逗猫〗，你可以将一张【闪】当作【桃】使用。',
minimiaojieyin:'结姻',
minimiaojieyin_info:'出牌阶段限一次，你可以将一张手牌交给一名其他角色或将一张装备牌置入一名其他角色的装备区，然后你回复1点体力并摸一张牌。然后若你没有技能〖逗猫〗，你可令其回复1点体力并摸一张牌。',
minimiaoxiaoji:'枭姬',
minimiaoxiaoji_info:'当你失去装备区里的一张牌后，你可以摸两张牌，然后若你没有技能〖逗猫〗，你可以弃置场上一张牌。',
minimiaotianxiang:'天香',
minimiaotianxiang2:'天香',
minimiaotianxiang_info:'当你受到伤害时，你可以将一张红桃牌交给一名其他角色并将此伤害转移给其。若如此做，此伤害结算完毕后，若其拥有技能〖逗猫〗，你对其造成1点伤害；没有技能〖逗猫〗，你弃置其一张牌。',
minimiaohongyan:'红颜',
minimiaohongyan_info:'锁定技。①你的黑桃牌视为红桃牌。②没有技能〖逗猫〗的角色的红桃判定牌生效后，你回复1点体力并摸一张牌。',
},
};
for(var i in MiNikill.character){
if(MiNikill.translate[i]){
if(MiNikill.translate[i].indexOf('欢杀神')==0) MiNikill.translate[i+'_prefix']='欢杀神';
else if(MiNikill.translate[i].indexOf('SP欢杀神')==0) MiNikill.translate[i+'_prefix']='SP欢杀神';
else if(MiNikill.translate[i].indexOf('欢杀')==0) MiNikill.translate[i+'_prefix']='欢杀';
else if(MiNikill.translate[i].indexOf('SP欢杀')==0) MiNikill.translate[i+'_prefix']='SP欢杀';
else if(MiNikill.translate[i].indexOf('喵')==0) MiNikill.translate[i+'_prefix']='喵';
}
MiNikill.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
if(!['萌新（转型中）','生熏鱼114514'].includes(lib.config.connect_nickname)&&MiNikill.character[i][4].includes('MXdelete')) delete MiNikill.character[i];
}
return MiNikill;
});
if (lib.namePrefix &&  lib.namePrefix.set) {
    lib.namePrefix.set('喵', {
        color: '#fdd559',
        nature: 'soilmm',
    });
    lib.namePrefix.set('欢杀', {
        color: '#ff6a6a',
        nature: 'MXpink',
        showName: '欢',
    });
    lib.namePrefix.set('SP欢杀', {
        color: '#fdd559',
        nature: 'soilmm',
        getSpan: (prefix, name) => `${get.prefixSpan('SP')}${get.prefixSpan('欢杀')}`,
    });
    lib.namePrefix.set('欢杀神', {
        getSpan: (prefix, name) => `${get.prefixSpan('欢杀')}${get.prefixSpan('神')}`,
    });
    lib.namePrefix.set('SP欢杀神', {
        getSpan: (prefix, name) => `${get.prefixSpan('SP')}${get.prefixSpan('欢杀')}${get.prefixSpan('神')}`,
    });
}
lib.config.all.characters.push('MiNikill');
lib.config.all.sgscharacters.push('MiNikill');
if(!lib.config.characters.includes('MiNikill')) lib.config.characters.remove('MiNikill');
lib.translate['MiNikill_character_config']='<span style="font-family: xingkai">欢乐三国杀</span>';
//微信三国杀
game.import('character',function(){
var WeChatkill={
name:'WeChatkill',
connect:true,
characterSort:{
WeChatkill:{
wechat_standard:['wechat_yj_jushou','wechat_sp_pangde','wechat_caojie','wechat_zhuling','wechat_caizhenji','wechat_guohuanghou','wechat_yanyan','wechat_liaohua','wechat_liuyao','wechat_quancong','wechat_xiahouba','wechat_sp_jiangwei','wechat_caoxiu','wechat_yuanshao','wechat_sundeng','wechat_re_xushu','wechat_caopi','wechat_caozhang','wechat_buzhi','wechat_sp_taishici','wechat_masu','wechat_caifuren','wechat_jianyong','wechat_lukang','wechat_caozhi','wechat_huangyueying','wechat_weiyan','wechat_gaoshun','wechat_sunliang','wechat_wangping','wechat_sp_caiwenji','wechat_caochong','wechat_huangzhong','wechat_xiahouyuan','wechat_pangde','wechat_sunshangxiang','wechat_xuchu','wechat_guanyu','wechat_caocao','wechat_shenpei','wechat_jiaxu','wechat_caoren','wechat_liuqi','wechat_zhaoxiang','wechat_caiwenji','wechat_menghuo','wechat_re_yuanshu','wechat_huaxiong','wechat_xiahoushi','wechat_xushu','wechat_zhaoyun','wechat_zhangfei','wechat_machao','wechat_yangxiu','wechat_lvmeng','wechat_zhoutai','wechat_bianfuren','wechat_sunluban','wechat_wuguotai','wechat_liubiao','wechat_liuchen','wechat_luxun','wechat_pangtong','wechat_zhangxingcai','wechat_zuoci','wechat_mayunlu'],
wechat_extra:['wechat_shen_zhugeliang','wechat_shen_lvmeng','wechat_shen_guanyu'],
wechat_zhiyin:['wechat_guojia','wechat_lvbu','wechat_daqiao','wechat_xiaoqiao','wechat_re_caocao','wechat_zhugeliang','wechat_simayi','wechat_re_machao'],
},
},
character:{
//标准异构武将
wechat_menghuo:['male','shu',4,['wechathuoshou','wechatzaiqi'],[]],
wechat_re_yuanshu:['male','qun',4,['wechatwangzun','wechattongji'],[]],
wechat_huaxiong:['male','qun',6,['wechatyaowu'],[]],
wechat_lvmeng:['male','wu',4,['wechatkeji'],[]],
wechat_xiahoushi:['female','shu',3,['wechatqiaoshi','wechatyanyu'],[]],
wechat_xushu:['male','shu',3,['wechatwuyan','wechatjujian'],[]],
wechat_zhaoyun:['male','shu',4,['ollongdan','wechatqinggang'],[]],
wechat_zhangfei:['male','shu',4,['paoxiao','wechatshemao'],[]],
wechat_machao:['male','shu',4,['mashu','wechattieji'],[]],
wechat_yangxiu:['male','wei',3,['wechatdanlao','wechatjilei'],[]],
wechat_zhoutai:['male','wu',4,['wechatbuqu','wechatfenji'],[]],
wechat_bianfuren:['female','wei',3,['wechatwanwei','wechatyuejian'],[]],
wechat_sunluban:['female','wu',3,['chanhui','wechatjiaojin'],[]],
wechat_wuguotai:['female','wu',3,['wechatganlu','wechatbuyi'],[]],
wechat_liubiao:['male','qun',3,['wechatrezishou','wechatzongshi'],[]],
wechat_liuchen:['male','shu',4,['zhanjue','wechatqinwang'],[]],
wechat_luxun:['male','wu',3,['wechatqianxun','lianying'],[]],
wechat_pangtong:['male','shu',3,['lianhuan','wechatniepan','wechathuzhu'],[]],
wechat_zhangxingcai:['female','shu',3,['wechatshenxian','wechatqiangwu'],[]],
wechat_zuoci:['male','qun',3,['wechatyigui','wechatshendao'],[]],
wechat_mayunlu:['female','shu',4,['wechatfengpo','mashu'],[]],
wechat_caiwenji:['female','qun',3,['wechatbeige','wechatduanchang'],[]],
wechat_zhaoxiang:['female','shu',4,['wechatfanghun','wechatfuhan'],[]],
wechat_liuqi:['male','qun',3,['spwenji','wechattunjiang'],[]],
wechat_caoren:['male','wei',4,['wechatjushou'],[]],
wechat_jiaxu:['male','qun',3,['wechatwansha','wechatluanwu','weimu'],[]],
wechat_shenpei:['male','qun','2/3',['wechatshouye','wechatliezhi'],[]],
wechat_caocao:['male','wei',4,['wechatjianxiong'],[]],
wechat_guanyu:['male','shu',4,['new_rewusheng','wechatqinglong'],[]],
wechat_xuchu:['male','wei',4,['wechatluoyi'],[]],
wechat_sunshangxiang:['female','wu',3,['wechatjieyin','xiaoji'],[]],
wechat_pangde:['male','qun',4,['mashu','wechatmengjin'],[]],
wechat_xiahouyuan:['male','wei',4,['wechatshensu'],[]],
wechat_huangzhong:['male','shu',4,['wechatliegong'],[]],
wechat_caochong:['male','wei',3,['chengxiang','wechatrenxin'],[]],
wechat_sp_caiwenji:['female','wei',3,['wechatchenqing','mozhi'],[]],
wechat_wangping:['male','shu',4,['minifeijun','wechatbinglve'],[]],
wechat_sunliang:['male','wu',3,['minikuizhu','wechatchezheng'],[]],
wechat_gaoshun:['male','qun',4,['xianzhen','minijinjiu'],[]],
wechat_caozhi:['male','wei',3,['wechatluoying','wechatjiushi'],[]],
wechat_huangyueying:['female','shu',3,['wechatjizhi','wechatqicai'],[]],
wechat_weiyan:['male','shu',4,['wechatkuanggu'],[]],
wechat_lukang:['male','wu',4,['drlt_qianjie','wechatjueyan','drlt_huairou'],[]],
wechat_jianyong:['male','shu',3,['wechatqiaoshui','wechatjyzongshi'],[]],
wechat_caifuren:['female','qun',3,['wechatqieting','xianzhou'],[]],
wechat_masu:['male','shu',3,['wechatsanyao','rezhiman'],[]],
wechat_sp_taishici:['male','qun',4,['wechatjixu'],[]],
wechat_buzhi:['male','wu',3,['hongde','wechatdingpan'],[]],
wechat_caozhang:['male','wei',4,['wechatjiangchi'],[]],
wechat_caopi:['male','wei',3,['xingshang','wechatfangzhu'],[]],
wechat_sp_jiangwei:['male','wei',4,['wechatkunfen','wechatfengliang'],[]],
wechat_caoxiu:['male','wei',4,['qianju','wechatqingxi'],[]],
wechat_yuanshao:['male','qun',4,['wechatluanji'],[]],
wechat_sundeng:['male','wu',4,['wechatkuangbi'],[]],
wechat_re_xushu:['male','shu',4,['wechatzhuhai','qianxin'],[]],
wechat_xiahouba:['male','shu',4,['wechatbaobian'],[]],
wechat_liuyao:['male','qun',4,['wechatkannan'],[]],
wechat_quancong:['male','wu',4,['wechatyaoming'],[]],
wechat_liaohua:['male','shu',4,['wechatdangxian','wechatfuli'],[]],
wechat_yanyan:['male','shu',4,['wechatjuzhan'],[]],
wechat_guohuanghou:['female','wei',3,['wechatjiaozhao','wechatdanxin'],[]],
wechat_caizhenji:['female','wei',3,['wechatsheyi','wechattianyin'],[]],
wechat_zhuling:['male','wei',4,['wechatzhanyi'],[]],
wechat_caojie:['female','qun',3,['wechatshouxi','huimin'],[]],
wechat_sp_pangde:['male','wei',4,['mashu','wechatjuesi'],[]],
wechat_yj_jushou:['male','qun',3,['wechatjianying','shibei'],[]],
//神武将
wechat_shen_zhugeliang:['male','shen',3,['wechatqixing','wechatjifeng','wechattianfa'],['shu']],
wechat_shen_lvmeng:['male','shen',3,['shelie','wechatregongxin'],['wu']],
wechat_shen_guanyu:['male','shen',5,['wechatwushen'],['shu']],
//只因武将
wechat_lvbu:['male','qun',4,['wushuang','wechatxiaohu'],[]],
wechat_daqiao:['female','wu',3,['wechatjielie','wechatxiangzhi'],['die_audio']],
wechat_xiaoqiao:['female','wu',3,['wechattongxin','wechatzhaoyan'],['die_audio']],
wechat_guojia:['male','wei',3,['wechatdingce','wechatsuanlve'],['die_audio']],
wechat_re_caocao:['male','wei',4,['wechatdelu'],['die_audio']],
wechat_zhugeliang:['male','shu',3,['wechatsangu','wechatyanshi'],['die_audio']],
wechat_simayi:['male','wei',3,['wechatyinren','wechatduoquan'],['die_audio']],
wechat_re_machao:['male','qun',4,['wechatqipao','wechatzhuixi'],[]],
},
characterIntro:{
},
skill:{
wechathuoshou:{
group:'huoshou1',
audio:'huoshou1',
preHidden:'huoshou1',
trigger:{global:'damageBegin2'},
filter:function(event,player){
return event.card&&event.card.name=='nanman'&&player.countCards('he')>0;
},
direct:true,
locked:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt('wechathuoshou',trigger.player),'弃置一张牌并令此伤害+1').set('goon',get.damageEffect(trigger.player,player,player)>0).set('ai',function(card){
if(_status.event.goon) return 12-get.value(card);
return 0;
}).logSkill=['wechathuoshou',trigger.player];
'step 1'
if(result.bool) trigger.num++;
},
ai:{
expose:0.25,
effect:{
target:function(card,player,target){
if(card.name=='nanman') return 0;
},
},
},
},
wechatzaiqi:{
audio:'zaiqi',
trigger:{player:'phaseDrawBegin1'},
filter:function(event,player){
return player.getAllHistory('useSkill',function(evt){
return evt.skill=='wechatzaiqi';
}).length<7&&!event.numFixed;
},
content:function(){
'step 0'
trigger.changeToZero();
event.cards=get.cards(1+player.getAllHistory('useSkill',function(evt){
return evt.skill=='wechatzaiqi';
}).length);
event.videoId=lib.status.videoId++;
game.broadcastAll(function(player,id,cards){
var str;
if(player==game.me&&!_status.auto) str='再起：选择获得一种花色的所有牌';
else str='再起';
var dialog=ui.create.dialog(str,cards);
dialog.videoId=id;
},player,event.videoId,event.cards);
event.time=get.utc();
game.addVideo('showCards',player,['再起',get.cardsInfo(event.cards)]);
game.addVideo('delay',null,2);
'step 1'
var suits=lib.suit.slice(0).filter(function(suit){
return cards.filter(function(card){
return get.suit(card)==suit;
}).length;
});
suits.reverse();
player.chooseControl(suits).set('ai',function(){
var map={};
for(var card of _status.event.cards){
var suit=get.suit(card);
if (!map[suit]) map[suit]=0;
map[suit]++;
}
return Object.keys(map).sort(function(a,b){
return map[b]-map[a];
})[0];
}).set('cards',cards);
'step 2'
event.cards=cards.filter(function(card){
return get.suit(card)==result.control;
});
var time=1000-(get.utc()-event.time);
if(time>0) game.delay(0,time);
'step 3'
game.broadcastAll('closeDialog',event.videoId);
player.gain(cards,'gain2');
},
},
wechatqixing:{
audio:'qixing',
trigger:{player:'dying'},
round:1,
content:function(){
'step 0'
player.judge(function(card){
if(get.number(card)>7) return 2;
return -2;
}).judge2=function(result){
return result.bool?true:false;
};
'step 1'
if(result.bool) player.recover();
},
},
wechatjifeng:{
init:function(){
lib.onwash.push(function(){
delete _status.wechatjifeng_notrick;
});
},
audio:'dawu',
enable:'phaseUse',
usable:1,
filterCard:true,
check:function(card){
return 5-get.value(card);
},
content:function(){
var card=get.cardPile2(function(card){
return get.type2(card)=='trick';
});
if(card) player.gain(card,'gain2');
else _status.wechatjifeng_notrick=true;
},
ai:{
order:8,
player:function(player,target){
if(_status.wechatjifeng_notrick) return 0;
return 1;
},
},
},
wechattianfa:{
marktext:'罚',
group:'wechattianfa_damage',
intro:{name2:'罚',content:'mark'},
audio:'kuangfeng',
trigger:{player:'useCard'},
filter:function(event,player){
if(!player.isPhaseUsing()) return false;
return player.getHistory('useCard',function(evt){
return get.type2(evt.card)=='trick'&&evt.getParent('phaseUse')==event.getParent('phaseUse');
}).indexOf(event)%2==1;
},
forced:true,
locked:false,
content:function(){
player.addMark('wechattianfa',1);
},
subSkill:{
damage:{
trigger:{player:'phaseEnd'},
filter:function(event,player){
return player.hasMark('wechattianfa');
},
direct:true,
content:function(){
'step 0'
player.chooseTarget([1,player.countMark('wechattianfa')],get.prompt('wechattianfa'),'对至多'+get.cnNumber(player.countMark('wechattianfa'))+'名其他角色造成1点伤害',lib.filter.notMe).set('ai',function(target){
var player=_status.event.player;
return get.damageEffect(target,player,player);
});
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
player.logSkill('wechattianfa',targets);
for(var i of targets) i.damage();
}
},
},
},
},
wechatwangzun:{
audio:'wangzun',
trigger:{global:'phaseZhunbeiBegin'},
filter:function(event,player){
if(event.player==player) return false;
return event.player.hp>player.hp||event.player.isMaxHp();
},
forced:true,
logTarget:'player',
content:function(){
if(trigger.player.hp>player.hp) player.draw();
if(trigger.player.isMaxHp()){
trigger.player.addSkill('wechatwangzun2');
trigger.player.addMark('wechatwangzun2',1,false);
}
},
},
wechatwangzun2:{
charlotte:true,
onremove:true,
intro:{content:'手牌上限-#'},
mod:{
maxHandcard:function(player,num){
return num-player.countMark('wechatwangzun2');
},
},
},
wechattongji:{
audio:'tongji',
trigger:{global:'useCardToTarget'},
filter:function(event,player){
return event.card.name=='sha'&&event.player!=player&&!event.targets.includes(player)&&
event.target.inRange(player)&&event.target.countCards('he')>0;
},
direct:true,
content:function(){
'step 0'
trigger.target.chooseCard('he','是否对'+get.translation(player)+'发动【同疾】？','交给'+get.translation(player)+'一张牌，将'+get.translation(trigger.card)+'转移给'+get.translation(player)).set('ai',function(card){
if(!_status.event.check) return -1;
return get.unuseful(card)+9;
}).set('check',function(){
if(trigger.target.countCards('h','shan')){
return -get.attitude(trigger.target,player);
}
if(get.attitude(trigger.target,player)<5){
return 6-get.attitude(trigger.target,player);
}
if(trigger.target.hp==1&&player.countCards('h','shan')==0){
return 10-get.attitude(trigger.target,player);
}
if(trigger.target.hp==2&&player.countCards('h','shan')==0){
return 8-get.attitude(trigger.target,player);
}
return -1;
}()>0);
'step 1'
if(result.bool){
trigger.target.logSkill('wechattongji',player);
player.gain(result.cards,trigger.target,'giveAuto');
var evt=trigger.getParent();
evt.triggeredTargets2.remove(trigger.target);
evt.targets.remove(trigger.target);
evt.targets.push(player);
}
},
},
wechatyaowu:{
audio:'yaowu',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return event.card.name=='sha';
},
forced:true,
content:function(){
if(get.color(trigger.card)=='red') trigger.getParent().directHit.add(player);
else player.draw();
},
},
wechatkeji:{
audio:'keji',
trigger:{player:'useCard'},
filter:function(event,player){
return player.isPhaseUsing()&&get.type(event.card)=='basic';
},
forced:true,
locked:false,
content:function(){
player.draw();
player.addTempSkill('wechatkeji2');
player.addMark('wechatkeji2',1,false);
},
},
wechatkeji2:{
onremove:true,
intro:{content:'手牌上限+#'},
mod:{
maxHandcard:function(player,num){
return num+player.countMark('wechatkeji2');
},
},
},
wechatqiaoshi:{
audio:'qiaoshi',
trigger:{global:'phaseEnd'},
filter:function(event,player){
return !player.isMaxHandcard();
},
forced:true,
locked:false,
content:function(){
player.draw();
},
},
wechatyanyu:{
audio:'yanyu',
inherit:'reyanyu',
group:'wechatyanyu2',
},
wechatyanyu2:{
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return player.getHistory('lose',function(evt){
var evt2=evt.getParent(4);
return evt2.name=='useSkill'&&evt2.skill=='wechatyanyu'&&evt.getParent(6)==event;
}).length&&game.hasPlayer(function(current){
return current.hasSex('male')&&current!=player;
});
},
direct:true,
content:function(){
'step 0'
event.num=Math.min(player.getHistory('lose',function(evt){
var evt2=evt.getParent(4);
return evt2.name=='useSkill'&&evt2.skill=='wechatyanyu'&&evt.getParent(6)==trigger;
}).length,2);
player.chooseTarget(get.prompt('wechatyanyu'),'令一名男性角色摸'+get.cnNumber(event.num)+'张牌',function(card,player,target){
return target.hasSex('male')&&target!=player;
}).set('ai',function(target){
return get.attitude(_status.event.player,target);
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('wechatyanyu',target);
target.draw(event.num);
}
},
},
wechatwuyan:{
audio:'xinwuyan',
trigger:{player:'damageBegin4'},
filter:function(event,player){
return get.type2(event.card)=='trick';
},
forced:true,
content:function(){
trigger.cancel();
},
ai:{
notrick:true,
effect:{
target:function(card,player,target,current){
if(get.type(card)=='trick'&&get.tag(card,'damage')) return 'zeroplayertarget';
},
},
},
},
wechatjujian:{
audio:'xinjujian',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return player.countCards('he')>player.countCards('he',{type:'basic'});
},
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
prompt:get.prompt2('wechatjujian'),
filterTarget:true,
position:'he',
filterCard:function(card,player){
return get.type(card)!='basic'&&lib.filter.cardDiscardable(card,player);
},
ai1:function(card){
if(get.tag(card,'damage')&&get.type(card)=='trick') return 20;
return 9-get.value(card);
},
ai2:function(target){
var att=get.attitude(_status.event.player,target);
if(att>0){
if(target.hp==1) att+=3;
}
return att;
},
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('wechatjujian',target);
if(target!=player) player.addExpose(0.2);
player.discard(result.cards);
if(target.hp==target.maxHp&&!target.isTurnedOver()&&!target.isLinked()){
target.draw(2);
event.finish();
}
else{
var controls=['draw_card'];
if(target.hp<target.maxHp) controls.push('recover_hp');
target.chooseControl(controls).ai=function(){
if(target.hp==1&&target.maxHp>2) return 'recover_hp';
else if(target.hp==2&&target.maxHp>2&&target.countCards('h')>1) return 'recover_hp';
else return 'draw_card';
}
}
}
else event.finish();
'step 2'
switch(result.control){
case 'recover_hp':target.recover();break;
case 'draw_card':target.draw(2);break;
}
},
},
wechatqinggang:{
derivation:'qinggang_skill',
mod:{
attackRange:function(player,num){
if(player.hasEmptySlot(1)) return num+1;
},
},
audio:'qinggang_skill',
inherit:'qinggang_skill',
filter:function(event,player){
if(!player.hasEmptySlot(1)) return false;
return event.card.name=='sha';
},
},
wechatshemao:{
mod:{
targetInRange:function(card){
if(_status.event.skill=='wechatshemao') return true;
},
},
audio:'zhangba_skill',
enable:'chooseToUse',
usable:1,
filterCard:true,
selectCard:2,
position:'hs',
viewAs:{name:'sha'},
viewAsFilter:function(player){
return player.isPhaseUsing()&&player.countCards('hs')>=2;
},
complexCard:true,
filter:function(event,player){
return player.isPhaseUsing()&&player.countCards('hs')>=2;
},
audio:true,
prompt:'将两张手牌当作【杀】使用或打出',
check:function(card){
if(card.name=='sha') return 0;
return 5-get.value(card);
},
ai:{
respondSha:true,
skillTagFilter:function(player){
return player.countCards('hs')>=2;
},
},
},
wechattieji:{
audio:'tieji',
shaRelated:true,
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
return event.card.name=='sha';
},
check:function(event,player){
return get.attitude(player,event.target)<=0;
},
logTarget:'target',
content:function(){
'step 0'
player.judge(function(card){
if(get.color(card)=='red') return 2;
return -0.5;
}).set('judge2',function(result){
return result.bool;
}).set('callback',function(){
if(get.position(card,true)=='o'&&get.color(card)=='black') player.gain(card,'gain2');
});
'step 1'
if(result.bool) trigger.getParent().directHit.add(trigger.target);
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(get.attitude(player,arg.target)>0||arg.card.name!='sha'||!ui.cardPile.firstChild||get.color(ui.cardPile.firstChild,player)!='red') return false;
},
},
},
wechatwushen:{
mod:{
targetInRange:function(card){
if(get.suit(card)=='diamond'&&card.name=='sha') return true;
},
cardUsable:function(card){
if(card.name=='sha'&&(get.color(card)=='none'||get.suit(card)=='heart')) return Infinity;
},
},
audio:'wushen',
enable:'chooseToUse',
filterCard:function(card,player){
return get.color(card)=='red';
},
selectCard:function(){
return _status.event.skill=='wechatwushen'?1:Infinity;
},
position:'hes',
viewAs:{name:'sha'},
viewAsFilter:function(player){
return player.countCards('hes',{color:'red'});
},
prompt:'将一张红色牌当作【杀】使用',
check:function(card){
return 5-get.value(card);
},
ai:{
respondSha:true,
skillTagFilter:function(player){
if(!player.countCards('hes',{color:'red'})) return false;
},
},
},
wechatxiaohu:{
mod:{
selectTarget:function(card,player,num){
if(card.name=='sha'&&num[1]!=-1) num[1]++;
},
},
audio:'shenji',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return player.countCards('h');
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard('h',get.prompt('wechatxiaohu'),'弃置一张手牌并从牌堆中获得一张【杀】').set('ai',function(card){
var player=_status.event.player;
if(card.name=='sha') return 0;
if(!player.countCards('hs',{name:'sha'})) return 7-get.value(card);
return 4.5-get.value(card);
}).logSkill='wechatxiaohu';
'step 1'
if(result.bool){
var card=get.cardPile2(function(card){
return card.name=='sha';
});
if(card) player.gain(card,'gain2');
}
},
},
_wechatxiaohu:{
charlotte:true,
forceaudio:true,
audio:'shenji',
trigger:{player:'useCard1'},
filter:function(event,player){
if(!player.hasSkill('wechatxiaohu')) return false;
return event.card.name=='sha'&&event.targets.length>1;
},
priority:15,
forced:true,
locked:false,
content:function(){},
},
wechatdanlao:{
audio:'danlao',
enable:'phaseUse',
usable:1,
delay:0,
content:function(){
'step 0'
event.list=[];
for(var i of game.players) if(i!=player) event.list.push(i);
player.draw(game.players.length);
'step 1'
var cards=result;
if(get.itemtype(cards)!='cards'){
event.goto(5);
return;
}
var hs=player.getCards('h');
cards=cards.filter(function(card){
return hs.includes(card);
});
if(!cards.length){
event.goto(5);
return;
}
event.cards=cards;
if(_status.connectMode) game.broadcastAll(function(){_status.noclearcountdown=true});
event.given_map={};
'step 2'
player.chooseCardTarget({
filterCard:function(card){
return _status.event.cards.includes(card)&&!card.hasGaintag('olsujian_given');
},
cards:cards,
filterTarget:lib.filter.notMe,
selectCard:[1,cards.length],
prompt:'啖酪：是否将获得的牌分配给其他角色？',
ai1:function(card){
if(!ui.selected.cards.length) return 1;
return 0;
},
ai2:function(target){
var player=_status.event.player,card=ui.selected.cards[0];
var val=target.getUseValue(card);
if(val>0) return val*get.attitude(player,target)*2;
return get.value(card,target)*get.attitude(player,target);
},
});
'step 3'
if(result.bool){
if(event.list.includes(result.targets[0])) event.list.remove(result.targets[0]);
var res=result.cards,target=result.targets[0].playerid;
player.addGaintag(res,'olsujian_given');
cards.removeArray(res);
if(!event.given_map[target]) event.given_map[target]=[];
event.given_map[target].addArray(res);
if(cards.length) event.goto(2);
}
'step 4'
if(_status.connectMode){
game.broadcastAll(function(){
delete _status.noclearcountdown;
});
game.stopCountChoose();
}
var map=[],cards=[];
for(var i in event.given_map){
var source=(_status.connectMode?lib.playerOL:game.playerMap)[i];
player.line(source,'green');
map.push([source,event.given_map[i]]);
cards.addArray(event.given_map[i]);
}
if(map.length){
player.addExpose(0.3);
game.loseAsync({
gain_list:map,
player:player,
cards:cards,
giver:player,
animate:'giveAuto',
}).setContent('gaincardMultiple');
}
'step 5'
if(!event.list.length) event.finish();
else event.list.sortBySeat();
'step 6'
if(!player.isIn()){
event.finish();
return;
}
var target=event.list.shift();
event.target=target;
if(!target.canUse({name:'sha',isCard:true},player,false)) event.goto(8);
else target.chooseBool('是否视为对'+get.translation(player)+'使用一张【杀】？').set('choice',get.effect(player,{name:'sha',isCard:true},target,target)>0);
'step 7'
if(result.bool) target.useCard({name:'sha',isCard:true},player,false);
'step 8'
if(event.list.length) event.goto(6);
},
ai:{
order:7,
result:{player:1},
},
},
wechatjilei:{
audio:'jilei',
trigger:{player:'damageEnd'},
filter:function(event,player){
return event.source&&event.source.isIn()&&(!event.source.storage.wechatjilei2||!event.source.storage.wechatjilei2.length<4);
},
direct:true,
content:function(){
'step 0'
var list=[];
for(var suit of lib.suit){
if(!trigger.source.storage.wechatjilei2||!trigger.source.storage.wechatjilei2.includes(suit)) list.push(suit);
}
list.reverse();
player.chooseControl(list,'cancel2',function(){
var player=_status.event.player,source=_status.event.source;
if(get.attitude(player,source)>0) return 'cancel2';
for(var suit of ['heart','diamond','club','spade']){
if(list.includes(suit)&&(!source.storage.wechatjilei2||!source.storage.wechatjilei2.includes(suit))&&source.countCards('h',function(card){
return get.type(card,source)==suit&&source.hasValueTarget(card);
})>1){
return suit;
break;
}
}
return list[0];
}).set('prompt',get.prompt2('wechatjilei',trigger.source)).set('source',trigger.source);
'step 1'
if(result.control!='cancel2'){
player.logSkill('wechatjilei',trigger.source);
player.popup(get.translation(result.control));
game.log(player,'选择了','#y'+get.translation(result.control));
trigger.source.addTempSkill('wechatjilei2',{player:'phaseBegin'});
trigger.source.storage.wechatjilei2.add(result.control);
trigger.source.updateMarks('wechatjilei2');
}
},
ai:{
maixie_defend:true,
threaten:0.75,
},
},
wechatjilei2:{
charlotte:true,
mark:true,
onremove:true,
intro:{
content:function(storage){
return '不能使用、打出或弃置'+get.translation(storage)+'牌';
},
},
init:function(player,skill){
if(!player.storage[skill]) player.storage[skill]=[];
},
mod:{
cardDiscardable:function(card,player){
if(player.storage.wechatjilei2.includes(get.suit(card))) return false;
},
cardEnabled:function(card,player){
if(player.storage.wechatjilei2.includes(get.suit(card))) return false;
},
cardRespondable:function(card,player){
if(player.storage.wechatjilei2.includes(get.suit(card))) return false;
},
cardSavable:function(card,player){
if(player.storage.wechatjilei2.includes(get.suit(card))) return false;
},
},
},
wechatgongxin:{
audio:'gongxin',
enable:'phaseUse',
filterTarget:function(card,player,target){
return target!=player&&target.countCards('h');
},
usable:1,
content:function(){
'step 0'
event.videoId=lib.status.videoId++;
var cards=target.getCards('h');
if(player.isOnline2()){
player.send(function(cards,id){
ui.create.dialog('攻心',cards).videoId=id;
},cards,event.videoId);
}
event.dialog=ui.create.dialog('攻心',cards);
event.dialog.videoId=event.videoId;
if(!event.isMine()){
event.dialog.style.display='none';
}
player.chooseButton().set('filterButton',function(button){
return get.suit(button.link)=='heart';
}).set('dialog',event.videoId);
'step 1'
if(player.isOnline2()) player.send('closeDialog',event.videoId);
event.dialog.close();
if(result.bool) player.gain(result.links,target,'giveAuto');
},
ai:{
order:12,
expose:0.4,
result:{
target:function(player,target){
return -target.countCards('h');
},
},
},
},
wechatregongxin:{
audio:'gongxin',
inherit:'gongxin',
content:function(){
'step 0'
var cards=target.getCards('h');
player.chooseButton(2,[
'攻心',
cards,
[['获得此牌','置于牌堆顶'],'tdnodes'],
]).set('filterButton',function(button){
var type=typeof button.link;
if(ui.selected.buttons.length&&type==typeof ui.selected.buttons[0].link) return false;
return type=='string'||get.color(button.link,get.owner(button.link))=='red';
});
'step 1'
if(result.bool){
if(typeof result.links[0]!='string') result.links.reverse();
var card=result.links[1],choice=result.links[0];
player.showCards(card,get.translation(player)+'对'+get.translation(target)+'发动了【攻心】');
if(choice=='获得此牌') target.discard(card);
else target.lose(card,ui.cardPile,'visible','insert');
}
},
},
wechatbuqu:{
onremove:function(player){
player.removeGaintag('wechatbuqux');
},
mod:{
aiOrder:function(player,card,num){
if(get.itemtype(card)=='card'&&card.hasGaintag('wechatbuqux')) return num+0.3;
},
},
group:'wechatbuqu_gain',
audio:'buqu',
trigger:{player:['damageEnd','loseHpEnd']},
forced:true,
locked:false,
content:function(){
player.draw().gaintag=['wechatbuqux'];
},
subSkill:{
gain:{
audio:'buqu',
trigger:{player:['useCard','respond']},
filter:function(event,player){
return player.getHistory('lose',function(evt){
if(evt.getParent()!=event) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('wechatbuqux')) return true;
}
return false;
}).length;
},
forced:true,
locked:false,
content:function(){
var type=get.type2(trigger.card);
var card=get.cardPile2(function(card){
return get.type(card)==type;
});
if(card) player.gain(card,'gain2');
else{
player.chat('无牌可得？！');
game.log('但是牌堆中已经没有'+get.translation(type)+'牌了！');
}
},
},
},
},
wechatbuqux:{},
wechatfenji:{
audio:'fenji',
inherit:'new_fenji',
check:function(event,player){
return get.attitude(player,event.player)>2&&player.hp+player.countCards('hs',{name:['tao','jiu']})>2;
},
},
wechatwanwei:{
audio:'wanwei',
inherit:'jujian',
position:'h',
content:function(){
var list=[];
target.draw(cards.length);
for(var card of cards) if(!list.includes(get.type2(card))) list.push(get.type2(card));
if(list.length==cards.length) player.recover();
},
},
wechatyuejian:{
audio:'yuejian',
inherit:'spshude',
},
wechatganlu:{
audio:'ganlu',
enable:'phaseUse',
filter:function(event,player){
if(!player.countCards('h')) return false;
if(player.canMoveCard(null,true)) return true;
for(var i=1;i<6;i++){
if(!player.getEquips(i).length){
return true;
break;
}
}
return false;
},
usable:1,
filterCard:true,
check:function(card){
return 7-get.value(card);
},
content:function(){
'step 0'
var list=[],str='';
if(player.canMoveCard(null,true)) list.push('移动装备牌');
for(var i=1;i<6;i++){
if(!player.getEquips(i).length){
list.push('置入装备牌');
break;
}
}
if(list.includes('移动装备牌')){
str+='移动场上的一张装备牌';
if(list.length>1) str+'，或';
}
if(list.length>1) str+='往装备区中随机置入一张装备牌';
player.chooseControl(list).set('prompt','甘露：请选择一项').set('prompt2',str).set('ai',function(card){
if(player.canMoveCard(true,true)&&list.includes('移动装备牌')) return '移动装备牌';
if(list.includes('置入装备牌')) return '置入装备牌';
return list[0];
});
'step 1'
switch(result.control){
case '移动装备牌':player.moveCard().nojudge=true;break;
case '置入装备牌':
var list=[];
for(var i=1;i<6;i++) if(!player.getEquips(i).length) list.push('equip'+i);
list.randomSort();
var card=get.cardPile2(function(card){
return get.type(card)=='equip'&&list.includes(get.subtype(card));
});
if(card) player.chooseUseTarget(card,'nopopup','noanimate',true);
break;
}
},
ai:{
order:8,
result:{player:1},
},
},
wechatbuyi:{
audio:'buyi',
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
if(game.countPlayer()<2) return false;
return game.phaseNumber==0||event.name!='phase';
},
forced:true,
locked:false,
content:function(){
'step 0'
player.chooseTarget('请选择【补益】的目标',lib.translate.wechatbuyi_info,true).set('ai',function(target){
var player=_status.event.player;
return Math.max(0.001,get.threaten(target))*get.attitude(player,target)*(target==player?0.001:1);
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.line(target);
game.log(player,'选择了',target);
player.addSkill('wechatbuyi2');
if(target!=player) target.addSkill('wechatbuyi2');
}
},
},
wechatbuyi2:{
charlotte:true,
mark:true,
intro:{content:'当你于每轮第一次受到伤害后，你可以弃置一张非基本牌，然后回复1点体力。'},
audio:'buyi',
trigger:{player:'damageEnd'},
filter:function(event,player){
var history=player.getHistory('damage');
for(var i of history){
if(i==event) break;
return false;
}
var all=player.actionHistory;
for(var i=all.length-2;i>=0;i--){
if(all[i].damage.length) return false;
if(all[i].isRound) break;
}
return true;
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt('wechatbuyi2'),'弃置一张非基本牌并回复1点体力',function(card){
return get.type(card)!='basic';
}).set('ai',lib.skill.zhiheng.check).logSkill='wechatbuyi2';
'step 1'
if(result.bool) player.recover();
},
},
wechatzishou:{
audio:'zishou',
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return !player.getHistory('useCard',function(evt){
if(evt.targets&&evt.targets.length&&evt.isPhaseUsing()){
var targets=evt.targets.slice(0);
while(targets.includes(player)) targets.remove(player);
return targets.length>0;
}
return false;
}).length;
},
frequent:true,
content:function(){
player.draw(game.players.length-1);
},
},
wechatrezishou:{
audio:'zishou',
inherit:'zishou',
content:function(){
trigger.num+=3;
player.addTempSkill('zishou2');
},
},
wechatzongshi:{
audio:'zongshi',
mod:{
maxHandcard:function(player,num){
return num+game.players.length-1;
},
},
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
filter:function(event,player){
return player.countCards('h')>player.hp;
},
content:function(){
player.addTempSkill('wechatzongshi_paoxiao');
player.addMark('wechatzongshi_paoxiao',game.players.length-1,false);
},
subSkill:{
paoxiao:{
charlotte:true,
onremove:true,
mark:true,
marktext:'咆',
intro:{content:'出杀次数+#'},
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+player.countMark('wechatzongshi_paoxiao');
},
},
},
},
},
wechatqinwang:{
audio:'qinwang1',
group:'wechatqinwang1',
enable:'chooseToRespond',
filter:function(event,player){
return !event.wechatqinwang&&!player.hasSkill('wechatqinwang3');
},
viewAs:{name:'sha'},
filterCard:()=>false,
selectCard:-1,
ai:{
order:function(){
return get.order({name:'sha'})+0.3;
},
respondSha:true,
skillTagFilter:function(player,tag,arg){
if(arg!='respond') return false;
},
},
},
wechatqinwang1:{
charlotte:true,
trigger:{player:'respondBefore'},
filter:function(event,player){
return event.skill=='wechatqinwang';
},
direct:true,
priority:15,
content:function(){
'step 0'
player.addTempSkill('wechatqinwang3');
trigger.getParent().set('wechatqinwang',true);
player.chooseTarget('请选择【勤王】的目标','令其选择是否替你打出此【杀】',lib.filter.notMe,true).set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('wechatqinwang',target);
var next=target.chooseToRespond('是否替'+get.translation(player)+'打出一张【杀】？',{name:'sha'});
next.set('ai',function(){
var event=_status.event;
return get.attitude(event.player,event.source);
});
next.set('source',player);
next.set('wechatqinwang',true);
next.set('skillwarn','替'+get.translation(player)+'打出一张【杀】');
next.noOrdering=true;
next.autochoose=lib.filter.autoRespondSha;
}
else{
event.finish();
trigger.cancel();
trigger.getParent().goto(0);
}
'step 2'
if(result.bool){
trigger.card=result.card;
trigger.cards=result.cards;
trigger.throw=false;
target.draw();
target.addExpose(0.2);
}
else{
trigger.cancel();
trigger.getParent().goto(0);
}
},
},
wechatqinwang3:{
trigger:{global:['useCardAfter','respondAfter','useSkillAfter','phaseAfter']},
silent:true,
charlotte:true,
filter:function(event,player){
return !event.skill||event.skill!='wechatqinwang';
},
content:function(){
player.removeSkill('wechatqinwang3');
},
},
wechatjiaojin:{
audio:'jiaojin',
inherit:'jiaojin',
filter:function(event,player){
return event.source&&event.source!=player&&player.countCards('he',{type:'equip'})||(player.countCards('he')&&_status.connectMode);
},
},
wechatqianxun:{
audio:'reqianxun',
hiddenCard:function(player,name){
var card={name:name,isCard:true};
var info=get.info(card,false);
return get.type(name)=='trick'&&player.countCards('h')==1&&(!info.notarget&&(info.toself||info.singleCard||!info.selectTarget||info.selectTarget==1));
},
enable:'chooseToUse',
filter:function(event,player){
if(event.type=='wuxie') return false;
var cards=player.getCards('h');
if(cards.length!=1) return false;
var mod2=game.checkMod(cards[0],player,'unchanged','cardEnabled2',player);
if(mod2===false) return false;
for(var i of lib.inpile){
var card={name:i,isCard:true};
var info=get.info(card,false);
if((!info.notarget&&(info.toself||info.singleCard||!info.selectTarget||info.selectTarget==1))&&get.type(i)=='trick'&&event.filterCard({
name:i,
cards:cards,
},player,event)) return true;
}
return false;
},
usable:1,
chooseButton:{
dialog:function(event,player){
var cards=player.getCards('h');
var list=[];
for(var i of lib.inpile){
var card={name:i,isCard:true};
var info=get.info(card,false);
if((!info.notarget&&(info.toself||info.singleCard||!info.selectTarget||info.selectTarget==1))&&get.type(i)=='trick'&&event.filterCard({
name:i,
cards:cards,
},player,event)){
list.push(['锦囊','',i]);
}
}
return ui.create.dialog('谦逊',[list,'vcard'],'hidden');
},
check:function(button){
var player=_status.event.player;
return player.getUseValue({name:button.link[2]})+1;
},
backup:function(links,player){
return {
audio:'reqianxun',
popname:true,
filterCard:true,
selectCard:-1,
position:'h',
viewAs:{
name:links[0][2],
},
}
},
prompt:function(links,player){
return '将'+get.translation(player.getCards('h')[0])+'当作'+get.translation(links[0][2])+'使用';
},
},
subSkill:{
backup:{audio:'reqianxun'},
},
ai:{
order:12,
result:{
player:1,
},
},
},
wechatniepan:{
audio:'niepan',
unique:true,
enable:'chooseToUse',
mark:true,
skillAnimation:true,
limited:true,
animationColor:'orange',
filter:function(event,player){
if(event.type=='dying'){
if(player!=event.dying) return false;
return true;
}
return false;
},
content:function(){
'step 0'
player.awakenSkill('wechatniepan');
player.discard(player.getCards('hej'));
'step 1'
player.link(false);
player.turnOver(false);
'step 2'
player.draw(3);
if(player.hp<3)player.recover(3-player.hp);
'step 3'
player.addSkill('wechatniepan_fireAttack');
},
ai:{
order:1,
skillTagFilter:function(player,arg,target){
if(player!=target||player.storage.wechatniepan) return false;
},
save:true,
result:{
player:function(player){
if(player.hp<=0) return 10;
if(player.hp<=2&&player.countCards('he')<=1) return 10;
return 0;
}
},
threaten:0.6,
},
subSkill:{
fireAttack:{
charlotte:true,
mark:true,
marktext:'<span class=\'texiaotext\' style=\'color:#FF0000\'>火</span>',
intro:{content:'造成的伤害均视为火属性'},
trigger:{source:'damageBegin1'},
forced:true,
content:function(){
game.setNature(trigger,'fire');
},
ai:{fireDamage:true},
},
},
},
wechathuzhu:{
trigger:{player:'phaseJieshuBegin'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('wechathuzhu')).set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target)*Math.max(1,player.hp-target.hp);
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('wechathuzhu',target);
player.addSkill('wechathuzhu2');
player.storage.wechathuzhu2=target;
}
},
},
wechathuzhu2:{
charlotte:true,
onremove:true,
mark:true,
intro:{content:'保护$ing...'},
trigger:{global:'damageBegin4'},
filter:function(event,player){
return event.num>0&&event.player==player.storage.wechathuzhu2;
},
check:function(event,player){
if(event.player==player) return true;
if(player.hp>=Math.max(event.player.hp,1)) return true;
if(player.hp>1&&event.num>1) return true;
return false;
},
logTarget:'player',
prompt:'是否发动【护主】？',
prompt2:'失去1点体力，防止此伤害，然后摸一张牌',
content:function(){
player.loseHp();
trigger.cancel();
player.draw();
},
},
wechatshenxian:{
audio:'shenxian',
trigger:{global:'loseAfter'},
filter:function(event,player){
if(event.type!='discard') return false;
for(var i=0;i<event.cards2.length;i++){
if(get.type(event.cards2[i],null,event.hs.includes(event.cards2[i])?event.player:false)=='basic'){
return true;
}
}
return false;
},
frequent:true,
content:function(){
'step 0'
if(trigger.delay==false) game.delay();
'step 1'
player.draw();
},
},
wechatqiangwu:{
audio:'qiangwu',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h');
},
usable:1,
filterCard:true,
check:function(card){
var player=_status.event.player;
var num=player.countCards('hs',{name:'sha'});
if(num==0) return 0;
if(num==1){
if(game.hasPlayer(function(current){
return get.effect(current,{name:'sha'},player,player)>0;
})&&!game.hasPlayer(function(current){
return get.effect(current,{name:'sha'},player,player)>0&&player.canUse({name:'sha'},current);
})) return 7-get.value(card)*(14-get.number(card));
return 0;
}
if(num>1&&game.hasPlayer(function(current){
return get.effect(current,{name:'sha'},player,player)>0&&player.canUse({name:'sha'},current);
})) return 7-get.value(card)*(14-get.number(card));
return 0;
},
content:function(){
player.storage.wechatqiangwu2=get.number(cards[0]);
player.addTempSkill('wechatqiangwu2');
},
ai:{
order:7,
result:{player:1},
},
},
wechatqiangwu2:{
charlotte:true,
onremove:true,
mod:{
targetInRange:function(card,player){
if(card.name=='sha'&&get.number(card)>player.storage.wechatqiangwu2) return true;
},
cardUsable:function(card,player){
if(card.name=='sha'&&get.number(card)>player.storage.wechatqiangwu2) return Infinity;
},
},
trigger:{player:'useCard1'},
filter:function(event,player){
if(_status.currentPhase==player&&event.card.name=='sha'&&
get.number(event.card)>player.storage.wechatqiangwu2&&event.addCount!==false) return true;
return false;
},
forced:true,
popup:false,
firstDo:true,
content:function(){
trigger.addCount=false;
if(player.stat[player.stat.length-1].card.sha>0){
player.stat[player.stat.length-1].card.sha--;
}
},
},
wechatyigui:{
audio:'huashen2',
trigger:{player:'useCard2'},
filter:function(event,player){
if(!player.countCards('he')||!player.isPhaseUsing()||get.type(event.card)!='trick') return false;
if(event.targets&&event.targets.length>0) return true;
var info=get.info(event.card);
if(info.allowMultiple==false) return false;
if(event.targets&&!info.multitarget){
if(game.hasPlayer(function(current){
return !event.targets.includes(current)&&lib.filter.targetEnabled2(event.card,player,current);
})) return true;
}
return false;
},
usable:1,
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
prompt:get.prompt2('wechatyigui'),
filterTarget:function(card,player,target){
var trigger=_status.event.getTrigger();
return !trigger.targets.includes(target)&&lib.filter.targetEnabled2(trigger.card,player,target);
},
filterCard:lib.filter.cardDiscardable,
position:'he',
ai1:function(card){
return 6-get.value(card);
},
ai2:function(target){
var player=_status.event.player;
var trigger=_status.event.getTrigger();
return get.effect(target,trigger.card,player,player);
},
});
'step 1'
if(result.bool){
var target=result.targets[0]
player.logSkill('wechatyigui',target);
player.discard(result.cards);
trigger.targets.push(target);
}
else player.storage.counttrigger.wechatyigui--;
},
},
wechatshendao:{
audio:'xinsheng',
trigger:{player:'useCardAfter'},
filter:function(event,player){
return player.isPhaseUsing()&&event.targets&&event.targets.length&&game.hasPlayer(function(current){
return event.targets.includes(current)&&!player.getStorage('wechatshendao_mark').includes(current);
});
},
forced:true,
locked:false,
logTarget:function(event,player){
return game.filterPlayer(function(current){
return event.targets.includes(current)&&!player.getStorage('wechatshendao_mark').includes(current);
}).sortBySeat();
},
content:function(){
'step 0'
player.addTempSkill('wechatshendao_mark',{player:'phaseUseAfter'});
player.markAuto('wechatshendao_mark',game.filterPlayer(function(current){
return trigger.targets.includes(current)&&!list.includes(current);
}));
player.storage.wechatshendao_mark.sortBySeat();
'step 1'
switch(player.getStorage('wechatshendao_mark').length){
case 1:
player.chooseControl('basic','trick','equip','cancel2').set('prompt','神道：是否选择获得一种类型的牌？').set('ai',function(){
var player=_status.event.player;
if(player.hp<=3&&!player.countCards('h',{name:['shan','tao']})) return 'basic';
if(player.countCards('he',{type:'equip'})<2) return 'equip';
return 'trick';
});
break;
case 2:
player.chooseTarget('神道：是否视为对一名角色使用一张普通锦囊牌？',function(card,player,target){
for(var name of lib.inpile){
var info=lib.card[name];
if(!info||info.type!='trick') continue;
if(!player.canUse(name,target)) continue;
return true;
}
return false;
}).set('ai',function(target){
var player=_status.event.player,list=[];
for(var name of lib.inpile){
var info=lib.card[name];
if(!info||info.type!='trick') continue;
if(!player.canUse(name,target)) continue;
var eff=get.effect(target,{name:name},player,player)
if(eff>0) list.push(eff);
}
list.sort().reverse();
if(!list.length) return 0;
return list[0];
});
event.goto(3);
break;
case 3:
var targets=player.getStorage('wechatshendao_mark').filter(target=>target.isIn());
player.chooseBool('神道：是否对'+get.translation(list.sortBySeat())+'各造成1点伤害？').set('choice',targets.reduce((num,target)=>num+get.damageEffect(target,player,player),0)>0);
event.goto(5);
break;
default:
event.finish();
break;
}
'step 2'
if(result.control!='cancel2'){
player.popup(result.control);
game.log(player,'声明了','#y'+get.translation(result.control)+'牌');
var card=get.cardPile(card=>get.type2(card)==result.control);
if(card) player.gain(card,'gain2');
}
event.finish();
'step 3'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.line(target);
var list=[];
for(var name of lib.inpile){
var info=lib.card[name];
if(!info||info.type!='trick') continue;
list.push(name);
}
if(!list.length) event.finish();
else{
list=list.filter(function(name){
return player.canUse(name,target);
});
if(list.length) player.chooseButton(['视为对'+get.translation(target)+'使用一张普通锦囊牌',[list,'vcard']],true).set('ai',function(button){
var evt=_status.event.getParent();
return get.effect(evt.target,{name:button.link[2]},evt.player,evt.player);
});
else event.finish();
}
}
else event.finish();
'step 4'
if(result.bool){
var name=result.links[0][2];
player.useCard({name:name,isCard:true},target,false);
}
event.finish();
'step 5'
if(result.bool){
var targets=player.getStorage('wechatshendao_mark').filter(target=>target.isIn());
player.line(targets);
targets.forEach(target=>target.damage());
}
},
subSkill:{
mark:{
charlotte:true,
onremove:true,
intro:{content:'已记录$'},
},
},
},
wechatfengpo:{
shaRelated:true,
audio:'fengpo',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
if(event.targets.length!=1||!['sha','juedou'].includes(event.card.name)) return false;
if(!['sha','juedou'].includes(event.card.name)) return false;
if(player!=_status.currentPhase) return false;
return player.getHistory('useCard',function(evt){
return ['sha','juedou'].includes(evt.card.name);
}).indexOf(event.getParent())==0;
},
logTarget:'target',
content:function(){
'step 0'
player.viewHandcards(trigger.target);
player.chooseControl('摸牌','加伤').set('prompt','请选择一项');
'step 1'
var num=Math.max(1,trigger.target.countCards('h',{suit:'diamond'}));
if(result.control=='摸牌') player.draw(num);
else{
var trigger2=trigger.getParent();
if(typeof trigger2.baseDamage!='number') trigger2.baseDamage=1;
trigger2.baseDamage+=num;
}
},
},
wechatjielie:{
audio:'ext:活动武将/audio/skill:2',
enable:'phaseUse',
usable:1,
filterTarget:lib.filter.notMe,
content:function(){
'step 0'
player.chooseControl().set('choiceList',[
'令'+get.translation(target)+'选择是否使用一张牌',
'下次发动【相知】的时候令'+get.translation(target)+'获得同样的效果'
]).set('ai',function(){
if(target.hasCard(function(card){
return target.getUseValue(card)>0&&game.hasPlayer(function(current){
return get.effect(current,card,target,player)>0;
});
})) return 0;
return 1;
});
'step 1'
if(result.index==1){
player.addTempSkill('wechatjielie_targets',{player:'wechatxiangzhiAfter'});
player.markAuto('wechatjielie_targets',[target]);
event.finish();
}
else target.chooseToUse({prompt:'节烈：是否使用一张牌？'});
'step 2'
if(result.bool){
var card=result.cards[0];
if(card.name=='sha'&&get.color(card,target)=='red'){
player.loseHp();
delete player.getStat('skill').wechatjielie;
}
}
},
ai:{
order:7,
result:{
target:function(player,target){
if(player.hp+player.countCards('hs',{name:'tao'})<2) return 0;
if(target.hasCard(function(card){
return target.getUseValue(card)>0&&game.hasPlayer(function(current){
return get.effect(current,card,target,player)>0;
});
})) return 2;
return 1;
},
},
},
subSkill:{
targets:{
charlotte:true,
onremove:true,
mark:true,
intro:{content:'下次发动【相知】时，令$也获得相同的效果'},
},
},
},
wechatxiangzhi:{
mark:true,
marktext:'🎶',
intro:{
content:function(storage,player){
var str=(storage?'出牌阶段限一次，你可以回复1点体力。':'出牌阶段限一次，你可以摸一张牌。');
return '<li>当前韵律：'+(storage?'仄':'平')+'<br><li>'+str;
},
},
group:'wechatxiangzhi_zhuanyun',
audio:'ext:活动武将/audio/skill:2',
yunlvSkill:true,
enable:'phaseUse',
usable:1,
content:function(){
'step 0'
player[player.storage.wechatxiangzhi?'recover':'draw']();
'step 1'
for(var target of player.getStorage('wechatjielie_targets').sortBySeat()){
player.line(target);
target[player.storage.wechatxiangzhi?'recover':'draw']();
}
},
ai:{
order:10,
result:{
player:function(player,target){
if(player.storage.wechatxiangzhi&&player.isHealthy()) return 0;
return 1;
},
},
},
subSkill:{
zhuanyun:{
audio:'wechatxiangzhi',
trigger:{player:'useSkillAfter'},
filter:function(event,player){
return event.skill=='wechatjielie';
},
forced:true,
locked:false,
content:function(){
player.changeZhuanhuanji('wechatxiangzhi');
if(player.getStat('skill').wechatxiangzhi) delete player.getStat('skill').wechatxiangzhi;
game.log(player,'转换了了','#g【相知】','的韵律');
},
},
},
},
wechattongxin:{
mark:true,
marktext:'🎶',
intro:{
content:function(storage,player){
var str='出牌阶段限一次，你可以令一名其他角色交给你一张手牌，然后若其手牌数不大于你，其摸一张牌。';
if(storage) str='出牌阶段限一次，你可以交给一名其他角色一张手牌，然后若其手牌数不小于你，你对其造成1点伤害。';
return '<li>当前韵律：'+(storage?'仄':'平')+'<br><li>'+str;
},
},
group:'wechattongxin_zhuanyun',
audio:'ext:活动武将/audio/skill:2',
yunlvSkill:true,
enable:'phaseUse',
filter:function(event,player){
var yunlv=player.storage.wechattongxin;
if(!yunlv&&!game.hasPlayer(function(current){
if(current==player) return false;
return current.countCards('h');
})) return false;
if(yunlv&&!player.countCards('h')) return false;
return true;
},
filterTarget:function(card,player,target){
var yunlv=player.storage.wechattongxin;
if(target==player) return false;
return yunlv||target.countCards('h');
},
filterCard:function(card,player){
return player.storage.wechattongxin;
},
selectCard:function(){
var player=_status.event.player;
return player.storage.wechattongxin?1:-1;
},
check:function(card){
return 7-get.value(card);
},
discard:false,
lose:false,
delay:false,
usable:1,
content:function(){
'step 0'
if(cards.length){
target.gain(cards,player,'giveAuto');
event.goto(3);
}
'step 1'
target.chooseCard('h','同心：将一张手牌交给'+get.translation(player),true);
'step 2'
if(result.bool) player.gain(result.cards,target,'giveAuto');
'step 3'
if(player.storage.wechattongxin){
if(target.countCards('h')>=player.countCards('h')){
player.line(target);
target.damage();
}
}
else if(target.countCards('h')<=player.countCards('h')) target.draw();
},
ai:{
order:7,
result:{
target:function(player,target){
var yunlv=player.storage.wechattongxin;
if(yunlv){
if(player.countCards('h')-target.countCards('h')<=2) return -1;
return 0;
}
else{
if(target.countCards('h')-player.countCards('h')>2) return -3;
return get.sgn(get.attitude(player,target))*(get.attitude(player,target)>0?2:1);
}
},
},
},
subSkill:{
zhuanyun:{
audio:'wechattongxin',
trigger:{player:'useCard'},
filter:function(event,player){
return player.isPhaseUsing()&&!player.hasHistory('useCard',function(evt){
return evt.card!=event.card&&get.type2(evt.card)==get.type2(event.card);
});
},
forced:true,
locked:false,
content:function(){
player.changeZhuanhuanji('wechattongxin');
if(player.getStat('skill').wechattongxin) delete player.getStat('skill').wechattongxin;
game.log(player,'转换了了','#g【同心】','的韵律');
},
},
},
},
wechatzhaoyan:{
audio:'ext:活动武将/audio/skill:2',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return event.player.countCards('h')>player.countCards('h');
},
forced:true,
locked:false,
usable:1,
content:function(){
player.draw();
},
},
wechatbeige:{
audio:'beige',
trigger:{global:'damageEnd'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.player.isIn()&&player.countCards('he');
},
usable:1,
direct:true,
preHidden:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt2('wechatbeige',trigger.player)).set('ai',function(card){
var player=_status.event.player;
var target=_status.event.target;
var att=get.attitude(player,target);
switch(get.color(card,player)){
case 'red':
if(att>0) return 7-get.value(card);
return 0;
break;
case 'black':
if(att<0&&player.canUse('sha',target,false)) return 7-get.value(card);
return 0;
break;
}
}).setHiddenSkill('wechatbeige').set('target',trigger.player).logSkill=['wechatbeige',trigger.player];
'step 1'
if(result.bool){
switch(get.color(result.cards[0],player)){
case 'red':trigger.player.draw(2);break;
case 'black':if(player.canUse('sha',trigger.player,false)) player.useCard({name:'sha',isCard:true},trigger.player,false);break;
}
}
else player.storage.counttrigger.wechatbeige--;
},
ai:{expose:0.25},
},
wechatduanchang:{
audio:'duanchang',
trigger:{player:'die'},
filter:function(event,player){
return event.source&&event.source.isIn();
},
forced:true,
forceDie:true,
logTarget:'source',
skillAnimation:true,
animationColor:'gray',
content:function(){
trigger.source.addSkill('wechatduanchang_tao');
},
subSkill:{
tao:{
charlotte:true,
mark:true,
marktext:'<span style="text-decoration: line-through;">桃</span>',
intro:{content:'不能使用【桃】'},
mod:{
cardEnabled2:function(card){
if(card.name=='tao') return false;
},
aiValue:function(player,card,num){
if(card.name=='tao') return 0;
},
},
},
},
},
//赵襄
//父魂、母魂、蜀魂
//三魂聚顶武将[doge]
wechatfanghun:{
group:['wechatfanghun_longdan','wechatfanghun_fengpo'],
derivation:['ollongdan','wechatfengpo'],
intro:{name:'梅影',content:'mark'},
audio:'fanghun',
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
return event.name!='phase'||game.phaseNumber==0;
},
forced:true,
locked:false,
content:function(){
player.addSkillLog('ollongdan');
game.broadcastAll(function(list){
game.expandSkills(list);
for(var i of list){
var info=lib.skill[i];
if(!info) continue;
if(!info.audioname2) info.audioname2={};
info.audioname2.wechat_zhaoxiang='fanghun';
}
},['ollongdan']);
},
subSkill:{
longdan:{
audio:'fanghun',
trigger:{player:['useCardAfter','respondAfter']},
filter:function(event,player){
return event.skill=='ollongdan'&&!player.hasMark('wechatfanghun');
},
forced:true,
locked:false,
content:function(){
player.addMark('wechatfanghun',1);
},
},
fengpo:{
shaRelated:true,
audio:'fanghun',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
if(!player.hasMark('wechatfanghun')) return false;
if(event.targets.length!=1||!['sha','juedou'].includes(event.card.name)) return false;
if(!['sha','juedou'].includes(event.card.name)) return false;
if(player!=_status.currentPhase) return false;
return player.getHistory('useCard',function(evt){
return ['sha','juedou'].includes(evt.card.name);
}).indexOf(event.getParent())==0;
},
logTarget:'target',
prompt:function(event,player){
return get.prompt('wechatfengpo',event.target)+'（发动后失去“梅影”标记）';
},
prompt2:()=>lib.translate.wechatfengpo_info,
content:function(){
'step 0'
player.viewHandcards(trigger.target);
player.chooseControl('摸牌','加伤').set('prompt','请选择一项');
'step 1'
var num=Math.max(1,trigger.target.countCards('h',{suit:'diamond'}));
if(result.control=='摸牌') player.draw(num);
else{
var trigger2=trigger.getParent();
if(typeof trigger2.baseDamage!='number') trigger2.baseDamage=1;
trigger2.baseDamage+=num;
}
'step 2'
player.removeMark('wechatfanghun',1);
},
},
},
},
wechatfuhan:{
derivation:['new_yijue','olpaoxiao','retieji','xinliegong'],
unique:true,
audio:'fuhan',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.getAllHistory('useSkill',function(evt){
return lib.translate[evt.skill]&&lib.translate[evt.skill]=='凤魄';
}).length;
},
skillAnimation:true,
animationColor:'fire',
forced:true,
juexingji:true,
content:function(){
'step 0'
player.awakenSkill('wechatfuhan');
'step 1'
player.loseMaxHp();
'step 2'
var list=[];
for(var i of lib.skill.wechatfuhan.derivation){
if(!player.hasSkill(i)) list.push(i);
}
if(list.length) player.chooseControl(list).set('prompt','选择获得一项技能');
else event.finish();
'step 3'
if(result.control){
var list=[result.control];
player.addSkillLog(result.control);
game.broadcastAll(function(list){
game.expandSkills(list);
for(var i of list){
var info=lib.skill[i];
if(!info) continue;
if(!info.audioname2) info.audioname2={};
info.audioname2.wechat_zhaoxiang='fanghun';
}
},list);
}
},
},
wechattunjiang:{
audio:'sptunjiang',
inherit:'sptunjiang',
content:function(){
player.draw(game.countPlayer()-1);
},
},
wechatjushou:{
audio:'xinjushou',
inherit:'reshengxi',
content:function(){
player.draw(3);
},
},
wechatwansha:{
group:'wansha',
audio:'wansha',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.hp>1;
});
},
forced:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('wechatwansha'),'令一名体力值大于1的其他角色失去1点体力，本阶段结束时其回复1点体力',true,function(card,player,target){
return target!=player&&target.hp>1;
}).set('ai',function(target){
var player=_status.event.player;
return -(target.hp<=2?5:1)/target.hp;
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.line(target);
target.loseHp();
player.when('phaseUseEnd').then(()=>{
if(target.isIn()) target.recover();
}).vars({target:target});
}
},
},
wechatluanwu:{
audio:'luanwu',
inherit:'luanwu',
content:function(){
'step 0'
player.awakenSkill('wechatluanwu');
var card=get.cardPile2(card=>card.name=='sha');
if(card) player.gain(card,'gain2');
event.current=player;
event.currented=[];
'step 1'
event.currented.push(event.current);
event.current.animate('target');
event.current.chooseToUse('乱武：使用一张杀或失去1点体力',function(card){
if(get.name(card)!='sha') return false;
return lib.filter.cardEnabled.apply(this,arguments);
},function(card,player,target){
if(target==player||target==_status.event.source) return false;
var dist=get.distance(player,target);
if(dist>1){
if(game.hasPlayer(function(current){
return current!=player&&get.distance(player,current)<dist;
})) return false;
}
return lib.filter.filterTarget.apply(this,arguments);
}).set('ai2',function(){
return get.effect_use.apply(this,arguments)+0.01;
}).set('addCount',false).set('source',player);
'step 2'
if(!result.bool) event.current.loseHp();
event.current=event.current.next;
if(!event.currented.includes(event.current)){
game.delay(0.5);
event.goto(1);
}
},
},
//审配
wechatshouye:{
audio:'shouye',
inherit:'shouye',
content:function(){
'step 0'
player.line(trigger.player,'green');
player.chooseToPSS(trigger.player);
'step 1'
if(result.bool){
trigger.targets.remove(player);
trigger.getParent().triggeredTargets2.remove(player);
trigger.getParent().shouyeer=player;
}
},
},
wechatliezhi:{
audio:'liezhi',
trigger:{player:'phaseZhunbeiBegin'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('wechatliezhi'),'弃置至多两名其他角色区域内的各一张牌',[1,2],function(card,player,target){
return target!=player&&target.countDiscardableCards(player,'hej')>0;
}).ai=function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe'},player,player);
};
'step 1'
if(result.bool){
result.targets.sortBySeat();
event.targets=result.targets;
player.line(result.targets,'green');
player.logSkill('wechatliezhi',result.targets);
}
else event.finish();
'step 2'
var target=targets.shift();
player.discardPlayerCard(target,'hej',true)
if(targets.length) event.redo();
},
},
//曹操
wechatjianxiong:{
audio:'jianxiong',
trigger:{source:'damageSource'},
filter:function(event,player){
var target=_status.currentPhase;
if(!event.card||!target||target!=player) return false;
var list=[];
player.getHistory('gain',function(evt){
if(evt.getParent().name!='wechatjianxiong') return false;
for(var card of evt.cards) list.push(card.name);
});
return event.cards.filterInD().filter(function(card){
return !list.includes(card.name);
}).length;
},
frequent:true,
prompt2:function(event,player){
var list=[];
player.getHistory('gain',function(evt){
if(evt.getParent().name!='wechatjianxiong') return false;
for(var card of evt.cards) list.push(card.name);
});
return '获得'+get.translation(event.cards.filterInD().filter(function(card){
return !list.includes(card.name);
}));
},
content:function(){
var list=[];
player.getHistory('gain',function(evt){
if(evt.getParent().name!='wechatjianxiong') return false;
for(var card of evt.cards) list.push(card.name);
});
player.gain(trigger.cards.filterInD().filter(function(card){
return !list.includes(card.name);
}),'gain2');
},
},
//谋略值
wechatmoulvenum:{
changeNum:function(num,player){
if(num==0||typeof num!='number') return;
if(typeof player.storage.wechatmoulvenum!='number') player.storage.wechatmoulvenum=0;
game.addGlobalSkill('wechatmiaoji');
player.storage.wechatmoulvenum+=num;
if(player.storage.wechatmoulvenum>5) player.storage.wechatmoulvenum=5;
player[player.storage.wechatmoulvenum?'markSkill':'unmarkSkill']('wechatmoulvenum');
game.log(player,(num>0?'获得了':'失去了'),(num>0?('#g'+num):('#y'+(-num))),'点','谋略值');
},
marktext:'谋',
intro:{
name:'谋略值',
content:'当前拥有#点谋略值',
},
getMax:5,
getNum:function(player){
if(typeof player.storage.wechatmoulvenum!='number') return 0;
return player.storage.wechatmoulvenum;
},
},
//极郭嘉
wechatdingce:{
audio:'ext:活动武将/audio/skill:2',
trigger:{global:['phaseBefore','phaseEnd'],player:['phaseZhunbeiBegin','enterGame']},
filter:function(event,player,name){
if(event.name!='phaseZhunbei'&&lib.skill.wechatmoulvenum.getNum(player)>=lib.skill.wechatmoulvenum.getMax) return false;
switch(name){
case 'phaseBefore': case 'enterGame':
return name!='phaseBefore'||game.phaseNumber==0;
break;
case 'phaseZhunbeiBegin':
return lib.skill.wechatmoulvenum.getNum(player)>player.countCards('h');
break;
case 'phaseEnd':
var num=0;
player.getHistory('useCard',function(evt){
num+=evt.cards.length;
});
player.getHistory('respond',function(evt){
num+=evt.cards.length;
});
return num>=player.hp&&player.hp>0;
break;
}
return false;
},
forced:true,
locked:false,
content:function(){
switch(event.triggername){
case 'phaseBefore': case 'enterGame':
lib.skill.wechatmoulvenum.changeNum(3,player);
break;
case 'phaseZhunbeiBegin':
player.draw();
break;
case 'phaseEnd':
lib.skill.wechatmoulvenum.changeNum(player.hp,player);
break;
}
},
},
wechatsuanlve:{
init:function(player){
if(player.getHistory('useCard').length){
var history=player.getHistory('useCard')[player.getHistory('useCard').length-1];
player.storage.wechatsuanlve_mark2=history.card.name;
player.storage.wechatsuanlve_mark3=history.card.nature;
}
},
hiddenCard:function(player,name){
if(!player.storage.wechatsuanlve_mark2) return false;
return name==player.storage.wechatsuanlve_mark2&&player.countCards('hes')&&!player.hasSkill('wechatsuanlve_used')&&lib.skill.wechatmoulvenum.getNum(player)>player.countMark('wechatsuanlve_count');
},
audio:'ext:活动武将/audio/skill:2',
enable:'chooseToUse',
filter:function(event,player){
if(!player.storage.wechatsuanlve_mark2||player.hasSkill('wechatsuanlve_used')||!player.countCards('hes')||lib.skill.wechatmoulvenum.getNum(player)<=player.countMark('wechatsuanlve_count')) return false;
return event.filterCard({name:player.storage.wechatsuanlve_mark2,nature:player.storage.wechatsuanlve_mark3},player,event);
},
chooseButton:{
dialog:function(event,player){
var name=player.storage.wechatsuanlve_mark2;
var nature=player.storage.wechatsuanlve_mark3;
return ui.create.dialog('算略',[[[get.translation(get.type2(name)),'',name,nature]],'vcard']);
},
check:function(button){
var player=_status.event.player,card={name:button.link[2],nature:button.link[3]};
return _status.event.getParent().type=='phase'?player.getUseValue(card):1;
},
backup:function(links,player){
return {
filterCard:true,
position:'hes',
viewAs:{
name:links[0][2],
nature:links[0][3],
},
ai1:function(card){
return 7-get.value(card);
},
precontent:function(){
delete event.result.skill;
player.logSkill('wechatsuanlve');
player.addTempSkill('wechatsuanlve_used');
player.addTempSkill('wechatsuanlve_count','roundStart');
player.addMark('wechatsuanlve_count',1,false);
lib.skill.wechatmoulvenum.changeNum(-player.countMark('wechatsuanlve_count'),player);
},
}
},
prompt:function(links,player){
return '失去'+(1+player.countMark('wechatsuanlve_count'))+'点谋略值，将一张牌当做'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'使用';
},
},
ai:{
order:8,
result:{player:1},
save:true,
respondSha:true,
respondShan:true,
skillTagFilter:function(player,tag,target){
var name=player.storage.wechatsuanlve_mark2;
if(target=='respond') return false;
if(!name||player.hasSkill('wechatsuanlve_used')||!player.countCards('hes')||lib.skill.wechatmoulvenum.getNum(player)<=player.countMark('wechatsuanlve_count')) return false;
if(tag=='save'){
if(name=='tao'||target==player) return true;
return false;
}
if(tag=='respondSha'&&name!='sha') return false;
if(tag=='respondShan'&&name!='shan') return false;
},
},
group:'wechatsuanlve_mark',
subSkill:{
used:{charlotte:true},
count:{
charlotte:true,
onremove:true,
},
mark:{
charlotte:true,
trigger:{
player:['useCard1','respond'],
global:['phaseBefore','phaseAfter'],
},
filter:function(event,player){
if(event.name=='phaseBegin') return true;
return get.type(event.card)=='basic'||get.type(event.card)=='trick';
},
forced:true,
popup:false,
priority:11+45+14,
firstDo:true,
content:function(){
if(event.triggername=='phaseBeginStart'){
delete player.storage.wechatsuanlve_mark2;
delete player.storage.wechatsuanlve_mark3;
}
else{
player.storage.wechatsuanlve_mark2=trigger.card.name;
player.storage.wechatsuanlve_mark3=trigger.card.nature;
}
},
},
},
},
wechatmiaoji:{
audio:'ext:活动武将/audio/skill:2',
audioname2:{
wechat_guojia:'wechatmiaoji_wechat_guojia',
wechat_zhugeliang:'wechatmiaoji_wechat_zhugeliang',
},
subSkill:{
used:{charlotte:true},
wechat_guojia:{audio:'ext:活动武将/audio/skill:2'},
wechat_zhugeliang:{audio:'ext:活动武将/audio/skill:2'},
},
enable:'chooseToUse',
hiddenCard:function(player,name){
if(player.hasSkill('wechatmiaoji_used')) return false;
var num=lib.skill.wechatmoulvenum.getNum(player);
if(num>=1&&name=='guohe') return true;
if(num>=2&&name=='wuxie') return true;
if(num>=3&&name=='wuzhong') return true;
return false;
},
filter:function(event,player){
if(player.hasSkill('wechatmiaoji_used')) return false;
var num=lib.skill.wechatmoulvenum.getNum(player);
if(!num) return false;
var list=['guohe','wuxie','wuzhong'];
for(var namex of list){
if(num<list.indexOf(namex)+1) continue;
if(event.filterCard({name:namex,isCard:true},player,event)) return true;
}
return false;
},
chooseButton:{
dialog:function(event,player){
var list=[],num=lib.skill.wechatmoulvenum.getNum(player);
var listx=['guohe','wuxie','wuzhong'];
for(var namex of listx){
if(num<listx.indexOf(namex)+1) continue;
if(event.filterCard({name:namex,isCard:true},player,event)) list.push(['锦囊','',namex]);
}
return ui.create.dialog('妙计',[list,'vcard'],'hidden')
},
check:function(button){
var player=_status.event.player;
return player.getUseValue({name:button.link[2],nature:button.link[3]});
},
backup:function(links,player){
return {
selectCard:-1,
filterCard:()=>false,
viewAs:{
name:links[0][2],
nature:links[0][3],
isCard:true,
},
precontent:function(){
player.logSkill('wechatmiaoji');
player.addTempSkill('wechatmiaoji_used');
delete event.result.skill;
var num=['guohe','wuxie','wuzhong'].indexOf(event.result.card.name)+1;
lib.skill.wechatmoulvenum.changeNum(-num,player);
},
}
},
prompt:function(links,player){
var name=links[0][2];
var num=['guohe','wuxie','wuzhong'].indexOf(name)+1;
return '失去'+num+'点谋略值，视为使用'+get.translation(name);
},
},
ai:{
order:1,
result:{player:1},
},
},
//关羽
wechatqinglong:{
derivation:'qinglong_skill',
mod:{
attackRange:function(player,num){
if(player.hasEmptySlot(1)) return num+2;
},
},
audio:'qinglong_skill',
trigger:{player:['shaMiss','eventNeutralized']},
filter:function(event,player){
if(!player.hasEmptySlot(1)||!event.card||event.card.name!='sha') return false;
return event.target.isIn()&&player.canUse('sha',event.target,false)&&(player.hasSha()||_status.connectMode&&player.countCards('h'));
},
direct:true,
locked:true,
content:function(){
player.chooseToUse(get.prompt('qinglong',trigger.target),function(card,player,event){
if(get.name(card)!='sha') return false;
return lib.filter.filterCard.apply(this,arguments);
},trigger.target,-1).set('addCount',false).logSkill='wechatqinglong';
},
},
//许褚
wechatluoyi:{
audio:'luoyi',
trigger:{source:'damageBegin2'},
filter:function(event,player){
return event.card&&(event.card.name=='sha'||event.card.name=='juedou')&&player.countCards('he');
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt('wechatluoyi',trigger.player),'弃置一张牌并令此伤害+1').set('goon',get.damageEffect(trigger.player,player,player)>0).set('ai',function(card){
if(_status.event.goon) return 12-get.value(card);
return 0;
}).logSkill=['wechatluoyi',trigger.player];
'step 1'
if(result.bool) trigger.num++;
},
ai:{expose:0.25},
},
//孙尚香
wechatjieyin:{
audio:'jieyin',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(function(target){
return target.hasSex('male');
})&&player.countCards('he');
},
filterTarget:function(card,player,target){
return target.hasSex('male');
},
filterCard:true,
check:function(card){
var player=_status.event.player;
if(player.hasSkill('xiaoji')&&get.position(card)=='e') return 8-get.value(card);
return 5-get.value(card);
},
position:'he',
usable:1,
content:function(){
player.draw('nodelay');
target.draw();
},
ai:{
order:7,
result:{target:1},
},
},
//庞德
wechatmengjin:{
audio:'jianchu',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
return event.card.name=='sha'&&event.target.countCards('he');
},
check:function(event,player){
return get.attitude(player,event.target)<=0;
},
logTarget:'target',
content:function(){
'step 0'
player.discardPlayerCard('he',trigger.target,true);
'step 1'
if(result.bool){
if(get.type(result.cards[0])=='equip') trigger.getParent().directHit.push(trigger.target);
else player.gain(result.cards.filterInD(),'gain2');
}
},
ai:{
unequip_ai:true,
skillTagFilter:function(player,tag,arg){
if(arg&&arg.name=='sha'&&arg.target&&get.attitude(player,arg.target)<=0&&arg.target.countCards('he')) return true;
return false;
},
},
},
//夏侯渊
wechatshensu:{
audio:'shensu1',
audioname2:{wechat_xiahouba:'shensu1_xiahouba'},
trigger:{player:['phaseJudgeBefore','phaseUseBefore']},
direct:true,
content:function(){
'step 0'
var check;
switch(event.triggername){
case 'phaseJudgeBefore':check=player.countCards('h')>2;break;
case 'phaseUseBefore':check=player.needsToDiscard();break;
}
var str=['判定阶段和摸牌','出牌'][lib.skill.wechatshensu.trigger.player.indexOf(event.triggername)];
player.chooseTarget(get.prompt('wechatshensu'),'跳过'+str+'阶段并视为对一名其他角色使用一张无视距离和防具的【杀】',function(card,player,target){
if(player==target) return false;
return player.canUse({name:'sha'},target,false);
}).set('check',check).set('ai',function(target){
if(!_status.event.check) return 0;
return get.effect(target,{name:'sha'},_status.event.player);
}).setHiddenSkill('wechatshensu');
'step 1'
if(result.bool){
trigger.cancel();
if(event.triggername=='phaseJudgeBefore') player.skip('phaseDraw');
player.logSkill('wechatshensu',result.targets);
player.useCard({name:'sha',isCard:true},result.targets[0],false).set('audio',false).card.wechatshensu=true;
}
},
ai:{
unequip:true,
skillTagFilter:function(player,tag,arg){
if(!arg||!arg.card||arg.card.wechatshensu!=true) return false;
},
},
},
//黄忠
wechatliegong:{
shaRelated:true,
mod:{
targetInRange:function(card,player,target){
if(card.name=='sha') return true;
},
},
audio:'liegong',
trigger:{player:'useCardToTargeted'},
filter:function(event,player){
if(event.card.name!='sha') return false;
return player.countCards('h')>=event.target.countCards('h');
},
forced:true,
locked:false,
logTarget:'target',
content:function(){
trigger.getParent().directHit.push(trigger.target);
},
ai:{
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
if(arg.card.name=='sha'&&player.countCards('h',function(card){
return card!=arg.card&&(!arg.card.cards||!arg.card.cards.includes(card));
})>=arg.target.countCards('h')) return true;
return false;
},
},
},
//曹冲
wechatrenxin:{
audio:'renxin',
trigger:{global:'damageBegin4'},
filter:function(event,player){
if(player.hasSkill('wechatrenxin_used')) return false;
return event.player!=player&&event.player.hp<=event.num&&player.countCards('he');
},
checkx:function(event,player){
if(get.attitude(player,event.player)<0) return false;
var num=player.countCards('h',function(card){
var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
if(mod2!='unchanged') return mod2;
var mod=game.checkMod(card,player,event.player,'unchanged','cardSavable',player);
if(mod!='unchanged') return mod;
var savable=get.info(card).savable;
if(typeof savable=='function') savable=savable(card,player,event.player);
return savable;
});
if(num>=1+event.num-event.player.hp) return false;
return player.hp+num-event.num>0;
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard('he',get.prompt2('wechatrenxin',trigger.player)).set('ai',function(card){
if(_status.event.goon) return 7-get.value(card);
return -1;
}).set('goon',lib.skill.wechatrenxin.checkx(trigger,player)).logSkill=['wechatrenxin',trigger.player];
'step 1'
if(result.bool){
player.addTempSkill('wechatrenxin_used','roundStart');
trigger.player=player;
}
},
subSkill:{used:{charlotte:true}},
},
//蔡文姬
wechatchenqing:{
audio:'chenqing',
trigger:{global:'dying'},
filter:function(event,player){
for(var i=player.actionHistory.length-1;i>=0;i--){
var history=player.actionHistory[i].useSkill;
for(var j=history.length-1;j>=0;j--){
if(history[j].skill=='wechatchenqing') return false;
}
if(player.actionHistory[i].isRound) break;
}
return event.player.hp<=0;
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('wechatchenqing'),function(card,player,target){
return target!=_status.event.getTrigger().player;
}).set('ai',function(target){
var player=_status.event.player;
var trigger=_status.event.getTrigger();
if(get.attitude(player,trigger.player)>0){
var att1=get.attitude(target,player);
var att2=get.attitude(target,trigger.player);
var att3=get.attitude(player,target);
if(att3<0) return 0;
return att1/2+att2+att3;
}
else return 0;
});
'step 1'
if(result.bool){
var target=result.targets[0]
event.target=target;
player.logSkill('wechatchenqing',target);
target.draw(4);
}
else event.finish();
'step 2'
var target=event.target;
var tosave=trigger.player;
var att=get.attitude(target,tosave);
var hastao=target.countCards('h','tao');
target.chooseToDiscard(4,true,'he').set('ai',function(card){
var hastao=_status.event.hastao;
var att=_status.event.att;
if(!hastao&&att>0){
var suit=get.suit(card);
for(var i=0;i<ui.selected.cards.length;i++){
if(get.suit(ui.selected.cards[i])==suit){
return -4-get.value(card);
}
}
}
if(att<0&&ui.selected.cards.length==3){
var suit=get.suit(card);
for(var i=0;i<ui.selected.cards.length;i++){
if(get.suit(ui.selected.cards[i])==suit){
return -get.value(card);
}
}
return -10-get.value(card);
}
return -get.value(card);
}).set('hastao',hastao).set('att',att);
'step 3'
if(result.cards&&result.cards.length==4){
var suits=[];
for(var i=0;i<result.cards.length;i++) suits.add(get.suit(result.cards[i]));
if(suits.length==4&&game.checkMod({name:'tao',isCard:true},player,trigger.player,'unchanged','cardSavable',player)) target.useCard({name:'tao',isCard:true},trigger.player);
}
},
ai:{expose:0.3},
},
//王平
wechatbinglve:{
audio:'nzry_binglve',
trigger:{player:'useSkillAfter'},
filter:function(event,player){
return event.skill=='minifeijun_backup';
},
forced:true,
content:function(){
player.draw(player.getAllHistory('useSkill',function(evt){
return evt.skill=='minifeijun_backup'&&evt.targets[0]==trigger.targets[0];
}).length==1?2:1)
},
ai:{combo:'minifeijun'},
},
//孙亮
wechatchezheng:{
mod:{
playerEnabled:function(card,player,target){
var info=get.info(card);
if(target!=player&&(!info||!info.singleCard||!ui.selected.targets.length)&&player.isPhaseUsing()&&!target.inRange(player)) return false;
},
},
audio:'nzry_zhizheng',
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return game.hasPlayer(function(target){
return target!=player&&!target.inRange(player);
});
},
forced:true,
content:function(){
'step 0'
player.draw(game.countPlayer(function(target){
return target!=player&&!target.inRange(player);
}));
'step 1'
if(!game.hasPlayer(function(target){
return target!=player&&!target.inRange(player)&&target.countDiscardableCards(player,'he');
})){event.finish();return;}
player.chooseTarget('请选择〖掣政〗的目标','弃置一名攻击范围内不包含你的角色的一张牌',true,function(card,player,target){
return target!=player&&!target.inRange(player)&&target.countDiscardableCards(player,'he');
}).set('ai',function(target){
var player=_status.event.player;
return -get.attitude(player,target);
});
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target);
player.discardPlayerCard(target,'he',true);
}
},
},
//曹植
wechatluoying:{
mod:{
ignoredHandcard:function(card,player){
if(card.hasGaintag('wechatluoying')) return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&card.hasGaintag('wechatluoying')) return false;
},
},
onremove:function(player){
player.removeGaintag('wechatluoying');
},
audio:'luoying_discard',
trigger:{global:['loseAfter','cardsDiscardAfter']},
filter:function(event,player){
switch(event.name){
case 'lose':
if(event.type!='discard') return false;
if(event.player==player) return false;
for(var i=0;i<event.cards2.length;i++){
if(get.suit(event.cards2[i],event.player)=='club'&&get.position(event.cards2[i],true)=='d') return true;
}
return false;
break;
case 'cardsDiscard':
var evt=event.getParent().relatedEvent;
if(!evt||evt.name!='judge') return;
if(evt.player==player) return false;
if(get.position(event.cards[0],true)!='d') return false;
return (get.suit(event.cards[0])=='club');
break;
}
},
frequent:true,
content:function(){
var cards=(trigger.name=='lose'?trigger.cards2:trigger.cards);
cards=cards.filter(function(card){
return get.suit(card)=='club'&&get.position(card,true)=='d';
});
player.gain(cards,'gain2').gaintag.add('wechatluoying');
},
},
wechatjiushi:{
group:'wechatjiushi2',
audio:'jiushi1',
enable:'chooseToUse',
filter:function(event,player){
return player.countCards('h',{suit:'club'})&&!event.wechatjiushi;
},
filterCard:()=>false,
selectCard:-1,
viewAs:{name:'jiu'},
prompt:'弃置一张梅花手牌，视为使用【酒】',
},
wechatjiushi2:{
charlotte:true,
trigger:{player:'useCardBefore'},
filter:function(event,player){
return event.skill=='wechatjiushi';
},
firstDo:true,
direct:true,
content:function(){
'step 0'
delete trigger.skill;
player.chooseToDiscard({suit:'club'}).logSkill='wechatjiushi';
'step 1'
if(result.bool) game.delay(0.5);
else{
trigger.cancel();
trigger.getParent().wechatjiushi=true;
trigger.getParent().goto(0);
}
},
},
//魏延
wechatkuanggu:{
audio:'kuanggu_re_weiyan',
trigger:{source:'damageSource'},
filter:function(event,player){
return get.distance(player,event.player)<=1;
},
forced:true,
content:function(){
player.recover(trigger.num);
player.draw(trigger.num);
},
},
kuanggu_re_weiyan:{audio:2},
//黄月英
wechatjizhi:{
audio:'jizhi',
trigger:{player:'useCard'},
filter:function(event){
return get.type2(event.card)=='trick';
},
frequent:true,
preHidden:true,
content:function(){
player.draw().gaintag=['wechatjizhi'];
player.addTempSkill('wechatjizhi2')
},
ai:{noautowuxie:true},
},
wechatjizhi2:{
charlotte:true,
onremove:function(player){
player.removeGaintag('wechatjizhi');
},
mod:{
ignoredHandcard:function(card,player){
if(card.hasGaintag('wechatjizhi')) return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&card.hasGaintag('wechatjizhi')) return false;
},
},
},
wechatqicai:{
mod:{
targetInRange:function(card,player,target,now){
if(get.type2(card)=='trick') return true;
},
},
trigger:{player:'useCard'},
filter:function(event,player){
return _status.currentPhase&&_status.currentPhase==player&&player.getHistory('useCard',function(evt){
return get.type2(evt.card)=='trick';
}).indexOf(event)==0;
},
forced:true,
content:function(){
trigger.directHit.addArray(game.players);
},
},
//陆抗
wechatjueyan:{
derivation:'relianying',
audio:'drlt_jueyan',
enable:'phaseUse',
filter:function(event,player){
return player.hasEnabledSlot(1)||player.hasEnabledSlot(2)||player.hasEnabledSlot('horse');
},
usable:1,
content:function(){
'step 0'
var list=[];
for(var i=1;i<=4;i++){
if(player.hasEnabledSlot(i)) list.push('equip'+i);
}
if(list.includes('equip3')&&list.includes('equip4')) list.push('equip3_4');
list.remove('equip3');
list.remove('equip4');
if(!list.length) event.finish();
else if(list.length==1) event._result={control:list[0]};
else{
player.chooseControl(list).set('prompt','决堰：请选择废除一个装备栏').set('ai',function(){
var player=_status.event.player;
var list=_status.event.list;
if(list.includes('equip2')) return 'equip2';
if(list.includes('equip1')&&(player.countCards('h',function(card){
return get.name(card,player)=='sha'&&player.hasUseTarget(card);
})-player.getCardUsable('sha'))>1) return 'equip1';
return list.randomGet();
}).set('list',list);
}
'step 1'
if(result.control=='equip3_4') player.disableEquip(3,4);
else player.disableEquip(result.control);
player.addTempSkill('drlt_jueyan'+['1','3','2'][['equip1','equip2','equip3_4'].indexOf(result.control)]);
if(result.control=='equip2') player.draw(3);
if(result.control=='equip3_4') player.addTempSkill('relianying');
},
ai:{
order:13,
result:{
player:function(player){
if(!player.isDisabled('equip2')||(!player.isDisabled('equip1')&&(player.countCards('h',function(card){
return get.name(card,player)=='sha'&&player.hasValueTarget(card);
})-player.getCardUsable('sha'))>1)) return 1;
return 0;
},
},
},
},
wechatposhi:{
unique:true,
derivation:'drlt_huairou',
audio:'drlt_poshi',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return !player.hasEnabledSlot()||player.hp==1;
},
forced:true,
juexingji:true,
skillAnimation:true,
animationColor:'wood',
content:function(){
'step 0'
player.awakenSkill('wechatposhi');
player.loseMaxHp();
'step 1'
var num=player.maxHp-player.countCards('h');
if(num>0) player.draw(num);
player.removeSkill('wechatjueyan');
player.addSkill('drlt_huairou');
},
},
//简雍
wechatqiaoshui:{
audio:'qiaoshui',
inherit:'xinqiaoshui',
},
wechatjyzongshi:{
audio:'jyzongshi',
trigger:{player:['chooseToCompareAfter','compareMultipleAfter'],target:['chooseToCompareAfter','compareMultipleAfter']},
filter:function(event,player){
if(event.preserve) return false;
if(player==event.player){
if(event.num1>event.num2) return true;
return !get.owner(event.card1);
}
else{
if(event.num1<event.num2) return true;
return !get.owner(event.card2);
}
},
check:function(event,player){
if(player==event.player){
if(event.num1>event.num2) return true;
return event.card1.name!='du';
}
else{
if(event.num1<event.num2) return true;
return event.card2.name!='du';
}
},
frequent:'check',
content:function(){
var bool=false;
if(player==trigger.player){
if(trigger.num1>trigger.num2) bool=true;
else player.gain(trigger.card1,'gain2');
}
else{
if(trigger.num1<trigger.num2) bool=true;
else player.gain(trigger.card2,'gain2');
}
if(bool){
var card=get.cardPile2(function(card){
return get.type2(card)=='trick';
});
if(card) player.gain(card,'gain2');
}
},
},
//CXK
wechatqieting:{
audio:'qieting',
trigger:{global:'phaseEnd'},
filter:function(event,player){
return player!=event.player&&!event.player.getHistory('sourceDamage',function(evt){
return evt.player!=event.player;
}).length;
},
direct:true,
content:function(){
'step 0'
var list=['摸一张牌'],target=trigger.player,str=get.translation(target);
event.target=target;
event.addIndex=0;
if(target.countGainableCards(player,'h')) list.push('随机获得'+str+'的一张手牌');
else event.addIndex++;
if(target.countCards('e',function(card){
return player.canEquip(card);
})>0) list.push('将'+str+'装备区内的一张牌移动至自己的装备区');
player.chooseControl('cancel2').set('choiceList',list).set('prompt',get.prompt('wechatqieting',target)).set('ai',function(){
var evt=_status.event.getParent();
if(get.attitude(evt.player,evt.target)>0) return 0;
var val=evt.target.hasSkillTag('noe')?6:0;
if(evt.target.countCards('e',function(card){
return evt.player.canEquip(card)&&get.value(card,evt.target)>val&&get.effect(evt.player,card,evt.player,evt.player)>0;
})>0) return 2-evt.addIndex;
if(evt.target.countGainableCards(evt.player,'h')>0) return 1;
return 0;
});
'step 1'
if(result.control!='cancel2'){
player.logSkill('wechatqieting',target);
if(result.index==0){
player.draw();
event.finish();
}
else if(result.index+event.addIndex==1){
player.gain(target.getGainableCards(player,'h').randomGets(1),target,'giveAuto');
event.finish();
}
else{
player.addExpose(0.1);
player.choosePlayerCard(target,'e',true).set('filterButton',function(button){
return _status.event.player.canEquip(button.link);
}).set('ai',function(button){
var player=_status.event.player;
return get.effect(player,button.link,player,player);
});
}
}
else event.finish();
'step 2'
if(result.bool){
var card=result.cards[0];
target.$give(card,player,false);
game.delay(0.5);
player.equip(card);
}
},
},
//马谡
wechatsanyao:{
audio:'sanyao',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he');
},
filterCard:true,
filterTarget:lib.filter.notMe,
check:function(card){
return 7-get.value(card);
},
position:'he',
usable:1,
content:function(){
target.damage('nocard');
},
ai:{
order:7,
result:{
target:function(player,target){
if(player.hasSkill('rezhiman')&&target.countCards('j')&&get.attitude(player,target)>0) return 1;
if(player.hasSkill('rezhiman')&&target.countCards('e')) return -1;
return get.damageEffect(target,player);
},
},
},
},
//SP太史慈
wechatjixu:{
audio:'xinfu_jixu',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(function(target){
return lib.skill.wechatjixu.filterTarget(null,player,target);
});
},
filterTarget:function(card,player,target){
if(player==target) return false;
return target.hp<=player.hp;
},
selectTarget:-1,
usable:1,
multitarget:true,
multiline:true,
content:function(){
'step 0'
targets.sortBySeat();
event.num=0;
'step 1'
if(!event.caicuolist) event.caicuolist=[];
targets[event.num].chooseBool('是否押杀？').ai=function(event,player){
var evt=_status.event.getParent();
if(get.attitude(targets[event.num],evt.player)>0) return evt.player.countCards('h','sha')?false:true;
if(!evt.player.countCards('h')) return false;
return Math.random()<0.5;
};
'step 2'
var target=targets[event.num];
var num1=result.bool?1:-1;
var num2=player.countCards('h','sha')?1:-1;
if(num1!=num2){
event.caicuolist.push(target);
target.chat('猜错');
game.log(target,'猜','#y错','了');
}
else{
target.chat('猜对');
game.log(target,'猜','#g对','了');
}
event.num++;
game.delay();
if(event.num<targets.length) event.goto(1);
'step 3'
if(event.caicuolist.length){
for(var i of event.caicuolist){
player.discardPlayerCard(i,'he',true);
player.useCard({name:'sha',isCard:true},i,false);
}
player.draw(event.caicuolist.length);
}
else{
var evt=_status.event.getParent('phaseUse');
if(evt&&evt.name=='phaseUse') evt.skipped=true;
}
},
ai:{
expose:0.25,
order:function(){
return get.order({name:'sha'})-0.01;
},
result:{player:1},
},
},
//步骘
wechatdingpan:{
audio:'dingpan',
inherit:'dingpan',
filter:function(event,player){
return (player.getStat().skill.wechatdingpan||0)<2;
},
content:function(){
'step 0'
target.draw();
'step 1'
var bool=(target==player&&(player.getEquip('baiyin')||player.getEquip('rewrite_baiyin')));
player.chooseControl('选项一','选项二').set('ai',function(){
return _status.event.goon?'选项一':'选项二';
}).set('prompt','定叛').set('choiceList',[
'弃置'+get.translation(target)+'装备区里的一张牌',
'令'+get.translation(target)+'获得其装备区内的所有牌并受到1点伤害'
]).set('goon',!bool&&(get.damageEffect(target,player,player)<0||target.countCards('e',card=>get.equipValue(card,target)>=7)));
'step 2'
if(result.control=='选项一'){
player.discardPlayerCard(target,true,'e');
event.finish();
}
else target.gain(target.getCards('e'),'gain2');
'step 3'
game.delay(0.5);
target.damage();
},
ai:{
order:7,
result:{
target:function(player,target){
if(target==player&&(player.getEquip('baiyin')||player.getEquip('rewrite_baiyin'))) return 10;
var att=get.attitude(player,target);
if(att>0&&target.countCards('e',card=>get.equipValue(card,target)<=4)) return 2;
if(get.damageEffect(target,player,player)>=0) return 1;
if(att<0&&target.countCards('e',card=>get.equipValue(card,target)>=7)) return 1;
return 0;
},
},
},
},
//曹彰
wechatjiangchi:{
audio:'jiangchi',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
var list=[
'摸两张牌，本阶段内不能使用【杀】',
'本阶段使用【杀】且无距离限制且可以多使用一张【杀】',
];
player.chooseControl('cancel2').set('prompt',get.prompt('wechatjiangchi')).set('choiceList',list).set('ai',function(){
var player=_status.event.player;
if(player.countCards('hs',function(card){
return get.name(card)=='sha'&&player.hasValueTarget(card,false);
})) return 1;
return 0;
});
'step 1'
if(result.control!='cancel2'){
player.logSkill('wechatjiangchi');
if(result.index==0){
player.draw(2);
player.addTempSkill('wechatjiangchi_less','phaseUseAfter');
}
else player.addTempSkill('xinjiangchi_more','phaseUseAfter');
}
},
subSkill:{
less:{
charlotte:true,
mod:{
cardEnabled:function(card){
if(card.name=='sha') return false;
},
},
},
},
},
//曹丕
wechatfangzhu:{
audio:'fangzhu',
trigger:{player:'damageEnd'},
filter:function(event,player){
return game.hasPlayer(function(target){
return player!=target&&target.countCards('h');
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('wechatfangzhu'),function(card,player,target){
return player!=target&&target.countCards('h');
}).set('ai',function(target){
var player=_status.event.player;
return -get.sgn(get.attitude(player,target))*target.countCards('h');
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('wechatfangzhu',target);
target.addToExpansion(target.getCards('h'),'giveAuto',target).gaintag.add('wechatfangzhu2');
target.addTempSkill('wechatfangzhu2',{player:'wechatfangzhu2After'});
}
},
ai:{
maixie:true,
maixie_hp:true,
effect:{
target:function(card,player,target){
if(get.tag(card,'damage')){
if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
if(target.hp<=1) return;
if(!target.hasFriend()) return;
var hastarget=false;
for(var i of game.filterPlayer()){
if(get.attitude(target,i)<0&&i.countCards('h')>3){
hastarget=true;
break;
}
}
if(get.attitude(player,target)>0&&!hastarget) return;
if(target.hp==target.maxHp) return [0.5,1];
if(target.hp>1) return [1,0.5];
}
},
},
},
},
wechatfangzhu2:{
charlotte:true,
trigger:{player:['phaseEnd','damageEnd']},
direct:true,
content:function(){
var cards=player.getExpansions('wechatfangzhu2');
if(cards.length) player.gain(cards,'draw');
},
marktext:'逐',
intro:{
markcount:'expansion',
mark:function(dialog,storage,player){
var cards=player.getExpansions('wechatfangzhu2');
if(player.isUnderControl(true)) dialog.addAuto(cards);
else return '共扣置'+get.cnNumber(cards.length)+'张“放逐”牌';
},
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
},
//SP姜维
wechatkunfen:{
audio:'kunfen',
trigger:{player:'phaseJieshuBegin'},
check:function(event,player){
if(player.hp>3) return true;
if(player.hp==3&&player.countCards('h')<3) return true;
if(player.hp==2&&player.countCards('h')==0) return true;
return false;
},
content:function(){
player.loseHp();
player.draw(2);
},
},
wechatfengliang:{
unique:true,
audio:'fengliang',
derivation:'retiaoxin',
trigger:{player:'dying'},
forced:true,
juexingji:true,
skillAnimation:true,
animationColor:'thunder',
content:function(){
'step 0'
player.awakenSkill('wechatfengliang');
player.loseMaxHp();
'step 1'
if(player.hp<3) player.recover(3-player.hp);
'step 2'
player.addSkillLog('retiaoxin');
},
},
//曹休
wechatqingxi:{
audio:'qingxi',
trigger:{source:'damageBegin2'},
filter:function(event,player){
return event.player!=player;
},
check:function(event,player){
return get.attitude(player,event.player)<0;
},
logTarget:'player',
content:function(){
'step 0'
var num=player.getAttackRange();
trigger.player.chooseToDiscard(num,'弃置'+get.cnNumber(num)+'张手牌，或令即将对你造成的伤害+1').set('ai',function(card){
var player=_status.event.player;
if(player.hp==1){
if(get.type(card)=='basic') return 8-get.value(card);
else return 10-get.value(card);
}
else{
if(num>2) return 0;
return 8-get.value(card);
}
});
'step 1'
if(result.bool){
var cards=player.getEquips(1);
if(cards.length) player.discard(cards);
}
else trigger.num++;
},
},
//袁绍
//袁神，启动
wechatluanji:{
audio:'luanji',
enable:'phaseUse',
viewAs:{name:'wanjian'},
filterCard:function(card,player){
return !player.getStorage('wechatluanji_count').includes(get.suit(card));
},
position:'hs',
selectCard:2,
check:function(card){
var player=_status.event.player;
var targets=game.filterPlayer(function(current){
return player.canUse('wanjian',current);
});
var num=0;
for(var i=0;i<targets.length;i++){
var eff=get.sgn(get.effect(targets[i],{name:'wanjian'},player,player));
if(targets[i].hp==1){
eff*=1.5;
}
num+=eff;
}
if(!player.needsToDiscard(-1)){
if(targets.length>=7){
if(num<2) return 0;
}
else if(targets.length>=5){
if(num<1.5) return 0;
}
}
return 6-get.value(card);
},
ai:{
basic:{
order:8.9
},
},
group:['wechatluanji_mark','wechatluanji_respond'],
subSkill:{
mark:{
charlotte:true,
trigger:{player:'useCard1'},
filter:function(event){
return event.skill=='wechatluanji';
},
direct:true,
firstDo:true,
content:function(){
player.addTempSkill('wechatluanji_count',{player:'phaseUseAfter'});
for(var card of trigger.cards) player.markAuto('wechatluanji_count',[get.suit(card,player)]);
},
},
count:{
charlotte:true,
onremove:true,
},
respond:{
audio:'luanji',
trigger:{global:'respond'},
filter:function(event,player){
var evt=event.getParent(2);
return evt&&evt.name=='wanjian'&&evt.getParent().player==player&&event.player!=player;
},
forced:true,
locked:false,
logTarget:'player',
content:function(){
player.draw('nodelay');
trigger.player.draw();
},
},
},
},
//孙登
wechatkuangbi:{
audio:'kuangbi',
enable:'phaseUse',
filterTarget:function(card,player,target){
return target!=player&&target.countCards('he');
},
usable:1,
content:function(){
'step 0'
target.chooseCard('he',[1,3],'匡弼：将至多三张牌置于'+get.translation(player)+'的武将牌上',true).set('ai',function(card){
var player=_status.event.player;
var target=_status.event.getParent().player;
if(get.attitude(player,target)>0) return 7-get.value(card);
return -get.value(card);
});
'step 1'
if(result.bool){
player.addTempSkill('wechatkuangbi_draw',{player:'wechatkuangbi_drawAfter'});
player.addToExpansion(result.cards,target,'give').gaintag.add('wechatkuangbi_draw');
player.storage.wechatkuangbi_draw[0].push(target);
player.storage.wechatkuangbi_draw[1].push(result.cards.length);
}
else event.finish();
'step 2'
target.draw();
},
ai:{
order:1,
result:{
player:1,
target:function(player,target){
var att=get.attitude(player,target);
if(att>0) return Math.sqrt(target.countCards('he'));
return 1+get.sgn(att);
},
},
},
subSkill:{
draw:{
init:function(player){
if(!player.storage.wechatkuangbi_draw) player.storage.wechatkuangbi_draw=[[],[]];
},
charlotte:true,
onremove:true,
audio:'kuangbi',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.getExpansions('wechatkuangbi_draw').length;
},
forced:true,
content:function(){
player.gain(player.getExpansions('wechatkuangbi_draw'),'gain2');
var storage=player.storage.wechatkuangbi_draw;
if(storage.length){
for(var i=0;i<storage[0].length;i++){
var target=storage[0][i],num=storage[1][i];
if(target&&target.isIn()){
player.line(target);
target.draw(num);
}
}
}
},
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
delete player.storage[skill];
},
},
},
},
//徐庶
wechatzhuhai:{
audio:'zhuhai',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
return event.player.isIn()&&event.player.getStat('damage')&&player.canUse({name:'sha',isCard:true},event.player,false)&&player.countCards('he');
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard(get.prompt('wechatzhuhai',trigger.player),'弃置一张牌，视为对'+get.translation(trigger.player)+'使用一张【杀】').set('ai',function(card){
var player=_status.event.player;
var trigger=_status.event.getTrigger();
if(get.effect(trigger.player,{name:'sha',isCard:true},player,player)>0) return 7-get.value(card);
return -1;
}).logSkill=['wechatzhuhai',trigger.player];
'step 1'
if(result.bool) player.useCard({name:'sha',isCard:true},trigger.player,false);
},
},
//夏侯霸
wechatbaobian:{
audio:'rebaobian',
trigger:{player:['phaseBefore','changeHp','phaseBegin']},
init:function(player){
if(game.online) return;
var list=lib.skill.wechatbaobian.derivation.slice(0);
player.addAdditionalSkill('wechatbaobian',list.slice(0,Math.max(0,4-player.hp)));
},
direct:true,
locked:true,
derivation:['retiaoxin','new_repaoxiao','wechatshensu'],
content:function(){
if(event.triggername=='phaseBegin'){
player.logSkill('wechatbaobian');
player.loseHp();
var card=get.cardPile(function(card){
return card.name=='sha';
});
if(card) player.gain(card,'gain2');
}
else{
var list=lib.skill.wechatbaobian.derivation.slice(0);
player.addAdditionalSkill('wechatbaobian',list.slice(0,Math.max(0,4-player.hp)));
}
},
},
//刘繇
wechatkannan:{
audio:'xinfu_kannan',
enable:"phaseUse",
filter:function (event,player){
if(player.hasSkill('wechatkannan_phase')) return false;
return game.hasPlayer(function(target){
return lib.skill.wechatkannan.filterTarget(null,player,target);
});
},
filterTarget:function(card,player,target){
if(target.hasSkill('wechatkannan_phase')) return false;
return player.canCompare(target);
},
content:function(){
'step 0'
player.chooseToCompare(target);
'step 1'
if(!result.tie){
var current=result.bool?player:target;
current.addTempSkill('wechatkannan_phase','phaseUseAfter');
current.addTempSkill('wechatkannan_damage',{player:'wechatkannan_damageAfter'});
if(current.countMark('wechatkannan_damage')<5) current.addMark('wechatkannan_damage',1,false);
}
},
ai:{
order:function(){
return get.order({name:'sha'})+0.4;
},
result:{
target:function(player,target){
if(player.hasCard(function(card){
if(get.position(card)!="h") return false;
var val=get.value(card);
if(val<0) return true;
if(val<=5){
return card.number>=12;
}
if(val<=6){
return card.number>=13;
}
return false;
})) return -1;
return 0;
},
},
},
subSkill:{
phase:{charlotte:true},
damage:{
charlotte:true,
onremove:true,
intro:{content:'下一张杀的伤害基数+#'},
trigger:{player:'useCard1'},
filter:function(event,player){
return event.card&&event.card.name=='sha';
},
direct:true,
firstDo:true,
content:function(){
if(!trigger.baseDamage) trigger.baseDamage=1;
trigger.baseDamage+=player.countMark('wechatkannan_damage');
},
},
},
},
//全琮
wechatyaoming:{
audio:'yaoming',
trigger:{player:'damageEnd',source:'damageSource'},
direct:true,
content:function(){
'step 0'
var nh=player.countCards('h');
player.chooseTarget(get.prompt2('wechatyaoming')).set('ai',function(target){
var att=get.attitude(_status.event.player,target);
switch(get.sgn(target.countCards('h')-_status.event.nh)){
case 1: return att; break;
case 0:
if(nh==0) return att;
return Math.abs(att);
break;
case -1: return -att; break;
}
}).set('nh',nh);
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
if(target.countCards('h')<player.countCards('h')||!target.countCards('h')) event._result={control:'摸牌'};
else if(target.countCards('h')>player.countCards('h')) event._result={control:'弃牌'};
else player.chooseControl('摸牌','弃牌').set('prompt','邀名：令'+get.translation(target)+'摸一张牌或弃置其一张手牌').set('ai',function(){
var player=_status.event.player;
var target=_status.event.target;
return get.attitude(player,target)>0?'摸牌':'弃牌';
}).set('target',target);
}
else event.finish();
'step 2'
player.logSkill('wechatyaoming',target);
if(result.control=='摸牌') target.draw();
else player.discardPlayerCard(target,'h',true);
},
ai:{expose:0.2},
},
//廖化
wechatdangxian:{
audio:'dangxian',
inherit:'redangxian',
},
wechatfuli:{
unique:true,
audio:'fuli',
limited:true,
enable:'chooseToUse',
mark:true,
filter:function(event,player){
if(event.type!='dying') return false;
if(player!=event.dying) return false;
return true;
},
skillAnimation:true,
animationColor:'soil',
content:function(){
'step 0'
player.awakenSkill('wechatfuli');
var num=game.countPlayer()-1;
if(num>player.hp) player.recover(num-player.hp);
'step 1'
if(player.isMaxHp(true)) player.addTempSkill('wechatfuli_block',{player:'phaseEnd'});
},
ai:{
save:true,
skillTagFilter:function(player,arg,target){
return player==target;
},
result:{player:10},
threaten:function(player,target){
if(!target.storage.wechatfuli) return 0.9;
},
},
subSkill:{
block:{
charlotte:true,
mark:true,
intro:{content:'不能使用或打出手牌'},
mod:{
cardEnabled2:function(card){
if(get.position(card)=='h') return false;
},
},
},
},
},
//严颜
wechatjuzhan:{
group:'wechatjuzhan_gain',
audio:'nzry_juzhan_1',
trigger:{target:'useCardToTargeted'},
prompt2:'当你成为其他角色【杀】的目标后，你可以与其各摸一张牌，然后其本回合内不能再对你使用牌。',
filter:function(event,player){
return event.card.name=='sha';
},
logTarget:'player',
content:function(){
'step 0'
game.asyncDraw([player,trigger.player]);
trigger.player.addTempSkill('wechatjuzhan_use1');
trigger.player.markAuto('wechatjuzhan_use1',[player]);
'step 1'
game.delayx();
},
subSkill:{
gain:{
audio:'nzry_juzhan_1',
trigger:{player:'useCardToPlayered'},
prompt2:'当你使用【杀】指定一名角色为目标后，你可以获得其一张牌，然后你本回合内不能再对其使用牌',
filter:function(event,player){
return event.card.name=='sha'&&event.target.countGainableCards(player,'he');
},
check:function(event,player){
return get.effect(event.target,{name:'guohe_copy2'},player,player)>0;
},
logTarget:'target',
content:function(){
'step 0'
player.gainPlayerCard(trigger.target,'he',true);
'step 1'
player.addTempSkill('wechatjuzhan_use1');
player.markAuto('wechatjuzhan_use1',[trigger.target]);
},
},
use1:{
charlotte:true,
onremove:true,
intro:{content:'不能对$使用牌'},
mod:{
playerEnabled:function(card,player,target){
if(player.getStorage('wechatjuzhan_use1').includes(target)) return false;
},
},
},
},
},
//郭皇后
wechatjiaozhao:{
onChooseToUse:function(event){
if(!game.online&&!event.wechatjiaozhao_list){
var player=event.player;
var list=[];
for(var name of lib.inpile){
var card={name:name};
if(get.type(card)!='basic'&&get.type(card)!='trick') continue;
list.push([get.type(card),'',name]);
if(name=='sha'){
for(var nature of lib.inpile_nature) list.push([get.type(card),'',name,nature]);
}
}
event.set('wechatjiaozhao_list',list);
}
},
audio:'jiaozhao',
enable:'phaseUse',
filter:function(event,player){
if(!event.wechatjiaozhao_list||!event.wechatjiaozhao_list.length) return false;
return player.countCards('h',function(card){
return lib.skill.wechatjiaozhao.filterCard(card,player);
});
},
filterCard:function(card,player){
if(!player.hasSkill('wechatjiaozhao2')) return true;
return !player.storage.wechatjiaozhao2[0].includes(card);
},
discard:false,
lose:false,
delay:false,
check:function(card){
return 7-get.value(card);
},
usable:1,
content:function(){
'step 0'
player.addTempSkill('wechatjiaozhao2',{player:'phaseBegin'});
player.showCards(cards,get.translation(player)+'发动了【矫诏】');
'step 1'
var list=event.getParent(2).wechatjiaozhao_list;
var str='###矫诏###请选择并声明'+get.translation(cards[0])+'视为的牌，且此牌不能指定你为目标';
player.chooseButton([str,[list,'vcard']],true).set('ai',function(button){
var player=_status.event.player;
return player.getUseValue({name:button.link[2],nature:button.link[3]});
});
'step 2'
var card={name:result.links[0][2],nature:result.links[0][3]};
player.storage.wechatjiaozhao2[0].push(cards[0]);
player.storage.wechatjiaozhao2[1].push(card);
var chosen=result.links[0][2];
var nature=result.links[0][3];
player.addGaintag(cards,'wechatjiaozhao2');
player.showCards(game.createCard({
name:chosen,
nature:nature,
suit:cards[0].suit,
number:cards[0].number,
}),get.translation(player)+'声明了'+(get.translation(nature)||'')+get.translation(chosen));
},
ai:{
order:8,
result:{player:1},
},
},
wechatjiaozhao2:{
init:function(player){
if(!player.storage.wechatjiaozhao2) player.storage.wechatjiaozhao2=[[],[]];
},
onremove:function(player){
player.removeGaintag('wechatjiaozhao2');
delete player.storage.wechatjiaozhao2;
},
getOriginalCard:function(player,card){
var storage=player.storage.wechatjiaozhao2;
return storage[0][storage[1].indexOf(storage[1].filter(function(cardx){
return get.name(cardx)==get.name(card)&&(!get.nature(cardx)||get.nature(cardx)==get.nature(card));
})[0])];
},
mod:{
playerEnabled:function(card,player,target){
if(target==player&&card.storage&&card.storage.wechatjiaozhao2) return false;
},
},
charlotte:true,
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h',function(card){
return player.storage.wechatjiaozhao2[0].includes(card);
});
},
chooseButton:{
dialog:function(event,player){
var storage=player.storage.wechatjiaozhao2;
var cards=player.getCards('h').slice(0).filter(function(card){
return storage[0].includes(card);
}),list=[];
for(var card of cards){
var cardx=storage[1][storage[0].indexOf(card)];
list.push([get.translation(get.type2(cardx)),'',get.name(cardx),get.nature(cardx)]);
}
return ui.create.dialog('矫诏',[list,'vcard'],'hidden');
},
filter:function(button,player){
return lib.filter.filterCard({name:button.link[2],nature:button.link[3],storage:{wechatjiaozhao2:true}},player,_status.event.getParent());
},
check:function(button){
return _status.event.player.getUseValue({name:button.link[2],nature:button.link[3]});
},
backup:function(links,player){
return {
audio:'jiaozhao',
filterCard:lib.skill.wechatjiaozhao2.getOriginalCard(player,{name:links[0][2],nature:links[0][3]}),
selectCard:-1,
popname:true,
viewAs:{name:links[0][2],nature:links[0][3],storage:{wechatjiaozhao2:true}},
}
},
prompt:function(links,player){
var name=links[0][2],nature=links[0][3];
var card=lib.skill.wechatjiaozhao2.getOriginalCard(player,{name:links[0][2],nature:links[0][3]});
return '将'+get.translation(card)+'当作'+(get.translation(nature)||'')+get.translation(name)+'使用';
}
},
ai:{
order:7.9,
result:{player:1},
},
subSkill:{backup:{}},
},
wechatdanxin:{
audio:'danxin',
trigger:{player:'damageEnd'},
frequent:true,
prompt2:'摸一张牌',
content:function(){
'step 0'
event.count=trigger.num;
'step 1'
event.count--;
player.draw();
'step 2'
if(event.count>0&&player.hasSkill('wechatdanxin')) player.chooseBool(get.prompt('wechatdanxin'),'摸一张牌').set('frequentSkill','wechatdanxin');
else event.finish();
'step 3'
if(result.bool){
player.logSkill('wechatdanxin');
event.goto(1);
}
},
},
//菜贞姬
wechatsheyi:{
audio:'sheyi',
trigger:{global:'damageBegin4'},
direct:true,
filter:function(event,player){
return !player.hasSkill('wechatsheyi_used')&&player!=event.player&&event.player.hp<=player.hp&&player.countCards('he')>=Math.max(1,player.hp);
},
content:function(){
'step 0'
var num=Math.max(1,player.hp),target=trigger.player;
player.chooseCard('he',get.prompt('wechatsheyi',target),'交给其'+get.cnNumber(num)+'张牌，防止即将受到的伤害（'+trigger.num+'点）',num).set('goon',function(){
if(get.attitude(player,target)<0) return false;
if(trigger.num<target.hp&&get.damageEffect(target,trigger.source,player,trigger.nature)>=0)return false;
if(trigger.num<2&&target.hp>trigger.num) return 6/Math.sqrt(num);
if(target==get.zhu(player)) return 9;
return 8/Math.sqrt(num);
}()).set('ai',function(card){
if(ui.selected.cards.length>=Math.max(1,_status.event.player.hp)) return 0;
if(typeof _status.event.goon=='number') return _status.event.goon-get.value(card);
return 0;
});
'step 1'
if(result.bool){
var target=trigger.player;
player.logSkill('wechatsheyi',target);
player.addTempSkill('wechatsheyi_used','roundStart');
player.give(result.cards,target);
trigger.cancel();
}
},
subSkill:{used:{charlotte:true}},
},
wechattianyin:{
audio:'tianyin',
trigger:{player:'phaseJieshuBegin'},
forced:true,
locked:false,
content:function(){
'step 0'
var list=[],cards=[];
player.getHistory('useCard',function(evt){
list.add(get.type2(evt.card,false));
});
for(var i=0;i<ui.cardPile.childNodes.length;i++){
var type=get.type2(ui.cardPile.childNodes[i],false);
if(!list.includes(type)){
list.push(type);
cards.push(ui.cardPile.childNodes[i])
};
}
if(cards.length){
player.gain(cards,'gain2');
event.finish();
}
'step 1'
player.chooseTarget('天音：是否弃置一名其他角色的一张牌？',function(card,player,target){
return target!=player&&target.countDiscardableCards(player,'he');
}).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe_copy2'},player,player);
});
'step 2'
if(result.bool){
player.line(result.targets);
player.discardPlayerCard(result.targets[0],'he',true);
}
},
},
//朱灵
wechatzhanyi:{
inherit:'xinzhanyi',
content:function(){
player.loseHp();
switch(get.type(cards[0],'trick',cards[0].original=='h'?player:false)){
case 'basic':
player.addTempSkill('xinzhanyi_basic');
player.addMark('xinzhanyi_basic1',1,false);
break;
case 'trick':
player.draw(3);
player.addTempSkill('xinzhanyi_trick');
break;
case 'equip':
player.addTempSkill('wechatzhanyi_equip');
break;
}
},
subSkill:{
equip:{
inherit:'xinzhanyi_equip',
content:function(){
'step 0'
player.discardPlayerCard(trigger.target,'he',2,true);
'step 1'
if(result.bool&&result.cards&&result.cards.length){
if(result.cards.length==1) event._result={bool:true,links:result.cards.slice(0)};
else player.chooseButton(['选择获得其中的一张牌',result.cards.slice(0)],true).set('ai',function(button){
return get.value(button.link);
});
}
else event.finish();
'step 2'
if(result.links) player.gain(result.links,'gain2');
},
},
},
},
wechatshouxi:{
audio:'shouxi',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return event.card.name=='sha'&&event.player.isIn();
},
direct:true,
content:function(){
'step 0'
var list=['minilingren_basic','minilingren_trick','minilingren_equip'];
player.chooseButton([get.prompt2('wechatshouxi'),[list,'vcard']]).set('ai',function(button){
var trigger=_status.event.getTrigger();
var name=button.link[2],target=trigger.player;
if(!target.getDiscardableCards(target,'he').some(card=>get.type2(card)==get.type2(trigger.card))) return 1.1+Math.random();
return 0.1+Math.random();
});
'step 1'
if(result.bool){
player.logSkill('wechatshouxi');
var name=result.links[0][2].slice(12);
event.type=name;
player.popup(name);
game.log(player,'声明了','#y'+get.translation(name)+'牌');
}
else event.finish();
'step 2'
var name=event.type;
var eff=get.effect(player,trigger.card,trigger.player,trigger.player);
trigger.player.chooseToDiscard('守玺：弃置一张'+get.translation(name)+'牌，或令【杀】对'+get.translation(player)+'无效',function(card,player){
return get.type2(card)==_status.event.name;
},'he').set('ai',function(card){
if(_status.event.eff>0) return 10-get.value(card);
return 0;
}).set('eff',eff).set('name',name);
'step 3'
if(!result.bool) trigger.excluded.push(player);
},
ai:{
effect:{
target:function(card,player,target,current){
if(card.name=='sha'&&get.attitude(player,target)<0){
if(_status.event.name=='wechatshouxi') return;
var bs=player.getCards('he');
for(var type of ['basic','trick','equip']){
if(!player.getCards('he').some(card=>get.type2(card)==type)) return 0;
}
if(player.hasSkill('jiu')||player.hasSkill('tianxianjiu')) return;
if(bs.length<=3&&player.countCards('h','sha')<=1){
for(var i=0;i<bs.length;i++){
if(bs[i].name!='sha'&&get.value(bs[i])<7){
return [1,0,1,-0.5];
}
}
return 0;
}
return [1,0,1,-0.5];
}
},
},
},
},
//极曹操
wechatdelu:{
audio:'ext:活动武将/audio/skill:2',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(target=>target.getHp()!=player.getHp()&&player.canCompare(target));
},
filterTarget:function(card,player,target){
return target.getHp()!=player.getHp()&&player.canCompare(target);
},
usable:1,
selectTarget:[1,Infinity],
multitarget:true,
multiline:true,
content:function(){
'step 0'
player.addTempSkill('wechatdelu_compare');
player.chooseToCompare(targets).setContent('chooseToCompareMeanwhile');
'step 1'
if(result.winner){
var targetx=[player].addArray(targets).sortBySeat(player);
targetx.remove(result.winner);
for(var target of targetx) result.winner.gainPlayerCard(target,'hej',true);
}
},
ai:{
order:10,
result:{
target:function(player,target){
if(target.countCards('he')>1) return -3;
return -1;
},
},
},
subSkill:{
compare:{
charlotte:true,
trigger:{player:'compare'},
filter:function(event,player){
return event.getParent().name=='wechatdelu'&&!event.iwhile;
},
forced:true,
popup:false,
content:function(){
var num=trigger.lose_list.length;
trigger.num1+=num;
if(trigger.num1>13) trigger.num1=13;
game.log(player,'的拼点牌点数+',num);
},
},
},
},
//极诸葛亮
wechatsangu:{
init:function(player){
player.storage.wechatsangu_count=game.getAllGlobalHistory('useCard',evt=>evt.targets&&evt.targets.includes(player)).length;
player.markSkill('wechatsangu_count');
player.addSkill('wechatsangu_count');
},
onremove:function(player){
delete player.storage.wechatsangu_count;
player.unmarkSkill('wechatsangu_count');
player.removeSkill('wechatsangu_count');
},
audio:'ext:活动武将/audio/skill:2',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
if(lib.skill.wechatmoulvenum.getNum(player)>=lib.skill.wechatmoulvenum.getMax) return false;
return game.getAllGlobalHistory('useCard',evt=>evt.targets&&evt.targets.includes(player)).indexOf(event.getParent())%3==2;
},
forced:true,
content:function(){
lib.skill.wechatmoulvenum.changeNum(1,player);
},
subSkill:{
count:{
charlotte:true,
trigger:{target:'useCardToTargeted'},
forced:true,
popup:false,
priority:114514,
content:function(){
player.storage.wechatsangu_count=game.getAllGlobalHistory('useCard',evt=>evt.targets&&evt.targets.includes(player)).length;
player.markSkill('wechatsangu_count');
},
intro:{
markcount:function(storage,player){
return ((storage||0)%3).toString();
},
content:function(storage,player){
return '获得谋略值进度：'+((storage||0)%3)+'/3';
},
},
},
},
},
wechatyanshi:{
audio:'ext:活动武将/audio/skill:2',
enable:'phaseUse',
usable:1,
content:function(){
'step 0'
var cards=[get.cards(1,true)[0],get.bottomCards(1,true)[0]];
player.chooseButton(['演势：选择获得其中的一张牌',cards],true).set('ai',function(button){
return _status.event.player.getUseValue(button.link)+get.value(button.link)/1000;
});
'step 1'
if(result.bool){
player.addTempSkill('wechatyanshi_effect','phaseUseAfter');
player.gain(result.links,'gain2').gaintag.add('wechatyanshi_effect');
game.updateRoundNumber();
}
},
ai:{
order:10,
result:{player:1},
},
subSkill:{
effect:{
charlotte:true,
onremove:function(player){
player.removeGaintag('wechatyanshi_effect');
},
trigger:{player:'useCard'},
filter:function(event,player){
return player.getHistory('lose',function(evt){
if(evt.getParent()!=event) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('wechatyanshi_effect')) return true;
}
return false;
}).length;
},
forced:true,
popup:false,
content:function(){
delete player.getStat('skill').wechatyanshi;
player.popup('演势');
game.log(player,'重置了技能','#g【演势】');
},
},
},
},
//SP庞德
wechatjuesi:{
audio:'juesi',
inherit:'juesi',
filterTarget:function(card,player,target){
return target!=player&&target.countCards('he')>0;
},
},
//极司马懿
wechatyinren:{
derivation:['new_rejianxiong','xingshang','mingjian'],
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseUseBefore'},
filter:function(event,player){
return lib.skill.wechatyinren.derivation.some(skill=>!player.hasSkill('wechatyinren_'+skill));
},
prompt2:function(event,player){
return '跳过出牌阶段并获得技能【'+get.translation(lib.skill.wechatyinren.derivation.filter(skill=>!player.hasSkill('wechatyinren_'+skill))[0])+'】';
},
check:function(event,player){
if(lib.skill.wechatyinren.derivation.filter(skill=>!player.hasSkill('wechatyinren_'+skill))[0]!='jianxiong'){
if(!player.hasFriend()) return false;
}
return player.countCards('h')<=player.getHandcardLimit()+1;
},
content:function(){
trigger.cancel();
player.addSkillLog('wechatyinren_'+lib.skill.wechatyinren.derivation.filter(skill=>!player.hasSkill('wechatyinren_'+skill))[0]);
},
subSkill:{
new_rejianxiong:{inherit:'new_rejianxiong'},
xingshang:{inherit:'xingshang'},
mingjian:{inherit:'mingjian'},
},
},
wechatduoquan:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseJieshuBegin'},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('wechatduoquan'),lib.filter.notMe).set('ai',target=>{
var player=_status.event.player;
return -get.attitude(player,target)/Math.pow(target.countCards('hs')+1);
}).animate=false;
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
var list=lib.inpile.reduce((list,name)=>{
return list.add(get.type2(name));
},[]);
if(!list.length){event.finish();return;}
player.chooseControl(list).set('prompt','请选择一种类别').set('ai',function(){
var player=_status.event.player;
var target=_status.event.target;
var cards=target.getCards('h',function(card){
return target.hasUseTarget(card);
}),map={};
for(var i=0;i<cards.length;i++){
map[get.type(cards[i],'trick')]=true;
}
if(map.equip) return 'equip';
if(map.trick) return 'trick';
return 0;
}).set('target',target);
}
else event.finish();
'step 2'
player.logSkill('wechatduoquan',target);
player.popup(result.control);
game.log(player,'选择了','#g'+get.translation(result.control)+'牌');
target.addSkill('wechatduoquan_effect',{player:'phaseUseAfter'});
if(!target.storage.wechatduoquan_effect) target.storage.wechatduoquan_effect={};
if(!target.storage.wechatduoquan_effect[player.playerid]) target.storage.wechatduoquan_effect[player.playerid]=[];
target.storage.wechatduoquan_effect[player.playerid].add(result.control);
target.markSkill('wechatduoquan_effect');
},
subSkill:{
effect:{
charlotte:true,
onremove:true,
audio:'wechatduoquan',
trigger:{player:'useCard'},
filter:function(event,player){
return player.isPhaseUsing();
},
direct:true,
content:function(){
'step 0'
var target=game.findPlayer(target=>player.storage.wechatduoquan_effect[target.playerid]&&player.storage.wechatduoquan_effect[target.playerid].includes(get.type2(trigger.card)));
if(target){
target.logSkill('wechatduoquan_effect',player);
trigger.targets.length=0;
trigger.all_excluded=true;
target.addTempSkill('wechatduoquan_gain');
trigger.wechatduoquan_effect=target;
}
'step 1'
player.removeSkill('wechatduoquan_effect');
},
mod:{
aiOrder:function(player,card,num){
if(player.isPhaseUsing()&&game.hasPlayer(target=>{
return player.storage.wechatduoquan_effect[target.playerid]&&player.storage.wechatduoquan_effect[target.playerid].includes(get.type2(card));
})) return num/10;
},
},
intro:{
content:function(storage,player){
var str='';
for(var i in storage){
var target=game.findPlayer2(target=>target.playerid==i);
if(!target) continue;
str+=get.translation(target)+'→'+get.translation(storage[i])+'牌<br>';
}
str=str.slice(0,-4);
return str;
},
},
},
gain:{
charlotte:true,
trigger:{global:'cardsDiscardAfter'},
filter:function(event,player){
if(!event.cards.filterInD('d').length) return false;
var evt=event.getParent();
if(evt.name!='orderingDiscard') return false;
var evtx=(evt.relatedEvent||evt.getParent());
return evtx.player.getHistory('useCard',evtxx=>{
return evtx.getParent()==(evtxx.relatedEvent||evtxx.getParent())&&evtxx.wechatduoquan_effect&&evtxx.wechatduoquan_effect==player;
}).length;
},
forced:true,
popup:false,
content:function(){
player.gain(trigger.cards.filterInD('d'),'gain2');
},
},
},
},
//极马超
wechatqipao:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'useCardToPlayered'},
filter:function(event,player){
return event.card.name=='sha';
},
check:function(event,player){
return get.attitude(player,target)<0;
},
logTarget:'target',
content:function(){
'step 0'
if(!trigger.target.countCards('e')) event._result={index:1};
else{
trigger.target.chooseControl().set('choiceList',[
'弃置装备区的所有牌',
'本回合非锁定技失效，且不能响应'+get.translation(player)+'使用的牌',
]);
}
'step 1'
if(result.index==0) trigger.target.discard(trigger.target.getCards('e'));
else{
trigger.target.addTempSkill('fengyin');
trigger.target.addTempSkill('wechatqipao_effect');
trigger.target.markAuto('wechatqipao_effect',[player]);
trigger.getParent().directHit.add(trigger.target);
}
},
subSkill:{
effect:{
charlotte:true,
onremove:true,
trigger:{global:'useCard1'},
filter:function(event,player){
return player.getStorage('wechatqipao_effect').includes(event.player);
},
forced:true,
popup:false,
content:function(){
trigger.directHit.add(player);
},
},
},
},
wechatzhuixi:{
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
return player.hasUseTarget({name:'sha'},false)&&!game.hasPlayer(target=>target!=player&&!player.inRange(target));
},
direct:true,
content:function(){
player.chooseUseTarget({name:'sha'},get.prompt('wechatzhuixi'),'视为使用一张【杀】',false).logSkill='wechatzhuixi';
},
},
//界沮授
//两服合体
wechatjianying:{
audio:'jianying',
enable:'phaseUse',
filter:function(event,player){
if(!player.countCards('he')) return false;
for(var i of lib.inpile){
if(i!='du'&&get.type(i,false)=='basic'){
if(event.filterCard({name:i},player,event)) return true;
if(i=='sha'){
for(var j of lib.inpile_nature){
if(event.filterCard({name:i,nature:j},player,event)) return true;
}
}
}
}
return false;
},
onChooseToUse:function(event){
if(event.type=='phase'&&!game.online){
var last=event.player.getLastUsed();
if(last&&last.getParent('phaseUse')==event.getParent()){
var suit=get.suit(last.card,false);
if(suit!='none') event.set('wechatjianying_suit',suit);
}
}
},
usable:1,
chooseButton:{
dialog:function(event,player){
var list=[];
var suit=event.wechatjianying_suit||'',str=get.translation(suit);
for(var i of lib.inpile){
if(i!='du'&&get.type(i,false)=='basic'){
if(event.filterCard({name:i},player,event)) list.push(['基本',str,i]);
if(i=='sha'){
for(var j of lib.inpile_nature){
if(event.filterCard({name:i,nature:j},player,event)) list.push(['基本',str,i,j]);
}
}
}
}
return ui.create.dialog('渐营',[list,'vcard']);
},
check:function(button){
if(button.link[2]=='jiu') return 0;
return _status.event.player.getUseValue({name:button.link[2],nature:button.link[3]});
},
backup:function(links,player){
var next={
audio:'jianying',
filterCard:true,
popname:true,
position:'he',
viewAs:{
name:links[0][2],
nature:links[0][3],
},
ai1:function(card){
return 7-_status.event.player.getUseValue(card,null,true);
},
};
if(_status.event.wechatjianying_suit) next.viewAs.suit=_status.event.wechatjianying_suit;
return next;
},
prompt:function(links){
return '将一张牌当做'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+(_status.event.wechatjianying_suit?('('+get.translation(_status.event.wechatjianying_suit)+')'):'')+'使用';
},
},
ai:{
order:function(item,player){
if(_status.event.wechatjianying_suit) return 16;
return 3;
},
result:{player:1},
},
group:['dcjianying_mark','wechatjianying_draw'],
init:function(player){
var history=player.getAllHistory('useCard');
if(history.length){
var trigger=history[history.length-1];
if(get.suit(trigger.card,player)=='none'||typeof get.number(trigger.card,player)!='number') return;
player.storage.dcjianying_mark=trigger.card;
player.markSkill('dcjianying_mark');
game.broadcastAll(function(player,suit){
if(player.marks.dcjianying_mark) player.marks.dcjianying_mark.firstChild.innerHTML=get.translation(suit);
},player,get.suit(trigger.card,player));
}
},
onremove:function(player){
player.unmarkSkill('dcjianying_mark');
delete player.storage.dcjianying_mark;
},
subSkill:{
draw:{
audio:'jianying',
inherit:'dcjianying',
},
},
},
},
dynamicTranslate:{
wechatxiangzhi:function(player){
if(player.storage.wechatxiangzhi) return get.YunLvInform()+'，出牌阶段限一次，<br>平：你可以摸一张牌。<br><span class="bluetext">仄：你可以回复1点体力。</span><br>转韵：你发动〖节烈〗结算完成后。';
return get.YunLvInform()+'，出牌阶段限一次，<br><span class="bluetext">平：你可以摸一张牌。</span><br>仄：你可以回复1点体力。<br>转韵：你发动〖节烈〗结算完成后。';
},
wechattongxin:function(player){
if(player.storage.wechattongxin) return get.YunLvInform()+'，出牌阶段限一次，<br>平：出牌阶段限一次，你可以令一名其他角色交给你一张手牌，然后若其手牌数不大于你，其摸一张牌。<br><span class="bluetext">仄：出牌阶段限一次，你可以交给一名其他角色一张手牌，然后若其手牌数不小于你，你对其造成1点伤害。</span><br>转韵：你于出牌阶段使用本回合未使用过的类型的牌。';
return get.YunLvInform()+'，出牌阶段限一次，<br><span class="bluetext">平：出牌阶段限一次，你可以令一名其他角色交给你一张手牌，然后若其手牌数不大于你，其摸一张牌。</span><br>仄：出牌阶段限一次，你可以交给一名其他角色一张手牌，然后若其手牌数不小于你，你对其造成1点伤害。<br>转韵：你于出牌阶段使用本回合未使用过的类型的牌。';
},
},
translate:{
//武将分包
wechat_standard:'微服异构·标准',
wechat_extra:'微服异构·神武将',
wechat_zhiyin:'微服专属·<span style="text-decoration: line-through;">只因</span>极武将',
//武将
wechat_menghuo:'微信孟获',
wechathuoshou:'祸首',
wechathuoshou_info:'锁定技，【南蛮入侵】对你无效；一名角色受到【南蛮入侵】造成的伤害时，你可以弃置一张牌并令此伤害+1。',
wechatzaiqi:'再起',
wechatzaiqi_info:'每局游戏限七次。摸牌阶段，你可以放弃摸牌，改为亮出牌堆顶的1+X张牌（X为你本局游戏发动〖再起〗的次数），然后获得其中一种花色的所有牌。',
wechat_shen_zhugeliang:'微信神诸葛亮',
wechatqixing:'七星',
wechatqixing_info:'每轮限一次，当你进入濒死状态时，你可以进行一次判定，若判定结果大于7，你回复1点体力。',
wechatjifeng:'祭风',
wechatjifeng_info:'出牌阶段限一次，你可以弃置一张手牌，然后从牌堆中随机获得一张锦囊牌。',
wechattianfa:'天罚',
wechattianfa_info:'出牌阶段，你每使用两张锦囊牌，你获得1枚“罚”标记；回合结束时，你可以对至多X名其他角色各造成1点伤害（X为你拥有的“罚”标记数）。',
wechat_re_yuanshu:'微信袁术',
wechatwangzun:'妄尊',
wechatwangzun2:'妄尊',
wechatwangzun_info:'锁定技，其他角色的准备阶段：若其体力值大于你，你摸一张牌；若其体力值为全场最高，其手牌上限-1。',
wechattongji:'同疾',
wechattongji_info:'攻击范围内包含你的角色成为【杀】的目标时，若你不是此【杀】的使用者或目标，其可交给你一张牌，然后将此【杀】转移给你。',
wechat_huaxiong:'微信华雄',
wechatyaowu:'耀武',
wechatyaowu_info:'锁定技，当你成为【杀】的目标后，若此【杀】为红色，你不可响应此牌；否则你摸一张牌。',
wechat_lvmeng:'微信吕蒙',
wechatkeji:'克己',
wechatkeji2:'克己',
wechatkeji_info:'出牌阶段，当你使用一张基本牌时，你摸一张牌，且你本回合的手牌上限+1。',
wechat_xiahoushi:'微信夏侯氏',
wechatqiaoshi:'樵拾',
wechatqiaoshi_info:'一名角色的回合结束时，若你的手牌数不为全场最多，你摸一张牌。',
wechatyanyu:'燕语',
wechatyanyu2:'燕语',
wechatyanyu_info:'出牌阶段，你可以重铸【杀】。出牌阶段结束时，你可以令一名其他男性角色摸X张牌（X为你本阶段内发动过〖燕语〗的次数且至多为2）。',
wechat_xushu:'微信徐庶',
wechatwuyan:'无言',
wechatwuyan_info:'锁定技，当你受到锦囊牌对你造成的伤害时，防止此伤害。',
wechatjujian:'举荐',
wechatjujian_info:'结束阶段开始时，你可以弃置一张非基本牌并令一名角色选择一项：1.摸两张牌；2.回复1点体力。',
wechat_zhaoyun:'微信赵云',
wechatqinggang:'青釭',
wechatqinggang_info:'锁定技，若你的武器栏未被废除且你未装备武器牌，你视为装备【青釭剑】。',
wechat_zhangfei:'微信张飞',
wechatshemao:'蛇矛',
wechatshemao_info:'出牌阶段限一次，你可以将两张手牌当作【杀】使用，且此【杀】无距离限制。',
wechat_machao:'微信马超',
wechattieji:'铁骑',
wechattieji_info:'当你使用【杀】指定目标后，你可以进行判定。若结果为红色，则此【杀】不可被闪避；若结果为黑色，你获得此判定牌。',
wechat_shen_guanyu:'微信神关羽',
wechatwushen:'武神',
wechatwushen_info:'你可以将一张红色牌当作【杀】使用。你使用方块【杀】无距离限制，使用红桃【杀】无次数限制。',
wechat_lvbu:'极吕布',
wechatxiaohu:'虓虎',
_wechatxiaohu:'虓虎',
wechatxiaohu_info:'你使用【杀】可以额外指定一个目标；出牌阶段开始时，你可以弃置一张手牌并从牌堆中获得一张【杀】。',
wechat_yangxiu:'微信杨修',
wechatdanlao:'啖酪',
wechatdanlao_info:'出牌阶段限一次，你可以摸X张牌（X为场上存活角色数），然后你可以将这些牌任意分配给其他角色。结算完成后，本次未以此法获得牌的角色可以视为对你使用一张【杀】（无距离限制，且使用须合法）。',
wechatjilei:'鸡肋',
wechatjilei2:'鸡肋',
wechatjilei2_bg:'肋',
wechatjilei_info:'当你受到有来源的伤害后，你可以声明一种花色。若如此做，你令伤害来源不能使用、打出或弃置此花色的手牌直到其下个回合开始。',
wechat_shen_lvmeng:'微信神吕蒙',
wechatgongxin:'攻心',
wechatgongxin_info:'出牌阶段限一次，你可以观看一名其他角色的手牌，然后获得其中的一张红桃牌。',
wechatregongxin:'攻心',
wechatregongxin_info:'出牌阶段限一次，你可以观看一名其他角色的手牌，然后你可以展示其中的一张红色牌并选择一项：1.获得此牌；2.将此牌置于牌堆顶。',
wechat_zhoutai:'微信周泰',
wechatbuqu:'不屈',
wechatbuqux:'创',
wechatbuqu_info:'当你受到伤害或失去体力后，你摸一张牌，称为“创”。当你使用或打出“创”时，你从牌堆中获得一张与此“创”类型相同的牌。',
wechatfenji:'奋激',
wechat_bianfuren:'微信卞夫人',
wechatwanwei:'挽危',
wechatwanwei_info:'出牌阶段限一次，你可以弃置至多三张手牌，然后令一名角色摸等量的牌。若你弃置的牌的类型均不同，你回复1点体力。',
wechatyuejian:'约俭',
wechat_sunluban:'微信孙鲁班',
wechatjiaojin:'骄矜',
wechatjiaojin_info:'当你受到其他角色对你造成的伤害时，你可以弃置一张装备牌。若如此做，此伤害-1。',
wechat_wuguotai:'微信吴国太',
wechatganlu:'甘露',
wechatganlu_info:'出牌阶段限一次，你可以弃置一张手牌并选择一项：①移动场上的一张装备牌；②将牌堆中的随机一张装备牌置入你的空置装备栏中。',
wechatbuyi:'补益',
wechatbuyi2:'补益',
wechatbuyi_info:'游戏开始时，你选择一名角色。你或其于每轮第一次受到伤害后，可以弃置一张非基本牌并回复1点体力。',
wechat_liubiao:'微信刘表',
wechatzishou:'自守',
wechatzishou_info:'出牌阶段结束时，若你本阶段未对其他角色使用过牌。则你可以摸X张牌（X为场上的其他角色数）。',
wechatrezishou:'自守',
wechatrezishou_info:'摸牌阶段，你可以额外摸三张牌。然后本回合你使用牌不能指定其他角色为目标。',
wechatzongshi:'宗室',
wechatzongshi_info:'锁定技，你的手牌上限+X。准备阶段，若你的手牌数大于你的体力值，你本回合可以额外使用X张【杀】（X为场上的其他角色数）。',
wechat_liuchen:'微信刘谌',
wechatqinwang:'勤王',
wechatqinwang1:'勤王',
wechatqinwang_info:'当你需要打出【杀】时，你可以选择一名其他角色，其可以替你打出此【杀】并摸一张牌。',
wechat_luxun:'微信陆逊',
wechatqianxun:'谦逊',
wechatqianxun_info:'每名角色的回合限一次，若你的手牌数为1，你可以将所有手牌当作一张单体非延时锦囊牌使用。',
wechat_pangtong:'微信庞统',
wechatniepan:'涅槃',
wechatniepan_info:'限定技，当你处于濒死状态时，你可以弃置区域内的所有牌，复原武将牌，摸三张牌并将体力值回复至3，然后本局游戏你造成的伤害均视为火属性。',
wechathuzhu:'护主',
wechathuzhu2:'护主',
wechathuzhu_info:'回合结束时，你可以选择一名角色。当其受到伤害时，你可以失去1点体力并防止之，然后你摸一张牌。',
wechat_zhangxingcai:'微信张星彩',
wechatshenxian:'甚贤',
wechatshenxian_info:'当有角色因弃置而失去基本牌时，你可以摸一张牌。',
wechatqiangwu:'枪舞',
wechatqiangwu_info:'出牌阶段限一次，你可以弃置一张手牌，然后本回合你使用大于此牌点数的【杀】无距离和次数限制。',
wechat_zuoci:'微信左慈',
wechatyigui:'役鬼',
wechatyigui_info:'出牌阶段限一次，当你使用普通锦囊牌时，你可以弃置一张牌并为此牌额外指定一个目标（无距离限制）。',
wechatshendao:'神道',
wechatshendao_info:'当你于出牌阶段使用牌结算结束后，若此牌的目标角色中存在本阶段你未记录的角色，则你记录这些角色，然后根据记录的角色数，你可以执行对应的效果：记录1名，从牌堆或弃牌堆中获得一张指定类型的牌；记录2名，视为对一名角色使用一张普通锦囊牌；记录3名，对所有记录的角色造成1点伤害。',
wechat_mayunlu:'微信马云禄',
wechatfengpo:'凤魄',
wechatfengpo_info:'当你于回合内使用的第一张【杀】或【决斗】指定唯一目标后，你可以观看其手牌并选择一项：1.摸X张牌；2.令此牌的伤害值基数+X。（X为其手牌中♦牌的数量且X至少为1）',
wechat_daqiao:'极大乔',
wechatjielie:'节烈',
wechatjielie_info:'出牌阶段限一次，你可以选择一名其他角色，然后你选择一项：①令其选择是否使用一张牌，若其使用了红色的【杀】，你失去1点体力且本回合可以继续发动〖节烈〗；②你下次发动〖相知〗时，令该角色获得相同的效果。',
wechatxiangzhi:'相知',
wechatxiangzhi_info:get.YunLvInform()+'，出牌阶段限一次，<br>平：你可以摸一张牌。<br>仄：你可以回复1点体力。<br>转韵：你发动〖节烈〗结算完成后。',
wechat_xiaoqiao:'极小乔',
wechattongxin:'同心',
wechattongxin_info:get.YunLvInform()+'，出牌阶段限一次，<br>平：出牌阶段限一次，你可以令一名其他角色交给你一张手牌，然后若其手牌数不大于你，其摸一张牌。<br>仄：出牌阶段限一次，你可以交给一名其他角色一张手牌，然后若其手牌数不小于你，你对其造成1点伤害。<br>转韵：你于出牌阶段使用本回合未使用过的类型的牌。',
wechatzhaoyan:'昭颜',
wechatzhaoyan_info:'每回合限一次，当你成为其他角色使用牌的目标后，若其手牌数大于你，你摸一张牌。',
wechat_caiwenji:'微信蔡琰',
wechatbeige:'悲歌',
wechatbeige_info:'每回合限一次，当一名角色受到【杀】造成的伤害后，你可以弃置一张牌，然后若此牌为：红色，其摸两张牌；黑色，你视为对其使用一张【杀】。',
wechatduanchang:'断肠',
wechatduanchang_info:'锁定技，杀死你的角色于本局游戏不能使用【桃】。',
wechat_zhaoxiang:'微信赵襄',
wechatfanghun:'芳魂',
wechatfanghun_fengpo:'凤魄',
wechatfanghun_info:'游戏开始时，你获得技能〖龙胆〗。当你发动〖龙胆〗后，你获得“梅影”标记。若你有“梅影”标记，你可以发动〖凤魄〗，然后失去“梅影”标记。',
wechatfuhan:'扶汉',
wechatfuhan_info:'觉醒技，准备阶段，若你已发动过〖凤魄〗，则你减1点体力上限，然后从〖义绝〗、〖咆哮〗、〖铁骑〗、〖烈弓〗中选择一个技能获得。',
wechat_liuqi:'微信刘琦',
wechattunjiang:'屯江',
wechattunjiang_info:'结束阶段，若你未于本回合的出牌阶段内使用牌指定过其他角色为目标，则你可以摸X张牌（X为场上的存活角色数-1）。',
wechat_caoren:'微信曹仁',
wechatjushou:'据守',
wechatjushou_info:'结束阶段，若你未于本回合造成过伤害，则你可以摸三张牌。',
wechat_jiaxu:'微信贾诩',
wechatwansha:'完杀',
wechatwansha_info:'锁定技。①你的回合内，不处于濒死状态的其他角色不能使用【桃】。②出牌阶段开始时，你令一名体力值大于1的其他角色失去1点体力，本阶段结束时，其回复1点体力。',
wechatluanwu:'乱武',
wechatluanwu_info:'限定技，出牌阶段，你可以从牌堆中获得一张【杀】，然后令所有角色依次选择一项：①对除你以外与其距离最近的另一名角色使用一张【杀】；②失去1点体力。',
wechat_shenpei:'微信审配',
wechatshouye:'守邺',
wechatshouye_info:'每回合限一次，当其他角色使用牌指定你为唯一目标时，你可以与其进行猜拳。若你赢，则你取消此牌的目标，且你于此牌结算完成后获得其对应的所有实体牌。',
wechatliezhi:'烈直',
wechatliezhi_info:'准备阶段，你可以弃置至多两名其他角色区域内的各一张牌。',
wechat_caocao:'微信曹操',
wechatjianxiong:'奸雄',
wechatjianxiong_info:'你的回合内，当你使用牌造成伤害后，你可以获得此牌对应的所有你本回合未因〖奸雄〗获得过的牌名的实体牌。',
wechatmoulvenum:'谋略值',
wechat_guojia:'极郭嘉',
wechatdingce:'定策',
wechatdingce_info:'①游戏开始时，你获得3点'+get.MouLveInform()+'。②准备阶段，若你的'+get.MouLveInform()+'不小于你的手牌数，你摸一张牌。③一名角色的回合结束时，若你本回合使用和打出的牌数之和不小于X，则你获得X点'+get.MouLveInform()+'（X为你的体力值）。',
wechatsuanlve:'算略',
wechatsuanlve_info:'每回合限一次，你可以失去1+X点'+get.MouLveInform()+'，将一张牌当作你本回合使用的上一张基本牌或普通锦囊牌使用（X为你本轮发动〖算略〗的次数）。',
wechatmiaoji:'妙计',
wechatmiaoji_info:'每回合限一次，你可以：①失去1点谋略值，视为使用【过河拆桥】；②失去2点谋略值，视为使用【无懈可击】；③失去3点谋略值，视为使用【无中生有】。',
wechat_guanyu:'微信关羽',
wechatqinglong:'青龙',
wechatqinglong_info:'锁定技，若你的武器栏未被废除且你未装备武器牌，你视为装备【青龙偃月刀】。',
wechat_xuchu:'微信许褚',
wechatluoyi:'裸衣',
wechatluoyi_info:'当你使用【杀】或【决斗】造成伤害时，你可以弃置一张牌并令此伤害+1。',
wechat_sunshangxiang:'微信孙尚香',
wechatjieyin:'结姻',
wechatjieyin_info:'出牌阶段限一次，你可以弃置一张牌并与一名男性角色各摸一张牌。',
wechat_pangde:'微信庞德',
wechatmengjin:'猛进',
wechatmengjin_info:'当你使用【杀】指定目标后，你可以弃置目标角色的一张牌。若此牌为装备牌，则其无法响应此【杀】，否则你获得此牌。',
wechat_xiahouyuan:'微信夏侯渊',
wechatshensu:'神速',
wechatshensu_info:'你可以选择一至两项：①跳过判定阶段和摸牌阶段；②跳过出牌阶段。你每选择一项，视为你对一名其他角色使用一张无视距离和防具的【杀】。',
wechat_huangzhong:'微信黄忠',
wechatliegong:'烈弓',
wechatliegong_info:'你使用【杀】无距离限制。当你使用【杀】指定目标后，若目标角色的手牌数小于等于你的手牌数，则此【杀】不可被【闪】响应。',
wechat_caochong:'微信曹冲',
wechatrenxin:'仁心',
wechatrenxin_info:'每轮限一次，当一名其他角色受到不小于体力值的伤害时，你可以弃置一张牌并将此伤害转移给自己。',
wechat_sp_caiwenji:'SP微信蔡琰',
wechatchenqing:'陈情',
wechatchenqing_info:'每轮限一次，当一名角色处于濒死状态时，你可以令另一名角色摸四张牌，然后其弃置四张牌。若其以此法弃置的四张牌花色各不相同，则视为该角色对濒死的角色使用一张【桃】。',
wechat_wangping:'微信王平',
wechatbinglve:'兵略',
wechatbinglve_info:'锁定技，当你发动〖飞军〗后，你摸一张牌。若目标角色与你之前发动〖飞军〗指定的目标角色均不相同，则改为摸两张牌。',
wechat_sunliang:'微信孙亮',
wechatchezheng:'掣政',
wechatchezheng_info:'锁定技。出牌阶段，你使用牌无法指定攻击范围内不包含你的其他角色为目标。出牌阶段结束时，你摸等同于这些角色的数量，然后弃置其中一名角色的一张牌。',
wechat_gaoshun:'微信高顺',
wechat_caozhi:'微信曹植',
wechatluoying:'落英',
wechatluoying_info:'其他角色弃置的梅花牌或梅花判定牌进入弃牌堆后，你可以获得之，且这些牌不计入你的手牌上限。',
wechatjiushi:'酒诗',
wechatjiushi_info:'当你需要使用【酒】时，你可以弃置一张梅花手牌，视为使用之。',
wechat_huangyueying:'微信黄月英',
wechatjizhi:'集智',
wechatjizhi_info:'当你使用锦囊牌时，你可以摸一张牌，且此牌不计入本回合的手牌上限。',
wechatqicai:'奇才',
wechatqicai_info:'锁定技。①你使用锦囊牌无距离限制。②你于回合内使用的第一张锦囊牌不可被响应。',
wechat_weiyan:'微信魏延',
wechatkuanggu:'狂骨',
wechatkuanggu_info:'锁定技，当你对距离为1以内的角色造成1点伤害后，你回复1点体力并摸一张牌。',
wechat_lukang:'微信陆抗',
wechatjueyan:'决堰',
wechatjueyan_info:'出牌阶段限一次，你可以废除一种装备栏，然后根据你废除的装备栏执行对应项：武器栏，本回合内使用【杀】的次数上限+3；防具栏，摸三张牌，且本回合手牌上限+3；坐骑栏，本回合获得技能〖连营〗，且使用牌无距离限制。',
wechatposhi:'破势',
wechatposhi_info:'觉醒技，准备阶段，若你的装备栏均已被废除或体力值为1，则你减1点体力上限，将手牌摸至体力上限，失去〖决堰〗并获得〖怀柔〗。',
wechat_jianyong:'微信简雍',
wechatqiaoshui:'巧说',
wechatjyzongshi:'纵适',
wechatjyzongshi_info:'当你拼点赢时，你可以从牌堆中获得一张锦囊牌；当你拼点没赢时，你可以收回你此次拼点的牌。',
wechat_caifuren:'微信蔡夫人',
wechatqieting:'窃听',
wechatqieting_info:'其他角色的回合结束时，若其本回合内未对另一名角色造成过伤害，则你可选择一项：①摸一张牌。②随机获得其一张手牌。③将其装备区内的一张牌移动至你的装备区。',
wechat_masu:'微信马谡',
wechatsanyao:'散谣',
wechatsanyao_info:'出牌阶段限一次，你可以弃置一张牌并对一名其他角色造成1点伤害。',
wechat_sp_taishici:'微信太史慈',
wechatjixu:'击虚',
wechatjixu_info:'出牌阶段限一次，你可以令所有体力值不大于你的其他角色猜测你的手牌中是否有【杀】。所有角色猜测结束后，你依次弃置所有猜错的角色的一张牌并视为对其使用一张【杀】，然后你摸X张牌（X为猜错的角色数），若没有角色猜错，你结束此阶段。',
wechat_buzhi:'微信步骘',
wechatdingpan:'定叛',
wechatdingpan_info:'出牌阶段限两次，你可以令一名装备区里有牌的角色摸一张牌，然后你选择一项：1.弃置其装备区里的一张牌；2.令其获得其装备区里的所有牌，然后你对其造成1点伤害。',
wechat_caozhang:'微信曹彰',
wechatjiangchi:'将驰',
wechatjiangchi_info:'出牌阶段开始时，你可以选择一项：①摸两张牌，本阶段不能使用【杀】；②本阶段使用【杀】无距离限制且可以多使用一张【杀】。',
wechat_caopi:'微信曹丕',
wechatfangzhu:'放逐',
wechatfangzhu2:'放逐',
wechatfangzhu_info:'当你受到伤害后，你可以令一名有手牌的其他角色将所有手牌扣置于其武将牌上。该角色的回合结束时或受到伤害后，其收回武将牌上扣置的牌。',
wechat_sp_jiangwei:'SP微信姜维',
wechatkunfen:'困奋',
wechatkunfen_info:'结束阶段，你可以失去1点体力，然后摸两张牌。',
wechatfengliang:'逢亮',
wechatfengliang_info:'觉醒技，当你进入濒死状态时，你减1点体力上限，将体力值回复至3点，然后获得技能〖挑衅〗。',
wechat_caoxiu:'微信曹休',
wechatqingxi:'倾袭',
wechatqingxi_info:'当你对其他角色造成伤害时，你可以令其选择一项：①弃置等同于你攻击范围数的牌，然后弃置你装备区里的武器牌；②令此伤害+1。',
wechat_yuanshao:'微信袁绍',
wechatluanji:'乱击',
wechatluanji_info:'出牌阶段，你可以将两张手牌当作【万箭齐发】使用（不可选择本阶段已经转化过的花色的牌）。其他角色使用【闪】响应你的【万箭齐发】时，你与其各摸一张牌。',
wechat_sundeng:'微信孙登',
wechatkuangbi:'匡弼',
wechatkuangbi_info:'出牌阶段限一次，你可以选择一名有牌的其他角色，该角色将其的一至三张牌置于你的武将牌上，然后其摸一张牌。若如此做，你的下个准备阶段，你获得武将牌上的所有牌，然后其摸等量的牌。',
wechat_re_xushu:'微信徐庶',
wechatzhuhai:'诛害',
wechatzhuhai_info:'一名其他角色的结束阶段开始时，若该角色本回合造成过伤害，你可以弃置一张牌并视为对其使用一张【杀】。',
wechat_xiahouba:'微信夏侯霸',
wechatbaobian:'豹变',
wechatbaobian_info:'锁定技。①若你的体力值：不小于3，你视为拥有技能〖挑衅〗；不小于2，你视为拥有技能〖咆哮〗；不小于1，你视为拥有技能〖神速〗。②回合开始时，你失去1点体力，然后从牌堆或弃牌堆中获得一张【杀】。',
wechat_liuyao:'微信刘繇',
wechatkannan:'戡难',
wechatkannan_info:'出牌阶段，你可以与一名本阶段内未成为过你发动〖戡难〗目标的角色拼点。若你赢，你使用的下一张【杀】的伤害值基数+1（至多+5），且你本阶段内不能再发动〖戡难〗；若其赢，其使用的下一张【杀】的伤害值基数+1（至多+5）。',
wechat_quancong:'微信全琮',
wechatyaoming:'邀名',
wechatyaoming_info:'当你造成或受到伤害后，你可以选择一项：①弃置手牌数大于等于你的一名角色的一张手牌；②令手牌数小于等于你的一名角色摸一张牌。',
wechat_liaohua:'微信廖化',
wechatdangxian:'当先',
wechatdangxian_info:'锁定技，回合开始时，你从弃牌堆中获得一张【杀】并进行一个额外的出牌阶段。',
wechatfuli:'伏枥',
wechatfuli_info:'限定技，当你处于濒死状态时，你可以将体力值回复至X点（X为场上存活的其他角色数）。然后若你的体力值为全场唯一最多，你不能使用或打出手牌直到你的下个回合结束。',
wechat_yanyan:'微信严颜',
wechatjuzhan:'拒战',
wechatjuzhan_info:'当你成为其他角色【杀】的目标后，你可以与其各摸一张牌，然后其本回合内不能再对你使用牌。当你使用【杀】指定一名角色为目标后，你可以获得其一张牌，然后你本回合内不能再对其使用牌。',
wechat_guohuanghou:'微信郭皇后',
wechatjiaozhao:'矫诏',
wechatjiaozhao2:'矫诏',
wechatjiaozhao_info:'出牌阶段限一次，你可以展示一张牌，然后声明一个基本牌或普通锦囊牌。你可以将此牌当作你声明的牌使用直到你的下个回合开始（自己不是此牌的合法目标）。',
wechatdanxin:'殚心',
wechatdanxin_info:'当你受到1点伤害后，你可以摸一张牌。',
wechat_caizhenji:'微信菜贞姬',
wechatsheyi:'舍裔',
wechatsheyi_info:'每轮限一次，体力值小于等于你的其他角色受到伤害时，你可以交给其X张牌并防止此伤害（X为你的体力值）。',
wechattianyin:'天音',
wechattianyin_info:'结束阶段，你从牌堆中随机获得你本回合未使用过类型的牌各一张。然后若你未获得牌，你可以弃置一名其他角色的一张牌。',
wechat_zhuling:'微信朱灵',
wechatzhanyi:'战意',
wechatzhanyi_info:'出牌阶段限一次，你可以弃置一张牌并失去1点体力，然后根据你弃置的牌获得以下效果直到回合结束：基本牌，你可以将一张基本牌当作【杀】、【酒】或【桃】使用，且你本回合第一次以此法使用的牌的回复值/伤害值+1；锦囊牌，摸三张牌且你使用的牌不能被【无懈可击】响应；装备牌，当你使用【杀】指定唯一目标后，你弃置其两张牌，然后你获得其中的一张牌。',
wechat_caojie:'微信曹节',
wechatshouxi:'守玺',
wechatshouxi_info:'当你成为【杀】的目标后，你可声明一种牌的类别，使用者须选择一项：①弃置一张你声明的类别的牌；②令此【杀】对你无效。',
wechat_re_caocao:'极曹操',
wechatdelu:'得鹿',
wechatdelu_info:'出牌阶段限一次，你可以与任意名体力值不等于你的角色进行同时拼点，且你的拼点点数+X（X为此次参与拼点的角色数）。拼点赢的角色依次获得所有拼点没赢的角色区域内的一张牌。',
wechat_zhugeliang:'极诸葛亮',
wechatsangu:'三顾',
wechatsangu_info:'锁定技，当你每三次成为牌的目标后，你获得1点'+get.MouLveInform()+'。',
wechatyanshi:'演势',
wechatyanshi_info:'出牌阶段限一次，你可以观看牌堆顶和牌堆底的各一张牌，然后获得其中一张牌，你于本阶段使用此牌时重置〖演势〗。',
wechat_sp_pangde:'SP微信庞德',
wechatjuesi:'决死',
wechatjuesi_info:'出牌阶段，你可以弃置一张【杀】并令一名其他角色弃置一张牌，若弃置的牌不是【杀】且你的体力值不大于该角色，你视为对其使用【决斗】。',
wechat_simayi:'极司马懿',
wechatyinren:'隐忍',
wechatyinren_info:'你可以跳过出牌阶段，然后获得以下第一个你未拥有的技能：〖奸雄〗、〖行殇〗、〖明鉴〗。',
wechatyinren_jianxiong:'奸雄',
wechatyinren_xingshang:'行殇',
wechatyinren_mingjian:'明鉴',
wechatduoquan:'夺权',
wechatduoquan_info:'结束阶段，你可以选择一名其他角色并选择一个牌的类型，其下个出牌阶段使用第一张牌时，若此牌与你选择的类型相同，则你令此牌无效，且此牌对应的实体牌进入弃牌堆后，你获得之。。',
wechat_re_machao:'极马超',
wechatqipao:'弃袍',
wechatqipao_info:'当你使用【杀】指定目标后，你可以令其选择一项：①弃置其装备区所有牌；②本回合非锁定技失效且不能响应你使用的牌。',
wechatzhuixi:'追袭',
wechatzhuixi_info:'结束阶段，若场上所有其他角色均在你的攻击范围内，你可以视为使用一张【杀】。',
wechat_yj_jushou:'微信沮授',
wechatjianying:'渐营',
wechatjianying_info:'当你使用与你使用的上一张牌点数或花色相同的牌时，你可以摸一张牌。出牌阶段限一次，你可以将一张牌当做任意基本牌使用（若你于此阶段内使用的上一张牌有花色，则此牌的花色视为上一张牌的花色）。',
},
};
for(var i in WeChatkill.character){
if(WeChatkill.translate[i]){
if(WeChatkill.translate[i].indexOf('微信神')==0) WeChatkill.translate[i+'_prefix']='微信神';
else if(WeChatkill.translate[i].indexOf('SP微信神')==0) WeChatkill.translate[i+'_prefix']='SP微信神';
else if(WeChatkill.translate[i].indexOf('微信')==0) WeChatkill.translate[i+'_prefix']='微信';
else if(WeChatkill.translate[i].indexOf('SP微信')==0) WeChatkill.translate[i+'_prefix']='SP微信';
else if(WeChatkill.translate[i].indexOf('极')==0) WeChatkill.translate[i+'_prefix']='极';
}
WeChatkill.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
}
return WeChatkill;
});
if (lib.namePrefix &&lib.namePrefix.set) {
    lib.namePrefix.set('极', {
        color: '#fdd559',
        nature: 'soilmm',
    });
    lib.namePrefix.set('微信', {
        color: '#00cd00',
        nature: 'MXgreen',
        showName: '微',
    });
    lib.namePrefix.set('SP微信', {
        getSpan: (prefix, name) => `${get.prefixSpan('SP')}${get.prefixSpan('微信')}`,
    });
    lib.namePrefix.set('微信神', {
        getSpan: (prefix, name) => `${get.prefixSpan('微信')}${get.prefixSpan('神')}`,
    });
    lib.namePrefix.set('SP微信神', {
        getSpan: (prefix, name) => `${get.prefixSpan('SP')}${get.prefixSpan('微信')}${get.prefixSpan('神')}`,
    });
}
lib.config.all.characters.push('WeChatkill');
lib.config.all.sgscharacters.push('WeChatkill');
if(!lib.config.characters.includes('WeChatkill')) lib.config.characters.remove('WeChatkill');
lib.translate['WeChatkill_character_config']='<span style="font-family: xingkai">微信三国杀</span>';
//没想到吧，我换前缀了
game.import('character',function(){
var huodongcharacter={
name:'huodongcharacter',
connect:true,
characterSort:{
huodongcharacter:{
CLongZhou:['lz_sufei','lz_tangzi','lz_liuqi','lz_huangquan'],
CZHengHuo:['bilibili_zhengxuan','bilibili_sp_xuyou','old_zuoci'],
Chuodong:['bilibili_shengxunyu','bilibili_Firewin','bilibili_jinglingqiu','bilibili_suixingsifeng','bilibili_Emptycity','bilibili_thunderlei','bilibili_lonelypatients'],
Cothers:['bilibili_adong','bilibili_zhangrang','bilibili_litiansuo','decade_huangwudie','bilibili_huanggai','bilibili_ekeshaoge','bilibili_guanning','bilibili_wangwang','bilibili_zhouxiaomei','diy_lvmeng'],
CDanJi:['DJ_caiyang','DJ_pujing','DJ_huban'],
CSCS:['biliscs_zhangrang','biliscs_zhaozhong','biliscs_sunzhang','biliscs_bilan','biliscs_xiayun','biliscs_hankui','biliscs_lisong','biliscs_duangui','biliscs_guosheng','biliscs_gaowang'],
CSCS2:['biliscsx_zhangrang','biliscsx_zhaozhong','biliscsx_sunzhang','biliscsx_bilan','biliscsx_xiayun','biliscsx_hankui','biliscsx_lisong','biliscsx_duangui','biliscsx_guosheng','biliscsx_gaowang'],
},
},
character:{
bilibili_zhouxiaomei:['female','wu',3,['dchuishu','dcyishu'],[]],
bilibili_zhangrang:['male','qun',3,['bilibili_taoluan'],[]],
diy_lvmeng:['male','wu',4,['BTkongju','BThouqi'],[]],
bilibili_wangwang:['female','shu',3,['huguan','yaopei','mingluan'],[]],
bilibili_guanning:['male','qun','3/7',['BTdunshi'],['forbidai']],
bilibili_huanggai:['male','wu',4,['bilibili_kurou','bilibili_zhaxiang'],[]],
bilibili_ekeshaoge:['male','qun',4,['bilibili_xueji','bilibili_hanran'],[]],
decade_huangwudie:['female','shu',3,['decadexiwu','decadehongzhuang'],[]],
bilibili_litiansuo:['male','qun',4,['qin_jugu','yijin','twzhouhu','twharvestinori','twzuhuo','twzhouzu','twhuangjin','twguimen','twdidao'],[]],
bilibili_sp_xuyou:['male','qun',3,['spshicai','bilibili_fushi'],['character:sp_xuyou']],
lz_sufei:['male','qun',4,['lzlianpian'],['character:xf_sufei','doublegroup:qun:wu']],
lz_liuqi:['male','shu',3,['spwenji','lztunjiang'],['doublegroup:shu:qun']],
lz_tangzi:['male','wu',4,['lzxingzhao'],['doublegroup:wu:wei']],
lz_huangquan:['male','wei',3,['lzdianhu','xinfu_jianji'],['character:xf_huangquan','doublegroup:wei:shu']],
bilibili_adong:['male','qun',4,['jueman','oljianman'],[]],
old_zuoci:['male','qun',3,['gz_huashen','gz_xinsheng'],['die_audio']],
bilibili_shengxunyu:['male','key',4,['bilibili_hehu','bilibili_jinyan','bilibili_yutai'],[]],
bilibili_Firewin:['male','key',4,['jsrgfeiyang','jsrgbahu','bilibili_tixiang'],[]],
bilibili_jinglingqiu:['male','key','3/4',['bilibili_tiyi','bilibili_zili'],[]],
bilibili_suixingsifeng:['female','key',4,['bilibili_daili','bilibili_duoyang','bilibili_liaoxing'],[]],
bilibili_Emptycity:['male','key',4,['bilibili_zhiyou','bilibili_guanli'],[]],
bilibili_thunderlei:['male','key','2/4/3',['bilibili_Thunder','bilibili_qianxi'],[]],
bilibili_zhengxuan:['male','qun',3,['bilibili_zhengjing'],['character:zhengxuan']],
bilibili_lonelypatients:['male','key',4,['bilibili_meihua','bilibili_gongyou','bilibili_qianyin'],[]],
//千里走单骑
DJ_caiyang:['male','qun',1,['yinka','zhuixi'],['character:caiyang']],
DJ_pujing:['male','qun',1,['yinka'],['character:pujing']],
DJ_huban:['male','qun',2,['yinka'],['character:huban']],
//十常侍·存活
biliscs_zhangrang:['male','qun',1,['scstaoluan'],['character:scs_zhangrang']],
biliscs_zhaozhong:['male','qun',1,['scschiyan'],['character:scs_zhaozhong']],
biliscs_sunzhang:['male','qun',1,['scszimou'],['character:scs_sunzhang']],
biliscs_bilan:['male','qun',1,['scspicai'],['character:scs_bilan']],
biliscs_xiayun:['male','qun',1,['scsyaozhuo'],['character:scs_xiayun']],
biliscs_hankui:['male','qun',1,['scsxiaolu'],['character:scs_hankui']],
biliscs_lisong:['male','qun',1,['scskuiji'],['character:scs_lisong']],
biliscs_duangui:['male','qun',1,['scschihe'],['character:scs_duangui']],
biliscs_guosheng:['male','qun',1,['scsniqu'],['character:scs_guosheng']],
biliscs_gaowang:['male','qun',1,['scsmiaoyu'],['character:scs_gaowang']],
//十常侍·死亡
biliscsx_zhangrang:['male','qun',1,['scstaoluan'],['character:scs_zhangrang_dead']],
biliscsx_zhaozhong:['male','qun',1,['scschiyan'],['character:scs_zhaozhong_dead']],
biliscsx_sunzhang:['male','qun',1,['scszimou'],['character:scs_sunzhang_dead']],
biliscsx_bilan:['male','qun',1,['scspicai'],['character:scs_bilan_dead']],
biliscsx_xiayun:['male','qun',1,['scsyaozhuo'],['character:scs_xiayun_dead']],
biliscsx_hankui:['male','qun',1,['scsxiaolu'],['character:scs_hankui_dead']],
biliscsx_lisong:['male','qun',1,['scskuiji'],['character:scs_lisong_dead']],
biliscsx_duangui:['male','qun',1,['scschihe'],['character:scs_duangui_dead']],
biliscsx_guosheng:['male','qun',1,['scsniqu'],['character:scs_guosheng_dead']],
biliscsx_gaowang:['male','qun',1,['scsmiaoyu'],['character:scs_gaowang_dead']],
},
characterIntro:{
ekeshaoge:'俄何烧戈，羌将。正始八年，陇西、南安、金城、西平诸羌饿何、烧戈、伐同、蛾遮塞等相结叛乱，攻围城邑，南招蜀兵，凉州名胡治无戴复叛应之。讨蜀护军夏侯霸督诸军屯为翅。郭淮退姜维，维遁退。进讨叛羌，斩饿何、烧戈，降服者万馀落。',
litiansuo:'刘秉义家的婚事被李荣先辈知道了，本来李荣先辈和刘家没什么深仇大恨，但是李荣先辈赚了些黑钱就想强买下刘家的房子，一直希望这刘家没落变卖家产，提高强买的几率。',
shengxunyu:'活动武将群聊团宠，群管理萌新（转型中）致力于对生熏鱼进行管制和保护以希望生熏鱼能够在群里拥有真正的既健康又快乐的生活。',
Firewin:'从活动武将群创立至今留存时间最久的人员之一，属于活动武将群元老级人员，现为活动群和管理之一，擅长素材提供。最大特征为每个月都会更换一个愤怒的小鸟的头像，因此别称“鸟鸟”。',
jinglingqiu:'活动武将群最最最元老级成员，活动武将群聊开创者之一，萌新于无名杀扩展群推广群聊时便使用活动武将，并且经常提供一些可靠的意见，于2022年2月2日劝说萌新创建活动武将扩展交流群。',
suixingsifeng:'萌新的小号，于某段特殊时间代替萌新大号进行活动武将的更新，这个号有时候由萌新操作，有时候由萌新的朋友操作，有时候由机器人脚本操作。',
Emptycity:'Empty city°，活动武将群骨干级成员，于萌新高考时加入活动武将群，给予萌新素材支持，现为活动群管理之一。',
thunderlei:'雷，过去萌新的同行（现在比萌新厉害太多），负责十周年武将的前瞻制作，活动群和Thunder群之间总保持着良好的关系，过去常常被群友成为在各方串门不累脚，现在主负责千幻的更新和更细致的特效制作。',
lonelypatients:'lonely patients，活动群群主，美化大佬，前活动武将二群成员，因完成了活动武将第一次的全露头制作晋升二群管理，后来因合群人数需求成为活动群群主，现负责不定期活动武将的露头包制作。因群主平时较忙，故在群聊内见到群主的次数较为稀少。',
jiananfeng:'贾南风（257年－300年5月13日），小名峕，字南风，平阳郡襄陵县（今山西省襄汾县）人，曹魏豫州刺史贾逵孙女，西晋太宰贾充之女，晋惠帝司马衷皇后。贾南风貌丑而性妒，因惠帝懦弱而一度专权，是西晋时期“八王之乱”的罪魁祸首，后死于赵王司马伦之手，而随后的八王之乱则引发了历史上著名的五胡乱华。',
babybao:'活动群资深元老，隐藏自身实力的高校研究生，为萌新负责提供图片/配音素材、进行武将测试、管理小群'+'<span style="text-decoration:line-through;">'+'反正不要拿respect当作职务'+'</span>'+'等职务。',
},
characterTitle:{
},
characterFilter:{
bilibili_sp_xuyou:function(mode){
return !lib.characterFilter.sp_xuyou(mode);
},
lz_tangzi:function(mode){
return mode!='identity'&&mode!='guozhan';
},
},
perfectPair:{
},
card:{
//闪闪
bol_shanshan:{
cardimage:'shan',
audio:'shan',
global:['bol_shanshan_skill'],
fullskin:true,
type:'basic',
notarget:true,
content:function(){
var evt2=event.getParent(3)._trigger;
evt2.neutralize();
var evt=evt2.getParent();
var cardx=event.getParent().respondTo;
if(cardx&&cardx[1]&&cardx[1].cards&&cardx[1].cards.filterInD('od').length) player.gain(cardx[1].cards.filterInD('od'),'gain2','log');
},
ai:{
basic:{
useful:[6,4,3],
value:[6,4,3],
},
result:{player:1},
},
},
//三首
bol_sanshou:{
image:'ext:活动武将/image/card/bol_sanshou.png',
fullimage:true,
type:'equip',
subtype:'equip2',
skills:['bol_sanshou_skill'],
ai:{
basic:{equipValue:7.5},
},
},
//化身牌
huashen_unknown:{
fullimage:true,
image:'ext:活动武将/image/card/huashen_unknown.jpg'
},
},
skill:{
//闪闪
bol_shanshan_skill:{
trigger:{target:'useCardToBefore',player:'phaseJudge'},
filter:function(event,player){
var card=event.card;
if(event.name=='phaseJudge'&&card.viewAs) card={name:card.viewAs};
if(event.name!='phaseJudge'&&event.getParent().directHit.includes(player)) return false;
return ['basic','trick'].includes(get.type2(card))&&player.hasUsableCard('bol_shanshan');
},
forced:true,
priority:11+45+14,
content:function(){
'step 0'
var card=trigger.card;
if(trigger.name=='phaseJudge'&&card.viewAs) card={name:card.viewAs};
var next=player.chooseToUse();
next.set('prompt','是否使用【闪闪】？');
next.set('prompt2','抵消'+(trigger.name!='phaseJudge'?(get.translation(trigger.player)+'对你使用的'):'')+get.translation(card)+(trigger.name!='phaseJudge'?'':'的判定效果'));
next.set('filterCard',function(card,player){
if(get.name(card)!='bol_shanshan') return false;
return lib.filter.cardEnabled(card,player,'forceEnable');
});
next.set('respondTo',[trigger.player,trigger.card]);
next.set('goon',-get.effect(player,card,trigger.player,player));
next.set('ai1',function(card){
return _status.event.goon;
});
'step 1'
if(result.bool&&trigger.name=='phaseJudge'&&[trigger.card].filterInD().length) player.gain([trigger.card].filterInD(),'gain2');
},
},
//三首
bol_sanshou_skill:{
audio:'sanshou',
inherit:'sanshou',
filter:function(event,player){
if(player.hasSkillTag('unequip2')) return false;
if(event.source&&event.source.hasSkillTag('unequip',false,{
name:event.card?event.card.name:null,
target:player,
card:event.card
})) return false;
return true;
},
ai:{
effect:{
target:function(card,player,target){
if(target.hasSkillTag('unequip2')) return;
if(player.hasSkillTag('unequip',false,{
name:card?card.name:null,
target:target,
card:card
})) return;
if(card.name=='shandian'||card.name=='fulei') return [0,0.1];
if(!get.tag(card,'damage')) return;
var types=[],bool=0;
types.addArray(game.getGlobalHistory('useCard').map(evt=>get.type2(evt.card)));
if(!types.includes(get.type2(card))) bool=1;
if(types.length<2) return Math.min(1,0.4+(types.length+bool)*0.2);
},
},
},
},
//水 果 忍 者
bilibili_zhengjing:{
createDialog:function(cards){
var cards1=[];
for(var i in cards){
for(var j=0;j<cards[i];j++){
cards1.push(i);
};
};
if(!cards1.length) cards1.push('sha');
var result={};
var interval;
var finish=function(){
clearInterval(interval);
_status.event._result=result;
game.resume();
};
var dialog=ui.create.dialog('hidden');
dialog.classList.add('popped');
dialog.classList.add('static');
dialog.style.height='100%';
dialog.style.width='100%';
dialog.style.top='0px';
dialog.style.left='0px';
dialog.style['text-align']='left';
ui.window.appendChild(dialog);
dialog.innerHTML='';
var getAngle=function(x1,y1,x2,y2){
var x=x1-x2;
var y=y1-y2;
var z=Math.sqrt(Math.pow(x,2)+Math.pow(y,2));
var cos=y/z;
var radina=Math.acos(cos);
var angle=180/(Math.PI/radina);
if(x2>x1&&y2===y1) angle=0;
if(x2>x1&&y2<y1) angle=angle-90;
if(x2===x1&&y1>y2) angle=-90;
if(x2<x1&&y2<y1) angle=270-angle;
if(x2<x1&&y2===y1) angle=180;
if(x2<x1&&y2>y1) angle=270-angle;
if(x2===x1&&y2>y1) angle=90;
if(x2>x1&&y2>y1) angle=angle-90;
return angle;
};
var lineList=[];
var pointList=[];
var pointNum=0;
var createLine=function(e){
if(this.hadClicked==true){
if(e.changedTouches) e=e.changedTouches[e.changedTouches.length-1];
if(pointNum%3==0){
pointList.push([e.clientX/game.documentZoom,e.clientY/game.documentZoom]);
if(pointList.length>=2){
var point0=pointList[pointList.length-2];
var point1=pointList[pointList.length-1];
var x0=point0[0];
var y0=point0[1];
var x1=point1[0];
var y1=point1[1];
var div=document.createElement('div');
div.style.zIndex=1;
div.style.borderRadius='4px';
div.style.position='fixed';
div.style.background='#ffffff';
div.style.height='4px';
div.style.width=(Math.pow(Math.pow(x1-x0,2)+Math.pow(y1-y0,2),0.5)+2)+'px';
div.style.left=(x0+2)+'px';
div.style.top=(y0+2)+'px';
div.style.transform='rotate('+getAngle(x0,y0,x1,y1)+'deg)';
div.style['transform-origin']='0 50%';
this.appendChild(div);
lineList.push(div);
if(lineList.length>3){
var div1=lineList[0];
div1.style.transition='opacity 0.25s';
div1.style.opacity=0;
setTimeout(function(){
if(div1.parentNode!=undefined) div1.parentNode.removeChild(div1);
},250);
lineList.remove(lineList[0]);
pointList[0]=1;
pointList.remove(pointList[0]);
};
};
};
pointNum++;
};
};
var clearLine=function(){
var deleteLine=function(){
var div1=lineList[0];
div1.style.transition='opacity 0.25s';
div1.style.opacity=0;
setTimeout(function(){
if(div1.parentNode!=undefined) div1.parentNode.removeChild(div1);
},250);
lineList.remove(lineList[0]);
if(lineList.length>0) deleteLine();
};
if(lineList.length>0) deleteLine();
pointList=[];
};
dialog.addEventListener(lib.device?"touchstart":"mousedown",function(e){
e.stopPropagation();
this.hadClicked=true;
pointNum=0;
});
dialog.addEventListener(lib.device?"touchmove":"mousemove",createLine);
dialog.addEventListener(lib.device?"touchend":"mouseup",function(e){
e.stopPropagation();
delete this.hadClicked;
clearLine();
});
var createCard=function(name){
var left=Math.ceil(Math.random()*560);
var card=ui.create.card(null,'noclick',true);
card.init({name:name});
if(name=='du') card.style['box-shadow']='rgba(0, 0, 0, 0.2) 0 0 0 1px,rgba(255, 0, 0, 0.4) 0 0 5px, rgba(255, 0, 0, 0.4) 0 0 12px, rgba(255, 0, 0, 0.8) 0 0 15px';
card.style['pointer-events']='none';
card.style.position='absolute';
card.style.top=(dialog.offsetHeight-5)+'px';
card.style.left=(left)+'px';
card.style.transition='opacity 0.25s';
card.style.opacity=0;
dialog.appendChild(card);
setTimeout(function(){
card.style.opacity=1;
},10);
var t_x=0,
t_y=0,
s_x=0,
s_y=0,
s_y0=0,
v_y=[90,95,100,105,110,115,105,110,115].randomGet(),
a_y=[9,9.2,9.4,9.6,9.8,10,10.2,10.4,10.6,10.8,11].randomGet(),
t_x_increase=0,
t_y_increase=0.3,
isMovingUp=true,
cardLeft=card.offsetLeft,
cardTop=card.offsetTop,
num_x=63;
if(v_y==90) num_x=56;
else if(v_y==95) num_x=60;
else if(v_y==100) num_x=63;
else if(v_y==105) num_x=67;
else if(v_y==110) num_x=70;
else num_x=74;
if([true,false].randomGet()){
var s1=dialog.offsetWidth-card.offsetWidth-left;
t_x_increase=(s1/num_x)*Math.random();
}
else{
var s1=left;
t_x_increase=-(s1/num_x)*Math.random();
};
var interval1=setInterval(function(){
if(!_status.paused2){
t_x+=t_x_increase;
s_x=t_x;
card.style.left=(cardLeft+s_x)+'px';
t_y+=t_y_increase;
s_y=-(v_y*t_y-a_y*Math.pow(t_y,2)/2);
card.style.top=(cardTop+s_y)+'px';
if(isMovingUp==true){
if(s_y-s_y0>0) isMovingUp=!isMovingUp;
s_y0=s_y;
};
if(card.offsetTop>dialog.offsetHeight+5-card.offsetWidth&&
isMovingUp==false&&card.hadHide!=true){
card.hadHide=true;
card.style.transition='opacity .3s';
card.style.opacity=0;
setTimeout(function(){
card.delete();
clearInterval(interval1);
},350);
};
if(card.hadCut!=true){
for(var i=0;i<pointList.length;i++){
if(card.hadCut==true||pointList[i+1]==undefined) continue;
var point0=pointList[i];
var point1=pointList[i+1];
var x0=point0[0]-dialog.offsetLeft;
var y0=point0[1]-dialog.offsetTop;
var x1=point1[0]-dialog.offsetLeft;
var y1=point1[1]-dialog.offsetTop;
var bool=false;
var x0_card=card.offsetLeft;
var x1_card=card.offsetLeft+card.offsetWidth;
var y0_card=card.offsetTop;
var y1_card=card.offsetTop+card.offsetHeight;
var xiangjiao=function(line1,line2){
var x1=line1[0][0];
var x2=line1[1][0];
var x3=line2[0][0];
var x4=line2[1][0];
var y1=line1[0][1];
var y2=line1[1][1];
var y3=line2[0][1];
var y4=line2[1][1];
if(!(Math.min(x1,x2)<=Math.max(x3,x4)&&Math.min(y3,y4)<=Math.max(y1,y2)&&Math.min(x3,x4)<=Math.max(x1,x2)&&Math.min(y1,y2)<=Math.max(y3,y4))) return false;
else return true;
};
var line=[[x0,y0],[x1,y1]];
if(xiangjiao(line,[[x0_card,y0_card],[x0_card,y1_card]])==true) bool=true;
if(xiangjiao(line,[[x0_card,y1_card],[x1_card,y1_card]])==true) bool=true;
if(xiangjiao(line,[[x1_card,y1_card],[x1_card,y0_card]])==true) bool=true;
if(xiangjiao(line,[[x1_card,y0_card],[x0_card,y0_card]])==true) bool=true;
if(bool){
if(card.name=='du'){
if(lib.config.background_speak) game.playAudio('skill','zhengjing_boom');
finish();
}
else{
if(lib.config.background_speak) game.playAudio('skill','zhengjing_click');
if(!result[card.name]) result[card.name]=0;
result[card.name]++;
};
card.hadCut=true;
card.style.transition='all .3s';
card.style.transform='scale(1.5)';
card.style.opacity=0;
setTimeout(function(){
card.delete();
},350);
clearInterval(interval1);
};
};
};
};
if(dialog.parentNode==undefined) clearInterval(interval1);
},30);
};
interval=setInterval(function(){
if(!_status.paused2){
var num2=[0,1,1,1,1,2,2,3].randomGet();
if(num2>0){
for(var i=0;i<num2;i++){
if(!cards1.length) continue;
var card=cards1.randomGet();
createCard(card);
cards1.remove(card);
if(!cards1.length){
setTimeout(function(){
finish();
},3000);
}
};
};
};
},650);
return dialog;
},
audio:'zhengjing',
enable:'phaseUse',
filter:function(event,player){
return !player.hasSkill('zhengjing3')&&!player.isOnline()&&!player.isOnline2();
},
usable:1,
content:function(){
'step 0'
var cardx={};
var cards=[];
var names=[];
var types=[];
var num=[3,4,6].randomGet();
event.num=num;//定下每张牌切的数量
while(true){
var card=get.cardPile(function(card){
//判定类型是否补充完毕的辅助牌
var card2=get.cardPile(function(card2){
return card2.name!='du'&&!names.includes(card2.name)&&!types.includes(get.type2(card2));
});
//先填补每种类型的牌各一张，然后补充其他的牌
return card.name!='du'&&!names.includes(card.name)&&(!types.includes(get.type2(card))||!card2);
});
if(card){
cards.push(card);
names.push(card.name);
types.push(get.type2(card));
if(get.mode()=='doudizhu'){
if(cards.length==1&&!get.isLuckyStar(player)&&Math.random()<0.33) break;
if(cards.length==2&&!get.isLuckyStar(player)&&Math.random()<0.5) break;
if(cards.length>=3) break;
}
else{
if(cards.length==3&&!get.isLuckyStar(player)&&Math.random()<0.33) break;
if(cards.length==4&&!get.isLuckyStar(player)&&Math.random()<0.5) break;
if(cards.length>=5) break;
}
}
else break;
};
event.cards=cards;
if(!cards.length){event.finish();return;};
for(var i of names) cardx[i]=num;//切的牌
cardx.du=names.length;//炸弹
if(player==game.me&&!_status.auto){
event.dialog=lib.skill.bilibili_zhengjing.createDialog(cardx);
event.switchToAuto=function(){
event._result=event.skillai(event.list);
game.resume();
};
_status.imchoosing=true;
game.pause();
}
else{
event.result={};
for(var i in cardx) event.result[i]=cardx[i];
var str=get.translation(player)+'正在整理经书...';
game.broadcastAll(function(str){
var dialog=ui.create.dialog(str);
dialog.classList.add('center');
setTimeout(function(){
dialog.close();
},5000);
},str);
game.delay(10);
}
'step 1'
_status.imchoosing=false;
if(event.dialog) event.dialog.close();
if(!event.result) event.result=result;
'step 2'
var result=event.result;
for(var i=0;i<cards.length;i++){
if(!result[cards[i].name]||result[cards[i].name]<num) cards.splice(i--,1);
}
if(cards.length){
if(lib.config.background_speak) game.playAudio('skill','zhengjing_finish');
player.showCards(cards,get.translation(player)+'整理出了以下经典');
game.cardsGotoOrdering(cards);
}
else{
game.log(player,'并没有整理出经典');
player.popup('杯具');
event.finish();
}
'step 3'
game.updateRoundNumber();
player.chooseTarget('请选择一名角色','将整理出的经典（'+get.translation(cards)+'）置于其武将牌上',true).set('ai',function(target){
var player=_status.event.player;
if(target.hasSkill('xinfu_pdgyingshi')) return 0;
return -get.attitude(player,target);
});
'step 4'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.line(target,'thunder');
}
'step 5'
if(cards.length==1){
event._result={bool:true,moved:[cards,[]]};
return;
}
var next=player.chooseToMove('整经：请分配整理出的经典',true);
next.set('list',[
['置于'+get.translation(target)+'的武将牌上',cards],
['自己获得'],
]);
next.set('filterMove',function(from,to,moved){
if(moved[0].length==1&&to==1&&from.link==moved[0][0]) return false;
return true;
});
next.set('filterOk',function(moved){
return moved[0].length>0;
});
next.set('processAI',function(list){
var cards=list[0][1].slice(0).sort(function(a,b){
return get.value(a)-get.value(b);
});
return [cards.splice(0,1),cards];
})
'step 6'
if(result.bool){
var cards=result.moved[0],gains=result.moved[1];
target.addSkill('zhengjing2');
target.addToExpansion(cards,'gain2').gaintag.add('zhengjing2');
if(gains.length) player.gain(gains,'gain2');
}
},
ai:{
order:10,
result:{player:1},
threaten:3.2,
},
group:'bilibili_zhengjing_ol',
subSkill:{
ol:{
audio:'zhengjing',
inherit:'zhengjing',
filter:function(event,player){
return !player.hasSkill('zhengjing3')&&player.isOnline();
},
prompt:()=>lib.translate.bilibili_zhengjing_info,
},
},
},
//SP许攸
bilibili_fushi:{
derivation:['bilibili_zezhu','bilibili_chenggong'],
trigger:{global:['dieAfter','phaseBefore','showCharacterAfter']},
filter:function(event,player){
var weis=0;
var quns=0;
for(var i of game.players){
if(i.group=='wei') weis++;
if(i.group=='qun') quns++;
}
var skills=player.additionalSkills.bilibili_fushi;
if(!skills||!skills.length) return weis!=quns;
if(weis==quns) return true;
if(quns>weis&&!skills.includes('bilibili_zezhu')) return true;
if(weis>quns&&!skills.includes('bilibili_chenggong')) return true;
return false;
},
noHidden:true,
forced:true,
content:function(){
var weis=0;
var quns=0;
for(var i of game.players){
if(i.group=='wei') weis++;
if(i.group=='qun') quns++;
}
var skills=player.additionalSkills.bilibili_fushi;
if(skills&&skills.length){
if(weis>quns&&!skills.includes('bilibili_chenggong')) player.addAdditionalSkill('bilibili_fushi',['bilibili_chenggong']);
else if(quns>weis&&!skills.includes('bilibili_zezhu')) player.addAdditionalSkill('bilibili_fushi',['bilibili_zezhu']);
else player.removeAdditionalSkill('bilibili_fushi');
}
else{
if(weis>quns) player.addAdditionalSkill('bilibili_fushi',['bilibili_chenggong']);
if(quns>weis) player.addAdditionalSkill('bilibili_fushi',['bilibili_zezhu']);
}
},
},
bilibili_chenggong:{
audio:'chenggong',
trigger:{global:'useCard'},
filter:function(event,player){
return event.targets&&event.targets.length>1;
},
logTarget:'player',
check:function(event,player){
return get.attitude(player,event.player)>0;
},
content:function(){
trigger.player.draw();
},
},
bilibili_zezhu:{
audio:'zezhu',
enable:'phaseUse',
filterTarget:lib.filter.notMe,
selectTarget:[1,2],
multitarget:true,
multiline:true,
usable:1,
content:function(){
'step 0'
event.num=0;
targets.sortBySeat();
'step 1'
for(var target of targets){
if(target.countCards('he')) player.gainPlayerCard('he',target,true);
else player.draw();
}
'step 2'
var target=targets[num];
event.target=target;
'step 3'
if(player.countCards('he')){
player.chooseCard('择主：交给'+get.translation(target)+'一张牌','he',true).set('ai',function(card){
return -get.value(card);
});
}
else event.finish();
'step 4'
if(result.bool) target.gain(result.cards,player,'give');
'step 5'
if(num<targets.length-1){
event.num++;
event.goto(2);
}
},
ai:{
order:7,
result:{
target:function(player,target){
var att=get.attitude(player,target);
if(att>0&&!target.countCards('he')) return 10;
return get.sgn(att)*get.effect(target,{name:'shunshou_copy2'},player,player);
},
},
},
},
cxy_XiYing:{
audio:'xiying',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return player.countCards('he');
},
direct:true,
content:function(){
'step 0'
event.targets=game.filterPlayer(function(current){
return current!=player;
}).sortBySeat();
player.chooseToDiscard(get.prompt2('cxy_XiYing'),'he').set('ai',function(card){
var player=_status.event.player
var hs=player.getCards('h');
if(hs<3&&player.num('e')==0) return 0;
for(var i=0;i<hs.length;i++){
if(get.tag(hs[i],'damage')){
var val=8-get.value(card);
if(get.tag(card,'damage')) val-=3;
return val;
}
}
return 0;
}).logSkill=['cxy_XiYing',event.targets];
'step 1'
if(!result.bool) event.finish();
'step 2'
event.target=event.targets.shift();
event.target.chooseToDiscard('袭营：请选择弃置一张牌或本回合不能使用牌','he').ai=function(card){
var target=event.target;
if(get.attitude(target,player)>0) return 0;
var h=target.num('h') , e=target.num('e');
var tao=target.countCards('h',{name:'tao'}),
jiu=target.countCards('h',{name:'jiu'});
if(h==0)return 0;
if(tao&&game.hasPlayer(function(current){
return get.attitude(target,current)>2&&current.hp == 1;
})) return 7-get.value(card);
if(jiu&&target.hp==1)return 7-get.value(card);
if(target.hasWuxie())return 5-get.value(card);
if(target.hasShan()){
if(get.distance(player,target,'attack')<=1&&get.damageEffect(target,player,target)<0) return 5-get.value(card);
return 0;
}
return 0;
};
'step 3'
if(!result.bool) event.target.addTempSkill('cxy_XiYing_ban');
if(event.targets.length) event.goto(2);
},
subSkill:{
ban:{
charlotte:true,
mark:true,
intro:{content:'不能使用或打出牌'},
mod:{cardEnabled2:()=>false},
},
},
},
goldenexperience:{
charlotte:true,
trigger:{source:'damageEnd'},
filter:function(event,player){
if(!player.hasEmptySlot()) return false;
if(player==event.player) return false;
if(player.getEquips(event.player.name).length) return false;
return true;
},
direct:true,
content:function(){
var list=[];
for(var i=1;i<6;i++){
if(player.hasEmptySlot(i)) list.push('equip'+i);
}
var suitList=['spade', 'heart', 'club', 'diamond'].randomGet();
var typeList=list.randomGet();
var numberList=[1,2,3,4,5,6,7,8,9,10,11,12,13].randomGet();
var skills=lib.character[trigger.player.name][3]
var card={
type:'equip',
subtype:typeList,
image:'character/'+trigger.player.name,
skills:skills,
distance:{},
filterTarget:function(card,player,target){
return target==player;
},
content:lib.element.content.equipCard,
onEquip:[],
destroy:true,
forceDie:true,
equipDelay:false,
loseDelay:false,
ai:{},
};
var List=[];
if(typeList=='equip1'){
disList=[1,2,3,4,5].randomGet();
card.distance.attackFrom=-disList
List.push('<li>攻击范围：'+disList)
}
if(typeList=='equip3'){
card.distance.globalTo=1
List.push('<li>防御距离+1');
}
if(typeList=='equip4'){
card.distance.globalFrom=-1
List.push('<li>攻击距离+1');
}
lib.card[trigger.player.name]=card;
if(skills.length){
for(var i=0;i<skills.length;i++){
List.push('<li>'+lib.translate[skills[i]]+'<br>'+lib.translate[skills[i]+'_info']);
}
}
lib.translate[trigger.player.name+'_info']=List
player.equip(game.createCard(trigger.player.name,suitList,numberList));
},
},
bilibili_jinfan:{
group:'bilibili_jinfan_buff',
audio:'gnjinfan',
trigger:{player:'phaseDiscardBegin'},
filter:function(event,player){
var cards=player.getExpansions('bilibili_jinfan');
return player.hasCard(function(card){
return !cards.filter(function(cardx){
return get.suit(cardx)==get.suit(card);
}).length;
},'he');
},
forced:true,
content:function(){
'step 0'
player.chooseCard('锦帆：请选择一张牌','将一张牌牌作为“铃”置于武将牌上',function(card,player){
var cards=player.getExpansions('bilibili_jinfan');
return !cards.filter(function(cardx){
return get.suit(cardx)==get.suit(card);
}).length;
},'he',true);
'step 1'
if(result.bool) player.addToExpansion(result.cards,player,'give').gaintag.add('bilibili_jinfan');
},
marktext:'铃',
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
ai:{
effect:{
player:function(card,player){
var cards=player.getExpansions('bilibili_jinfan');
var suit=get.suit(card);
if(cards.filter(function(cardx){
return get.suit(cardx)==get.suit(card);
}).length&&player.getHistory('useCard',function(evt){
return get.suit(evt.card)==get.suit(card);
}).length+player.getHistory('respond',function(evt){
return get.suit(evt.card)==get.suit(card);
}).length==0) return [1,1];
},
},
},
subSkill:{
buff:{
audio:'gnjinfan',
trigger:{player:['useCard','respond']},
filter:function(event,player){
var cards=player.getExpansions('bilibili_jinfan');
if(!cards.filter(function(cardx){
return get.suit(cardx)==get.suit(event.card);
}).length) return false;
return player.getHistory('useCard',function(evt){
return get.suit(evt.card)==get.suit(event.card);
}).indexOf(event)+player.getHistory('respond',function(evt){
return get.suit(evt.card)==get.suit(event.card);
}).indexOf(event)==-1;
},
forced:true,
content:function(){
player.draw();
},
},
},
},
bilibili_sheque:{
audio:'gnsheque',
trigger:{global:'useCard'},
filter:function(event,player){
return event.player!=player&&get.type(event.card)=='equip'&&player.countCards('h',function(card){
return player.canUse(get.autoViewAs({name:'sha'},[card]),event.player,false);
});
},
direct:true,
content:function(){
'step 0'
player.chooseCard(get.prompt2('bilibili_sheque',trigger.player),function(card){
var player=_status.event.player,trigger=_status.event.getTrigger();
return player.canUse(get.autoViewAs({name:'sha'},[card]),trigger.player,false);
}).set('ai',function(card){
var player=_status.event.player,trigger=_status.event.getTrigger();
if(get.effect(trigger.player,{name:'sha'},player,player)<=0) return -1;
return 7-get.value(card);
});
'step 1'
if(result.bool){
player.addSkill('bilibili_sheque_damage');
player.logSkill('bilibili_sheque',trigger.player);
player.useCard(get.autoViewAs({name:'sha'},result.cards),result.cards,trigger.player,false).card.bilibili_sheque=trigger.player;
}
},
subSkill:{
damage:{
charlotte:true,
trigger:{source:'damageSource'},
filter:function(event,player){
return event.card&&event.card.bilibili_sheque&&event.card.bilibili_sheque==event.player;
},
direct:true,
firstDo:true,
content:function(){
player.line(trigger.player);
trigger.player.addTempSkill('drlt_wanglie2');
},
},
},
},
bilibili_chuyuan:{
audio:'chuyuan',
trigger:{global:'damageEnd'},
filter:function(event,player){
return event.player.isIn();
},
locked:false,
logTarget:'player',
content:function(){
'step 0'
trigger.player.draw();
'step 1'
if(trigger.player.countCards('h')) trigger.player.chooseCard('h',true,'储元：请选择一张手牌置于'+get.translation(player)+'的武将牌上');
else event.finish();
'step 2'
trigger.player.lose(result.cards,ui.special,'visible','toStorage');
trigger.player.$give(result.cards,player,false);
game.log(trigger.player,'选择了',result.cards);
player.markAuto('bilibili_chuyuan',result.cards);
},
mod:{
maxHandcard:function(player,num){
return num+player.getStorage('bilibili_chuyuan').length;
},
},
intro:{
content:'cards',
onunmark:'throw',
},
},
bilibili_dengji:{
audio:'dengji',
derivation:['bilibili_tianxing','new_rejianxiong','rerende','rezhiheng','olluanji','olfangquan'],
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
unique:true,
juexingji:true,
skillAnimation:true,
animationColor:'water',
filter:function(event,player){
return player.getStorage('bilibili_chuyuan').length>=3;
},
content:function(){
player.awakenSkill('bilibili_dengji');
player.addSkill('bilibili_tianxing');
player.addSkill('new_rejianxiong');
player.loseMaxHp();
player.gain(player.storage.bilibili_chuyuan,'gain2','fromStorage');
player.unmarkAuto('bilibili_chuyuan',player.storage.bilibili_chuyuan);
},
},
rejianxiong_shen_caopi:{
audio:2,
},
rerende_shen_caopi:{
audio:2,
},
rezhiheng_shen_caopi:{
audio:2,
},
olluanji_shen_caopi:{
audio:2,
},
olfangquan_shen_caopi:{
audio:2,
},
bilibili_tianxing:{
audio:'tianxing',
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
unique:true,
juexingji:true,
skillAnimation:true,
animationColor:'thunder',
filter:function(event,player){
return player.getStorage('bilibili_chuyuan').length>=3;
},
content:function(){
'step 0'
player.awakenSkill('bilibili_tianxing');
player.loseMaxHp();
player.gain(player.storage.bilibili_chuyuan,'gain2','fromStorage');
player.unmarkAuto('bilibili_chuyuan',player.storage.bilibili_chuyuan);
player.removeSkill('bilibili_chuyuan');
player.chooseControl('rerende','rezhiheng','olluanji','olfangquan').set('prompt','选择获得一个技能').set('ai',function(){
var player=_status.event.player;
if(!player.hasSkill('luanji')&&!player.hasSkill('olluanji')&&player.getUseValue({name:'wanjian'})>4) return 'olluanji';
if(!player.hasSkill('rezhiheng')) return 'rezhiheng';
if(!player.hasSkill('rerende')) return 'rerende';
return 'olfangquan';
});
'step 1'
player.addSkillLog(result.control);
},
},
//国战左慈
gz_huashen:{
unique:true,
group:['gz_huashen_trigger','gz_huashen_flash','gz_huashen_remove'],
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'phaseZhunbeiBegin'},
direct:true,
content:function(){
'step 0'
var num=player.getStorage('gz_huashen').length;
if(num>=2) event.goto(3);
'step 1'
var characters=lib.skill.gz_huashen.getCharacter(player).randomGets(5);
player.chooseButton([get.prompt('gz_huashen'),'<div class="text center">选择至多两张武将牌作为“化身”牌</div>',[characters,'character']],[1,2]).set('ai',function(button){
return get.rank(button.link,true);
});
'step 2'
if(result.bool){
player.logSkill('gz_huashen');
lib.skill.gz_huashen.addVisitors(result.links,player);
event.goto(5);
}
else event.finish();
'step 3'
player.chooseButton([get.prompt('gz_huashen'),'<div class="text center">替换一张“化身”牌</div>',[player.getStorage('gz_huashen'),'character']]).set('ai',function(button){
return get.rank(button.link,true);
});
'step 4'
if(result.bool){
player.logSkill('gz_huashen');
lib.skill.gz_huashen.removeVisitors(result.links,player);
lib.skill.gz_huashen.addVisitors(lib.skill.gz_huashen.getCharacter(player).randomGets(1),player);
}
else event.finish();
'step 5'
game.delayx();
},
getCharacter:function(player){
if(!_status.characterlist) lib.skill.pingjian.initList();
return _status.characterlist.filter(function(name){
if(name.indexOf('zuoci')!=-1||!lib.character[name]||!lib.character[name][3]) return false;
return lib.character[name][3].filter(function(skill){
var info=get.info(skill);
return !get.skillCategoriesOf(skill,player).length&&info&&(!info.unique||info.gainable);
}).length;
});
},
getSkills:function(characters,player){
var skills=[];
for(var name of characters){
if(Array.isArray(lib.character[name])){
for(var skill of lib.character[name][3]){
var info=get.info(skill);
if(!get.skillCategoriesOf(skill,player).length&&info&&(!info.unique||info.gainable)) skills.add(skill);
}
}
}
return skills;
},
addVisitors:function(characters,player){
player.addSkillBlocker('gz_huashen');
game.log(player,'获得了'+get.cnNumber(characters.length)+'张','#g“化身”');
game.broadcastAll(function(player,list){
var cards=[];
for(var card of list){
var cardname='huashen_card_'+card;
lib.card[cardname]={
fullimage:true,
image:player.isUnderControl(true)?'character:'+card:'ext:活动武将/image/card/huashen_unknown.jpg'
};
lib.translate[cardname]=player.isUnderControl(true)?get.rawName2(card):' ';
cards.push(game.createCard(cardname,'',''));
}
player.$draw(cards,'nobroadcast');
},player,characters);
player.markAuto('gz_huashen',characters);
var storage=player.getStorage('gz_huashen');
var skills=lib.skill.gz_huashen.getSkills(storage,player);
player.addInvisibleSkill(skills);
},
removeVisitors:function(characters,player){
game.log(player,'移去了','#g“化身”','#y'+get.translation(characters));
game.broadcastAll(function(player,list){
var cards=[];
for(var card of list){
var cardname='huashen_card_'+card;
lib.card[cardname]={
fullimage:true,
image:'character:'+card
};
lib.translate[cardname]=get.rawName2(card);
cards.push(game.createCard(cardname,'',''));
}
player.$throw(cards,'nobroadcast');
},player,characters);
var skills=lib.skill.gz_huashen.getSkills(characters,player);
var characters2=player.getStorage('gz_huashen').slice(0);
characters2.removeArray(characters);
skills.removeArray(lib.skill.gz_huashen.getSkills(characters2,player));
player.unmarkAuto('gz_huashen',characters);
_status.characterlist.addArray(characters);
player.removeInvisibleSkill(skills);
},
onremove:function(player,skill){
lib.skill.gz_huashen.removeVisitors(player.getSkills('gz_huashen'),player);
player.removeSkillBlocker('gz_huashen');
},
skillBlocker:function(skill,player){
if(!player.invisibleSkills.includes(skill)||skill=='gz_huashen') return false;
return !player.hasSkill('gz_huashen');
},
intro:{
mark:function(dialog,storage,player){
if(!storage||!storage.length) return '当前没有“化身”';
if(player.isUnderControl(true)){
dialog.addSmall([storage,'character']);
var skills=lib.skill.gz_huashen.getSkills(storage,player);
if(skills.length) dialog.addText('<li>当前可用技能：'+get.translation(skills),false);
}
else return '共有'+get.cnNumber(storage.length)+'张“化身”';
},
},
subSkill:{
trigger:{
charlotte:true,
trigger:{player:'triggerInvisible'},
filter:function(event,player){
if(event.revealed) return false;
var info=get.info(event.skill);
if(info.charlotte) return false;
var skills=lib.skill.gz_huashen.getSkills(player.getStorage('gz_huashen'),player);
game.expandSkills(skills);
return skills.includes(event.skill);
},
forceDie:true,
priority:12,
forced:true,
popup:false,
content:function(){
'step 0'
if(!get.info(trigger.skill).silent){
var info=get.info(trigger.skill);
var event=trigger,trigger=event._trigger;
var str;
var check=info.check;
if(info.prompt) str=info.prompt;
else{
if(typeof info.logTarget=='string') str=get.prompt(event.skill,trigger[info.logTarget],player);
else if(typeof info.logTarget=='function'){
var logTarget=info.logTarget(trigger,player);
if(get.itemtype(logTarget).indexOf('player')==0) str=get.prompt(event.skill,logTarget,player);
}
else str=get.prompt(event.skill,null,player);
}
if(typeof str=='function') str=str(trigger,player);
var next=player.chooseBool('化身：'+str);
next.set('yes',!info.check||info.check(trigger,player));
next.set('hsskill',event.skill);
next.set('forceDie',true);
next.set('ai',function(){
return _status.event.yes;
});
if(typeof info.prompt2=='function') next.set('prompt2',info.prompt2(trigger,player));
else if(typeof info.prompt2=='string') next.set('prompt2',info.prompt2);
else if(info.prompt2!=false){
if(lib.dynamicTranslate[event.skill]) next.set('prompt2',lib.dynamicTranslate[event.skill](player,event.skill));
else if(lib.translate[event.skill+'_info']) next.set('prompt2',lib.translate[event.skill+'_info']);
}
if(trigger.skillwarn){
if(next.prompt2) next.set('prompt2','<span class="thundertext">'+trigger.skillwarn+'。</span>'+next.prompt2);
else next.set('prompt2',trigger.skillwarn);
}
}
else event.finish();
'step 1'
if(result.bool) trigger.revealed=true;
else{
trigger.untrigger();
trigger.cancelled=true;
}
},
},
flash:{
charlotte:true,
trigger:{player:['useSkill','logSkillBegin']},
filter:function(event,player){
var skill=event.sourceSkill||event.skill;
return player.invisibleSkills.includes(skill)&&lib.skill.gz_huashen.getSkills(player.getStorage('gz_huashen'),player).includes(skill);
},
forceDie:true,
priority:12,
forced:true,
popup:false,
content:function(){
var visitors=player.getStorage('gz_huashen').slice(0);
var shows=visitors.filter(function(name){
return Array.isArray(lib.character[name])&&lib.character[name][3].includes(trigger.sourceSkill);
});
for(var show of shows) player.flashAvatar('gz_huashen',show);
},
},
remove:{
charlotte:true,
trigger:{player:['useSkillAfter','logSkill']},
filter:function(event,player){
var skill=event.sourceSkill||event.skill;
return player.invisibleSkills.includes(skill)&&lib.skill.gz_huashen.getSkills(player.getStorage('gz_huashen'),player).includes(skill);
},
forceDie:true,
priority:12,
forced:true,
popup:false,
content:function(){
var visitors=player.getStorage('gz_huashen').slice(0);
var remove=visitors.filter(function(name){
return Array.isArray(lib.character[name])&&lib.character[name][3].includes(trigger.sourceSkill);
});
lib.skill.gz_huashen.removeVisitors(remove,player);
},
},
},
},
gz_xinsheng:{
unique:true,
audio:'ext:活动武将/audio/skill:2',
trigger:{player:'damageEnd'},
frequent:true,
content:function(){
'step 0'
event.count=trigger.num;
'step 1'
event.count--;
lib.skill.gz_huashen.addVisitors(lib.skill.gz_huashen.getCharacter(player).randomGets(1),player);
'step 2'
if(event.count>0&&player.hasSkill('gz_xinsheng')) player.chooseBool(get.prompt2('gz_xinsheng')).set('frequentSkill','gz_xinsheng');
else event.goto(4);
'step 3'
if(result.bool){
event.count--;
player.logSkill('gz_xinsheng');
event.goto(1);
}
'step 4'
game.delayx();
},
ai:{combo:'gz_huashen'},
},
xinzaiqi:{
count:function(){
var num=0;
game.countPlayer2(function(current){
current.getHistory('lose',function(evt){
if(evt.position==ui.discardPile){
for(var i=0;i<evt.cards.length;i++){
if(get.color(evt.cards[i])=='red') num++;
}
}
})
});
game.getGlobalHistory('cardMove',function(evt){
if(evt.name=='cardsDiscard'){
for(var i=0;i<evt.cards.length;i++){
if(get.color(evt.cards[i])=='red') num++;
}
}
})
return num;
},
audio:'rezaiqi',
direct:true,
filter:function(event,player){
return lib.skill.xinzaiqi.count()>0;
},
trigger:{player:'phaseDiscardEnd'},
content:function(){
'step 0'
player.chooseTarget([1,lib.skill.xinzaiqi.count()],get.prompt2('xinzaiqi')).ai=function(target){
return get.attitude(_status.event.player,target);
};
'step 1'
if(result.bool){
var targets=result.targets;
targets.sortBySeat();
player.line(targets,'fire');
player.logSkill('xinzaiqi',targets);
event.targets=targets;
}
else event.finish();
'step 2'
event.current=targets.shift();
if(player.isHealthy()) event._result={index:0};
else event.current.chooseControl().set('choiceList',[
'摸一张牌',
'令'+get.translation(player)+'回复1点体力',
]).set('ai',function(){
if(get.attitude(event.current,player)>0) return 1;
return 0;
});
'step 3'
if(result.index==1){
event.current.line(player);
player.recover();
}
else event.current.draw();
game.delay();
if(targets.length) event.goto(2);
},
},
wansha_shen_simayi:{audio:2},
old_tianzuo:{
audio:'tianzuo',
inherit:'tianzuo',
group:'tianzuo_rewrite',
},
old_lingce:{
audio:'lingce',
inherit:'lingce',
filter:function(event,player){
return event.card.name=='qizhengxiangsheng'||get.zhinangs().includes(event.card.name);
},
},
old_dinghan:{
audio:'dinghan',
trigger:{target:'useCardToTarget'},
filter:function(event,player){
return get.tag(event.card,'damage')&&!player.getStorage('old_dinghan_used').includes(event.card.name);
},
forced:true,
content:function(){
player.addTempSkill('old_dinghan_used','roundStart');
player.markAuto('old_dinghan_used',[trigger.card.name]);
trigger.targets.remove(player);
trigger.getParent().triggeredTargets2.remove(player);
trigger.untrigger();
},
ai:{threaten:0.4},
subSkill:{used:{charlotte:true,onremove:true}},
},
decadexiwu:{
trigger:{source:'damageBegin1'},
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.notLink();
},
forced:true,
content:function(){
trigger.num++;
},
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return Infinity;
},
attackFrom:function(){
return -Infinity;
},
},
},
decadehongzhuang:{
trigger:{player:['useCard','respond']},
filter:function(event,player){
return event.cards.length==1&&typeof get.number(event.card)=='number'&&get.number(event.card)>0;
},
frequent:true,
content:function(){
player.draw(get.number(trigger.card));
},
},
olddulie:{
audio:'dulie',
trigger:{global:'phaseBefore',player:'enterGame'},
forced:true,
filter:function(event,player){
return (event.name!='phase'||game.phaseNumber==0)&&game.players.length>1&&game.hasPlayer(function(current){
return current!=player&&!current.hasMark('olddulie');
});
},
locked:true,
direct:true,
content:function(){
'step 0'
var num=Math.min(game.countPlayer(function(current){
return current!=player&&!current.hasMark('olddulie');
}),Math.floor(game.players.length/2));
player.chooseTarget(num,true,'请选择【笃烈】的目标','令'+get.cnNumber(num)+'名角色获得“围”标记',lib.filter.notMe).set('ai',function(target){
var player=_status.event.player;
return Math.max(1,get.attitude(player,target))/Math.max(1,get.distance(player,target));
});
'step 1'
if(result.bool){
var targets=result.targets.sortBySeat();
player.logSkill('olddulie',targets);
for(var i of targets) i.addMark('olddulie',1);
game.delayx();
}
},
mod:{
targetInRange:function(card,player,target){
if(card.name=='sha'&&!target.hasMark('olddulie')) return true;
},
},
marktext:'围',
intro:{name:'笃烈/破阵 (围)',name2:'围',content:'mark'},
group:'olddulie_sha',
subSkill:{
sha:{
audio:'dulie',
trigger:{target:'useCardToTarget'},
filter:function(event,player){
return event.card.name=='sha'&&event.player.isIn()&&!event.player.hasMark('olddulie');
},
forced:true,
logTarget:'player',
content:function(){
'step 0'
player.judge(function(result){
if(get.color(result)=='red') return 2;
return -1;
}).judge2=function(result){
return result.bool;
};
'step 1'
if(result.bool){
trigger.targets.remove(player);
trigger.getParent().triggeredTargets2.remove(player);
trigger.untrigger();
}
},
ai:{
effect:{
target:function(card,player,target,current,isLink){
if(card.name=='sha'&&!isLink&&!player.hasMark('olddulie')) return 0.5;
},
},
},
},
},
},
oldpowei:{
audio:'tspowei',
dutySkill:true,
locked:true,
derivation:'old_shenzhu',
group:['oldpowei_achieve','oldpowei_fail','oldpowei_cancel'],
ai:{
combo:'olddulie',
effect:{
player:function(card,player,target){
if(card.name=='sha'&&target.hasMark('olddulie')&&get.attitude(player,target)>=0) return [1,1,0,0];
if(get.tag(card,'damage')&&_status.event.type=='respondShan'&&_status.event.getParent().name=='sha'&&target.hasMark('olddulie')&&get.attitude(target,player)>=0) return [1,1,0,0];
},
},
},
subSkill:{
cancel:{
audio:'tspowei3',
trigger:{source:'damageBegin3'},
logTarget:'player',
filter:function(event,player){
return event.card&&event.card.name=='sha'&&event.player&&
event.player.isIn()&&event.player.hasMark('olddulie');
},
forced:true,
content:function(){
trigger.cancel();
trigger.player.removeMark('olddulie',trigger.player.countMark('olddulie'));
},
},
achieve:{
audio:'tspowei1',
trigger:{player:'useCardAfter'},
forced:true,
skillAnimation:true,
animationColor:'metal',
filter:function(event,player){
return event.card.name=='sha'&&!game.hasPlayer(function(current){
return current.hasMark('olddulie');
});
},
content:function(){
game.log(player,'成功完成使命');
player.awakenSkill('oldpowei');
player.addSkillLog('old_shenzhu');
},
},
fail:{
audio:'tspowei2',
trigger:{player:'dying'},
forced:true,
content:function(){
'step 0'
game.log(player,'使命失败');
player.awakenSkill('oldpowei');
var num=player.countCards('e');
if(num>0) player.chooseToDiscard('e',true,num);
'step 1'
if(player.hp<1) player.recover(1-player.hp);
},
},
},
},
old_shenzhu:{
caidan:function(player){
//十周年虚拟歌姬推送
//整这么多官方的，加点彩蛋很合理吧
var cards=[];
var list=['小杀','小桃','小闪','小酒','小乐','小蛮','小击','小粮','小有','小拆','小箭','小牵'];
var list3=['sha','tao','shan','jiu','lebu','nanman','juedou','bingliang','wuzhong','guohe','wanjian','shunshou'];
var nums=[0,1,2,3,4,5,6,7,8,9,10,11].removeArray(player.old_shenzhuCaiDan||[]);
nums=nums.randomGets(player.name2?2:1);
player.old_shenzhuCaiDan=nums;
nums.sort((a,b)=>a-b);
for(var i=0;i<nums.length;i++){
var num=nums[i];
var name=list3[num];
game.log(player,'得到了','#g'+list[num],'的庇护');
game.broadcastAll(function(player,i,list,num){
player.node[i==0?'avatar':'avatar2'].setBackgroundImage('extension/活动武将/image/备用素材/'+list[num]+'.jpg');
player.node[i==0?'name':'name2'].innerHTML=list[num];
},player,i,list,num);
var card=get.cardPile(function(card){
if(cards.includes(card)) return false;
if(name=='tao') return ['tao','zong'].includes(card.name);
if(name=='jiu') return ['jiu','xionghuangjiu'].includes(card.name);
if(name=='wuzhong') return ['wuzhong','zengbin','sadouchengbing','dongzhuxianji','tongzhougongji'].includes(card.name);
return card.name==name;
});
if(card) cards.push(card);
}
if(cards.length) player.gain(cards,'gain2');
player.addTempSkill('old_shenzhu_return');
},
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return Infinity;
},
},
audio:'shenzhu',
trigger:{player:'useCardAfter'},
filter:function(event,player){
return event.card.name=='sha'&&event.card.isCard&&event.cards.length==1;
},
forced:true,
content:function(){
lib.skill.old_shenzhu.caidan(player);
},
subSkill:{
return:{
charlotte:true,
onremove:function(player){
if(player.name1){
game.broadcastAll(function(player){
player.node.avatar.setBackground(player.name1,'character');
player.node.name.innerHTML=get.slimName(player.name1);
},player);
}
if(player.name2){
game.broadcastAll(function(player){
player.node.avatar2.setBackground(player.name2,'character');
player.node.name2.innerHTML=get.slimName(player.name2);
},player);
}
},
},
},
},
old_yingba:{
audio:'yingba',
enable:'phaseUse',
usable:1,
filter:(event,player)=>(game.hasPlayer((current)=>(current!=player&&current.maxHp>1))),
filterTarget:(card,player,target)=>(target!=player&&target.maxHp>1),
content:function(){
'step 0'
target.loseMaxHp();
'step 1'
if(target.isIn()) target.addMark('old_yingba_mark',1);
player.loseMaxHp();
},
mod:{
cardUsableTarget:function(card,player,target){
if(target.hasMark('old_yingba_mark')) return true;
},
},
ai:{
threaten:4.8,
order:12,
result:{
target:function(player,target){
if(target.isHealthy()) return -3;
if(!target.hasMark('old_yingba_mark')) return -2;
if(target.maxHp<3) return -1;
return 0;
},
},
},
subSkill:{
mark:{
marktext:'定',
intro:{
name:'平定',
content:'mark',
onunmark:true,
},
},
},
},
old_fuhai:{
audio:'scfuhai',
trigger:{player:'useCardToPlayered'},
forced:true,
filter:function(event,player){
return event.target&&event.target.hasMark('old_yingba_mark');
},
logTarget:'target',
content:function(){
trigger.directHit.add(trigger.target);
},
group:['old_fuhai_die','old_fuhai_usea'],
ai:{
combo:'old_yingba',
directHit_ai:true,
skillTagFilter:function(player,tag,arg){
return arg&&arg.target&&arg.target.hasMark('old_yingba_mark')
},
},
subSkill:{
usea:{
audio:'scfuhai',
trigger:{player:'useCardAfter'},
forced:true,
filter:function(event,player){
return lib.skill.old_fuhai_usea.logTarget(event,player).length>0;
},
logTarget:function(event,player){
return event.targets.filter(function(i){
return i.hasMark('old_yingba_mark');
});
},
content:function(){
var num=0;
for(var i of trigger.targets){
var numx=i.countMark('old_yingba_mark');
if(numx){
num+=numx;
i.removeMark('old_yingba_mark',numx);
}
}
if(num) player.gainMaxHp(num);
},
},
die:{
audio:'scfuhai',
trigger:{global:'die'},
forced:true,
filter:function(event,player){
return event.player.countMark('old_yingba_mark')>0;
},
content:function(){
player.gainMaxHp(trigger.player.countMark('old_yingba_mark'));
player.draw(trigger.player.countMark('old_yingba_mark'));
},
},
},
},
old_pinghe:{
audio:'pinghe',
mod:{
maxHandcardBase:function(player){
return player.getDamagedHp();
},
},
locked:false,
trigger:{player:'damageBegin4'},
filter:function(event,player){
return event.source&&event.source!=player&&event.num<player.countCards('h');
},
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
prompt:get.prompt('old_pinghe'),
prompt2:'将'+get.cnNumber(trigger.num)+'张手牌交给一名其他角色并防止伤害'+(player.hasSkill('old_yingba')?'，然后令伤害来源获得等量“平定”标记':''),
selectCard:trigger.num,
filterCard:true,
filterTarget:lib.filter.notMe,
ai1:function(card){
if(get.tag(card,'recover')&&!game.hasPlayer(function(current){
return get.attitude(current,player)>0&&!current.hasSkillTag('nogain');
})) return 0;
return 1/Math.max(0.1,get.value(card));
},
ai2:function(target){
var player=_status.event.player,att=get.attitude(player,target);
if(target.hasSkillTag('nogain')) att/=9;
return 4+att;
},
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('old_pinghe',target);
target.gain(result.cards,player,'giveAuto');
trigger.cancel();
player.loseMaxHp(trigger.num);
if(player.hasSkill('old_yingba')){
trigger.source.addMark('old_yingba_mark',trigger.num);
}
}
},
},
BTkongju:{
audio:'keji',
scareSkill:true,
trigger:{player:'phaseUseEnd'},
frequent:function(event,player){
return player.needsToDiscard();
},
filter:function(event,player){
var history=player.getHistory('useCard').concat(player.getHistory('respond'));
for(var i=0;i<history.length;i++){
if(history[i].card.name=='sha'&&history[i].isPhaseUsing()) return false;
}
return true;
},
content:function(){
player.skip('phaseDiscard');
var targets=game.filterPlayer(function(current){
return current!=player;
}).sortBySeat();
player.line(targets);
for(var i of targets) i.addMark('BTkongju',1);
game.delayx();
},
marktext:'惧',
intro:{name:'恐惧',name2:'惧',content:'mark'},
},
BThouqi:{
trigger:{player:'phaseBeginStart'},
forced:true,
skillAnimation:true,
animationColor:'wood',
filter:function(event,player){
var num=0;
for(var i=0;i<game.players.length;i++) num+=game.players[i].countMark('BTkongju');
return num>=100;
},
content:function(){
var bool=false;
if(player==game.me) bool=true;
else switch(get.mode()){
case 'identity':{
game.showIdentity();
var id1=player.identity;
var id2=game.me.identity;
if(['zhu','zhong','mingzhong'].includes(id1)){
if(['zhu','zhong','mingzhong'].includes(id2)) bool=true;
break;
}
else if(id1=='fan'){
if(id2=='fan') bool=true;
break;
}
break;
}
case 'guozhan':{
if(game.me.isFriendOf(player)) bool=true;
break;
}
case 'versus':{
if(player.side==game.me.side) bool=true;
break;
}
case 'boss':{
if(player.side==game.me.side) bool=true;
break;
}
default:{}
}
game.over(bool);
},
},
bilibili_taoluan:{
audio:'taoluan',
enable:'chooseToUse',
filter:function(event,player){
return event.type!='wuxie'&&event.type!='respondShan'&&!player.hasSkill('bilibili_taoluan3')&&player.countCards('hes')>0;//&&!_status.dying.length;
},
hiddenCard:function(player,name){
return (!player.getStorage('bilibili_taoluan').includes(name)&&player.countCards('hes')>0&&!player.hasSkill('bilibili_taoluan3')&&lib.inpile.includes(name));
},
init:function(player){
if(!player.storage.bilibili_taoluan) player.storage.bilibili_taoluan=[];
},
onremove:true,
chooseButton:{
dialog:function(event,player){
var list=[];
for(var i=0;i<lib.inpile.length;i++){
var name=lib.inpile[i];
if(player.storage.bilibili_taoluan&&player.storage.bilibili_taoluan.includes(name)) continue;
if(name=='sha'){
list.push(['基本','','sha']);
for(var j of lib.inpile_nature) list.push(['基本','','sha',j]);
}
else if(get.type(name)=='trick') list.push(['锦囊','',name]);
else if(get.type(name)=='basic') list.push(['基本','',name]);
}
if(list.length==0) return ui.create.dialog('滔乱已无可用牌');
return ui.create.dialog('滔乱',[list,'vcard']);
},
filter:function(button,player){
return _status.event.getParent().filterCard({name:button.link[2]},player,_status.event.getParent());
},
check:function(button){
var player=_status.event.player;
if(player.countCards('hs',button.link[2])>0) return 0;
if(button.link[2]=='wugu') return 0;
var effect=player.getUseValue(button.link[2]);
if(effect>0) return effect;
return 0;
},
backup:function(links,player){
return {
filterCard:true,
audio:'taoluan',
selectCard:1,
popname:true,
check:function(card){
return 6-get.value(card);
},
position:'hes',
viewAs:{name:links[0][2],nature:links[0][3]},
onuse:function(result,player){
player.storage.bilibili_taoluan.add(result.card.name);
},
}
},
prompt:function(links,player){
return '将一张牌当作'+(get.translation(links[0][3])||'')+get.translation(links[0][2])+'使用';
}
},
ai:{
skillTagFilter:function(player){
if(!player.countCards('hes')||player.hasSkill('bilibili_taoluan3')) return false;
if(!player.storage.bilibili_taoluan.includes('tao')){}
else if(player.isDying()&&!player.storage.bilibili_taoluan.includes('jiu')){}
else return false;
},
order:4,
result:{
player:function(player){
var allshown=true,players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(players[i].ai.shown==0){
allshown=false;
}
if(players[i]!=player&&players[i].countCards('h')&&get.attitude(player,players[i])>0){
return 1;
}
}
if(allshown) return 1;
return 0;
}
},
threaten:4.7,
},
group:['bilibili_taoluan2','bilibili_taoluan4','bilibili_taoluan5'],
},
bilibili_taoluan2:{
trigger:{player:['useCardAfter','respondAfter']},
forced:true,
popup:false,
filter:function(event,player){
return event.skill=='bilibili_taoluan_backup'||event.skill=='bilibili_taoluan5'||event.skill=='bilibili_taoluan4';
},
content:function(){
'step 0'
if(!game.hasPlayer(function(current){
return current!=player&&current.countGainableCards(player,'he')>0;
})){
player.popup('杯具');
player.loseHp();
player.addTempSkill('bilibili_taoluan3');
event.finish();
}
else player.chooseTarget(true,function(card,player,target){
return target!=player&&target.countGainableCards(player,'he')>0;
},'滔乱<br><br><div class="text center">获得一名其他角色的一张牌，如果你获得的牌与你以此法使用的牌类别相同的牌，你失去1点体力且本回合〖滔乱〗失效').set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe_copy2'},player,player);
});
'step 1'
var target=result.targets[0];
event.target=target;
player.line(target,'green');
player.gainPlayerCard(target,true,'he')
'step 2'
if(result.bool){
if(get.type2(trigger.card)==get.type2(result.cards[0])){
player.popup('杯具');
player.loseHp();
player.addTempSkill('bilibili_taoluan3');
}
else player.popup('洗具');
}
},
},
bilibili_taoluan3:{},
bilibili_taoluan4:{
audio:'taoluan',
enable:'chooseToUse',
prompt:'将一张牌当作闪使用',
filter:function(event,player){
return !player.getStorage('bilibili_taoluan').includes('shan')&&!player.hasSkill('bilibili_taoluan3')&&player.countCards('hes');//&&!_status.dying.length;
},
onuse:function(result,player){
player.storage.bilibili_taoluan.add('shan');
},
filterCard:true,
position:'hes',
selectCard:1,
viewAs:{name:'shan'},
ai:{
respondShan:true,
skillTagFilter:function(player){
return player.countCards('hes')&&!player.getStorage('bilibili_taoluan').includes('shan')&&!player.hasSkill('bilibili_taoluan3');
},
}
},
bilibili_taoluan5:{
audio:'taoluan',
enable:'chooseToUse',
prompt:'将一张牌当作无懈可击使用',
viewAsFilter:function(player){
return !player.getStorage('bilibili_taoluan').includes('wuxie')&&!player.hasSkill('bilibili_taoluan3')&&player.countCards('hes');
},
onuse:function(result,player){
player.storage.bilibili_taoluan.add('wuxie');
},
filterCard:true,
position:'hes',
selectCard:1,
viewAs:{name:'wuxie'},
},
bilibili_taoluan_backup:{},
//2013年韩旭爆料版神甘宁
old_jieying:{
unique:true,
group:'old_jieying_die',
audio:'drlt_jieying',
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
return event.name!='phase'||game.phaseNumber==0;
},
direct:true,
content:function(){
player.logSkill('old_jieying',_status.roundStart);
_status.roundStart.addSkill('old_jieying_mark');
},
subSkill:{
mark:{
charlotte:true,
mark:true,
marktext:'营',
intro:{
name:'劫营',
content:'已获得【营】标记',
},
audio:'drlt_jieying',
trigger:{player:['phaseAfter','dieAfter']},
filter:function(event,player){
return game.hasPlayer(function(current){
return current.hasSkill('old_jieying');
});
},
forced:true,
forceDie:true,
content:function(){
'step 0'
player.removeSkill('old_jieying_mark');
player.next.addSkill('old_jieying_mark');
'step 1'
for(var target of game.players){
if(target.hasSkill('old_jieying')) target.phase('old_jieying');
}
},
},
die:{
charlotte:true,
trigger:{player:'die'},
filter:function(event,player){
return !game.hasPlayer(function(current){
return current!=player&&current.hasSkill('old_jieying');
});
},
forceDie:true,
direct:true,
content:function(){
for(var target of game.players) target.removeSkill('old_jieying_mark');
},
},
},
},
old_tongling:{
audio:'drlt_poxi',
trigger:{target:'useCardToTargeted',global:['logSkill','useSkillAfter']},
filter:function(event,player){
if(event.name=='useCardToTargeted') return event.targets.length==1;
if(player==event.player) return false;
var targets=event.targets;
return targets&&targets.includes(player)&&event.type=='player';
},
forced:true,
logTarget:'player',
content:function(){
player.draw(2);
},
},
//老版本赵士兵
oldfanghun:{
audio:'fanghun',
inherit:'fanghun',
trigger:{source:'damageSource'},
},
oldfuhan:{
audio:'fuhan',
trigger:{player:'phaseZhunbeiBegin'},
unique:true,
skillAnimation:true,
forceunique:true,
filter:function(event,player){
return player.storage.fanghun>0;
},
prompt:function(event,player){
var num=player.storage.fanghun2;
num=Math.min(num,game.players.length+game.dead.length);
return get.prompt('oldfuhan')+'（体力上限：'+num+'）';
},
check:function(event,player){
var num=player.storage.fanghun2;
if(num==1) return false;
if(player.hp<=1) return true;
if(num==2) return false;
if(num==3) return player.hp<3&&player.isMinHp();
return true;
},
content:function(){
'step 0'
player.awakenSkill('oldfuhan');
var list;
if(_status.connectMode){
list=get.charactersOL(function(i){
return lib.character[i][1]!='shu';
});
}
else{
list=get.gainableCharacters(function(info){
return info[1]=='shu';
});
}
var players=game.players.concat(game.dead);
for(var i=0;i<players.length;i++){
list.remove(players[i].name);
list.remove(players[i].name1);
list.remove(players[i].name2);
}
player.chooseButton(true).set('ai',function(button){
return get.rank(button.link,true)-lib.character[button.link][2];
}).set('createDialog',['将武将牌替换为一名角色',[list.randomGets(5),'character']]);
'step 1'
var num=player.storage.fanghun2;
num=Math.min(num,game.players.length+game.dead.length);
player.reinit('old_zhaoxiang',result.links[0],num);
},
},
boljingjia:{
derivation:['wushuangfangtianji','shufazijinguan','hongmianbaihuapao','linglongshimandai'],
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
return event.name!='phase'||game.phaseNumber==0;
},
forced:true,
content:function(){
var list=['wushuangfangtianji','shufazijinguan'];
list.push(['hongmianbaihuapao','linglongshimandai'].randomGet());
for(var i of list){
var card=game.createCard2(i,lib.suit.randomGet(),get.rand(1,13));
//player.$gain2(card,false);
//game.delayx();
player.equip(card);
}
},
},
bolaozhan:{
forced:true,
group:['bolaozhan_wuqi','bolaozhan_fangju','bolaozhan_zuoji','bolaozhan_baowu'],
subSkill:{
wuqi:{
mod:{
cardUsable:function(card,player,num){
if(player.getEquips(1).length&&card.name=='sha') return num+1;
},
},
},
fangju:{
trigger:{player:'damageBegin4'},
forced:true,
filter:function(event,player){
return player.getEquips(2).length&&event.num>1;
},
content:function(){
trigger.num=1;
},
},
zuoji:{
trigger:{player:'phaseDrawBegin'},
forced:true,
filter:function(event,player){
return player.getEquips(3).length||player.getEquips(4).length;
},
content:function(){
trigger.num++;
},
},
baowu:{
trigger:{player:'phaseJudgeBefore'},
forced:true,
filter:function(event,player){
return player.getEquips(5).length;
},
content:function(){
trigger.cancel();
game.log(player,'跳过了判定阶段');
},
},
},
},
shenwei:{
mod:{
maxHandcard:function(player,current){
return current+Math.min(3,game.players.length-1);
},
},
audio:2,
trigger:{player:'phaseDrawBegin'},
forced:true,
content:function(){
trigger.num+=Math.min(3,game.players.length-1);
},
},
xiuluo:{
audio:2,
trigger:{player:'phaseZhunbeiBegin'},
direct:true,
filter:function(event,player){
return player.countCards('j')>0;
},
content:function(){
'step 0'
var next=player.discardPlayerCard(player,2,'hj','是否一张手牌来弃置一张花色相同的判定牌？');
next.filterButton=function(button){
var card=button.link;
if(!lib.filter.cardDiscardable(card,player)) return false;
if(ui.selected.buttons.length==0) return true;
if(get.position(ui.selected.buttons[0].link)=='h'){
if(get.position(card)!='j') return false;
}
if(get.position(ui.selected.buttons[0].link)=='j'){
if(get.position(card)!='h') return false;
}
return get.suit(card)==get.suit(ui.selected.buttons[0].link)
};
next.ai=function(button){
var card=button.link;
if(get.position(card)=='h'){
return 11-get.value(card);
}
if(card.name=='lebu') return 5;
if(card.name=='bingliang') return 4;
if(card.name=='guiyoujie') return 3;
return 2;
};
next.logSkill='xiuluo';
'step 1'
if(result.bool&&player.countCards('j')) event.goto(0);
},
},
shenqu:{
audio:2,
group:'shenqu2',
trigger:{global:'phaseZhunbeiBegin'},
filter:function(event,player){
return player.countCards('h')<=player.maxHp;
},
frequent:true,
content:function(){
player.draw(2);
},
},
shenqu2:{
trigger:{player:'damageAfter'},
direct:true,
filter:function(event,player){
return player.hasSkillTag('respondTao')||player.countCards('h','tao')>0;
},
content:function(){
player.chooseToUse({name:'tao'},'神躯：是否使用一张桃？').logSkill='shenqu';
},
},
jiwu:{
init:function(player){
lib.skill.rewansha.audioname.push('boss_lvbu3');
},
derivation:['qiangxix','retieji','decadexuanfeng','rewansha'],
audio:2,
enable:'phaseUse',
filter:function(event,player){
if(player.countCards('h')==0) return false;
if(!player.hasSkill('qiangxix')) return true;
if(!player.hasSkill('retieji')) return true;
if(!player.hasSkill('decadexuanfeng')) return true;
if(!player.hasSkill('rewansha')) return true;
return false;
},
filterCard:true,
position:'he',
check:function(card){
if(get.position(card)=='e'&&_status.event.player.hasSkill('decadexuanfeng')) return 16-get.value(card);
return 7-get.value(card);
},
content:function(){
'step 0'
var list=[];
if(!player.hasSkill('qiangxix')) list.push('qiangxix');
if(!player.hasSkill('retieji')) list.push('retieji');
if(!player.hasSkill('decadexuanfeng')) list.push('decadexuanfeng');
if(!player.hasSkill('rewansha')) list.push('rewansha');
if(list.length==1){
player.addTempSkill(list[0]);
event.finish();
}
else{
player.chooseControl(list,function(){
if(list.includes('decadexuanfeng')&&player.countCards('he',{type:'equip'})) return 'decadexuanfeng';
if(!player.getStat().skill.qiangxix){
if(player.hasSkill('qiangxix')&&player.getEquips(1).length&&list.includes('decadexuanfeng')) return 'decadexuanfeng';
if(list.includes('rewansha')||list.includes('qiangxix')){
var players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(players[i].hp==1&&get.attitude(player,players[i])<0){
if(list.includes('rewansha')) return 'rewansha';
if(list.includes('qiangxix')) return 'qiangxix';
}
}
}
}
if(list.includes('qiangxix')) return 'qiangxix';
if(list.includes('rewansha')) return 'rewansha';
if(list.includes('decadexuanfeng')) return 'decadexuanfeng';
return 'retieji';
}).set('prompt','选择获得一项技能直到回合结束');
}
'step 1'
player.addTempSkill(result.control);
player.popup(get.translation(result.control));
},
ai:{
order:function(){
var player=_status.event.player;
if(player.countCards('e',{type:'equip'})) return 10;
if(!player.getStat().skill.qiangxix){
if(player.hasSkill('qiangxix')&&player.getEquips(1).length&&!player.hasSkill('decadexuanfeng')) return 10;
if(player.hasSkill('rewansha')) return 1;
var players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(players[i].hp==1&&get.attitude(player,players[i])<0) return 10;
}
}
return 1;
},
result:{
player:function(player){
if(player.countCards('e',{type:'equip'})) return 1;
if(!player.getStat().skill.qiangxix){
if(player.hasSkill('qiangxix')&&player.getEquips(1).length&&!player.hasSkill('decadexuanfeng')) return 1;
if(!player.hasSkill('rewansha')||!player.hasSkill('qiangxix')){
var players=game.filterPlayer();
for(var i=0;i<players.length;i++){
if(players[i].hp==1&&get.attitude(player,players[i])<0) return 1;
}
}
}
return 0;
},
},
},
},
BTdunshi:{
audio:'dunshi',
enable:['chooseToUse','chooseToRespond'],
usable:1,
init:function(player,skill){
if(!player.storage[skill]) player.storage[skill]=[['sha','shan','tao','jiu'],0];
},
hiddenCard:function(player,name){
if(player.storage.BTdunshi&&player.storage.BTdunshi[0].includes(name)&&!player.getStat('skill').BTdunshi) return true;
return false;
},
filter:function(event,player){
if(event.type=='wuxie') return false;
var storage=player.storage.BTdunshi;
if(!storage||!storage[0].length) return false;
for(var i of storage[0]){
var card={name:i,isCard:true};
if(event.filterCard(card,player,event)) return true;
}
return false;
},
contentx:function(){
'step 0'
var list,skills=[];
if(get.mode()=='guozhan'){
list=[];
for(var i in lib.characterPack.mode_guozhan) list.push(i);
}
else if(_status.connectMode) list=get.charactersOL();
else{
list=[];
for(var i in lib.character){
if(lib.filter.characterDisabled2(i)||lib.filter.characterDisabled(i)) continue;
list.push(i);
}
}
for(var i of list){
if(i.indexOf('gz_jun')==0) continue;
for(var j of lib.character[i][3]){
var skill=lib.skill[j];
if(target.hasSkill(j)) continue;
if(!skill||skill.zhuSkill) continue;
if(skill.ai&&(skill.ai.combo||skill.ai.notemp||skill.ai.neg)) continue;
var info=get.translation(j);
for(var ix=0;ix<info.length;ix++){
if(/仁|义|礼|智|信/.test(info[ix])==true){
skills.add(j);
break;
}
}
}
}
if(!skills.length){
event.finish();
return;
}
var list=[];
for(var skill of skills){
list.push([
skill,
'<div class="popup text" style="width:calc(100% - 10px);display:inline-block"><div class="skill">【'+get.translation(skill)+'】</div><div>'+lib.translate[skill+'_info']+'</div></div>',
])
}
player.chooseButton([
'遁世：选择令'+(target==player?'自己':get.translation(target))+'获得一个技能',
[list,'textbutton'],
]).set('forced',true);
'step 1'
if(result.bool){
player.line(target);
target.addSkillLog(result.links[0]);
}
},
chooseButton:{
dialog:function(event,player){
var list=[];
var storage=player.storage.BTdunshi;
for(var i of storage[0]) list.push(['基本','',i]);
return ui.create.dialog('遁世',[list,'vcard'],'hidden');
},
filter:function(button,player){
var evt=_status.event.getParent();
return evt.filterCard({name:button.link[2],isCard:true},player,evt);
},
check:function(button){
var card={name:button.link[2]},player=_status.event.player;
if(_status.event.getParent().type!='phase') return 1;
if(card.name=='jiu') return 0;
if(card.name=='sha'&&player.hasSkill('jiu')) return 0;
return player.getUseValue(card,null,true);
},
backup:function(links,player){
return {
audio:'dunshi',
filterCard:function(){return false},
popname:true,
viewAs:{
name:links[0][2],
isCard:true,
},
selectCard:-1,
precontent:function(){
player.addTempSkill('BTdunshi_damage');
player.storage.BTdunshi_damage=event.result.card.name;
},
}
},
prompt:function(links,player){
return '请选择【'+get.translation(links[0][2])+'】的目标';
}
},
ai:{
respondSha:true,
respondShan:true,
skillTagFilter:function(player,tag,arg){
var storage=player.storage.BTdunshi;
if(!storage||!storage[0].length) return false;
if(player.getStat('skill').BTdunshi) return false;
switch(tag){
case 'respondSha': return (_status.event.type!='phase'||(player==game.me||player.isUnderControl()||player.isOnline()))&&storage[0].includes('sha');
case 'respondShan': return storage[0].includes('shan');
case 'save':
if(arg==player&&storage[0].includes('jiu')) return true;
return storage[0].includes('tao');
}
},
order:2,
result:{
player:function(player){
if(_status.event.type=='dying'){
return get.attitude(player,_status.event.dying);
}
return 1;
},
},
},
subSkill:{
backup:{audio:'dunshi'},
damage:{
charlotte:true,
onremove:true,
audio:'dunshi',
trigger:{global:'damageBegin2'},
filter:function(event,player){
return event.source==_status.currentPhase;
},
forced:true,
logTarget:'source',
content:function(){
'step 0'
event.cardname=player.storage.BTdunshi_damage;
player.removeSkill('BTdunshi_damage');
event.target=trigger.source;
event.videoId=lib.status.videoId++;
var func=function(card,id,card2,card3){
var list=[
'防止即将对'+card3+'造成的伤害，并令'+card+'获得一个技能名中包含“仁/义/礼/智/信”的技能',
'从〖遁世〗中删除【'+card2+'】',
'减1点体力上限，然后摸等同于〖遁世〗已删除牌名数的牌',
];
var choiceList=ui.create.dialog('遁世：请选择两项');
choiceList.videoId=id;
for(var i=0;i<list.length;i++){
var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
str+=list[i];
str+='</div>';
var next=choiceList.add(str);
next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
next.firstChild.link=i;
for(var j in lib.element.button){
next[j]=lib.element.button[j];
}
choiceList.buttons.add(next.firstChild);
}
return choiceList;
};
if(player.isOnline2()){
player.send(func,get.translation(trigger.source),event.videoId,get.translation(event.cardname),get.translation(trigger.player));
}
event.dialog=func(get.translation(trigger.source),event.videoId,get.translation(event.cardname),get.translation(trigger.player));
if(player!=game.me||_status.auto){
event.dialog.style.display='none';
}
var next=player.chooseButton();
next.set('dialog',event.videoId);
next.set('forced',true);
next.set('selectButton',2);
next.set('ai',function(button){
var player=_status.event.player;
switch(button.link){
case 0:
if(get.attitude(player,_status.currentPhase)>0) return 3;
return 0;
case 1:
return 1;
case 2:
var num=player.storage.BTdunshi[1];
for(var i of ui.selected.buttons){
if(i.link==1) num++;
}
if(num>0&&player.isDamaged()) return 2;
return 0;
}
});
'step 1'
if(player.isOnline2()){
player.send('closeDialog',event.videoId);
}
event.dialog.close();
event.links=result.links.sort();
for(var i of event.links){
game.log(player,'选择了','#g【遁世】','的','#y选项'+get.cnNumber(i+1,true));
}
if(event.links.includes(0)){
trigger.cancel();
var next=game.createEvent('BTdunshi_gain',false);
next.player=player;
next.target=_status.currentPhase;
next.setContent(lib.skill.BTdunshi.contentx);
}
else event.goto(3);
'step 2'
game.broadcastAll('closeDialog',event.videoId);
target.addSkillLog(result.control);
'step 3'
var storage=player.storage.BTdunshi;
if(event.links.includes(1)){
storage[0].remove(event.cardname);
storage[1]++;
}
if(event.links.includes(2)){
player.loseMaxHp();
if(storage[1]>0) player.draw(storage[1]);
}
},
ai:{
effect:{
player:function(card,player,target){
if(get.tag(card,'damage')&&get.attitude(player,target)>=0) return[0,0.1,0,0.1];
},
},
},
},
},
},
BThuashen:{
init:function(player,skill){
if(!player.storage[skill]) player.storage[skill]={
character:[],
shown:[],
map:{},
}
},
unique:true,
audio:'huashen2',
trigger:{global:'phaseBefore',player:['phaseBegin','phaseEnd','enterGame']},
filter:function(event,player,name){
if(name=='phaseBefore'||name=='enterGame') return event.name!='phase'||game.phaseNumber==0;
return player.storage.BThuashen&&player.storage.BThuashen.character.length>0;
},
direct:true,
content:function(){
'step 0'
if(event.triggername=='phaseBefore'||event.triggername=='enterGame'){
event.logged=true;
player.logSkill('BThuashen');
lib.skill.BThuashen.addFuckShens(player,2,'BThuashen');
}
_status.noclearcountdown=true;
event.videoId=lib.status.videoId++;
var cards=player.storage.BThuashen.character.slice(0);
var skills=[];
var sto=player.storage.BThuashen;
for(var i in player.storage.BThuashen.map){
skills.addArray(player.storage.BThuashen.map[i]);
}
var cond='out';
if(event.triggername=='phaseBegin'){
cond='in';
}
skills.randomSort();
skills.sort(function(a,b){
return get.skillRank(b,cond)-get.skillRank(a,cond);
});
event.aiChoice=skills[0];
if(player.countMark('BTxinsheng')<2&&(event.aiChoice==player.storage.BThuashen.current2||get.skillRank(event.aiChoice,cond)<1)) choice='弃置化身';
else if(event.aiChoice==player.storage.BThuashen.current2||get.skillRank(event.aiChoice,cond)<1) choice='制衡化身';
if(player.isOnline2()){
player.send(function(cards,id){
var dialog=ui.create.dialog('是否发动【化身】？',[cards,'character']);
dialog.videoId=id;
},cards,event.videoId);
}
event.dialog=ui.create.dialog(get.prompt('BThuashen'),[cards,'character']);
event.dialog.videoId=event.videoId;
if(!event.isMine()){
event.dialog.style.display='none';
}
if(event.triggername=='phaseBefore'||event.triggername=='enterGame') event._result={control:'更换技能'};
else{
var choice='更换技能',list=['制衡化身','更换技能'];
if(player.countMark('BTxinsheng')<2&&player.storage.BThuashen.character.length>1){
list.push('弃置化身');
choice='弃置化身';
}
list.push('cancel2');
player.chooseControl(list).set('ai',function(){
return _status.event.choice;
}).set('choice',choice);
}
'step 1'
event.control=result.control;
if(event.control=='cancel2'){
if(player.isOnline2()) player.send('closeDialog',event.videoId);
delete _status.noclearcountdown;
if(!_status.noclearcountdown){
game.stopCountChoose();
}
event.dialog.close();
event.finish();
return;
}
if(!event.logged){
player.logSkill('BThuashen');
event.logged=true;
}
var num=player.maxHp;
var next=player.chooseButton(true).set('dialog',event.videoId);
if(event.control=='制衡化身'){
next.set('selectButton',[1,num]);
next.set('filterButton',function(button){
return button.link!=_status.event.current;
});
next.set('current',player.storage.BThuashen.current);
}
else if(event.control=='弃置化身'){
next.set('selectButton',1);
next.set('filterButton',function(button){
return button.link!=_status.event.current;
});
next.set('current',player.storage.BThuashen.current);
}
else{
next.set('ai',function(button){
return player.storage.BThuashen.map[button.link].includes(_status.event.choice)?2.5:1+Math.random();
});
next.set('choice',event.aiChoice);
}
var prompt;
switch(event.control){
case '制衡化身':
prompt='选择制衡至多'+get.cnNumber(num)+'张化身';
break;
case '更换技能':
prompt='选择要切换的化身';
break;
case '弃置化身':
prompt='选择要弃置的化身';
break;
}
var func=function(id,prompt){
var dialog=get.idDialog(id);
if(dialog){
dialog.content.childNodes[0].innerHTML=prompt;
}
}
if(player.isOnline2()) player.send(func,event.videoId,prompt);
else if(event.isMine()) func(event.videoId,prompt);
'step 2'
if(result.bool&&event.control=='更换技能'){
event.card=result.links[0];
var func=function(card,id){
var dialog=get.idDialog(id);
if(dialog){
for(var i=0;i<dialog.buttons.length;i++){
if(dialog.buttons[i].link==card){
dialog.buttons[i].classList.add('selectedx');
}
else{
dialog.buttons[i].classList.add('unselectable');
}
}
}
}
if(player.isOnline2()){
player.send(func,event.card,event.videoId);
}
else if(event.isMine()){
func(event.card,event.videoId);
}
var list=player.storage.BThuashen.map[event.card].slice(0);
list.push('返回');
player.chooseControl(list).set('choice',event.aiChoice).set('ai',function(){
return _status.event.choice;
});
}
else{
lib.skill.BThuashen.removeFuckShen(player,result.links.slice(0),'BThuashen');
if(event.control=='制衡化身') lib.skill.BThuashen.addFuckShens(player,result.links.length,'BThuashen');
else{
player.addMark('BTxinsheng',1,false);
game.log(player,'的','#g【新生】','已升至',player.countMark('BTxinsheng')+1,'级');
}
}
'step 3'
if(result.control=='返回'){
var func=function(id){
var dialog=get.idDialog(id);
if(dialog){
for(var i=0;i<dialog.buttons.length;i++){
dialog.buttons[i].classList.remove('selectedx');
dialog.buttons[i].classList.remove('unselectable');
}
}
}
if(player.isOnline2()){
player.send(func,event.videoId);
}
else if(event.isMine()){
func(event.videoId);
}
event._result={control:'更换技能'};
event.goto(1);
return;
}
if(player.isOnline2()){
player.send('closeDialog',event.videoId);
}
event.dialog.close();
delete _status.noclearcountdown;
if(!_status.noclearcountdown){
game.stopCountChoose();
}
if(event.control!='更换技能') return;
if(player.storage.BThuashen.current!=event.card){
player.storage.BThuashen.current=event.card;
lib.skill.BThuashen.changeSex(lib.character[event,card][0],player);
player.changeGroup(lib.character[event,card][1]);
}
var link=result.control;
player.storage.BThuashen.current2=link;
if(!player.additionalSkills.BThuashen||!player.additionalSkills.BThuashen.includes(link)){
player.addAdditionalSkill('BThuashen',link);
player.flashAvatar('BThuashen',event.card);
player.storage.BThuashen.shown.push(event.card);
game.log(player,'获得了技能','#g【'+get.translation(link)+'】');
player.popup(link);
player.syncStorage('BThuashen');
player.updateMarks('BThuashen');
}
},
intro:{
onunmark:function(storage,player){
_status.characterlist.addArray(storage.character);
storage.character=[];
storage.shown=[];
},
mark:function(dialog,storage,player){
if(!storage||!storage.character||!storage.character.length) return '没有化身';
var list=storage.character;
dialog.addSmall([list,'character']);
for(var i=0;i<dialog.buttons.length;i++){
var button=dialog.buttons[i];
if(!player.isUnderControl(true)&&!storage.shown.includes(button.link)){
button.node.group.remove();
button.node.hp.remove();
button.node.intro.remove();
button.node.name.innerHTML='未知';
button.node.name.dataset.nature='';
button.style.background='';
button._nointro=true;
button.classList.add('menubg');
}
if(button.link==storage.current) button.classList.add('glow2');
}
var skill=storage.current2;
if(skill) dialog.add('<div><div class="skill">【'+get.translation(lib.translate[skill+'_ab']||get.translation(skill).slice(0,2))+'】</div>'+'<div>'+get.skillInfoTranslation(skill,player)+'</div></div>');
},
content:function(storage,player){
return '共有'+get.cnNumber(storage.character.length)+'张「化身」'
},
markcount:function(storage,player){
if(storage&&storage.character) return storage.character.length;
return 0;
},
},
changeSex:function(sex,player){
game.broadcastAll(function(list){
player.sex=sex;
},sex,player);
game.log(player,'将性别变为了','#y'+get.translation(sex)+'性');
},
addFuckShen:function(player,skill){
if(!player.storage[skill]) return;
if(!_status.characterlist) lib.skill.pingjian.initList();
_status.characterlist.randomSort();
for(var i=0;i<_status.characterlist.length;i++){
var name=_status.characterlist[i];
if(lib.character[name][1]=='shen'||name.indexOf('zuoci')!=-1||name.indexOf('xushao')!=-1||name.indexOf('key')==0||lib.skill.rehuashen.banned.includes(name)||player.storage[skill].character.includes(name)) continue;
var skills=lib.character[name][3];
for(var j=0;j<skills.length;j++){
var info=lib.skill[skills[j]];
if(info.charlotte||(info.unique&&!info.gainable)||info.juexingji||info.limited||info.zhuSkill||info.hiddenSkill||info.dutySkill) skills.splice(j--,1);
}
if(skills.length){
player.storage[skill].character.push(name);
player.storage[skill].map[name]=skills;
_status.characterlist.remove(name);
return name;
}
}
},
addFuckShens:function(player,num,skill){
var list=[];
for(var i=0;i<num;i++){
var name=lib.skill.BThuashen.addFuckShen(player,skill);
if(name) list.push(name);
}
if(list.length){
game.log(player,'获得了',get.cnNumber(list.length)+'张','#g化身');
lib.skill.rehuashen.drawCharacter(player,list);
}
player[player.storage[skill].character.length?'markSkill':'unmarkSkill'](skill);
},
removeFuckShen:function(player,links,skill){
player.storage[skill].character.removeArray(links);
_status.characterlist.addArray(links);
game.log(player,'移去了',get.cnNumber(links.length)+'张','#g化身');
player[player.storage[skill].character.length?'markSkill':'unmarkSkill'](skill);
},
},
BTxinsheng:{
derivation:['BTxinsheng_1','BTxinsheng_2','BThuanhua'],
unique:true,
audio:'xinsheng',
trigger:{player:'damageEnd',source:'damageSource'},
filter:function(event,player,name){
if(name=='damageSource') return player.hasMark('BTxinsheng');
return true;
},
frequent:true,
content:function(){
'step 0'
lib.skill.BThuashen.addFuckShens(player,trigger.num,'BThuashen');
'step 1'
if(player.countMark('BTxinsheng')>=2&&player.storage.BThuashen.character.length>=game.players.length&&!player.hasSkill('BThuanhua')){
player.$fullscreenpop('新生','thunder');
player.addSkillLog('BThuanhua');
}
},
},
BThuanhua:{
unique:true,
audio:'yigui',
enable:'phaseUse',
filter:function(event,player){
if(!player.countCards('hs')) return false;
var storage=player.storage.BThuashen;
if(!storage||storage.character.length<=(storage.current?1:0)) return false;
for(var i of lib.inpile){
if(get.type({name:i})!='basic'&&get.type({name:i})!='trick') continue;
if(event.filterCard({name:i},player,event)) return true;
if(i=='sha'){
for(var j of lib.inpile_nature) if(event.filterCard({name:i,nature:j},player,event)) return true;
}
}
return false;
},
usable:1,
chooseButton:{
select:2,
dialog:function(event,player){
var dialog=ui.create.dialog('幻化','hidden');
dialog.add([player.storage.BThuashen.character,'character']);
var list=[];
for(var name of lib.inpile){
if(get.type({name:name})!='basic'&&get.type({name:name})!='trick') continue;
list.push([get.translation(get.type({name:name})),'',name]);
if(name=='sha'){
for(var nature of lib.inpile_nature) list.push(['基本','','sha',nature]);
}
}
dialog.add([list,'vcard']);
return dialog;
},
check:function(button){
var player=_status.event.player;
if(player.storage.BThuashen.character.includes(button.link)) return (1/lib.skill.old_gengzhan.getNum(button.link))||0.5;
return player.getUseValue({name:button.link[2],nature:button.link[3]});
},
filter:function(button,player){
var evt=_status.event.getParent();
var getBool=function(object){
return player.storage.BThuashen.character.includes(object)?1:-1;
};
if(button.link==player.storage.BThuashen.current) return false;
if(getBool(button.link)==-1&&!evt.filterCard({name:button.link[2],nature:button.link[3]},player,evt)) return false;
return !ui.selected.buttons.length||getBool(ui.selected.buttons[0].link)!=getBool(button.link);
},
backup:function(links,player){
if(player.storage.BThuashen.character.includes(links[1])) links.reverse();
var name=links[1][2];
var nature=links[1][3]||null;
return {
audio:'yigui',
filterCard:true,
check:function(card){
return 8-get.value(card);
},
position:'hs',
popname:true,
viewAs:{
name:name,
nature:nature,
},
onuse:function(result,player){
player.flashAvatar('BThuanhua',links[0]);
lib.skill.BThuashen.removeFuckShen(player,links,'BThuashen');
},
}
},
prompt:function(links,player){
if(player.storage.BThuashen.character.includes(links[1])) links.reverse();
var character=links[0];
var name=links[1][2];
var nature=links[1][3]||null;
return '弃置“'+get.translation(character)+'”并将一张手牌当作'+(get.translation(nature)||'')+get.translation(name)+'使用';
},
},
ai:{
combo:'BTxinsheng',
order:1,
result:{player:1},
},
},
xinyangjie:{
audio:'yangjie',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(function(target){
return player.canCompare(target);
});
},
filterTarget:function(card,player,target){
return player.canCompare(target);
},
usable:1,
content:function(){
'step 0'
player.chooseToCompare(target).set('small',true);
'step 1'
if(!result.bool&&game.hasPlayer(function(current){
return current!=player&&current!=target&&current.canUse({name:'sha',nature:'fire',isCard:true},target,false);
})){
player.chooseTarget('佯解：是否选择另一名其他角色？','令其视为对'+get.translation(target)+'使用一张火【杀】',function(card,player,target){
return target!=player&&target!=_status.event.getParent().target;
}).set('ai',function(target){
var player=_status.event.player,target2=_status.event.getParent().target;
return get.effect(target2,{name:'sha',nature:'fire',isCard:true},target,player);
});
}
else event.finish();
'step 2'
if(result.bool){
var source=result.targets[0];
player.line(source);
game.log(player,'选择了',source);
var card={name:'sha',nature:'fire',isCard:true};
if(target.isIn()&&source.isIn()&&source.canUse(card,target,false)) source.useCard(card,target,false,'noai');
}
},
ai:{
order:3,
result:{
target:function(player,target){
var hs=player.getCards('h').sort(function(a,b){
return a.number-b.number;
});
var ts=target.getCards('h').sort(function(a,b){
return a.number-b.number;
});
if(!hs.length||!ts.length) return 0;
if(hs[0].number<=ts[0].number) return -3;
if(player.countCards('h')>=target.countCards('h')) return -10;
return -1;
},
},
},
},
xinjuxiang:{
audio:'zjjuxiang',
inherit:'zjjuxiang',
content:function(){
player.awakenSkill('xinjuxiang');
trigger.player.damage();
},
},
xinmobilediaodu:{
audio:'spdiaodu',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
return game.hasPlayer(function(target){
return target.countCards('e',function(card){
return game.hasPlayer(function(current){
return current!=player&&current!=target&&current.canEquip(card);
});
});
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('xinmobilediaodu'),function(card,player,target){
return target.countCards('e',function(card){
return game.hasPlayer(function(current){
return current!=player&&current!=target&&current.canEquip(card);
});
});
}).set('ai',function(target){
var player=_status.event.player,att=get.attitude(player,target);
if(att>0){
if(target.hasCard(function(card){
if(get.value(card,target)<=0&&game.hasPlayer(function(current){
return current!=player&&current!=target&&current.canEquip(card,false)&&get.effect(current,card,player,player)>0;
})) return true;
return false;
},'e')) return 2*att;
}
else if(att<0){
if(target.hasCard(function(card){
if(get.value(card,target)>=4.5&&game.hasPlayer(function(current){
return current!=player&&current!=target&&current.canEquip(card)&&get.effect(current,card,player,player)>0;
})) return true;
return false;
},'e')) return -att;
}
return 0;
})
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('xinmobilediaodu',target);
}
else event.finish();
'step 2'
var es=target.getCards('e',function(card){
return game.hasPlayer(function(current){
return current!=target&&current.canEquip(card);
})
});
if(es.length==1) event._result={bool:true,links:es};
else player.chooseButton(['移动'+get.translation(target)+'的一张装备牌',es],true).set('ai',function(button){
var player=_status.event.player,target=_status.event.getParent().target,card=button.link;
if(game.hasPlayer(function(current){
return current!=player&&current!=target&&current.canEquip(card)&&get.effect(current,card,player,player)>0;
})) return -get.value(card,target)*get.attitude(player,target);
return 0;
});
'step 3'
if(result.bool){
event.card=result.links[0];
player.chooseTarget('请选择'+get.translation(event.card)+'的移动目标',true,function(card,player,target){
return target!=player&&target.canEquip(_status.event.card);
}).set('card',event.card).set('ai',function(target){
var evt=_status.event;
return get.effect(target,evt.getParent().card,evt.player,evt.player);
});
}
else event.finish();
'step 4'
if(result.bool){
var target2=result.targets[0];
target.line(target2);
target.$give(card,target2);
game.delay(0.5);
target2.equip(card);
}
else event.finish();
'step 5'
target.draw();
},
},
xindiancai:{
audio:'spdiancai',
trigger:{global:'phaseUseEnd'},
filter:function(event,player){
if(_status.currentPhase==player) return false;
var num=0;
player.getHistory('lose',function(evt){
if(evt.cards2&&evt.getParent('phaseUse')==event) num+=evt.cards2.length;
});
return num>=player.hp&&player.countCards('h')<player.maxHp;
},
frequent:true,
content:function(){
var num=player.maxHp-player.countCards('h');
if(num>0) player.draw(num);
},
},
bilibili_kurou:{
audio:'rekurou',
enable:'phaseUse',
content:function(){
player.loseHp();
player.draw();
},
ai:{
order:8,
result:{
player:function(player){
if(player.countCards('hs',{name:['jiu','tao']})+player.hp>0) return 1;
return 0;
}
},
},
},
bilibili_zhaxiang:{
audio:'zhaxiang',
trigger:{player:['loseHpEnd','damageEnd']},
filter:function(event,player){
return player.countCards('h');
},
direct:true,
content:function(){
'step 0'
player.chooseToDiscard('h',get.prompt('bilibili_zhaxiang'),'弃置任意张手牌并摸等量的牌',[1,player.countCards('h')]).set('ai',lib.skill.zhiheng.check).set('complexCard',true).logSkill='bilibili_zhaxiang';
'step 1'
if(result.bool) player.draw(result.cards.length);
},
},
//合影留念！第一个扩展的第一个贴吧武将！
bilibili_xueji:{
zhuanhuanji:true,
trigger:{global:'roundStart'},
mark:true,
marktext:'☯',
intro:{
content:function(storage){
if(storage) return '新的一轮开始时，你可以失去1点体力上限，并视为使用一张【杀】，若此【杀】造成伤害，你摸两张牌。';
return '新的一轮开始时，你可以失去1点体力，令一名角色于本轮第一次造成的伤害+1。';
},
},
direct:true,
content:function(){
'step 0'
if(player.storage.bilibili_xueji) player.chooseTarget(get.prompt('bilibili_xueji'),'失去1点体力上限并视为使用一张【杀】，若此杀造成伤害，你摸两张牌',function(card,player,target){
return player.canUse({name:'sha',isCard:true},target);
}).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'sha',isCard:true},player,player);
});
else player.chooseTarget(get.prompt('bilibili_xueji'),'失去1点体力，令一名角色于本轮第一次造成的伤害+1').set('ai',function(target){
var player=_status.event.player;
return get.attitude(player,target);
});
'step 1'
event.sha=false;
if(result.bool){
var target=result.targets[0];
player.logSkill('bilibili_xueji',target);
event.sha=true;
if(player.storage.bilibili_xueji){
player.loseMaxHp();
player.useCard({name:'sha',isCard:true},target,false);
}
else{
player.loseHp();
target.addTempSkill('bilibili_xueji2','roundAfter');
}
player.changeZhuanhuanji('bilibili_xueji');
}
else event.finish();
'step 2'
if(event.sha&&game.hasPlayer2(function(current){
return current.getHistory('damage',function(evt){
return evt.getParent(4)==event;
}).length>0
})) player.draw(2);
},
},
bilibili_hanran:{
trigger:{source:'damageSource'},
filter:function(event,player){
return event.player!=player&&event.player.maxHp>player.maxHp;
},
forced:true,
content:function(){
player.gainMaxHp();
},
},
bilibili_xueji2:{
charlotte:true,
mark:true,
intro:{content:'本轮第一次造成的伤害+1'},
trigger:{source:'damageBegin1'},
forced:true,
content:function(){
trigger.num++;
player.removeSkill('bilibili_xueji2');
},
},
//远古武将技能
oldluanji:{
audio:'luanji',
enable:'chooseToUse',
viewAs:{name:'wanjian'},
filterCard:function(card,player){
if(!player.storage.oldluanji) return true;
return !player.storage.oldluanji.includes(get.suit(card));
},
selectCard:2,
check:function(card){
var player=_status.event.player;
var targets=game.filterPlayer(function(current){
return player.canUse('wanjian',current);
});
var num=0;
for(var i=0;i<targets.length;i++){
var eff=get.sgn(get.effect(targets[i],{name:'wanjian'},player,player));
if(targets[i].hp==1){
eff*=1.5;
}
num+=eff;
}
if(!player.needsToDiscard(-1)){
if(targets.length>=7){
if(num<2) return 0;
}
else if(targets.length>=5){
if(num<1.5) return 0;
}
}
return 6-get.value(card);
},
ai:{
basic:{
order:8.9
},
},
group:['oldluanji_count','oldluanji_reset','oldluanji_respond'],
subSkill:{
reset:{
charlotte:true,
trigger:{global:'phaseBefore'},
filter:function(event,player){
return player.storage.oldluanji;
},
direct:true,
firstDo:true,
content:function(){
delete player.storage.oldluanji;
},
},
count:{
charlotte:true,
trigger:{player:'useCard1'},
filter:function(event,player){
return event.skill=='oldluanji';
},
direct:true,
firstDo:true,
content:function(){
if(!player.storage.oldluanji) player.storage.oldluanji=[];
for(var i=0;i<trigger.cards.length;i++){
player.storage.oldluanji.add(get.suit(trigger.cards[i]));
}
},
},
respond:{
charlotte:true,
trigger:{global:'respond'},
filter:function(event,player){
return event.getParent(2).skill=='oldluanji'&&event.player.isDamaged();
},
direct:true,
content:function(){
trigger.player.draw();
},
},
},
},
oldshibei:{
audio:'shibei',
trigger:{player:'damageEnd'},
forced:true,
content:function(){
'step 0'
player.judge(function(card){
if(player.getHistory('damage',function(evt){
return evt!=trigger;
}).length){
if(get.color(card)=='black') return -1;
}
else if(get.color(card)=='red') return 1;
return 0;
});
'step 1'
switch(get.sgn(result.judge)){
case 1:player.recover();break;
case -1:player.loseHp();break;
}
},
},
//张仲景
old_jishi:{
audio:'jishi',
inherit:'jishi',
group:'old_jishi_draw',
subSkill:{
draw:{
audio:'jishi',
trigger:{global:['gainAfter','cardsDiscardAfter']},
forced:true,
filter:function(event,player){
return event.fromRenku==true;
},
content:function(){
player.draw();
},
},
},
},
//神郭嘉
old_tianyi:{
audio:'stianyi',
derivation:'old_zuoxing',
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
juexingji:true,
skillAnimation:true,
animationColor:'gray',
filter:function(event,player){
return !game.hasPlayer(function(current){
return current.getAllHistory('damage').length==0;
});
},
content:function(){
'step 0'
player.awakenSkill('old_tianyi');
player.gainMaxHp(2);
player.recover();
'step 1'
player.chooseTarget(true,'令一名角色获得技能〖佐幸〗').set('ai',function(target){
return get.attitude(_status.event.player,target);
});
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target,'green');
target.storage.old_zuoxing=player;
target.addSkillLog('old_zuoxing');
}
},
},
old_zuoxing:{
audio:'old_zuoxing',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
var target=player.storage.old_zuoxing;
return player.hasSkill('old_zuoxing')&&target&&target.isIn()&&target.maxHp>1;
},
check:function(event,player){
var target=player.storage.old_zuoxing;
if(get.attitude(player,target)<=0) return true;
return target.maxHp>3&&!player.hasJudge('lebu');
},
prompt:function(event,player){
return get.prompt('old_zuoxing')+'（令'+get.translation(player.storage.old_zuoxing)+'减少1点体力上限，'+get.translation(player.storage.old_zuoxing)+'当前体力上限：'+player.storage.old_zuoxing.maxHp+'）';
},
content:function(){
player.line(player.storage.old_zuoxing,'fire');
player.storage.old_zuoxing.loseMaxHp();
player.addTempSkill('old_zuoxing_2');
},
subSkill:{
'2':{
charlotte:true,
audio:'zuoxing',
enable:'phaseUse',
usable:1,
filter:function(event,player){
for(var i of lib.inpile){
if(get.type(i)=='trick'&&event.filterCard({name:i,isCard:true},player,event)) return true;
}
return false;
},
chooseButton:{
dialog:function(event,player){
var list=[];
for(var i of lib.inpile){
if(get.type(i)=='trick'&&event.filterCard({name:i,isCard:true},player,event)) list.push(['锦囊','',i]);
}
return ui.create.dialog('佐幸',[list,'vcard']);
},
check:function(button){
return _status.event.player.getUseValue({name:button.link[2],isCard:true});
},
backup:function(links,player){
return {
audio:'zuoxing',
viewAs:{
name:links[0][2],
isCard:true,
},
filterCard:()=>false,
selectCard:-1,
popname:true,
}
},
prompt:function(links,player){
return '请选择'+get.translation(links[0][2])+'的目标';
},
},
ai:{
order:1,
result:{player:1},
},
},
},
},
//邓士载
bilibili_zhenggong:{
audio:'ext:活动武将/audio/skill:true',
trigger:{global:'phaseBefore'},
filter:function(event,player){
return event.player!=player&&!player.isTurnedOver();
},
check:function(event,player){
if(game.roundNumber<=1&&!game.hasPlayer(function(current){
return get.attitude(player,current)<0
})) return false;
return true;
},
content:function(){
'step 0'
player.phase('bilibili_zhenggong');
'step 1'
player.turnOver();
},
ai:{
expose:0.2,
}
},
bilibili_toudu:{
audio:'ext:活动武将/audio/skill:true',
trigger:{player:'damageEnd'},
filter:function(event,player){
return player.isTurnedOver();
},
direct:true,
content:function(){
'step 0'
player.chooseCardTarget({
prompt:get.prompt2('bilibili_toudu'),
ai1:function(card){
return 6-get.value(card);
},
ai2:function(target){
return get.effect(target,{name:'sha'},player);
},
filterTarget:function(card,player,target){
return lib.filter.targetEnabled({name:'sha'},player,target);
},
});
'step 1'
if(result.bool){
player.logSkill('bilibili_toudu');
player.discard(result.cards);
player.turnOver();
player.useCard({name:'sha'},result.targets,false);
}
}
},
shen_sunquan_skill:{
init:function(player){
player.storage.shen_sunquan_skill=[];
},
derivation:'bolyuheng_faq',
group:'shen_sunquan_skill_mark',
onremove:true,
audio:'yuheng',
trigger:{player:['phaseBegin','useCardAfter','phaseEnd']},
filter:function(event,player){
if(!_status.currentPhase||_status.currentPhase!=player) return false;
if(!player.hasMark('shen_sunquan_skill_count')) return false;
if(event.name=='useCard'){
var list=[],bool=false;
player.getHistory('useCard',function(evt){
if(!bool){
list.push(evt.card);
if(evt.card==event.card) bool=true;
}
});
return list.length==player.countMark('shen_sunquan_skill_count');
}
return true;
},
forced:true,
popup:false,
content:function(){
var num=player.countMark('shen_sunquan_skill_count');
var skills=(lib.config.extension_活动武将_ShenSunQuan?lib.skill.bolyuheng.getList():lib.skill.bolyuheng.skillList);
skills=skills.filter(function(skill){
return !player.hasSkill(skill);
});
if(!skills.length&&!player.storage.shen_sunquan_skill.length&&trigger.name!='phaseEnd'){
event.finish();
return;
}
switch(event.triggername){
case 'phaseBegin':
var gains=skills.randomGets(num);
for(var gain of gains){
player.storage.shen_sunquan_skill.push(gain);
player.addSkillLog(gain);
}
break;
case 'useCardAfter':
var gains=skills.randomGets(num);
for(var gain of gains){
player.storage.shen_sunquan_skill.push(gain);
player.addSkillLog(gain);
}
var removes=player.storage.shen_sunquan_skill.randomGets(num);
for(var remove of removes){
player.storage.shen_sunquan_skill.remove(remove);
player.removeSkill(remove);
player.popup(remove);
game.log(player,'失去了技能','#g【'+get.translation(remove)+'】');
}
break;
case 'phaseEnd':
var removes=player.storage.shen_sunquan_skill.randomGets(num);
for(var remove of removes){
player.storage.shen_sunquan_skill.remove(remove);
player.removeSkill(remove);
player.popup(remove);
game.log(player,'失去了技能','#g【'+get.translation(remove)+'】');
}
break;
}
},
subSkill:{
mark:{
charlotte:true,
trigger:{player:'phaseBeginStart'},
direct:true,
content:function(){
var list=[player.hp,player.getDamagedHp(),game.roundNumber].sort(function(a,b){
return a-b;
});
if(list[1]>0){
player.addMark('shen_sunquan_skill_count',list[1],false);
player.addTempSkill('shen_sunquan_skill_count');
game.log('本回合中位数为','#g'+list[1]);
}
},
},
count:{onremove:true,charlotte:true},
},
},
//爆料款许劭
oldpingjian:{
init:function(player){
player.addSkill('pingjian_check');
player.addInvisibleSkill('oldpingjian_use2');
if(!player.storage.pingjian_check) player.storage.pingjian_check={};
},
onremove:function(player){
player.removeSkill('pingjian_check');
player.removeInvisibleSkill('oldpingjian_use2');
},
audio:'pingjian',
group:['oldpingjian_use','oldpingjian_flash'],
subSkill:{
use:{
audio:'pingjian',
filter:function(event,player){
return player.countCards('he');
},
filterCard:true,
check:(card)=>7-get.value(card),
position:'he',
prompt:'弃置一张牌，检索尝试发动的技能',
inherit:'pingjian_use',
delay:1,
},
use2:{
inherit:'pingjian',
filter:function(event,player){
return player.countCards('he');
},
direct:true,
initList:()=>{},
init:()=>{},
onremove:()=>{},
group:[],
},
flash:{
charlotte:true,
trigger:{player:'triggerInvisible'},
filter:function(event,player){
if(event.revealed) return false;
return event.skill=='oldpingjian_use2';
},
direct:true,
forceDie:true,
content:function(){
'step 0'
player.chooseToDiscard(get.prompt('oldpingjian'),'弃置一张牌，检索尝试发动的技能','he').set('ai',card=>lib.skill.zhiheng.check(card)).logSkill='oldpingjian';
'step 1'
if(result.bool) trigger.revealed=true;
else{
trigger.untrigger();
trigger.cancelled=true;
}
},
},
},
},
//保留所有设定的旧美羊羊
oldhongyi:{
inherit:'hongyi',
audio:'hongyi',
filter:function(event,player){
return player.countCards('he')>=Math.min(2,game.dead.length);
},
filterCard:true,
selectCard:function(){
return Math.min(2,game.dead.length);
},
position:'he',
check:function(card){
var num=Math.min(2,game.dead.length);
if(!num) return 1;
if(num==1) return 7-get.value(card);
return 5-get.value(card);
},
},
//赵襄
xinfanghun:{
intro:{
content:'mark',
name:'梅影',
},
audio:'fanghun',
group:['xinfanghun_sha','xinfanghun_shan'],
subSkill:{
sha:{
audio:'fanghun',
enable:['chooseToUse','chooseToRespond'],
filterCard:{name:'shan'},
viewAs:{name:'sha'},
viewAsFilter:function(player){
if(!player.countCards('hs','shan')) return false;
},
position:'hs',
prompt:'将一张【闪】当【杀】使用或打出',
check:function(){return 1},
onuse:function(links,player){player.addMark('xinfanghun')},
onrespond:function(links,player){player.addMark('xinfanghun')},
ai:{
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondSha')&&current<0) return 0.6
},
},
respondSha:true,
skillTagFilter:function(player){
if(!player.countCards('hs','shan')) return false;
},
order:function(){
return get.order({name:'sha'})+0.1;
},
useful:-1,
value:-1
},
},
shan:{
audio:'fanghun',
enable:['chooseToRespond','chooseToUse'],
filterCard:{name:'sha'},
viewAs:{name:'shan'},
prompt:'将一张【杀】当【闪】使用或打出',
check:function(){return 1},
onuse:function(links,player){player.addMark('xinfanghun')},
onrespond:function(links,player){player.addMark('xinfanghun')},
position:'hs',
viewAsFilter:function(player){
if(!player.countCards('hs','sha')) return false;
},
ai:{
respondShan:true,
skillTagFilter:function(player){
if(!player.countCards('hs','sha')) return false;
},
effect:{
target:function(card,player,target,current){
if(get.tag(card,'respondShan')&&current<0) return 0.6
},
},
order:4,
useful:-1,
value:-1
},
},
},
},
xinfuhan:{
derivation:['ollongdan','new_rewusheng','new_repaoxiao','retieji','xinliegong','xinkuanggu'],
audio:'fuhan',
trigger:{player:'phaseZhunbeiBegin'},
skillAnimation:true,
animationColor:'fire',
forced:true,
unique:true,
juexingji:true,
filter:function(event,player){
return player.storage.xinfanghun>=4;
},
content:function(){
'step 0'
player.awakenSkill('xinfuhan');
player.removeMark('xinfanghun',player.countMark('xinfanghun'));
player.gainMaxHp();
player.recover();
'step 1'
player.removeSkill('xinfanghun');
player.addSkillLog('ollongdan');
'step 2'
var list=[];
for(var i of lib.skill.xinfuhan.derivation){
if(i!='ollongdan'&&!player.hasSkill(i)) list.push(i);
}
if(list.length) player.chooseControl(list).set('prompt','选择获得一项技能');
else event.finish();
'step 3'
var list=['ollongdan'];
if(result.control){
player.addSkillLog(result.control);
list.push(result.control);
}
game.broadcastAll(function(list){
game.expandSkills(list);
for(var i of list){
var info=lib.skill[i];
if(!info) continue;
if(!info.audioname2) info.audioname2={};
info.audioname2.old_zhaoxiang='fanghun';
}
},list);
},
},
old_gengzhan:{
getNum:function(name){
var num=0;
if(name=='litong') num=1;
else switch(game.getRarity(name)){
case 'junk':num=1;break;
case 'rare':num=2;break;
case 'epic':num=3;break;
case 'legend':num=4;break;
}
return num;
},
getCharacter:function(list){
var listx=[],num=0;
for(var name of list){
var numx=lib.skill.old_gengzhan.getNum(name);
if(numx>num){
num=numx;
listx=[name];
}
else if(numx==num) listx.push(name);
}
return listx;
},
},
old_jiebing:{
enable:'phaseUse',
usable:1,
filter:function(event,player){
return game.hasPlayer(function(current){
return player!=current&&current.countCards('h');
});
},
filterTarget:function(card,player,target){
return player!=target&&target.countCards('h');
},
content:function(){
'step 0'
if(!player.storage.old_kuzhan) player.storage.old_kuzhan=[0,0];
if(player.storage.old_kuzhan[0]==0) player.storage.old_kuzhan[0]=1;
else if(!player.hasSkill('old_kuzhan2')) player.storage.old_kuzhan[1]=1;
player.gainPlayerCard(target,'h',Math.min(target.countCards('h'),3),true);
'step 1'
player.addGaintag(result.cards,'old_jiebing');
player.storage.old_jiebing=result.cards;
player.damage(1,'nosource');
player.storage.old_jiebing2=target;
player.addTempSkill('old_jiebing2','phaseUseAfter');
player.addTempSkill('old_kuzhan2');
},
ai:{
order:10,
result:{
player:function(player,target){
if(player.hp<=1) return -1;
return 1;
},
target:function(player,target){
var att=get.attitude(player,target);
if(att<0&&target.countCards('h')>=3&&player.hp>1) return att*(20-target.countCards('h'));
return 0;
}
},
},
},
old_jiebing2:{
mod:{
aiOrder:function(player,card,num){
if(player.storage.old_jiebing.includes(card)) return num+10;
},
},
charlotte:true,
onremove:true,
trigger:{player:'phaseUseEnd'},
filter:function(event,player){
return player.countCards('hes',function(card){
return player.storage.old_jiebing.includes(card);
})>0;
},
direct:true,
content:function(){
var target=player.storage.old_jiebing2,cards=player.getCards('hes',function(card){
return player.storage.old_jiebing.includes(card);
});
player.removeGaintag('old_jiebing');
if(target.iIn()) target.gain(cards,player,'giveAuto');
},
ai:{nokeep:true},
},
old_kuzhan:{
derivation:'old_tuidi',
group:['old_kuzhan_end','old_kuzhan_fail','old_kuzhan_mark'],
dutySkill:true,
init:function(player){
if(!player.storage.old_kuzhan) player.storage.old_kuzhan=[0,0];
},
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
var num=0;
player.getAllHistory('damage',function(evt){
num+=evt.num;
});
return num>=5;
},
forced:true,
skillAnimation:true,
animationColor:'thunder',
content:function(){
'step 0'
player.awakenSkill('old_kuzhan');
player.popup('使命成功','wood');
game.log(player,'成功完成使命');
'step 1'
player.unmarkSkill('old_kuzhan_mark');
player.addSkillLog('old_tuidi');
},
subSkill:{
end:{
charlotte:true,
trigger:{player:'phaseJieshu'},
filter:function(event,player){
if(!player.hasSkill('old_kuzhan2')) player.storage.old_kuzhan=[0,0];
return player.getHistory('sourceDamage').length>0;
},
direct:true,
content:function(){
player.storage.old_kuzhan=[0,0];
},
},
fail:{
trigger:{player:'phaseEnd'},
filter:function(event,player){
var bool=true;
for(var i of player.storage.old_kuzhan){
if(i==0) bool=false;
}
return bool;
},
forced:true,
content:function(){
'step 0'
player.popup('使命失败','fire');
game.log(player,'使命失败');
player.awakenSkill('old_kuzhan');
'step 1'
player.unmarkSkill('old_kuzhan_mark');
},
},
mark:{
charlotte:true,
intro:{content:'本局游戏已受到#点伤害'},
trigger:{player:'damage'},
firstDo:true,
direct:true,
content:function(){
var num=0;
player.getAllHistory('damage',function(evt){
num+=evt.num;
});
player.storage.old_kuzhan_mark=num;
player.markSkill('old_kuzhan_mark');
player.syncStorage('old_kuzhan_mark');
},
},
},
},
old_kuzhan2:{charlotte:true},
old_tuidi:{
trigger:{source:'damageSource'},
filter:function(event,player){
return event.player.isIn()&&event.player!=player&&lib.skill.drlt_jueyan.filter(null,event.player);
},
check:function(event,player){
return get.attitude(player,event.player)<0;
},
logTarget:'player',
content:function(){
var list=[];
for(var i=1;i<=5;i++){
if(trigger.player.hasEnabledSlot(i)) list.add(i);
}
if(list.includes('equip3')&&list.includes('equip4')) list.push('equip3_4');
list.remove('equip3');
list.remove('equip4');
var num=list.randomGet();
if(num!='3_4') trigger.player.disableEquip(num);
else trigger.player.disableEquip(3,4);
},
},
old_qixi:{
init:function(){
lib.card.guohe.storage=lib.card.guohe.content;
},
audio:'sbqixi',
enable:'chooseToUse',
filterCard:function(card){
return get.color(card)=='black';
},
position:'hes',
viewAs:{name:'guohe'},
viewAsFilter:function(player){
if(!player.countCards('hes',{color:'black'})) return false;
},
prompt:'将一张黑色牌当作【过河拆桥】使用',
check:function(card){
if(card.name=='guohe') return 0;
return 6-get.value(card);
},
group:'old_qixi_guohe',
contentx:function(){
if(target.countCards('hej')) target.discard(target.getCards('hej'));
},
subSkill:{
guohe:{
audio:'sbqixi',
trigger:{player:'useCard'},
filter:function(event,player){
return event.card.name=='guohe'&&event.card.isCard&&event.cards.length==1;
},
prompt2:'强化【过河拆桥】的效果',
check:function(event,player){
var target=event.targets[0];
return get.attitude(player,target)<=0;
},
content:function(){
player.addTempSkill('old_qixi_reguohe','useCardAfter');
},
},
reguohe:{
charlotte:true,
init:function(){
lib.card.guohe.content=lib.skill.old_qixi.contentx;
},
onremove:function(){
lib.card.guohe.content=lib.card.guohe.storage;
},
},
},
},
old_fenwei:{
unique:true,
mark:true,
limited:true,
audio:'sbfenwei',
trigger:{global:'useCardToPlayered'},
filter:function(event,player){
if(event.getParent().triggeredTargets3.length>1) return false;
if(get.type(event.card)!='trick') return false;
if(get.info(event.card).multitarget) return false;
if(event.targets.length<2) return false;
return true;
},
direct:true,
skillAnimation:true,
animationColor:'wood',
content:function(){
'step 0'
player.chooseTarget(get.prompt('old_fenwei'),'令'+get.translation(trigger.card)+'对任意名角色无效',[1,trigger.targets.length],function(card,player,target){
return _status.event.targets.includes(target);
}).set('ai',function(target){
var trigger=_status.event.getTrigger();
return -get.effect(target,trigger.card,trigger.player,_status.event.player);
}).set('targets',trigger.targets);
'step 1'
if(result.bool){
player.logSkill('old_fenwei',result.targets);
player.awakenSkill('old_fenwei');
trigger.getParent().excluded.addArray(result.targets);
event.num=Math.min(4,result.targets.length);
}
else event.finish();
'step 2'
var cards=[];
for(var i=0;i<num;i++){
var card=get.cardPile2(function(card){
return !cards.includes(card)&&card.name=='guohe';
});
if(card) cards.push(card);
else break;
}
if(cards.length) player.gain(cards,'gain2');
},
},
//花鬘
old_mansi:{
audio:'mansi',
trigger:{global:'useCardAfter'},
filter:function(event,player){
return event.card.name=='nanman'&&game.countPlayer2(function(current){
return current.getHistory('damage',function(evt){
return evt.getParent(2)==event;
}).length>0;
})>0;
},
frequent:true,
content:function(){
var num=game.countPlayer2(function(current){
return current.getHistory('damage',function(evt){
return evt.getParent(2)==trigger;
}).length>0;
});
player.draw(num);
player.addMark('old_mansi',num,false);
},
intro:{content:'已因此技能获得了#张牌'},
},
old_souying:{
audio:'souying',
trigger:{player:'damageBegin3',source:'damageBegin1'},
filter:function(event,player,name){
if(!player.countCards('h')||player.hasSkill('old_souying2')) return false;
if(name=='damageBegin1'){
if(event.player.sex!='male') return false;
return event.player.getHistory('damage',function(evt){
return evt.source==player;
}).length==1;
}
else{
if(!event.source||event.source.sex!='male') return false;
return player.getHistory('damage',function(evt){
return evt.source==event.source;
}).length==1;
}
},
direct:true,
content:function(){
'step 0'
var next=player.chooseToDiscard();
if(event.triggername=='damageBegin1'){
event.target=trigger.player;
next.set('goon',get.attitude(player,event.target)<0&&!event.target.hasSkillTag('filterDamage',null,{
player:player,
card:trigger.card,
})),
next.set('prompt2','弃置一张手牌，令对其造成的伤害+1');
}
else{
event.target=trigger.source;
next.set('goon',true);
next.set('prompt2','弃置一张手牌，令即将受到的伤害-1');
}
next.set('prompt',get.prompt('old_souying',event.target));
next.set('ai',function(card){
if(_status.event.goon) return 6-get.value(card);
return -1;
});
next.set('logSkill',['old_souying',event.target]);
'step 1'
if(result.bool){
player.addTempSkill('old_souying2');
trigger.num+=(event.triggername=='damageBegin1'?1:-1);
}
},
},
old_souying2:{charlotte:true},
old_zhanyuan:{
unique:true,
audio:'zhanyuan',
derivation:'old_xili',
skillAnimation:true,
animationColor:'soil',
juexingji:true,
forced:true,
filter:function(event,player){
return player.countMark('old_mansi')>7;
},
trigger:{player:'phaseZhunbeiBegin'},
content:function(){
'step 0'
player.awakenSkill('old_zhanyuan');
player.gainMaxHp();
'step 1'
player.chooseTarget('是否失去〖蛮嗣〗，令一名其他男性角色和自己一同获得技能〖系力〗？',function(card,player,target){
return target!=player&&target.sex=='male';
}).ai=function(target){
return 5-get.attitude(_status.event.player,target);
};
'step 2'
if(result.bool){
var target=result.targets[0];
player.line(target,'fire');
player.addSkill('old_xili');
target.addSkill('old_xili');
player.removeSkill('old_mansi');
}
},
},
old_xili:{
trigger:{global:'useCardToPlayered'},
direct:true,
audio:'hmxili',
filter:function(event,player){
return event.player!=player&&event.card.name=='sha'&&event.player.isPhaseUsing()&&event.player.hasSkill('old_xili')&&player.countCards('h');
},
content:function(){
'step 0'
player.chooseToDiscard('是否弃置一张手牌，令'+get.translation(trigger.card)+'对'+get.translation(trigger.target)+'的伤害+1？','h').set('logSkill',['old_xili',trigger.target]).set('goon',function(){
var target=trigger.target;
if(get.attitude(player,target)>=0) return false;
if(trigger.target.hasSkillTag('filterDamage',null,{
player:trigger.player,
card:trigger.card,
})||target.mayHaveShan()) return false;
return true;
}()).ai=function(card){
if(_status.event.goon) return 5-get.value(card);
return -1;
};
'step 1'
if(result.bool){
var id=trigger.target.playerid;
var map=trigger.customArgs;
if(!map[id]) map[id]={};
if(!map[id].extraDamage) map[id].extraDamage=0;
map[id].extraDamage++;
}
},
},
//张琪瑛
olddianhua:{
audio:'xinfu_dianhua',
trigger:{player:['phaseZhunbeiBegin','phaseJieshuBegin']},
filter:function(event,player){
for(var i=0;i<lib.suit.length;i++){
if(player.hasMark('xinfu_falu_'+lib.suit[i])) return true;
}
return false;
},
frequent:true,
content:function(){
'step 0'
var num=0;
for(var i=0;i<lib.suit.length;i++){
if(player.hasMark('xinfu_falu_'+lib.suit[i])) num++;
}
var cards=get.cards(num);
if(lib.config.extension_十周年UI_enable){
var dialog=decadeUI.content.chooseGuanXing(player,cards,cards.length);
dialog.caption='【点化】';
game.broadcast(function(player,cards,callback){
if(!window.decadeUI) return;
var dialog=decadeUI.content.chooseGuanXing(player,cards,cards.length);
dialog.caption='【点化】';
dialog.callback=callback;
},player,cards,dialog.callback);
event.switchToAuto=function(){
var cards=dialog.cards[0].concat();
var cheats=[];
var next=player.getNext();
var friend=(event.triggername=='phaseJieshuBegin'?player.getNext():player);
var judges=friend.node.judges.childNodes;
if(judges.length>0) cheats=decadeUI.get.cheatJudgeCards(cards,judges,friend!=null);
if(friend) cards=decadeUI.get.bestValueCards(cards,friend);
else{
cards.sort(function(a,b){
return get.value(a,next)-get.value(b,next);
});
}
cards=cheats.concat(cards);
var time=500;
for(var i=0;i<cards.length;i++){
setTimeout(function(card,index,finished){
dialog.move(card,index,0);
if(finished) dialog.finishTime(cards.length<=1?250:1000);;
},time,cards[i],i,i>=cards.length-1);
time+=500;
}
}
if(event.isOnline()){
event.player.send(function(){
if(!window.decadeUI&&decadeUI.eventDialog)_status.event.finish();
},event.player);
event.player.wait();
decadeUI.game.wait();
}
else if(!event.isMine()){
event.switchToAuto();
}
event.finish();
return;
}
game.cardsGotoOrdering(cards);
var next=player.chooseToMove('点化：将卡牌以任意顺序置于牌堆顶');
next.set('list',[['牌堆顶',cards]]);
next.set('processAI',function(list){
var check=function(card){
var player=_status.event.player;
var target=(_status.event.name=='phaseZhunbeiBegin'?player:player.next);
var att=get.attitude(player,target);
var judge=player.getCards('j')[cards.length];
if(judge) return get.judge(judge)(card)*att;
return player.getUseValue(card)*att;
};
var cards=list[0][1].slice(0);
cards.sort(function(a,b){
return check(b)*att-check(a)*att;
});
return [cards];
});
next.set('name',event.triggername);
'step 1'
if(result.bool){
var list=result.moved[0].slice(0);
while(list.length){
ui.cardPile.insertBefore(list.pop(),ui.cardPile.firstChild);
}
game.updateRoundNumber();
game.delayx();
}
},
},
oldzhenyi:{
audio:'xinfu_zhenyi',
inherit:'xinfu_zhenyi',
filter:function(event,player){
if(!event.nature) return false;
return player.hasMark('xinfu_falu_diamond');
},
group:['oldzhenyi_spade','oldzhenyi_club','oldzhenyi_heart'],
subSkill:{
spade:{
trigger:{global:'judge'},
filter:function(event,player){
return player.hasMark('xinfu_falu_spade');
},
direct:true,
content:function(){
'step 0'
var str=get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
get.translation(trigger.player.judging[0])+'，是否弃置「紫薇♠」标记并修改判定结果？';
player.chooseControl('黑桃5','红桃5','取消').set('prompt',get.prompt('oldzhenyi')).set('prompt2',str).set('ai',function(){
var judging=_status.event.judging;
var cards={name:judging.name,suit:'spade',number:5};
var cardh={name:judging.name,suit:'heart',number:5};
var results=trigger.judge(cards)-trigger.judge(judging);
var resulth=trigger.judge(cardh)-trigger.judge(judging);
var attitude=get.attitude(player,trigger.player);
if(attitude==0||(resulth==0&&results==0)) return '取消';
if(attitude>0){
if(results>0){
if(resulth>results) return '红桃5';
return '黑桃5';
}
else if(resulth>0) return '红桃5';
return '取消';
}
else{
if(results<0){
if(resulth<results) return '红桃5';
return '黑桃5';
}
else if(resulth<0) return '红桃5';
return '取消';
}
}).set('judging',trigger.player.judging[0]);
'step 1'
if(['黑桃5','红桃5'].includes(result.control)){
player.removeMark('xinfu_falu_spade');
player.logSkill('oldzhenyi',trigger.player);
player.popup(result.control);
game.log(player,'将判定结果改为了','#y'+result.control);
trigger.fixedResult={
suit:result.control=='黑桃5'?'spade':'heart',
color:result.control=='黑桃5'?'black':'red',
number:5,
};
}
},
ai:{
rejudge:true,
tag:{rejudge:1},
},
},
club:{
audio:'xinfu_zhenyi',
inherit:'zhenyi_club',
enable:'chooseToUse',
viewAsFilter:function(player){
if(!player.isDying()) return false;
return player.hasMark('xinfu_falu_club')&&player.countCards('hs');
},
},
heart:{
audio:'xinfu_zhenyi',
trigger:{source:'damageBegin1'},
filter:function(event,player){
return player.hasMark('xinfu_falu_heart');
},
check:function(event,player){
if(get.attitude(player,event.player)>=0) return false;
if(event.player.hasSkillTag('filterDamage',null,{
player:player,
card:event.card,
})) return false;
return player.hasMark('xinfu_falu_spade')||get.color(ui.cardPile.firstChild)=='black';
},
prompt2:function(event){
return '弃置「玉清♥」标记，然后进行判定。若结果为黑色，则对'+get.translation(event.player)+'即将造成的伤害+1。';
},
logTarget:'player',
content:function(){
'step 0'
player.removeMark('xinfu_falu_heart')
player.judge(function(card){
if(get.color(card)=='black') return 4;
return -1;
});
'step 1'
if(result.bool) trigger.num++;
},
},
},
},
ljxc:{
mod:{
maxHandcard:function(player,num){
if(game.roundNumber<=4) return num+game.roundNumber;
},
},
trigger:{source:'damageBegin1'},
charlotte:true,
silent:true,
forced:true,
filter:function(event,player){
if(game.roundNumber<=4) return false;
var evt2=event.getParent('phaseUse');
if(evt2.player!=player) return false;
return player.getHistory('useCard',function(evt){
return evt.card.name=='sha'&&evt.getParent('phaseUse')==evt2;
}).indexOf(event.getParent())==0;
},
content:function(){
trigger.num++;
},
},
xthj:{
trigger:{player:'phaseUseEnd'},
forced:true,
filter:function(event,player){
if(player.getHistory('useCard',function(evt){
return evt.card&&evt.card.name=='sha'&&evt.getParent('phaseUse')==event;
}).length>0) return false;
if(player.getHistory('respond',function(evt){
return evt.card&&evt.card.name=='sha'&&evt.getParent('phaseUse')==event;
}).length>0) return false;
return true;
},
content:function(){
player.addTempSkill('xthj_yingzi',{player:'phaseDrawAfter'});
player.addMark('xthj_yingzi',1,false);
},
subSkill:{
yingzi:{
charlotte:true,
onremove:true,
mark:true,
marktext:'缓',
intro:{content:'下个摸牌阶段多摸#张牌'},
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed&&player.hasMark('xthj_yingzi');
},
forced:true,
content:function(){
trigger.num+=player.countMark('xthj_yingzi');
},
},
},
},
jsdy:{
charlotte:true,
mod:{
aiValue:function(player,card,num){
if(card.name!='sha'&&card.name!='shan') return;
var geti=function(){
var cards=player.getCards('hs',function(card){
return card.name=='sha'||card.name=='shan';
});
if(cards.includes(card)){
return cards.indexOf(card);
}
return cards.length;
};
return Math.max(num,[7,5,5,3][Math.min(geti(),3)]);
},
aiUseful:function(){
return lib.skill.jsdy.mod.aiValue.apply(this,arguments);
},
},
locked:false,
enable:['chooseToUse','chooseToRespond'],
position:'hs',
prompt:'将【杀】当作【闪】，或将【闪】当作的【杀】使用或打出，然后你的下个弃牌阶段的手牌上限-1',
viewAs:function(cards,player){
var name=false;
switch(get.name(cards[0],player)){
case 'sha':name='shan';break;
case 'shan':name='sha';break;
}
if(name) return {name:name};
return null;
},
onuse:function(links,player){
player.addTempSkill('jsdy_less',{player:'phaseDiscardAfter'});
player.addMark('jsdy_less',1,false);
player.markSkill('jsdy_less');
},
onrespond:function(links,player){
player.addTempSkill('jsdy_less',{player:'phaseDiscardAfter'});
player.addMark('jsdy_less',1,false);
player.markSkill('jsdy_less');
},
check:function(card){
var player=_status.event.player;
if(_status.event.type=='phase'){
var max=0;
var name2;
var list=['sha'];
var map={sha:'shan'};
for(var i=0;i<list.length;i++){
var name=list[i];
if(player.countCards('hs',map[name])&&player.getUseValue({name:name})>0){
var temp=get.order({name:name});
if(temp>max){
max=temp;
name2=map[name];
}
}
}
if(name2==get.name(card,player)) return 1;
return 0;
}
return 1;
},
filterCard:function(card,player,event){
event=event||_status.event;
var filter=event._backup.filterCard;
var name=get.name(card,player);
if(name=='sha'&&filter({name:'shan',cards:[card]},player,event)) return true;
if(name=='shan'&&filter({name:'sha',cards:[card]},player,event)) return true;
return false;
},
filter:function(event,player){
var filter=event.filterCard;
if(filter({name:'sha'},player,event)&&player.countCards('hs','shan')) return true;
if(filter({name:'shan'},player,event)&&player.countCards('hs','sha')) return true;
return false;
},
ai:{
respondSha:true,
respondShan:true,
skillTagFilter:function(player,tag){
var name;
switch(tag){
case 'respondSha':name='shan';break;
case 'respondShan':name='sha';break;
}
if(!player.countCards('hs',name)) return false;
},
order:0.01,
},
subSkill:{
less:{
onremove:true,
charlotte:true,
market:'守',
intro:{content:'手牌上限-#'},
mod:{
maxHandcard:function(player,num){
return num-player.countMark('jsdy_less');
},
},
},
},
},
hswc:{
trigger:{global:'damageBefore'},
silent:true,
firstDo:true,
filter:function(event,player){
return !lib.linked.includes(event.nature);
},
content:function(){
game.setNature(trigger,'fire');
},
},
lckf:{
trigger:{player:['useCardAfter','phaseDrawBegin']},
silent:true,
filter:function(event,player){
if(event.name=='phaseDraw') return true;
return player.getHistory('sourceDamage',function(evt){
return evt.card==event.card;
}).length>0;
},
content:function(){
if(trigger.name=='phaseDraw') trigger.num--;
else player.draw();
},
},
zyzw:{
trigger:{player:'phaseBegin'},
silent:true,
content:function(){
'step 0'
player.chooseUseTarget({
name:'juedou',
isCard:true,
storage:{nowuxie:true}
},
'选择一名角色，视为对其使用【决斗】','或点【取消】失去1点体力');
'step 1'
if(!result.bool) player.loseHp();
},
},
sssb:{
mod:{
aiOrder:function(player,card,num){
if(_status.sssb&&_status.sssb%10==9){
if(['sha','tao','guohe','shunshou','tunliang','wuzhong','juedou','yuanjun'].includes(card.name)) return num+15;
}
},
},
trigger:{
player:['useCard1','useCardToTargeted'],
},
silent:true,
filter:function(event,player,name){
if(name=='useCard1') return true;
if(!event.parent.sssb||event.targets.length!=event.parent.triggeredTargets4.length) return false;
if(!event.targets||!event.targets.length||['delay','equip'].includes(get.type(event.card))) return false;
return true;
},
content:function(){
if(event.triggername=='useCard1'){
if(!_status.sssb) _status.sssb=0;
_status.sssb++;
game.broadcastAll(function(num){
if(ui.bolGuanDuInfo) ui.bolGuanDuInfo.innerHTML='当前事件：十胜十败（'+num+'）';
},_status.sssb);
if(_status.sssb%10==0) trigger.sssb=true;
}
else{
trigger.getParent().targets=trigger.getParent().targets.concat(trigger.targets);
trigger.getParent().triggeredTargets4=trigger.getParent().triggeredTargets4.concat(trigger.targets);
}
},
ai:{
result:{
player:function(card,player,target){
if(_status.sssb&&_status.sssb%10==9&&card.name=='tiesuo') return 'zerotarget';
},
},
},
},
yssq:{
charlotte:true,
trigger:{source:'damageBegin2'},
filter:function(event,player){
return event.player.hp>player.hp;
},
forced:true,
silent:true,
content:function(){
trigger.num++;
},
},
scej:{
charlotte:true,
trigger:{player:'phaseJieshu'},
filter:function(event,player){
return lib.skill.scej.filterx(event,player)||lib.skill.scej.filtery(event,player);
},
filterx:function(event,player){
return player.isMaxHp();
},
filtery:function(event,player){
return player.isMaxHandcard();
},
forced:true,
silent:true,
content:function(){
var bool1=lib.skill.scej.filterx(trigger,player);
var bool2=lib.skill.scej.filtery(trigger,player);
if(bool1) player.chooseToDiscard('he',true);
if(bool2) player.loseHp();
},
},
lzlianpian:{
global:'lzlianpian_ai',
audio:'xinfu_lianpian',
trigger:{global:'useCardToPlayered'},
filter:function(event,player){
if(!lib.skill.lztunjiang.filterx(event,player)) return false;
if(!event.targets||!event.targets.length||!event.isFirstTarget||!event.isPhaseUsing(event.player)) return false;
var evt=event.player.getLastUsed(1);
if(!evt||!evt.targets||!evt.targets.length||!evt.isPhaseUsing(event.player)) return false;
for(var i=0;i<event.targets.length;i++){
if(evt.targets.includes(event.targets[i])) return true;
}
return false;
},
frequent:true,
logTarget:'player',
content:function(){
trigger.player.draw();
if(trigger.player!=player) player.addExpose(0.2);
},
subSkill:{
ai:{
mod:{
aiOrder:function(player,card,num){
if(player!=_status.currentPhase||player.getHistory('useCard').length<1||!game.hasPlayer(function(current){
return (get.realAttitude||get.attitude)(current,player)>0&&current.hasSkill('lzlianpian');
})) return;
if(player.isPhaseUsing()){
var evt=player.getLastUsed();
if(evt&&evt.targets&&evt.targets.length&&evt.isPhaseUsing(player)&&game.hasPlayer(function(current){
return evt.targets.includes(current)&&player.canUse(card,current)&&get.effect(current,card,player,player)>0;
})) return num+10;
}
},
},
},
},
//这么臭的苏飞有存在的必要吗
ai:{threaten:4.1145141919810},
},
lztunjiang:{
audio:'sptunjiang',
trigger:{global:'phaseJieshuBegin'},
filter:function(event,player){
return event.player.isIn()&&!event.player.getStat('damage')&&lib.skill.lztunjiang.filterx(event,player);
},
//判定敌友全靠你了
filterx:function(event,player){
if(get.mode()=='identity') return get.attitude(player,event.player)>0;
return event.player.isFriendOf(player);
},
filtery:function(event,player){
if(get.mode()=='identity') return get.attitude(player,event.player)<0;
return event.player.isEnemyOf(player);
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(function(card,player,target){
return target==player||target==_status.event.source;
},'屯江：请选择一个目标令其摸两张牌').set('ai',function(target){
return 114514-target.countCards();
}).set('source',trigger.player);
'step 1'
if(result.targets.length){
player.logSkill('lztunjiang',result.targets[0]);
result.targets[0].draw(2);
}
},
},
lzdianhu:{
audio:'xinfu_dianhu',
inherit:'xinfu_dianhu',
filter:function(event,player){
return game.countPlayer()>1&&(event.name!='phase'||game.phaseNumber==0);
},
content:function(){
'step 0'
player.chooseTarget('请选择【点虎】的目标',lib.translate.lzdianhu_info,true,function(card,player,target){
return target!=player&&!target.hasSkill('lzdianhu2');
}).set('ai',function(target){
var att=get.attitude(_status.event.player,target);
if(att<0) return -att+3;
return Math.random();
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.line(target,'green');
game.log(target,'成为了','#g【点虎】','的目标');
target.storage.lzdianhu2=player;
target.addSkill('lzdianhu2');
}
},
},
lzdianhu2:{
mark:'character',
intro:{content:'当你受到来自$及其友方角色的1点伤害后，伤害来源摸一张牌'},
audio:'xinfu_dianhu',
trigger:{player:'damageAfter'},
forced:true,
charlotte:true,
filter:function(event,player){
if(player.storage.lzdianhu2&&player.storage.lzdianhu2.isIn()){
if(get.mode()=='identity') return get.attitude(player.storage.lzdianhu2,event.source)>0;
return event.source.isFriendOf(player.storage.lzdianhu2);
};
},
content:function(){
var target=player.storage.lzdianhu2;
target.logSkill('lzdianhu',trigger.source);
trigger.source.draw(trigger.num);
},
onremove:true,
},
lzxingzhao:{
derivation:'xunxun',
group:['lzxingzhao_mark','lzxingzhao_xunxun','lzxingzhao_1','lzxingzhao_2'],
mark:true,
intro:{
content:function(storage,player){
var list=game.filterPlayer2(function(target){
return target.isFriendOf(player);
});
var lznum=list.length;
var num=0;
for(var target of list){
target.getAllHistory('sourceDamage',function(evt){
num+=evt.num;
});
}
var str='<li>当前总共造成了';
str+=num;
str+='点伤害。';
if(num<lznum){
str+='<li>距离“所有友方角色视为拥有技能〖恂恂〗”还需要造成';
str+=lznum-num;
str+='点伤害。';
}
if(num>=lznum){
str+='<br><li>所有友方角色视为拥有技能〖恂恂〗。';
}
if(num<lznum*2){
str+='<li>距离“所有友方角色使用装备牌时摸一张牌”还需要造成';
str+=lznum*2-num;
str+='点伤害。';
}
if(num>=lznum*2){
str+='<br><li>所有友方角色使用装备牌时摸一张牌。';
}
if(num<lznum*3){
str+='<li>距离“所有友方角色始终跳过弃牌阶段”还需要造成';
str+=lznum*3-num;
str+='点伤害。';
}
if(num>=lznum*3){
str+='<br><li>所有友方角色始终跳过弃牌阶段。';
}
if(num<lznum*6){
str+='<li>距离“新的一轮开始时，你所属的阵营直接获得游戏胜利”还需要造成';
str+=lznum*6-num;
str+='点伤害。';
}
if(num>=lznum*6){
str+='<br><li>新的一轮开始时，你所属的阵营直接获得游戏胜利。';
}
return str;
},
},
audio:'xinfu_xingzhao',
trigger:{global:'useCard'},
filter:function(event,player){
var list=game.filterPlayer2(function(target){
return target.isFriendOf(player);
});
var lznum=list.length;
var num=0;
for(var target of list){
target.getAllHistory('sourceDamage',function(evt){
num+=evt.num;
});
}
if(get.type(event.card)!='equip') return false;
return num>=lznum*2&&player.getFriends(true).includes(event.player);
},
forced:true,
logTarget:'player',
content:function(){
trigger.player.draw();
},
subSkill:{
mark:{
charlotte:true,
trigger:{global:'damage'},
filter:function(event,player){
var list=game.filterPlayer2(function(target){
return target.isFriendOf(player);
});
var num=0;
for(var target of list){
target.getAllHistory('sourceDamage',function(evt){
num+=evt.num;
});
}
return num>player.countMark('lzxingzhao');
},
priority:114+514-1919+810,
direct:true,
content:function(){
var list=game.filterPlayer2(function(target){
return target.isFriendOf(player);
});
var num=0;
for(var target of list){
target.getAllHistory('sourceDamage',function(evt){
num+=evt.num;
});
}
player.addMark('lzxingzhao',num-player.countMark('lzxingzhao'),false);
},
},
xunxun:{
trigger:{global:'phaseDrawBegin1'},
filter:function(event,player){
var list=game.filterPlayer2(function(target){
return target.isFriendOf(player);
});
var lznum=list.length;
var num=0;
for(var target of list){
target.getAllHistory('sourceDamage',function(evt){
num+=evt.num;
});
}
return num>=lznum&&player.getFriends(true).includes(event.player);
},
direct:true,
content:function(){
'step 0'
trigger.player.chooseBool(get.prompt2('xunxun'));
'step 1'
if(result.bool){
trigger.player.logSkill('lzxingzhao');
var next=game.createEvent('lzxingzhao_xunxun');
next.player=trigger.player;
next.setContent(lib.skill.xunxun.content);
}
/*
'step 1'
if(result.bool){
trigger.player.logSkill('lzxingzhao');
event.cards=get.cards(4);
trigger.player.chooseCardButton(event.cards,2,'选择两张牌置于牌堆顶',true).set('ai',ai.get.buttonValue);
}
else event.finish();
'step 2'
if(result.bool){
var choice=[];
for(var i=0;i<result.links.length;i++){
choice.push(result.links[i]);
cards.remove(result.links[i]);
}
for(var i=0;i<cards.length;i++){
ui.cardPile.appendChild(cards[i]);
}
while(choice.length){
ui.cardPile.insertBefore(choice.pop(),ui.cardPile.firstChild);
}
}
*/
},
},
'1':{
trigger:{global:'roundStart'},
audio:'xinfu_xingzhao2',
filter:function(event,player){
var list=game.filterPlayer2(function(target){
return target.isFriendOf(player);
});
var lznum=list.length;
var num=0;
for(var target of list){
target.getAllHistory('sourceDamage',function(evt){
num+=evt.num;
});
}
return num>=lznum*6;
},
forced:true,
skillAnimation:true,
animationColor:'water',
content:function(){
var bool=false;
if(player==game.me) bool=true;
else switch(get.mode()){
case 'identity':{
game.showIdentity();
var id1=player.identity;
var id2=game.me.identity;
if(['zhu','zhong','mingzhong'].includes(id1)){
if(['zhu','zhong','mingzhong'].includes(id2)) bool=true;
break;
}
else if(id1=='fan'){
if(id2=='fan') bool=true;
break;
}
break;
}
case 'guozhan':{
if(game.me.isFriendOf(player)) bool=true;
break;
}
case 'versus':{
if(player.side==game.me.side) bool=true;
break;
}
case 'boss':{
if(player.side==game.me.side) bool=true;
break;
}
default:{}
}
game.over(bool);
},
},
'2':{
audio:'xinfu_xingzhao2',
trigger:{global:'phaseDiscardBefore'},
filter:function(event,player){
var list=game.filterPlayer2(function(target){
return target.isFriendOf(player);
});
var lznum=list.length;
var num=0;
for(var target of list){
target.getAllHistory('sourceDamage',function(evt){
num+=evt.num;
});
}
return num>=lznum*3&&player.getFriends(true).includes(event.player);
},
forced:true,
logTarget:'player',
content:function(){
trigger.cancel();
game.log(trigger.player,'跳过了弃牌阶段');
},
},
},
},
boss_tz:{
charlotte:true,
subSkill:{
sha:{
charlotte:true,
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+1;
},
},
},
draw:{
charlotte:true,
trigger:{player:'phaseDrawBegin'},
filter:function(event,player){
return !event.numFixed;
},
direct:true,
content:function(){
trigger.num++;
},
},
chongsheng:{
charlotte:true,
unique:true,
enable:'chooseToUse',
mark:true,
limited:true,
skillAnimation:true,
animationColor:'orange',
filter:function(event,player){
if(event.type=='dying'){
if(player!=event.dying) return false;
return true;
}
return false;
},
content:function(){
'step 0'
player.awakenSkill('boss_tz_chongsheng');
player.discard(player.getCards('j'));
'step 1'
player.link(false);
player.turnOver(false);
'step 2'
player.draw(5);
if(player.hp<5)player.recover(5-player.hp);
},
ai:{
order:10,
save:true,
skillTagFilter:function(player,arg,target){
if(player!=target) return false;
},
result:{player:1},
},
},
},
},
boss_yz:{
charlotte:true,
subSkill:{
equip:{
charlotte:true,
trigger:{global:'gameDrawAfter'},
direct:true,
content:function(){
var card=get.cardPile(function(card){
return get.type(card)=='equip';
});
if(card) player.chooseUseTarget(card,true,'nopopup','noanimate');
},
},
sha:{
charlotte:true,
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+1;
},
},
},
shax:{
charlotte:true,
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+1;
},
},
},
draw:{
charlotte:true,
trigger:{player:'phaseDrawBegin'},
filter:function(event,player){
return !event.numFixed;
},
direct:true,
content:function(){
trigger.num++;
},
},
kunshou:{
charlotte:true,
unique:true,
trigger:{player:'dying'},
juexingji:true,
skillAnimation:true,
animationColor:'fire',
forced:true,
content:function(){
'step 0'
player.awakenSkill('boss_yz_kunshou');
'step 1'
if(player.hp<5) player.recover(5-player.hp);
player.drawTo(5);
'step 2'
player.addSkillLog('benghuai');
},
},
},
},
wusheng_jsp_guanyu:{audio:2},
wzdanji:{
derivation:'mashu',
audio:'danji',
skillAnimation:true,
animationColor:'water',
trigger:{player:'phaseZhunbeiBegin'},
forced:true,
unique:true,
juexingji:true,
filter:function(event,player){
var zhu=get.zhu(player);
if(zhu&&zhu.isZhu){
if(lib.translate[zhu.name].indexOf('曹操')!=-1||(zhu.name2&&lib.translate[zhu.name2].indexOf('曹操')!=-1)){
if(player.countCards('h')>player.hp) return true;
}
}
return false;
},
content:function(){
'step 0'
player.awakenSkill('wzdanji');
'step 1'
player.loseMaxHp();
player.addSkillLog('mashu');
},
},
wusheng_guansuo:{audio:2},
dangxian_guansuo:{audio:2},
zhiman_guansuo:{audio:2},
reyingzi_sunce:{audio:2},
yinghun_sunce:{audio:2},
shensu1_xiahouba:{audio:2},
clandaojie_clan_xunshu:{audio:2},
clandaojie_clan_xunchen:{audio:2},
clandaojie_clan_xuncai:{audio:2},
clandaojie_clan_xuncan:{audio:2},
//荀淑
old_shenjun:{
audio:'clanshenjun',
trigger:{global:'useCard'},
filter:function(event,player){
return (event.card.name=='sha'||get.type(event.card)=='trick')&&player.countCards('h',event.card.name)>0;
},
forced:true,
content:function(){
var cards=player.getCards('h',trigger.card.name);
player.showCards(cards,get.translation(player)+'发动了【神君】');
player.addGaintag(cards,'old_shenjun');
for(var name of lib.phaseName){
var evt=_status.event.getParent(name);
if(!evt||evt.name!=name) continue;
player.addTempSkill('old_shenjun_viewAs',name+'After');
break;
}
},
mark:true,
marktext:'君',
intro:{
markcount:function(storage,player){
return player.countCards('h',card=>card.hasGaintag('old_shenjun'));
},
mark:function(dialog,content,player){
var cards=player.getCards('h',card=>card.hasGaintag('old_shenjun'));
if(cards.length) dialog.addAuto(cards);
else return '无展示牌';
},
},
subSkill:{
viewAs:{
charlotte:true,
audio:'clanshenjun',
trigger:{global:['phaseZhunbeiEnd','phaseJudgeEnd','phaseDrawEnd','phaseUseEnd','phaseDiscardEnd','phaseJieshuEnd']},
filter:function(event,player){
return player.countCards('h',card=>card.hasGaintag('old_shenjun'))>0;
},
forced:true,
content:function(){
'step 0'
var cards=player.getCards('h',card=>card.hasGaintag('old_shenjun'));
var list=[],names=[];
for(var card of cards){
var name=get.name(card),nature=get.nature(card);
var namex=name+(nature?nature:'');
if(names.includes(namex)) continue;
if(nature) list.push([get.type(card),'',name,nature]);
else list.push([get.type(card),'',name]);
names.push(namex);
}
list.sort((a,b)=>{
return 100*(lib.inpile.indexOf(a[2])-lib.inpile.indexOf(b[2]))+lib.inpile_nature.indexOf(a[3])-lib.inpile_nature.indexOf(b[3]);
})
player.chooseButton(['###'+'神君：请选择一项'+'###'+'选项一：将'+get.cnNumber(cards.length)+'张牌当下列一张牌使用<br>选项二：失去1点体力',[list,'vcard']]).set('ai',function(button){
var player=_status.event.player;
if(player.hasSkill('old_balong')){
var filter=function(player){
if(!player.countCards('h')) return false;
if(player.countCards('h')>=8) return false;
var typeList=['basic','trick','equip'];
var list=[];
for(var i=0;i<typeList.length;i++){
list.push(player.countCards('h',function(card){
return get.type2(card)==typeList[i];
}));
}
return list[1]>list[0]&&list[1]>list[2];
};
if(filter(player)&&player.countCards('h')<=5&&player.hp+player.countCards('hs',{name:['jiu','tao']})>0) return -1;
}
return player.getUseValue({name:button.link[2],nature:button.link[3]});
});
'step 1'
if(result.bool){
var name=result.links[0][2],nature=result.links[0][3];
var cards=player.getCards('h',card=>card.hasGaintag('old_shenjun'));
game.broadcastAll(function(num,card){
lib.skill.old_shenjun_backup.selectCard=num;
lib.skill.old_shenjun_backup.viewAs=card;
},cards.length,{name:name,nature:nature});
var next=player.chooseToUse();
next.set('openskilldialog','将'+get.cnNumber(cards.length)+'张牌当作'+(nature?get.translation(nature):'')+'【'+get.translation(name)+'】使用');
next.set('norestore',true);
next.set('addCount',false);
next.set('_backupevent','old_shenjun_backup');
next.set('custom',{
add:{},
replace:{window:function(){}}
});
next.backup('old_shenjun_backup');
}
else player.loseHp();
},
},
backup:{
filterCard:function(card){
return get.itemtype(card)=='card';
},
position:'hes',
filterTarget:lib.filter.filterTarget,
check:(card)=>6-get.value(card),
log:false,
precontent:function(){
delete event.result.skill;
},
},
},
},
old_balong:{
audio:'clanbalong',
inherit:'clanbalong',
content:function(){
player.showCards(player.getCards('h'),get.translation(player)+'发动了【八龙】');
player.drawTo(8);
},
},
//荀谌
old_sankuang:{
init:function(player){
player.storage.old_sankuang=[1,1,1];
},
getNum:function(player,source){
var storage=source.storage.old_sankuang;
var list=[3];
var num1=player.countCards('ej');
if(storage[0]) list.push(num1);
var num2=player.getDamagedHp();
if(storage[1]) list.push(num2);
var num3=Math.abs(player.hp-player.countCards('h'));
if(storage[2]) list.push(num3);
list.sort((a,b)=>a-b);
return list.length>1?list[0]:0;
},
findTarget:function(player){
var history=player.getAllHistory('useSkill',function(evt){
return evt.skill=='old_sankuang';
});
if(!history.length) return false;
return history[0].targets[0];
},
audio:'clansankuang',
trigger:{player:'useCardAfter'},
filter:function(event,player){
var card=event.card,type=get.type2(card);
for(var i=player.actionHistory.length-1; i>=0; i--){
var history=player.actionHistory[i].useCard;
for(var evt of history){
if(evt==event) continue;
if(get.type2(evt.card)==type) return false;
}
if(player.actionHistory[i].isRound) break;
}
return true;
},
direct:true,
locked:true,
content:function(event,player){
'step 0'
delete _status.sankuangCheck;
player.chooseTarget('请选择【三恇】的目标',lib.translate.old_sankuang_info,lib.filter.notMe,true).set('ai',function(target){
var player=_status.event.player;
var num=lib.skill.old_sankuang.getNum(target,player);
if(!lib.skill.old_sankuang.findTarget(player)&&game.hasPlayer(function(current){
return player.getFriends().includes(current);
})) return get.attitude(player,target)*((player.getFriends().includes(target)&&target.countCards('h'))?100:1);
else{
if(!game.hasPlayer(function(current){
return get.attitude(player,current)<0&&!lib.skill.old_sankuang.getNum(current,player);
})&&lib.skill.old_sankuang.findTarget(player).countCards('h')&&target==lib.skill.old_sankuang.findTarget(player)){
_status.sankuangCheck=target;
return 100;
}
if(num>0) return get.effect(target,{name:'guohe_copy2'},player,player)*num;
return get.attitude(player,target);
}
}).set('selectTarget',function(){
var player=_status.event.player;
for(var target of game.filterPlayer()){
if(target==player) continue;
target.prompt('三恇'+lib.skill.old_sankuang.getNum(target,player));
}
return 1;
});
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('old_sankuang',target);
player.chooseControl().set('choiceList',[
'令'+get.translation(target)+'获得'+get.translation(trigger.cards),
'令'+get.translation(target)+'交给你至少'+get.cnNumber(lib.skill.old_sankuang.getNum(target,player))+'张牌'
]).set('ai',function(){
if(_status.sankuangCheck&&_status.sankuangCheck==target) return 1;
if(get.attitude(player,target)>0&&!['delay','equip'].includes(_status.event.type)) return 0;
return 1;
}).set('type',get.type(trigger.card));
}
else event.finish();
'step 2'
if(result.index==0&&trigger.cards.length){
target.gain(trigger.cards,'gain2');
event.finish();
return;
}
if(result.index==1&&target.countCards('he')) target.chooseCard('he',[lib.skill.old_sankuang.getNum(target,player),Infinity],true,'交给'+get.translation(player)+'至少'+get.cnNumber(lib.skill.old_sankuang.getNum(target,player))+'张牌').set('ai',function(card){
if(_status.event.att) return 1;
return -get.value(card);
}).set('att',get.attitude(target,player)>0&&lib.skill.old_sankuang.findTarget(player)==target);
'step 3'
if(result.cards.length) player.gain(result.cards,target,'giveAuto');
},
},
old_beishi:{
audio:'clanbeishi',
trigger:{global:['loseAfter','equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter']},
filter:function(event,player){
var list=[player];
if(lib.skill.old_sankuang.findTarget(player)) list.push(lib.skill.old_sankuang.findTarget(player));
return game.hasPlayer(function(current){
if(!list.includes(current)) return false;
var evt=event.getl(current);
return evt&&evt.hs&&evt.hs.length&&current.countCards('h')==0;
});
},
logTarget:function(event,player){
var list=[player];
if(lib.skill.old_sankuang.findTarget(player)) list.push(lib.skill.old_sankuang.findTarget(player));
return game.filterPlayer(function(current){
if(!list.includes(current)) return false;
var evt=event.getl(current);
return evt&&evt.hs&&evt.hs.length&&current.countCards('h')==0;
}).sortBySeat();
},
forced:true,
content:function(){
'step 0'
var storage=player.storage.old_sankuang;
var str1='',str2='',str3='';
for(var i=0;i<game.players.length;i++){
var target=game.players.sortBySeat(player)[i];
if(target==player) continue;
//str1 此角色场上牌数
str1+=get.translation(target);
str1+=target.countCards('ej');
if(i<game.players.length-1) str1+='、';
str2+=get.translation(target);
//str2 此角色已损失体力值
str2+=target.getDamagedHp();
if(i<game.players.length-1) str2+='、';
//str3 此角色体力值与手牌数之差
str3+=get.translation(target);
str3+=Math.abs(target.hp-target.countCards('h'));
if(i<game.players.length-1) str3+='、';
}
var choiceList=[
'场上牌数<br>'+str1+'',
'已损失体力值<br>'+str2+'',
'体力值与手牌数之差<br>'+str3+'',
];
for(var i=0;i<choiceList.length;i++){
if(!storage[i]) choiceList[i]='<span style="opacity:0.5">'+choiceList[i]+'</span>';
}
player.chooseControl().set('prompt','卑势：请选择【三恇】需要删除或复原的选项').set('choiceList',choiceList).set('ai',function(){
var player=_status.event.player,storage=player.storage.old_sankuang;
if(storage[1]==0) return 1;
return [0,2].randomGet();
});
'step 1'
var storage=player.storage.old_sankuang;
game.log(player,(storage[result.index]?'删除':'复原')+'了','#g【三恇】','的第'+get.cnNumber(result.index+1,true)+'项');
if(storage[result.index]) storage[result.index]--;
else storage[result.index]++;
'step 2'
player.recover();
},
ai:{combo:'old_sankuang'},
},
//荀采
old_lieshi:{
hiddenCard:function(player,name){
if(!player.countCards('ej')) return false;
var list=[];
for(var name of lib.inpile){
if(get.type(name)!='delay') continue;
}
for(var i of list){
if(game.hasPlayer(function(current){
return current.countCards('j',function(card){
return card.name==i;
});
})) list.remove(i);
}
if(list.includes(name)&&lib.inpile.includes(name)) return true;
},
audio:'clanlieshi',
enable:'chooseToUse',
filter:function(event,player){
if(!player.countCards('ej')||event.old_lieshi) return false;
var list=[];
for(var name of lib.inpile){
if(get.type(name)!='delay') continue;
if(event.filterCard({name:name},player,event)) list.push(name);
}
for(var i of list){
if(game.hasPlayer(function(current){
return current.countCards('j',function(card){
return card.name==i;
});
})) list.remove(i);
}
return list.length;
},
chooseButton:{
dialog:function(event,player){
var list=[];
for(var name of lib.inpile){
if(get.type(name)!='delay') continue;
if(event.filterCard({name:name},player,event)) list.push(name);
}
for(var i of list){
if(game.hasPlayer(function(current){
return current.countCards('j',function(card){
return card.name==i;
});
})) list.remove(i);
}
return ui.create.dialog('烈誓',[list,'vcard']);
},
filter:function(button,player){
var evt=_status.event.getParent();
return evt.filterCard({
name:button.link[2],
},player,evt);
},
check:function(button){
return _status.event.player.getUseValue({name:button.link[2]});
},
backup:function(links){
return {
viewAs:{name:links[0][2]},
filterCard:()=>false,
selectCard:-1,
precontent:function(){
'step 0'
player.choosePlayerCard(player,'ej','请选择'+get.translation(event.result.card)+'转化的卡牌').set('ai',function(button){
return get.value(button.link)*(get.position(button.link)=='e'?-1:1);
});
'step 1'
if(result.cards){
player.logSkill('old_lieshi');
event.result.cards=result.cards;
}
else{
var evt=event.getParent();
evt.old_lieshi=true;
evt.goto(0);
delete evt.openskilldialog;
return;
}
},
onuse:function(event,player){
player.addTempSkill('old_lieshi_end');
},
}
},
prompt:function(links){
return '请选择'+get.translation(links[0][2])+'的目标';
},
},
ai:{
order:7,
result:{player:1},
},
subSkill:{
end:{
charlotte:true,
trigger:{player:'useCardAfter'},
filter:function(event,player){
return event.skill=='old_lieshi_backup';
},
direct:true,
content:function(){
'step 0'
var target=trigger.targets[0];
event.target=target;
player.line(target);
if(player.storage.old_huanyin){event.goto();return;}
var list=['受到1点火属性伤害','弃置所有【闪】','弃置所有【杀】'],choice=[];
if(player.storage.old_huanyin){
list.reverse();
if(player.countCards('h',{name:'sha'})) choice.push('选项一');
else list[0]='<span style="opacity:0.5">'+list[0]+'（无法执行）</span>';
if(player.countCards('h',{name:'shan'})) choice.push('选项二');
else list[1]='<span style="opacity:0.5">'+list[1]+'（无法执行）</span>';
choice.push('选项三');
}
else{
choice.push('选项一');
if(player.countCards('h',{name:'shan'})) choice.push('选项二');
else list[1]='<span style="opacity:0.5">'+list[1]+'（无法执行）</span>';
if(player.countCards('h',{name:'sha'})) choice.push('选项三');
else list[2]='<span style="opacity:0.5">'+list[2]+'（无法执行）</span>';
}
if(choice.length==1) event._result={bool:true,control:choice[0]};
else player.chooseControl(choice).set('choiceList',list).set('ai',function(){
var choice=_status.event.choice,player=_status.event.player;
if(!player.storage.old_huanyin) return choice[choice.length-1];
return choice[choice.length-2];
}).set('prompt','请选择一项执行，然后'+get.translation(target)+'执行后一项').set('choice',choice);
'step 1'
var index=['选项一','选项二','选项三'].indexOf(result.control);
var list=[[player,index],[target,index+1]];
var bool=player.storage.old_huanyin;
for(var CT of list){
var current=CT[0],num=CT[1];
if(num<=2){
switch(num){
case 0:
if(bool) current.discard(current.getCards('h',{name:'sha'}));
else current.damage(1,'fire');
break;
case 1:
current.discard(current.getCards('h',{name:'shan'}));
break;
case 2:
if(bool) current.damage(1,'fire');
else current.discard(current.getCards('h',{name:'sha'}));
break;
}
}
}
},
},
},
},
old_dianzhan:{
audio:'clandianzhan',
trigger:{player:'useCardAfter'},
filter:function(event,player){
if(!lib.suit.includes(get.suit(event.card))) return false;
var card=event.card,suit=get.suit(card);
for(var i=player.actionHistory.length-1; i>=0; i--){
var history=player.actionHistory[i].useCard;
for(var evt of history){
if(evt==event) continue;
if(get.suit(evt.card)==suit) return false;
}
if(player.actionHistory[i].isRound) break;
}
return true;
},
forced:true,
filter_x:function(event,player){
if(!get.suit(event.card)) return false;
return player.countCards('h',{suit:get.suit(event.card)});
},
content_x:function(){
'step 0'
player.chooseCard('h','请重铸一张'+get.translation(get.suit(card))+'牌',true,function(cardx,player){
return get.suit(cardx)==_status.event.suit&&player.canRecast(cardx);
}).set('suit',get.suit(card));
'step 1'
if(result.bool) player.recast(result.cards);
},
content:function(){
'step 0'
if(player.storage.old_huanyin) player.draw();
else if(lib.skill.old_dianzhan.filter_x(trigger,player)){
var next=game.createEvent('old_dianzhan_x');
next.player=player;
next.card=trigger.card;
next.setContent(lib.skill.old_dianzhan.content_x);
}
else event.finish();
'step 1'
game.delayx();
'step 2'
if(!player.isLinked()&&trigger.targets&&trigger.targets.length==1) player.link(true);
else event.finish();
'step 3'
game.delayx();
'step 4'
if(!player.storage.old_huanyin) player.draw();
else if(lib.skill.old_dianzhan.filter_x(trigger,player)){
var next=game.createEvent('old_dianzhan_x');
next.player=player;
next.card=trigger.card;
next.setContent(lib.skill.old_dianzhan.content_x);
}
},
},
old_huanyin:{
audio:'clanhuanyin',
trigger:{player:'dying'},
forced:true,
content:function(){
'step 0'
if(!player.storage.old_huanyin) player.storage.old_huanyin=true;
else player.storage.old_huanyin=false;
game.log(player,'倒置了技能','#g【烈誓】','和','#g【点盏】');
'step 1'
if(player.countCards('h')<4) player.drawTo(4);
},
},
//荀粲
old_yunshen:{
audio:'clanyunshen',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(function(target){
return target.isDamaged()&&target!=player;
});
},
filterTarget:function(card,player,target){
return target.isDamaged()&&target!=player;
},
usable:2,
content:function(){
'step 0'
target.recover();
'step 1'
var str=get.translation(target);
if(player.hasSkill('old_yunshen_0')) result.index=1;
else if(player.hasSkill('old_yunshen_1')) result.index=0;
else player.chooseControl().set('choiceList',[
'视为'+str+'对自己使用一张冰【杀】',
'视为对'+str+'一张使用冰【杀】',
]).set('ai',function(){
var evt=_status.event.getParent(),player=evt.player,target=evt.target;
var card={name:'sha',nature:'ice',isCard:true},att=get.attitude(player,target)>0;
var eff1=get.effect(target,card,player,player),eff2=get.effect(player,card,target,player);
return eff1>=eff2?0:1;
});
'step 2'
player.addTempSkill('old_yunshen_'+result.index,'phaseUseAfter');
var list=[player,target];
if(result.index==1) list.reverse();
if(list[1].isIn()&&list[0].isIn()&&list[1].canUse('sha',list[0],false)) list[1].useCard({name:'sha',nature:'ice',isCard:true},list[0],false,'noai');
},
ai:{
order:1,
expose:0.3,
result:{
player:function(player,target){
return get.recoverEffect(target,player,player);
},
},
},
subSkill:{
'0':{charlotte:true},
'1':{charlotte:true},
},
},
old_shangshen:{
audio:'clanshangshen',
trigger:{global:'damageEnd'},
filter:function(event,player){
return event.nature&&event.player.isIn();
},
check:function(event,player){
return player.countCards('j')||(get.attitude(player,event.player)>0&&event.player.countCards('h')<4);
},
logTarget:'player',
content:function(){
'step 0'
var target=trigger.player;
event.target=target;
event.videoId=lib.status.videoId++;
var func=function(player,id){
var list=[
'获得你场上的所有牌',
'将'+get.translation(target)+'的一张牌当作一张随机延时锦囊牌对你使用',
'令'+get.translation(target)+'将手牌数补至四张',
];
var choiceList=ui.create.dialog('伤神：请选择两项');
choiceList.videoId=id;
for(var i=0;i<list.length;i++){
var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
str+=list[i];
str+='</div>';
var next=choiceList.add(str);
next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
next.firstChild.link=i;
for(var j in lib.element.button){
next[j]=lib.element.button[j];
}
choiceList.buttons.add(next.firstChild);
}
return choiceList;
};
if(player.isOnline2()){
player.send(func,player,event.videoId);
}
event.dialog=func(player,event.videoId);
if(player!=game.me||_status.auto){
event.dialog.style.display='none';
}
var att=get.attitude(player,trigger.player);
var next=player.chooseButton();
next.set('dialog',event.videoId);
next.set('forced',true);
next.set('selectButton',2);
next.set('ai',function(button){
var player=_status.event.player;
switch(button.link){
case 0:
if(player.countCards('j')) return 3;
return 1;
break;
case 1:
return 1.5;
break;
case 2:
if(att>0) return 2;
return 0;
break;
}
});
'step 1'
if(player.isOnline2()) player.send('closeDialog',event.videoId);
event.dialog.close();
result.links.sort();
for(var i of result.links) game.log(player,'选择了','#g【伤神】','的','#y选项'+get.cnNumber(1+i,true));
if(result.links.includes(0)) player.gain(player.getCards('ej'),'gain2');
event.links=result.links;
'step 2'
if(event.links.includes(1)){
player.choosePlayerCard(target,'he',true).set('ai',function(button){
var player=_status.event.player;
return get.effect(player,button.link,player,player)*(att>0?-1:1);
});
}
else event.goto(4);
'step 3'
if(result.bool){
var list=[];
for(var name of lib.inpile){
if(get.type(name)!='delay') continue;
if(target.canUse({name:name},player)) list.push(name);
}
if(list.length){
var card=result.cards[0];
var cardx=get.autoViewAs({name:list.randomGet()},[card]);
target.useCard(cardx,[card],player,false);
}
}
'step 4'
if(event.links.includes(2)&&target.countCards('h')<4) target.drawTo(4);
},
},
old_fenchai:{
getTargets:function(player){
var history=player.getHistory('useSkill',function(evt){
if(evt.type!='player') return false;
var skill=evt.sourceSkill||evt.skill,targets=evt.targets;
var info=get.info(skill);
if(!info||info.charlotte) return false;
if(targets&&targets.length){
if(targets.filter(i=>player.differentSexFrom(i)).length) return true;
}
return false;
});
if(history.length) return history[0].targets.filter(i=>player.differentSexFrom(i));
return [];
},
group:'old_fenchai_audio',
global:'old_fenchai_global',
audio:'clanfenchai',
trigger:{global:'die'},
filter:function(event,player){
return lib.skill.old_fenchai.getTargets(player).includes(event.player)&&event.player.countCards('h');
},
direct:true,
skillAnimation:true,
animationColor:'water',
content:function(){
'step 0'
trigger.player.chooseCard('he',[0,Math.ceil(trigger.player.countCards('h'))],get.prompt('old_fenchai'),'交给'+get.translation(player)+'至多'+get.cnNumber()+'张牌').set('ai',function(card){
if(_status.event.goon) return get.value(card);
return -1;
}).set('goon',get.attitude(trigger.player,player)>0);
'step 1'
if(result.bool){
player.logSkill('old_fenchai');
trigger.player.line(player);
game.log(player,'收到了来自',trigger.player,'的呼唤');
player.gain(result.cards,trigger.player,'giveAuto');
}
},
subSkill:{
audio:{
audio:'clanfenchai',
trigger:{global:'judge'},
filter:function(event,player){
return event.player==player||lib.skill.old_fenchai.getTargets(player).includes(event.player);
},
forced:true,
locked:false,
logTarget:'player',
content:function(){},
},
global:{
mod:{
suit:function(card,suit){
var player=get.owner(card)||_status.event.player;
if(!player) return;
if(player.hasSkill('old_fenchai')||game.hasPlayer(function(target){
return lib.skill.old_fenchai.getTargets(target).includes(player);
})) return 'heart';
},
},
},
},
},
//神孙权
bolyuheng:{
//限制技能库
skillList:['olbingyi','shenxing','xiashu','old_anxu','rezhiheng','xinanguo','lanjiang','xinfu_guanwei','dimeng','xindiaodu','olhongyuan','jiexun','xingxue','bizheng','xinfu_youdi'],
derivation:'bolyuheng_faq',
//全扩技能库
getList:function(){
var list;
if(_status.characterlist){
list=[];
for(var i=0;i<_status.characterlist.length;i++){
var name=_status.characterlist[i];
if(lib.character[name][1]=='wu') list.push(name);
}
}
else if(_status.connectMode){
list=get.charactersOL(function(i){
return lib.character[i][1]!='wu';
});
}
else{
list=get.gainableCharacters(function(info){
return info[1]=='wu';
});
}
var players=game.players.concat(game.dead);
for(var i=0;i<players.length;i++){
list.remove(players[i].name);
list.remove(players[i].name1);
list.remove(players[i].name2);
}
//list=list.randomGets(Math.max(4,game.countPlayer()));
var skills=[];
for(var i of list){
skills.addArray((lib.character[i][3]||[]).filter(function(skill){
var info=get.info(skill);
return info&&!info.zhuSkill&&!info.hiddenSkill&&!info.charlotte;
}));
}
return skills;
},
group:'bolyuheng_remove',
audio:'yuheng',
trigger:{player:'phaseBegin'},
filter:function(event,player){
return player.hasCard(function(card){
return lib.filter.cardDiscardable(card,player,'bolyuheng');
},'he');
},
forced:true,
keepSkill:true,
content:function(){
'step 0'
player.chooseToDiscard('he',true,[1,player.getSuitNum('he')],function(card,player){
if(!ui.selected.cards.length) return true;
var suit=get.suit(card,player);
for(var i of ui.selected.cards){
if(get.suit(i,player)==suit) return false;
}
return true;
}).set('complexCard',true).set('ai',function(card){
var list=(lib.config.extension_活动武将_ShenSunQuan?lib.skill.bolyuheng.getList():lib.skill.bolyuheng.skillList);
if(ui.selected.cards.length>=list.length) return 0;
if(!player.hasValueTarget(card)) return 5;
return 1/(get.value(card)||0.5);
});
'step 1'
if(result.bool){
var list=(lib.config.extension_活动武将_ShenSunQuan?lib.skill.bolyuheng.getList():lib.skill.bolyuheng.skillList).slice(0);
list=list.filter(function(skill){
return !player.hasSkill(skill);
});
var skills=list.randomGets(Math.min(list.length,result.cards.length));
if(player.additionalSkills.bolyuheng&&player.additionalSkills.bolyuheng.length){
skills.addArray(player.additionalSkills.bolyuheng);
}
player.addAdditionalSkill('bolyuheng',skills);
game.log(player,'获得了以下技能：','#g'+get.translation(skills));
}
},
subSkill:{
remove:{
audio:'yuheng',
trigger:{player:'phaseEnd'},
filter:function(event,player){
return player.additionalSkills.bolyuheng&&player.additionalSkills.bolyuheng.length;
},
forced:true,
content:function(){
player.draw(player.additionalSkills.bolyuheng.length);
game.log(player,'失去了以下技能：','#g'+get.translation(player.additionalSkills.bolyuheng));
player.removeAdditionalSkill('bolyuheng');
},
},
},
},
boldili:{
derivation:['junkshengzhi','junkquandao','junkchigang'],
juexingji:true,
audio:'dili',
trigger:{global:'phaseBefore',player:['enterGame','loseMaxHpEnd','gainMaxHpEnd','addSkill','removeSkill']},
filter:function(event,player){
if(event.name=='phase'&&game.phaseNumber>0) return false;
var skills=player.getSkills(null,false,false).filter(function(i){
var info=get.info(i);
return info&&!info.charlotte;
});
return skills.length>player.maxHp;
},
forced:true,
skillAnimation:true,
animationColor:'wood',
content:function(){
'step 0'
player.awakenSkill('boldili');
player.loseMaxHp();
'step 1'
var skills=player.getSkills(null,false,false).filter(function(i){
if(i=='boldili') return false;
var info=get.info(i);
return info&&!info.charlotte;
});
if(!skills.length){event.finish();return;}
var list=[];
for(var skill of skills){
list.push([
skill,
'<div class="popup text" style="width:calc(100% - 10px);display:inline-block"><div class="skill">【'+get.translation(skill)+'】</div><div>'+lib.translate[skill+'_info']+'</div></div>',
])
}
var next=player.chooseButton([
'请选择失去任意个技能',
[list,'textbutton'],
]);
next.set('forced',true);
next.set('selectButton',[1,skills.length]);
next.set('ai',function(button){
var skill=button.link,skills=_status.event.skills.slice(0);
skills.removeArray(['xinanguo','lanjiang','rezhiheng','bolyuheng']);
switch(ui.selected.buttons.length){
case 0:
if(skills.includes(skill)) return 2;
if(skill=='bolyuheng') return 1;
return Math.random();
case 1:
if(skills.length<2) return 0;
if(skills.includes(skill)) return 2;
if(skill=='bolyuheng') return 1;
return 0
case 2:
if(skills.includes(skill)) return 2;
if(skill=='bolyuheng') return 1;
return 0;
default: return 0;
}
});
next.set('skills',skills);
'step 2'
if(result.bool){
var skills=result.links;
game.log(player,'失去了以下技能：','#g'+get.translation(skills));
player.removeSkill(skills.slice(0));
}
var list=lib.skill.boldili.derivation;
for(var i=0;i<Math.min(skills.length,list.length);i++){
player.addSkillLog(list[i]);
}
},
},
//张郃【机先】
//只因先
bilibili_zhiyinxian:{
init:function(player){
player.storage.bilibili_zhiyinxian=[];
},
group:'bilibili_zhiyinxian_restore',
trigger:{global:'phaseBegin'},
filter:function(event,player){
if(player==event.player) return false;
return ['phaseJudge','phaseDraw','phaseUse','phaseDiscard'].filter(function(i){
return !player.storage.bilibili_zhiyinxian.includes(i)&&!event.player.skipList.includes(i);
}).length;
},
direct:true,
content:function(){
'step 0'
var list=['phaseJudge','phaseDraw','phaseUse','phaseDiscard'].filter(function(i){
return !player.storage.bilibili_zhiyinxian.includes(i)&&!trigger.player.skipList.includes(i);
});
player.chooseControl(list,'cancel2').set('prompt',get.prompt('bilibili_zhiyinxian',trigger.player)).set('ai',function(){
var player=_status.event.player;
var target=_status.event.getTrigger().player;
var att=get.attitude(player,target);
if(list.includes('phaseUse')&&att<0&&target.countCards('hs')>=target.hp&&!target.hasJudge('lebu')) return 'phaseUse';
if(list.includes('phaseDraw')&&att<0&&target.countCards('hs')<=target.hp&&!target.hasJudge('bingliang')) return 'phaseDraw';
if(list.includes('phaseDiscard')&&att>0&&target.needsToDiscard()) return 'phaseDiscard';
if(list.includes('phaseJudge')&&att>0&&target.countCards('j',function(card){
return card.name.indexOf('yanxiao')==-1;
})) return 'phaseJudge';
return 'cancel2';
}).set('prompt2','跳过'+get.translation(trigger.player)+'的一个阶段');
'step 1'
if(result.control!='cancel2'){
player.logSkill('bilibili_zhiyinxian',trigger.player);
if(player!=trigger.player) player.addExpose(0.3);
trigger.player.skip(result.control);
game.log(trigger.player,'的','#y'+result.control,'被跳过了');
player.storage.bilibili_zhiyinxian.push(result.control);
}
},
subSkill:{
restore:{
trigger:{source:'dieAfter'},
filter:function(event,player){
return player.storage.bilibili_zhiyinxian.length;
},
direct:true,
content:function(){
'step 0'
var list=['phaseJudge','phaseDraw','phaseUse','phaseDiscard'].filter(function(i){
return player.storage.bilibili_zhiyinxian.includes(i);
});
player.chooseControl(list,'cancel2').set('prompt',get.prompt('bilibili_zhiyinxian')).set('ai',function(){
var player=_status.event.player;
var target=_status.event.getTrigger().player;
var att=get.attitude(player,target);
if(list.includes('phaseUse')) return 'phaseUse';
if(list.includes('phaseDraw')) return 'phaseDraw';
if(list.includes('phaseDiscard')) return 'phaseDiscard';
if(list.includes('phaseJudge')) return 'phaseJudge';
return 'cancel2';
}).set('prompt2','恢复一个已选择过的时机');
'step 1'
if(result.control!='cancel2'){
player.logSkill('bilibili_zhiyinxian');
game.log(player,'恢复了','#y'+result.control,'的操作权');
player.storage.bilibili_zhiyinxian.remove(result.control);
}
},
},
},
},
bolhuanshi:{
audio:'huanshi',
trigger:{global:'judge'},
filter:function(event,player){
return player.countCards('he')>0;
},
check:function(event,player){
if(get.attitude(player,event.player)<=0) return false;
var cards=player.getCards('he');
var judge=event.judge(event.player.judging[0]);
for(var i=0;i<cards.length;i++){
var judge2=event.judge(cards[i]);
if(judge2>judge) return true;
if(_status.currentPhase!=player&&judge2==judge&&get.color(cards[i])=='red'&&get.useful(cards[i])<5) return true;
}
return false;
},
logTarget:'player',
content:function(){
'step 0'
var target=trigger.player;
var judge=trigger.judge(target.judging[0]);
var attitude=get.attitude(target,player);
target.choosePlayerCard('请选择代替判定的牌','he','visible',true,player).set('ai',function(button){
var card=button.link;
var judge=_status.event.judge;
var attitude=_status.event.attitude;
var result=trigger.judge(card)-judge;
var player=_status.event.player;
if(result>0){
return 20+result;
}
if(result==0){
if(_status.currentPhase==player) return 0;
if(attitude>=0) return get.color(card)=='red'?7:-get.value(card);
else return get.color(card)=='black'?10:0+get.value(card);
}
if(attitude>=0) return get.color(card)=='red'?0:-10+result;
else return get.color(card)=='black'?0:-10+result;
}).set('filterButton',function(button){
var player=_status.event.target;
var card=button.link;
var mod2=game.checkMod(card,player,'unchanged','cardEnabled2',player);
if(mod2!='unchanged') return mod2;
var mod=game.checkMod(card,player,'unchanged','cardRespondable',player);
if(mod!='unchanged') return mod;
return true;
}).set('judge',judge).set('attitude',attitude);
'step 1'
if(result.bool){
event.card=result.links[0];
player.respond(event.card,'highlight').nopopup=true;
}
else event.finish();
'step 2'
if(result.bool){
if(trigger.player.judging[0].clone){
trigger.player.judging[0].clone.classList.remove('thrownhighlight');
game.broadcast(function(card){
if(card.clone){
card.clone.classList.remove('thrownhighlight');
}
},trigger.player.judging[0]);
game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
}
game.cardsDiscard(trigger.player.judging[0]);
trigger.player.judging[0]=event.card;
trigger.orderingCards.add(event.card);
game.log(trigger.player,'的判定牌改为',event.card);
game.delay(2);
}
'step 3'
if(!player.countCards('he')) event.finish();
else player.chooseCard('he','是否重铸任意张牌',[1,Infinity],lib.filter.cardRecastable).set('ai',function(card){
var player=_status.event.player;
if(player.hasSkill('bolmingzhe')&&get.color(card)=='red'&&card.name!='tao'&&card.namt!='wuxie') return 1;
return 5-get.value(card);
});
'step 4'
if(result.bool) player.recast(result.cards);
},
ai:{
rejudge:true,
tag:{
rejudge:1,
},
},
},
//荀采
oldx_lieshi:{
audio:'clanlieshi',
enable:'phaseUse',
content:function(){
'step 0'
var choice=[];
var list=['受到1点火属性伤害并废除判定区','弃置所有【闪】','弃置所有【杀】'];
for(var i=1;i<=3;i++){
if(i==2&&!player.countCards('h',{name:'shan'})) list[i-1]='<span style="opacity:0.5">'+list[i-1]+'</span>';
else if(i==3&&!player.countCards('h',{name:'sha'})) list[i-1]='<span style="opacity:0.5">'+list[i-1]+'</span>';
else choice.push('选项'+get.cnNumber(i,true));
}
if(choice.length) player.chooseControl(choice).set('choiceList',list).set('ai',function(){
if(choice.length==1) return choice[0];
var player=_status.event.player;
if(get.damageEffect(player,player,player,'fire')>0) return '选项一';
return choice[choice.length-1];
}).set('prompt','烈誓：请选择一项执行，然后选择一名其他角色执行另一项');
else event.finish();
'step 1'
var num=result.control;
event.num=num;
game.log(player,'选择执行','#g【烈誓】','的'+result.control);
switch(num){
case '选项一':
player.damage(1,'fire');
if(!player.storage._disableJudge) player.disableJudge();
break;
case '选项二':
player.discard(player.getCards('h',{name:'shan'}));
break;
case '选项三':
player.discard(player.getCards('h',{name:'sha'}));
break;
}
'step 2'
if(!player.isIn()||game.countPlayer()<2) event.finish();
else player.chooseTarget('请选择一名其他角色，执行【烈誓】的剩余选项',lib.filter.notMe,true).set('ai',function(target){
var player=_status.event.player;
var choice=[],att=get.attitude(player,target);
for(var i=1;i<=3;i++){
if('选项'+get.cnNumber(i,true)==_status.event.control) continue;
else if(i==2&&!target.countCards('h',{name:'shan'})) continue;
else if(i==3&&!target.countCards('h',{name:'sha'})) continue;
else choice.push('选项'+get.cnNumber(i,true));
}
if(!choice.length) return -1/Infinity;
if(choice.length==1){
if(choice[0]=='选项一') return -att*3;
return -att*2;
}
return -att;
}).set('control',num);
'step 3'
if(!result.bool){
event.finish();
return;
}
player.addExpose(0.3);
var target=result.targets[0];
event.target=target;
player.line(target);
var choice=[];
var list=['受到1点火属性伤害并废除判定区','弃置所有【闪】','弃置所有【杀】'];
for(var i=1;i<=3;i++){
if('选项'+get.cnNumber(i,true)==num) list[i-1]='<span style="opacity:0.5">'+list[i-1]+'</span>';
else if(i==2&&!target.countCards('h',{name:'shan'})) list[i-1]='<span style="opacity:0.5">'+list[i-1]+'</span>';
else if(i==3&&!target.countCards('h',{name:'sha'})) list[i-1]='<span style="opacity:0.5">'+list[i-1]+'</span>';
else choice.push('选项'+get.cnNumber(i,true));
}
if(choice.length) target.chooseControl(choice).set('choiceList',list).set('ai',function(){
if(get.damageEffect(target,target,target,'fire')>0) return '选项一';
return choice[choice.length-1];
}).set('prompt','烈誓：请选择一项执行');
else event.finish();
'step 4'
game.log(target,'选择执行','#g【烈誓】','的'+result.control);
switch(result.control){
case '选项一':
target.damage(1,'fire');
if(!target.storage._disableJudge) target.disableJudge();
break;
case '选项二':
target.discard(target.getCards('h',{name:'shan'}));
break;
case '选项三':
target.discard(target.getCards('h',{name:'sha'}));
break;
}
},
ai:{
order:1,
nokeep:true,
skillTagFilter:function(player){
if(!player.hasSkill('bolhuanyin')) return false;
},
result:{
player:function(player){
var choice=[];
for(var i=1;i<=3;i++){
if(i==2&&!player.countCards('h',{name:'shan'})) continue;
else if(i==3&&!player.countCards('h',{name:'sha'})) continue;
else choice.push('选项'+get.cnNumber(i,true));
}
var control=((get.damageEffect(player,player,player,'fire')>0)?'选项一':choice[choice.length-1]);
if(choice[choice.length-1]=='选项一'&&player.hp+player.countCards('hs',{name:['tao','jiu']})<2&&(player.identity=='zhu'||!player.hasFriend()||!player.hasSkill('bolhuanyin')||!player.countCards('h')>=4)) return 0;
if(game.hasPlayer(function(target){
if(get.attitude(player,target)>=0) return false;
var list=[];
for(var i=1;i<=3;i++){
if('选项'+get.cnNumber(i,true)==control) continue;
else if(i==2&&!target.countCards('h',{name:'shan'})) continue;
else if(i==3&&!target.countCards('h',{name:'sha'})) continue;
else list.push('选项'+get.cnNumber(i,true));
}
if(list.length) return 1;
})) return 1;
return 0;
},
},
},
},
oldx_dianzhan:{
audio:'clandianzhan',
trigger:{player:'useCardAfter'},
filter:function(event,player){
if(!lib.suit.includes(get.suit(event.card))) return false;
var bool=true,boolx=true;
for(var i=player.actionHistory.length-1;i>=0;i--){
var history=player.actionHistory[i].useCard;
for(var j=history.length-1;j>=0;j--){
var evt=history[j];
if(boolx&&event.card==evt.card){
boolx=false;
continue;
}
else if(!boolx&&event.card!=evt.card&&get.suit(evt.card)==get.suit(event.card)){
bool=false;
break;
}
}
if(player.actionHistory[i].isRound) break;
else if(!boolx&&bool) continue;
else if(!boolx&&!bool) break;
}
return bool;
},
forced:true,
content:function(){
'step 0'
if(trigger.targets&&trigger.targets.length==1){
player.line(trigger.targets[0]);
if(!trigger.targets[0].isLinked()) trigger.targets[0].link();
}
'step 1'
var cards=player.getCards('h',card=>get.suit(card)==get.suit(trigger.card)&&player.canRecast(card));
if(cards.length) player.recast(cards);
},
},
//程普
bollihuo:{
group:'bollihuo_damage',
audio:'lihuo',
trigger:{player:'useCard1'},
filter:function(event,player){
return event.card.name=='sha'&&!event.card.nature;
},
check:function(event,player){
return player.hp+player.countCards('hs',{name:'tao'})>2;
},
content:function(){
game.setNature(trigger.card,'fire');
trigger.card.lhdamaged=true;
player.addSkill('bollihuo_target');
player.addMark('bollihuo_target',1,false);
var next=game.createEvent('bollihuo_clear');
next.player=player;
next.card=trigger.card;
event.next.remove(next);
next.forceDie=true;
trigger.after.push(next);
next.setContent(function(){
delete card.nature;
if(card.lhdamaged) delete card.lhdamaged;
});
},
subSkill:{
target:{
charlotte:true,
intro:{content:'使用火【杀】可以额外指定#个目标'},
trigger:{player:'useCard2'},
filter:function(event,player){
if(event.card.name!='sha'||get.nature(event.card)!='fire') return false;
return game.hasPlayer(function(current){
return !event.targets.includes(current)&&player.canUse(event.card,current);
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('bollihuo'),[1,player.countMark('bollihuo_target')],'为'+get.translation(trigger.card)+'增加至多'+get.cnNumber(player.countMark('bollihuo_target'))+'个目标',function(card,player,target){
return !_status.event.sourcex.includes(target)&&player.canUse(_status.event.card,target);
}).set('sourcex',trigger.targets).set('card',trigger.card).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,_status.event.card,player,player);
});
'step 1'
if(result.bool){
if(!event.isMine()&&!_status.connectMode) game.delayx();
event.targets=result.targets;
}
else event.finish();
'step 2'
player.logSkill('bollihuo',targets);
trigger.targets.addArray(targets);
},
},
damage:{
charlotte:true,
trigger:{source:'damageSource'},
filter:function(event,player){
return event.card&&event.card.lhdamaged;
},
direct:true,
content:function(){
'step 0'
if(player.countCards('he')<2) result.control='失去体力';
if(trigger.card&&trigger.card.lhdamaged) delete trigger.card.lhdamaged;
player.chooseControl('弃置卡牌','失去体力').set('prompt','选择弃置两张牌或失去1点体力').set('ai',function(){
if(player.countCards('hes')>player.hp-1) return '弃置卡牌';
return '失去体力';
});
'step 1'
if(result.control=='弃置卡牌') player.chooseToDiscard(2,'he',true);
else player.loseHp();
},
},
},
},
bolchunlao:{
marktext:'醇',
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
group:'bolchunlao_save',
audio:'chunlao',
trigger:{global:'loseAfter'},
filter:function(event,player){
if(event.type!='discard'||get.distance(player,event.player)>1) return false;
for(var card of event.cards2){
if(card.name=='sha') return true;
}
return false;
},
direct:true,
content:function(){
'step 0'
var list=[];
for(var card of trigger.cards2){
if(card.name=='sha') list.push(card);
}
trigger.player.chooseBool('是否对'+get.translation(player)+'发动【醇醪】？','将'+get.translation(list)+'置于'+get.translation(player)+'的武将牌上').set('choice',get.attitude(trigger.player,player)>0);
event.list=list;
'step 1'
if(result.bool){
trigger.player.logSkill('bolchunlao',player);
player.addToExpansion('gain2',event.list).gaintag.add('bolchunlao');
}
},
subSkill:{
round:{onremove:true,charlotte:true},
judge:{
mark:true,
intro:{content:'下个判定阶段改为摸牌阶段'},
trigger:{player:'phaseJudgeBefore'},
direct:true,
content:function(){
player.removeSkill('bolchunlao_judge');
trigger.cancel();
var next=player.phaseDraw();
event.next.remove(next);
trigger.getParent().next.push(next);
},
},
save:{
enable:'chooseToUse',
filter:function(event,player){
return event.type=='dying'&&event.dying&&event.dying.hp<=0&&player.getExpansions('bolchunlao').length>=player.countMark('bolchunlao_round');
},
filterTarget:function(card,player,target){
return target==_status.event.dying;
},
direct:true,
clearTime:true,
delay:false,
selectTarget:-1,
content:function(){
'step 0'
if(player.hasMark('bolchunlao_round')) player.chooseCardButton(get.translation('bolchunlao'),player.getExpansions('bolchunlao'),player.countMark('bolchunlao_round'),true);
'step 1'
player.addTempSkill('bolchunlao_round','roundStart');
player.addMark('bolchunlao_round',1,false);
player.logSkill('bolchunlao',target);
if(target!=player) player.addExpose(0.2);
if(result.links) player.loseToDiscardpile(result.links);
event.type='dying';
target.useCard({name:'jiu',isCard:true},target);
target.addSkill('bolchunlao_judge');
},
ai:{
order:6,
skillTagFilter:function(player){
return player.getExpansions('bolchunlao').length>=player.countMark('bolchunlao_round');
},
save:true,
result:{target:3},
},
},
},
},
//孙登
bolkuangbi:{
audio:'kuangbi',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('he')&&game.hasPlayer(function(target){
return target!=player&&target.countCards('he')&&!target.hasSkill('bolkuangbi2');
});
},
filterTarget:function(card,player,target){
return target!=player&&target.countCards('he')&&!target.hasSkill('bolkuangbi2');
},
usable:1,
content:function(){
'step 0'
var att=get.attitude(player,target);
player.chooseCardOL([player,target],'将任意张牌置于'+get.translation(target)+'的武将牌上','he',[1,Infinity],true).set('ai',function(card){
if(att>0) return 6-get.value(card);
return -get.value(card);
}).set('aiCard',function(target){
var hs=target.getCards('he');
if(att>0) return {bool:true,cards:[hs.randomGets(target.countCards('he')/2)]};
return {bool:true,cards:[hs.randomGet()]};
});
'step 1'
target.addTempSkill('bolkuangbi2',{player:'die'});
target.addToExpansion(result[0].cards,player,'give').gaintag.add('bolkuangbi2');
target.addToExpansion(result[1].cards,target,'give').gaintag.add('bolkuangbi2');
target.storage.bolkuangbi2=[result[0].cards.length+result[1].cards.length,player];
},
ai:{
order:1,
result:{
player:1,
target:function(player,target){
if(get.attitude(player,target)>0) return Math.sqrt(target.countCards('he'));
return 0;
},
},
},
},
bolkuangbi2:{
charlotte:true,
intro:{
content:'expansion',
markcount:'expansion',
},
onremove:function(player,skill){
delete player.storage.bolkuangbi2;
var cards=player.getExpansions(skill);
if(cards.length) player.loseToDiscardpile(cards);
},
audio:'bolkuangbi',
trigger:{global:'phaseBegin'},
direct:true,
content:function(){
'step 0'
player.storage.bolkuangbi2[0]--;
'step 1'
if(player.storage.bolkuangbi2[0]==0){
player.logSkill('bolkuangbi2');
game.log(player,'的','#g【匡弼】','技能生效');
var target=player.storage.bolkuangbi2[1];
var num=player.getExpansions('bolkuangbi2').length;
player.gain(player.getExpansions('bolkuangbi2'),'gain2');
if(target.isIn()) target.draw(num);
}
else{
game.log('距离',player,'的','#g【匡弼】','技能生效还剩','#y'+player.storage.bolkuangbi2[0],'个回合');
event.finish();
}
'step 2'
player.removeSkill('bolkuangbi2');
},
},
twxingbu:{
audio:'xingbu',
trigger:{player:'phaseJieshuBegin'},
frequent:true,
content:function(){
'step 0'
var cards=get.cards(3);
game.updateRoundNumber();
event.cards=cards;
player.showCards(cards,get.translation(player)+'发动了【星卜】');
'step 1'
var num=0,list=[
['荧惑守心','出牌阶段使用【杀】的次数-1'],
['扶匡东柱','出牌阶段使用的第一张牌结算完成后，弃置一张牌并摸两张牌'],
['五星连珠','摸牌阶段多摸两张牌，出牌阶段使用【杀】的次数+1，跳过弃牌阶段'],
];
for(var i of cards){
if(get.color(i,false)=='red') num++;
}
if(num==0) num=1;
player.chooseTarget('是否令一名其他角色获得“'+list[num-1][0]+'”效果？',list[num-1][1],lib.filter.notMe).set('ai',function(target){
var player=_status.event.player,num=_status.event.getParent().num;
var att=get.attitude(player,target);
switch(num){
case 1:
return -get.sgn(att)*target.countCards('hs',{name:'sha'})-1;
break;
case 2:
return att;
break;
case 3:
return att*(target.hasJudge('lebu')?3:1);
break;
}
});
event.num=num;
'step 2'
if(result.bool){
player.addExpose(0.15);
var skill='twxingbu_effect'+num;
var target=result.targets[0];
player.line(target);
game.log(player,'选择了',target);
target.popup(skill);
target.addTempSkill(skill,{player:'phaseAfter'});
target.addMark(skill,1,false);
game.delayx();
}
game.cardsDiscard(cards);
},
subSkill:{
effect1:{
charlotte:true,
onremove:true,
marktext:'惑',
intro:{content:'出牌阶段使用【杀】的次数-#'},
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num-player.countMark('twxingbu_effect1');
},
},
},
effect2:{
charlotte:true,
onremove:true,
marktext:'匡',
intro:{content:'出牌阶段使用的第一张牌结算完成后，弃置#张牌并摸#*2张牌'},
audio:'xingbu',
trigger:{player:'useCardAfter'},
filter:function(event,player){
var evt=event.getParent('phaseUse');
if(!evt||evt.player!=player) return false;
return player.getHistory('useCard',function(evtx){
return evtx.getParent('phaseUse')==evt;
}).indexOf(event)<player.countMark('twxingbu_effect2');
},
forced:true,
content:function(){
'step 0'
player.chooseToDiscard(player.countMark('twxingbu_effect2'),'he',true);
'step 1'
player.draw(player.countMark('twxingbu_effect2')*2);
},
},
effect3:{
charlotte:true,
onremove:true,
marktext:'星',
intro:{content:'摸牌阶段多摸#*2张牌，出牌阶段使用【杀】的次数+#，跳过弃牌阶段'},
mod:{
cardUsable:function(card,player,num){
if(card.name=='sha') return num+player.countMark('twxingbu_effect3');
},
},
audio:'xingbu',
trigger:{player:['phaseDrawBegin2','phaseDiscardBefore']},
filter:function(event,player){
if(event.name=='phaseDiscard') return true;
return !event.numFixed;
},
forced:true,
content:function(){
if(trigger.name=='phaseDiscard') trigger.cancel();
else trigger.num+=(player.countMark('twxingbu_effect3')*2);
},
},
},
},
//谋刘备
old_rende:{
group:'old_rende_use',
init:function(player){
if(!_status.old_rendeList) _status.old_rendeList=[];
},
onremove:function(player){
player.removeSkill('old_rende_wang');
if(!game.hasPlayer(function(current){
return current!=player&&current.hasSkill('old_rende');
})){
for(var i of game.players) i.removeSkill('old_rende_de');
}
},
audio:'sbrende',
trigger:{player:'phaseUseBegin'},
direct:true,
content:function(){
'step 0'
event.go=false;
event.return=false;
'step 1'
var target=game.findPlayer(function(current){
return current.hasMark('old_rende_de');
});
if(event.return||!target||player.countCards('he')<target.countMark('old_rende_de')){
event.go=true;
var prompt=(event.return?'请选择【仁德】的目标':get.prompt('old_rende'));
player.chooseTarget(prompt,'令一名其他角色获得“德”标记',lib.filter.notMe).set('ai',function(targetx){
var player=_status.event.player,att=get.attitude(player,targetx);
var friends=player.getFriends(),enemies=player.getEnemies();
if(_status.old_rendeList.includes(target)) return -1;
if(friends.length>=enemies.length&&friends.length>1) return att;
return -att;
}).set('forced',event.return);
}
else{
player.chooseControl('移动标记','交牌','cancel2').set('prompt',get.prompt('old_rende')).set('choiceList',[
'清除场上的“德”标记并令一名其他角色获得“德”标记',
'交给'+get.translation(target)+'['+target.countMark('old_rende_de')+']张牌，然后你获得['+(target.countMark('old_rende_de')+1)+']个“仁望”标记'
]).set('ai',function(){
var player=_status.event.player,att=get.attitude(player,target);
var friends=player.getFriends(),enemies=player.getEnemies();
if(att<=0) return '移动标记';
if(att>0&&friends.length>=enemies.length&&friends.length>1) return '交牌';
return '移动标记';
});
}
'step 2'
if(event.go){
if(result.bool){
var target=result.targets[0];
if(event.return) player.line(target);
else player.logSkill('old_rende',target);
_status.old_rendeList.push(target);
target.addSkill('old_rende_de');
target.addMark('old_rende_de',1);
}
event.finish();
return;
}
if(!event.go){
if(result.control!='cancel2'){
if(result.control=='移动标记'){
player.logSkill('old_rende');
for(var i of game.players) i.removeSkill('old_rende_de');
event.return=true;
event.goto(1);
}
else{
var target=game.findPlayer(function(current){
return current.hasMark('old_rende_de');
});
event.target=target;
player.logSkill('old_rende',target);
player.chooseCard('仁德：交给'+get.translation(target)+'['+target.countMark('old_rende_de')+']张牌，然后你获得['+(target.countMark('old_rende_de')+1)+']个“仁望”标记','he',target.countMark('old_rende_de'),true);
}
}
else event.finish();
}
'step 3'
if(result.bool){
target.gain(result.cards,player,'give');
player.addSkill('old_rende_wang');
player.addMark('old_rende_wang',result.cards.length+1);
}
},
subSkill:{
use:{
enable:['chooseToUse','chooseToRespond'],
hiddenCard:function(player,name){
if(get.type(name)=='basic'&&lib.inpile.includes(name)&&player.countMark('old_rende_wang')>=2) return true;
},
filter:function(event,player){
if(event.type=='wuxie'||player.countMark('old_rende_wang')<2) return false;
var storage=player.storage.bingxin_count
for(var i of lib.inpile){
if(get.type(i)!='basic') continue;
var card={name:i,isCard:true};
if(event.filterCard(card,player,event)) return true;
if(i=='sha'){
for(var j of lib.inpile_nature){
card.nature=j;
if(event.filterCard(card,player,event)) return true;
}
}
}
return false;
},
chooseButton:{
dialog:function(event,player){
var list=[];
for(var i of lib.inpile){
if(get.type(i)!='basic') continue;
var card={name:i,isCard:true};
if(event.filterCard(card,player,event)) list.push(['基本','',i]);
if(i=='sha'){
for(var j of lib.inpile_nature){
card.nature=j;
if(event.filterCard(card,player,event)) list.push(['基本','',i,j]);
}
}
}
return ui.create.dialog('仁德',[list,'vcard'],'hidden')
},
check:function(button){
if(button.link[2]=='shan') return 3;
var player=_status.event.player;
if(button.link[2]=='jiu'){
if(player.getUseValue({name:'jiu'})<=0) return 0;
if(player.countCards('h','sha')) return player.getUseValue({name:'jiu'});
return 0;
}
return player.getUseValue({name:button.link[2],nature:button.link[3]})/4;
},
backup:function(links,player){
return {
selectCard:-1,
filterCard:()=>false,
viewAs:{
name:links[0][2],
nature:links[0][3],
isCard:true,
},
precontent:function(){
player.logSkill('old_rende');
player.removeMark('old_rende_wang',2);
if(!player.hasMark('old_rende_wang')) player.removeSkill('old_rende_wang');
delete event.result.skill;
},
}
},
prompt:function(links,player){
var name=links[0][2];
var nature=links[0][3];
return '失去两个“仁望”标记并视为使用或打出'+(get.translation(nature)||'')+get.translation(name);
},
},
ai:{
order:10,
respondShan:true,
respondSha:true,
skillTagFilter:function(player,tag){
if(player.countMark('old_rende_wang')<2) return false;
},
result:{
player:function(player){
if(_status.event.dying) return get.attitude(player,_status.event.dying);
return 1;
},
},
},
},
},
},
old_rende_de:{
charlotte:true,
onremove:true,
mark:true,
marktext:'德',
intro:{
name:'德',
name2:'德',
content:'mark',
},
trigger:{player:'phaseZhunbeiBegin'},
direct:true,
content:function(){
player.addMark('old_rende_de',1);
},
},
old_rende_wang:{
charlotte:true,
onremove:true,
mark:true,
intro:{content:'mark'},
},
old_zhangwu:{
unique:true,
audio:'sbzhangwu',
enable:'phaseUse',
filter:function(event,player){
return _status.old_rendeList&&_status.old_rendeList.length;
},
mark:true,
limited:true,
skillAnimation:true,
animationColor:'fire',
filterTarget:function(card,player,target){
return _status.old_rendeList.includes(target);
},
filterCard:()=>false,
selectCard:[0,1],
selectTarget:-1,
multitarget:true,
multiline:true,
content:function(){
'step 0'
player.awakenSkill('old_zhangwu');
event.targets=_status.old_rendeList.filter(function(target){
return target.isIn();
}).sortBySeat();
'step 1'
var target=targets.shift();
event.target=target;
if(!target.countCards('he')) event.goto(3);
else if(target.countCards('he')<=2) result.cards=target.getCards('he');
else target.chooseCard('章武：交给'+get.translation(player)+'两张牌','he',2,true);
'step 2'
if(result.cards) player.gain(result.cards,target,'give');
'step 3'
if(targets.length) event.goto(1);
else{
player.gainMaxHp();
player.removeSkill('old_rende');
}
},
ai:{
combo:'old_rende',
order:7,
result:{
player:function(player){
if(player.getEnemies().filter(function(target){
return !_status.old_rendeList.includes(target);
}).length) return -1;
return 1;
},
},
},
},
//张宝
old_zhoufu:{
audio:'zhoufu',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h')&&game.hasPlayer(function(target){
return target!=player&&!target.getExpansions('old_zhoufu2').length;
});
},
filterCard:true,
filterTarget:function(card,player,target){
return target!=player&&!target.getExpansions('old_zhoufu2').length;
},
check:function(card){
return 6-get.value(card)
},
usable:1,
discard:false,
lose:false,
delay:false,
content:function(){
player.addSkill(['old_zhoufu_judge','old_zhoufu_gain']);
target.addToExpansion(cards,player,'give').gaintag.add('old_zhoufu2');
},
ai:{
order:1,
result:{
target:-1,
},
},
subSkill:{
judge:{
charlotte:true,
audio:'zhoufu',
trigger:{global:'judgeBefore'},
filter:function(event,player){
return !event.directresult&&event.player.getExpansions('old_zhoufu2').length;
},
logTarget:'player',
forced:true,
locked:false,
content:function(){
var cards=[trigger.player.getExpansions('old_zhoufu2')[0]];
trigger.directresult=cards[0];
trigger.player.unmarkSkill('old_zhoufu2');
},
},
gain:{
charlotte:true,
audio:'zhoufu',
trigger:{global:'phaseEnd'},
filter:function(event,player){
return event.player.getExpansions('old_zhoufu2').length;
},
logTarget:'player',
forced:true,
locked:false,
content:function(){
player.gain(trigger.player.getExpansions('old_zhoufu2'),trigger.player,'give');
trigger.player.unmarkSkill('old_zhoufu2');
},
},
},
},
old_zhoufu2:{
marktext:'咒',
intro:{content:'expansion'},
},
old_yingbing:{
audio:'yingbin',
trigger:{global:'old_zhoufu_judgeAfter'},
frequent:true,
content:function(){
player.draw(2);
},
},
//杨阜
bolhannan:{
audio:'hannan',
inherit:'hannan',
content:function(){
'step 0'
player.chooseToCompare(target);
'step 1'
if(!result.tie){
var players=[player,target];
if(result.bool) players.reverse();
players[1].line(players[0],'thunder');
players[0].damage(players[1]);
}
},
},
//用间篇孙鲁班
//离谱的东西我来做
boljiaozong:{
global:'boljiaozong_global',
audio:'ext:活动武将/audio/skill:2',
trigger:{global:'useCard'},
filter:function(event,player){
var evtx=event.getParent('phaseUse');
if(!evtx||evtx.player!=event.player) return false;
return event.player!=player&&event.player.getHistory('useCard',function(evt){
return evt.getParent('phaseUse')==evtx&&get.color(evt.card,event.player)=='red'&&evt.targets.includes(player);
}).indexOf(event)==0;
},
forced:true,
content:function(){},
subSkill:{
global:{
mod:{
playerEnabled:function(card,player,target){
var evtx=_status.event.getParent('phaseUse');
if(!evtx||evtx.player!=player||!game.hasPlayer(function(current){
return current!=player&&current.hasSkill('boljiaozong');
})||get.color(card,player)!='red'||player.getHistory('useCard',function(evt){
return evt.getParent('phaseUse')==evtx&&get.color(evt.card,player)=='red';
}).length) return;
if(target==player||!target.hasSkill('boljiaozong')) return false;
},
selectTarget:function(card,player,num){
var evtx=_status.event.getParent('phaseUse');
if(!evtx||evtx.player!=player||!game.hasPlayer(function(current){
return current!=player&&current.hasSkill('boljiaozong');
})||get.color(card,player)!='red'||player.getHistory('useCard',function(evt){
return evt.getParent('phaseUse')==evtx&&get.color(evt.card,player)=='red';
}).length) return;
if(num[1]!=-1) num[1]=-1;
},
targetInRange:function(card,player,target){
var evtx=_status.event.getParent('phaseUse');
if(!evtx||evtx.player!=player||!game.hasPlayer(function(current){
return current!=player&&current.hasSkill('boljiaozong');
})||get.color(card,player)!='red'||player.getHistory('useCard',function(evt){
return evt.getParent('phaseUse')==evtx&&get.color(evt.card,player)=='red';
}).length) return;
if(target!=player&&target.hasSkill('boljiaozong')) return true;
},
},
},
},
},
bolchouyou:{
audio:'ext:活动武将/audio/skill:2',
trigger:{target:'useCardToTargeted'},
filter:function(event,player){
return event.card.name=='sha'&&game.hasPlayer(function(current){
return !event.targets.includes(current)&&current!=player&&lib.filter.targetEnabled(event.card,event.player,current);
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('bolchouyou'),function(card,player,target){
return _status.event.targets.includes(target);
}).set('ai',function(target){
var player=_status.event.player,trigger=_status.event.getTrigger(),storage=player.storage.bolchouyou2;
if(get.effect(player,trigger.card,trigger.player,player)>0) return 0;
return get.effect(target,trigger.card,trigger.player,player)*((!storage||!storage.includes(target))?3:1);
return
}).set('targets',game.filterPlayer(function(current){
return !trigger.targets.includes(current)&&current!=player&&lib.filter.targetEnabled(trigger.card,trigger.player,current);
}));
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.logSkill('bolchouyou',target);
target.chooseBool('仇幽：是否替'+get.translation(player)+'代为'+get.translation(trigger.card)+'的目标？','若拒绝，则你发动非锁定技前需经过'+get.translation(player)+'的同意才可发动').set('choice',get.effect(target,trigger.card,trigger.player,target)>0);
}
else event.finish();
'step 2'
if(result.bool){
target.chat('同意');
game.log(target,'代替',player,'成为了',trigger.card,'的目标');
trigger.targets[trigger.targets.indexOf(player)]=target;
}
else{
target.chat('拒绝');
game.log(target,'拒绝代替',player,'成为',trigger.card,'的目标');
player.addSkill('bolchouyou2');
if(!player.storage.bolchouyou2.includes(target)) player.storage.bolchouyou2.push(target);
player.markSkill('bolchouyou2');
}
},
},
bolchouyou2:{
init:function(player){
if(!player.storage.bolchouyou2) player.storage.bolchouyou2=[];
var list=['useCardBefore','respondBefore','useSkillBefore'];
for(var skill in lib.skill){
var info=get.info(skill);
if(skill.indexOf('_')==0||!info||info.equipSkill||info.charlotte||info.silent||info.popup===false||skill=='bolchouyou2') continue;
if(!get.is.locked(skill)) lib.skill.bolchouyou2.trigger.global.push(skill+'Before');
if(info.group){
var group=Array.isArray(info.group)?info.group:[info.group];
for(var sk of group){
var fo=get.info(sk);
if(sk.indexOf('_')==0||!fo||fo.equipSkill||fo.charlotte||fo.silent||fo.popup===false||sk=='bolchouyou2') continue;
if(!get.is.locked(sk)) lib.skill.bolchouyou2.trigger.global.push(sk+'Before');
}
}
}
},
charlotte:true,
intro:{content:'已对$产生怨恨'},
group:'bolchouyou3',
audio:'bolchouyou',
trigger:{global:['useCardBefore','respondBefore','useSkillBefore']},
filter:function(event,player){
if(!player.storage.bolchouyou2.includes(event.player)) return false;
var skill=((event.name=='useCard'||event.name=='respond'||event.name=='useSkill')?event.skill:event.name);
var info=get.info(skill);
return info&&!info.equipSkill&&!info.charlotte&&!info.silent&&info.popup!==false&&skill!='bolchouyou2'&&!get.is.locked(skill)&&!lib.skill.global.includes(skill);
},
forced:true,
logTarget:'player',
content:function(){
'step 0'
var skill=((trigger.name=='useCard'||trigger.name=='respond'||trigger.name=='useSkill')?trigger.skill:trigger.name);
if(get.info(skill).sourceSkill) skill=get.info(skill).sourceSkill;
if(skill.indexOf('_backup')==skill.length-7) skill=skill.slice(0,skill.length-7);
player.chooseBool('仇幽：是否同意'+get.translation(trigger.player)+'发动【'+get.translation(skill)+'】?').set('choice',get.attitude(player,trigger.player)>0);
'step 1'
var skill=((trigger.name=='useCard'||trigger.name=='respond'||trigger.name=='useSkill')?trigger.skill:trigger.name);
if(get.info(skill).sourceSkill) skill=get.info(skill).sourceSkill;
player.chat(result.bool?'同意':'拒绝');
game.log(player,result.bool?'#g同意':'#y拒绝',trigger.player,'发动','#g【'+get.translation(skill)+'】');
if(!result.bool){
var info=get.info(skill);
if(info.limited||info.juexingji) trigger.player.restoreSkill(skill);
if(info.usable){
if(player.storage.counttrigger&&player.storage.counttrigger[skill]) player.storage.counttrigger[skill]--;
if(player.getStat('skill')[skill]) player.getStat('skill')[skill]--;
}
trigger.cancel();
if(trigger.name=='useCard'||trigger.name=='respond') trigger.getParent().goto(0);
trigger.player.addTempSkill('bolchouyou4',['phaseZhunbeiBefore','phaseJudgeBefore','phaseDrawBefore','phaseUseBefore','phaseDiscardBefore','phaseJieshuBefore','phaseBefore']);
trigger.player.storage.bolchouyou4.push(skill);
trigger.player.disableSkill('bolchouyou4',trigger.player.storage.bolchouyou4);
}
},
},
bolchouyou3:{
charlotte:true,
trigger:{player:'recoverEnd'},
filter:function(event,player){
return event.source&&player.storage.bolchouyou2.includes(event.source);
},
direct:true,
firstDo:true,
content:function(){
player.storage.bolchouyou2.remove(trigger.source);
player.markSkill('bolchouyou2');
},
},
bolchouyou4:{
charlotte:true,
init:function(player){
if(!player.storage.bolchouyou4) player.storage.bolchouyou4=[];
},
onremove:function(player){
player.enableSkill('bolchouyou4');
delete player.storage.bolchouyou4;
},
},
//张仲景
old_liaoyi:{
init:function(player){
player.storage.renku=true;
},
audio:'liaoyi',
trigger:{global:'phaseBegin'},
filter:function(event,player){
if(player==event.player) return false;
if(_status.renku.length) return true;
return event.player.countCards('h')>=2&&event.player.hp!=event.player.countCards('h');
},
direct:true,
content:function(){
'step 0'
var target=trigger.player;
event.target=target;
var num=Math.min(9,Math.max(1,Math.abs(target.hp-target.countCards('h'))));
var choiceList=['令其从仁库中获得一张牌','令其将'+get.cnNumber(num)+'张手牌置入仁库'];
var choices=[];
if(_status.renku.length) choices.push('选项一');
else choiceList[0]='<span style="opacity:0.5">'+choiceList[0]+'</span>';
if(target.countCards('h')>=2&&target.hp!=target.countCards('h')){
event.num=num;
choices.push('选项二');
}
else choiceList[1]='<span style="opacity:0.5">'+choiceList[1]+'</span>';
player.chooseControl(choices,'cancel2').set('prompt',get.prompt('old_liaoyi',target)).set('choiceList',choiceList).set('ai',function(){
var player=_status.event.player,target=_status.event.getTrigger().player;
var att=get.attitude(player,target),list=_status.event.list;
if(att>0&&list.includes('选项一')) return '选项一';
if(att<=0&&list.includes('选项二')) return '选项二';
return 'cancel2';
}).set('list',choices);
'step 1'
if(result.control!='cancel2'){
player.logSkill('old_liaoyi',target);
if(result.control=='选项一'){
target.chooseButton(true,['选择获得一张牌',_status.renku]).set('ai',function(button){
return get.value(button.link,_status.event.player);
});
event.goto(4);
}
else{
var hs=target.getCards('h');
if(hs.length<=num) event._result={bool:true,cards:hs};
else target.chooseCard('h',true,'将'+get.cnNumber(num)+'张手牌置于仁库中',num);
}
}
else event.finish();
'step 2'
if(result.bool){
target.$throw(result.cards,1000);
game.log(target,'将',result.cards,'置入了仁库');
target.lose(result.cards,ui.special,'toRenku');
}
else event.finish();
'step 3'
game.delayx();
event.finish();
'step 4'
var cards=result.links;
_status.renku.removeArray(cards);
game.updateRenku();
target.gain(cards,'gain2','fromRenku');
},
ai:{threaten:6.4},
},
//旧旧系列
bilibili_tannang:{
locked:true,
mod:{
globalFrom:function(from,to,distance){
return distance-(from.getDamagedHp());
},
},
},
bilibili_yishi:{
trigger:{source:'damageBegin2'},
filter:function(event,player){
return player!=event.player;
},
check:function(event,player){
if(get.damageEffect(event.player,player,player)<0) return true;
var att=get.attitude(player,event.player);
if(event.num>1&&att!=0) return att>0;
var cards=event.player.getGainableCards(player,'e');
if(cards.length&&att==0&&cards.filter(function(card){
return get.equipValue(card)>0;
}).length) return true;
return cards.filter(function(card){
return get.equipValue(card)>=6;
}).length;
},
logTarget:'player',
content:function(){
'step 0'
if(trigger.player.countGainableCards(player,'e')) player.gainPlayerCard(trigger.player,'e',true);
'step 1'
trigger.cancel();
},
},
bilibili_zhengjun:{
audio:'yizhong',
trigger:{player:'damageBegin3'},
filter:function(event,player){
return player.countCards('e',{type:'equip'});
},
direct:true,
content:function(){
'step 0'
player.chooseBool(get.prompt2('bilibili_zhengjun')).set('ai',function(){
var player=_status.event.player;
if(player.hp<=2||_status.event.getTrigger().num>1) return 1;
return 0;
});
'step 1'
if(result.bool){
player.logSkill('bilibili_zhengjun');
player.gain(player.getCards('e'),'gain2');
player.chooseCard('整军：打出一张装备牌，然后防止此伤害',{type:'equip'},true);
}
else event.finish();
'step 2'
if(result.bool){
player.respond(result.cards,'highlight','noOrdering');
trigger.cancel();
}
},
},
//生熏鱼
bilibili_jinyan:{
unique:true,
mod:{
playerEnabled:function(card,player,target){
if(_status.currentPhase!=player||target==player) return;
if(player.getHistory('useCard',function(evt){
if(evt.card.name=='qizhengxiangsheng') return false;
return evt.targets&&evt.targets.includes(target);
}).length&&card.name!='qizhengxiangsheng') return false;
},
},
},
bilibili_hehu:{
unique:true,
global:'bilibili_hehu_global',
trigger:{global:['phaseBegin','phaseEnd']},
filter:function(event,player){
return event.player!=player&&event.player.countCards('he');
},
logTarget:'player',
forced:true,
content:function(){
'step 0'
trigger.player.chooseCard('交给'+get.translation(player)+get.cnNumber(event.triggername=='phaseBegin'?1:2)+'张牌以示对其的关爱',true,'he',event.triggername=='phaseBegin'?2:1);
'step 1'
if(result.bool){
var skill='bilibili_hehu_'+player.playerid;
if(!lib.skill[skill]){
lib.skill[skill]={};
lib.translate[skill]='呵护熏鱼<br>关爱熏鱼';
}
trigger.player.give(result.cards,player);
trigger.player.draw(event.triggername=='phaseBegin'?2:1).gaintag=[skill];
}
},
subSkill:{
global:{
mod:{
playerEnabled:function(card,player,target){
if(card.cards){
for(var i of card.cards){
if(i.hasGaintag('bilibili_hehu_'+target.playerid)) return false;
}
}
else if(get.itemtype(card)=='card'){
if(card.hasGaintag('bilibili_hehu_'+target.playerid)) return false;
}
},
},
},
},
},
bilibili_yutai:{
unique:true,
group:'bilibili_yutai_gain',
init:()=>game.addGlobalSkill('tianzuo_global'),
getNum:function(player){
var num=1+_status.event.player.getHistory('useSkill',function(evt){
return evt.skill=='bilibili_yutai';
}).length;
if(game.hasPlayer2(function(current){
return current.name1=='bilibili_suixingsifeng'||current.name2=='bilibili_suixingsifeng';
})) return num;
return Math.min(num,3);
},
enable:'chooseToUse',
filterCard:true,
selectCard:()=>lib.skill.bilibili_yutai.getNum(_status.event.player),
position:'hes',
viewAs:{name:'qizhengxiangsheng'},
viewAsFilter:function(player){
if(player.countCards('hes')<lib.skill.bilibili_yutai.getNum(player)) return false;
},
prompt:()=>'将'+get.cnNumber(lib.skill.bilibili_yutai.getNum(_status.event.player))+'张牌当作【奇正相生】使用',
check:function(card){
var player=_status.event.player;
if(player.countCards('h')>player.needsToDiscard()) return 8-get.value(card);
return 5-get.value(card);
},
ai:{order:()=>get.order({name:'qizhengxiangsheng'})},
subSkill:{
gain:{
trigger:{global:'respond'},
filter:function(event,player){
if(event.card.name!='sha'&&event.card.name!='shan') return false;
return event.getParent(2).name=='qizhengxiangsheng'&&event.cards.filterInD().length;
},
forced:true,
locked:false,
logTarget:'player',
content:function(){
'step 0'
player.gain(trigger.cards.filterInD(),'gain2');
'step 1'
game.delay();
},
},
destroy:{
charlotte:true,
trigger:{global:['loseEnd','cardsDiscardEnd']},
filter:function(event,player){
return event.cards.filter(function(card){
return _status.ShengXunYuCards.includes(card)&&get.position(card,true)=='d';
}).length;
},
forceDie:true,
direct:true,
priority:Infinity,
content:function(){
var cards=trigger.cards.filter(function(card){
return _status.ShengXunYuCards.includes(card)&&get.position(card,true)=='d';
});
_status.ShengXunYuCards.removeArray(cards);
game.log(cards,'已被移出游戏');
game.cardsGotoSpecial(cards);
},
},
},
},
//Fire.win
bilibili_tixiang:{
group:['bilibili_tixiang_log'],
unique:true,
trigger:{global:'roundStart'},
forced:true,
priority:10,
content:function(){
'step 0'
var list=[];
var group=['wei','shu','wu','qun','jin'][player.countMark('bilibili_tixiang')%5];
while(list.length<2){
var name=Object.keys(lib.character).filter(function(name){
if(list.includes(name)||lib.filter.characterDisabled(name)) return false;
var double=get.is.double(name,true);
return (double?double.includes(group):lib.character[name][1]==group)&&lib.character[name][3].filter(function(skill){
return !get.skillCategoriesOf(skill,player).length;
}).length;
}).randomGet();
if(name){
list.push(name);
player.flashAvatar('bilibili_tixiang',name);
for(var skill of lib.character[name][3].filter(function(skill){
return !get.skillCategoriesOf(skill,player).length;
})) player.addTempSkill(skill,'roundStart');
}
else break;
}
'step 1'
player.addMark('bilibili_tixiang',1,false);
},
subSkill:{
log:{
trigger:{player:['useSkillAfter','logSkill']},
filter:function(event,player){
if(event.type!='player') return false;
var skill=event.sourceSkill||event.skill;
return !get.skillCategoriesOf(skill,player).length;
},
forced:true,
content:function(){
lib.skill.old_shenzhu.caidan(player);
},
},
},
},
//TW孙鲁班
bolzenhui:{
audio:'xinzenhui',
trigger:{player:'useCardToPlayer'},
filter:function(event,player){
if(event.targets.length!=1) return false;
var card=event.card;
if(card.name!='sha'&&(get.type(card,null,false)!='trick'||get.color(card,false)!='black')) return false;
if(!player.isPhaseUsing()||player.hasSkill('bolzenhui2')) return false;
return game.hasPlayer(function(current){
return current!=player&&current!=event.target&&lib.filter.targetEnabled2(card,player,current)&&lib.filter.targetInRange(card,player,current);
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt2('bolzenhui'),function(card,player,target){
if(player==target) return false;
var evt=_status.event.getTrigger();
return !evt.targets.includes(target)&&lib.filter.targetEnabled2(evt.card,player,target)&&lib.filter.targetInRange(evt.card,player,target);
}).set('ai',function(target){
var trigger=_status.event.getTrigger();
var player=_status.event.player;
return Math.max((target.countGainableCards(player,'hej')?get.effect(target,{name:'shunshou'},player,player):0),get.effect(target,trigger.card,player,player));
});
'step 1'
if(result.bool){
player.addTempSkill('bolzenhui2','phaseUseAfter');
var target=result.targets[0],str=get.translation(target);
event.target=target;
player.logSkill('bolzenhui',target);
if(!target.countGainableCards(player,'hej')) event._result={index:0};
else player.chooseControl().set('choiceList',[
'令'+str+'也成为'+get.translation(trigger.card)+'的目标',
'获得'+str+'区域里的一张牌，然后'+str+'成为'+get.translation(trigger.card)+'的使用者',
]).set('ai',function(){
var trigger=_status.event.getTrigger();
var player=_status.event.player,target=_status.event.getParent().target;
return (target.countGainableCards(player,'hej')?get.effect(target,{name:'shunshou'},player,player):0)>get.effect(target,trigger.card,player,player)?1:0;
})
}
else event.finish();
'step 2'
if(result.index==1){
trigger.untrigger();
trigger.getParent().player=event.target;
game.log(event.target,'成为了',trigger.card,'的使用者');
player.gainPlayerCard(target,true,'hej');
}
else{
game.log(event.target,'成为了',trigger.card,'的额外目标');
trigger.getParent().targets.push(event.target);
}
},
},
bolzenhui2:{charlotte:true},
//TW马忠
bolfuman:{
group:'bolfuman_draw',
audio:'fuman',
inherit:'fuman',
filterTarget:function(card,player,target){
if(target==player) return false;
var stat=player.getStat('skill').bolfuman_targets;
return !stat||!stat.includes(target);
},
filter:function(event,player){
return player.countCards('h')>0&&game.hasPlayer(function(current){
return lib.skill.bolfuman.filterTarget(null,player,current)
});
},
content:function(){
player.give(cards,target).gaintag.add('bolfuman');
target.addSkill('bolfuman2');
var stat=player.getStat('skill');
if(!stat.bolfuman_targets) stat.bolfuman_targets=[];
stat.bolfuman_targets.push(target);
},
subSkill:{
draw:{
audio:'fuman',
trigger:{global:['useCardAfter','respondAfter']},
filter:function(event,player){
return event.player.getHistory('lose',function(evt){
if(evt.getParent()!=event) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('bolfuman')) return true;
}
return false;
}).length;
},
forced:true,
logTarget:'player',
content:function(){
player.draw(trigger.player.getHistory('sourceDamage',function(evt){
return evt.card==trigger.card;
}).length?2:1);
},
},
},
},
bolfuman2:{
mod:{
aiOrder:function(player,card,num){
if(get.itemtype(card)=='card'&&card.hasGaintag('bolfuman')) return num+1;
},
cardname:function(card,player){
if(get.itemtype(card)=='card'&&card.hasGaintag('bolfuman')) return 'sha';
},
},
},
//？(精灵球)
bilibili_tiyi:{
unique:true,
group:'bilibili_tiyi_update',
enable:'phaseUse',
filter:function(event,player){
if(player.hasSkill('bilibili_tiyi_used')) return false;
return player.countCards('h')&&game.hasPlayer(function(current){
return lib.skill.bilibili_tiyi.filterTarget(null,player,current);
});
},
filterTarget:function(card,player,target){
return target!=player&&target.countCards('h')&&!player.getStorage('bilibili_tiyi').includes(target);
},
content:function(){
'step 0'
player.markAuto('bilibili_tiyi',[target]);
'step 1'
player.viewHandcards(target);
target.viewHandcards(player);
'step 2'
player.chooseToDebate([player,target]).set('ai',function(card){
return 1+Math.random();
}).set('aiCard',function(target){
return {bool:true,cards:[player.getCards('h').randomGet()]};
}).set('callback',lib.skill.bilibili_tiyi.callback);
},
callback:function(){
var result=event.debateResult;
var target=event.getParent(2).target;
if(result.opinion){
if(result.red.length){
player.recover();
target.recover();
}
if(result.black.length){
player.draw(2);
target.addTempSkill('bilibili_tiyi_yingzi',{player:'phaseAfter'});
target.addMark('bilibili_tiyi_yingzi',1,false);
}
}
else{
player.line(target);
target.damage();
}
},
intro:{content:'已和$进行过议论'},
ai:{
order:7,
result:{
player:function(player,target){
var num1=player.getCards('h').reduce(function(arr,card){
return arr.add(get.suit(card,player)),arr;
},[]).length;
var num2=target.getCards('h').reduce(function(arr,card){
return arr.add(get.suit(card,target)),arr;
},[]).length;
if(num1==1&&num2==1){
return get.color(player.getCards('h')[0],player)==get.color(target.getCards('h')[0],target)?1:-1;
}
return 1;
},
},
},
subSkill:{
used:{charlotte:true},
yingzi:{
mark:true,
marktext:'议',
charlotte:true,
onremove:true,
intro:{content:'摸牌阶段多摸#张牌，手牌上限+#'},
mod:{
maxHandcard:function(player,num){
return num+player.countMark('bilibili_tiyi_yingzi');
},
},
trigger:{player:'phaseDrawBegin2'},
filter:function(event,player){
return !event.numFixed;
},
direct:true,
content:function(){
trigger.num+=player.countMark('bilibili_tiyi_yingzi');
},
},
update:{
trigger:{player:'useSkillAfter',global:'dieAfter'},
filter:function(event,player){
return !game.hasPlayer(function(current){
if(player==current) return false;
return !player.getStorage('bilibili_tiyi').includes(current);
})&&(event.name=='die'||event.skill=='bilibili_tiyi');
},
forced:true,
locked:false,
content:function(){
player.unmarkSkill('bilibili_tiyi');
delete player.storage.bilibili_tiyi;
player.addTempSkill('bilibili_tiyi_used');
},
},
},
},
bilibili_zili:{
unique:true,
init:function(player){
if(!player.storage.bilibili_zili) player.storage.bilibili_zili=[0,0];
},
mod:{
maxHandcardBase:function(player,num){
if(player.storage.bilibili_zili&&player.storage.bilibili_zili[1]) return player.storage.bilibili_zili[1]+1;
},
},
intro:{
markcount:()=>undefined,
content:function(list){
var bool1=(list[0]&&typeof list[0]=='number');
var bool2=(list[1]&&typeof list[1]=='number');
var str='';
if(bool1) str+='<li>摸牌阶段额定摸牌数为'+(list[0]+1);
if(bool1&&bool2) str+='<br>';
if(bool2) str+='<li>手牌上限视为'+(list[1]+1);
return str;
},
},
group:'bilibili_zili_record',
trigger:{player:'phaseDrawBegin'},
filter:function(event,player){
return player.storage.bilibili_zili&&player.storage.bilibili_zili[0];
},
forced:true,
content:function(){
trigger.num=player.storage.bilibili_zili[0]+1;
},
subSkill:{
record:{
trigger:{global:['phaseDrawAfter','phaseDiscardAfter']},
filter:function(event,player){
if(event.player==player) return false;
var storage=player.storage.bilibili_zili;
var num=['phaseDraw','phaseDiscard'].indexOf(event.name);
if(!storage[num]) return true;
return (num==0?event.num:event.player.getHandcardLimit())>storage[num];
},
forced:true,
logTarget:'player',
content:function(){
var storage=player.storage.bilibili_zili;
var num=['phaseDraw','phaseDiscard'].indexOf(trigger.name);
storage[num]=(num==0?trigger.num:trigger.player.getHandcardLimit());
player.markSkill('bilibili_zili');
},
},
},
},
//随性似风
bilibili_daili:{
init:function(player){
player.addSkill('bilibili_daili_unmark');
},
onremove:function(player){
player.removeSkill('bilibili_daili_unmark');
},
unique:true,
trigger:{global:'roundStart'},
filter:function(event,player){
if(player.countCards('s',function(card){
return card.hasGaintag('bilibili_daili_tag');
})) return true;
return lib.skill.bilibili_daili.checkx(player);
},
checkx:function(player){
if(game.roundNumber<=1) return false;
for(var current of game.filterPlayer2()){
if(current==player) continue;
var history=current.actionHistory;
for(var i=history.length-2;i>=0;i--){
for(var j=0;j<history[i].useCard.length;j++){
var cardxx=history[i].useCard[j].cards;
if(cardxx&&cardxx.length){
for(var card of cardxx){
if(get.type(card,null,false)=='basic'||get.type(card,null,false)=='trick') return true;
}
}
}
if(history[i].isRound) break;
}
}
return false;
},
forced:true,
content:function(){
'step 0'
var cards=player.getCards('s',function(card){
return card.hasGaintag('bilibili_daili_tag');
});
if(cards.length) player.loseToDiscardpile(cards);
if(!lib.skill.bilibili_daili.checkx(player)) event.finish();
'step 1'
var cards=[];
for(var current of game.filterPlayer2()){
if(current==player) continue;
var list=[];
var history=current.actionHistory;
for(var i=history.length-2;i>=0;i--){
for(var j=0;j<history[i].useCard.length;j++){
var cardxx=history[i].useCard[j].cards;
if(cardxx&&cardxx.length){
for(var card of cardxx){
if(get.type(card,null,false)=='basic'||get.type(card,null,false)=='trick') list.push(card);
}
}
}
if(history[i].isRound) break;
}
if(list.length) cards.push(list.randomGet());
}
for(var card of cards){
cards[cards.indexOf(card)]=game.createCard2(card.name,card.suit,card.number,card.nature);
}
if(cards.length) player.gain(cards,'gain2').gaintag.add('bilibili_daili_tag');
},
mod:{
aiOrder:function(player,card,num){
if(get.itemtype(card)=='card'&&card.hasGaintag('bilibili_daili_tag')) return num+0.5;
},
},
subSkill:{
unmark:{
charlotte:true,
trigger:{
player:['loseAfter'],
global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter'],
},
filter:function(event,player){
var evt=event.getl(player);
if(!evt||!evt.cards||!evt.cards.length) return false;
if(event.name=='lose'){
for(var i in event.gaintag_map){
if(event.gaintag_map[i].includes('bilibili_daili_tag')) return true;
}
return false;
}
return player.hasHistory('lose',function(evt){
if(event!=evt.getParent()) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('bilibili_daili_tag')) return true;
}
return false;
});
},
direct:true,
priority:11+45+14,
content:function(){
'step 0'
var cardx=[]
var cards=trigger.getl(player).cards,ids=[];
if(trigger.name=='lose'){
for(var i in trigger.gaintag_map){
if(trigger.gaintag_map[i].includes('bilibili_daili_tag')) ids.push(i);
}
}
else player.getHistory('lose',function(evt){
if(trigger!=evt.getParent()) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('bilibili_daili_tag')) ids.push(i);
}
});
for(var card of cards){
if(ids.includes(card.cardid)) cardx.push(card);
}
game.cardsGotoSpecial(cardx);
game.log(cardx,'已移出游戏');
'step 1'
if(!player.countCards('s',function(card){
return card.hasGaintag('bilibili_daili_tag');
})) player.unmarkSkill('bilibili_daili');
},
},
},
},
bilibili_daili_tag:{},
bilibili_duoyang:{
unique:true,
derivation:['bilibili_duoyang_faq','jianxiong','rende','zhiheng'],
trigger:{global:'phaseBefore',player:'enterGame'},
filter:function(event,player){
return event.name!='phase'||game.phaseNumber==0;
},
forced:true,
content:function(){
game.addGlobalSkill('bilibili_duoyangx');
var names=['caocao','liubei','sunquan'];
var skills=['jianxiong','rende','zhiheng'];
var cards=[];
for(var i=0;i<3;i++){
var card='bilibili_duoyang_'+skills[i];
lib.card[card]={
fullimage:true,
image:'character:'+names[i],
ai:{basic:{value:11+45+14+19+19+810}},
};
lib.translate[card]=lib.translate[skills[i]];
lib.translate['bilibili_duoyangx_'+skills[i]]=lib.translate[skills[i]];
lib.translate[card+'_info']='<li>此牌在手牌中时，视为拥有技能【'+lib.translate[skills[i]]+'】'+'<br><li>'+lib.translate[skills[i]+'_info'];
lib.translate['bilibili_duoyangx_'+skills[i]+'_info']=lib.translate[skills[i]+'_info'];
cards.push(game.createCard(card,'heart','10'));
}
player.gain(cards.reverse(),'gain2');
},
},
bilibili_duoyangx:{
mod:{
ignoredHandcard:function(card,player){
if(['bilibili_duoyang_jianxiong','bilibili_duoyang_rende','bilibili_duoyang_zhiheng'].includes(get.name(card))) return true;
},
cardDiscardable:function(card,player,name){
if(name=='phaseDiscard'&&['bilibili_duoyang_jianxiong','bilibili_duoyang_rende','bilibili_duoyang_zhiheng'].includes(get.name(card))) return false;
},
},
group:['bilibili_duoyangx_jianxiong','bilibili_duoyangx_rende','bilibili_duoyangx_zhiheng'],
subSkill:{
jianxiong:{
audio:'jianxiong',
inherit:'jianxiong',
filter:function(event,player){
return lib.skill.jianxiong.filter(event,player)&&player.countCards('h',{name:'bilibili_duoyang_jianxiong'});
},
ai:{},
},
rende:{
audio:'rende',
inherit:'rende',
filter:function(event,player){
return player.countCards('h',{name:'bilibili_duoyang_rende'});
},
check:function(card){
if(ui.selected.cards.length>1) return 0;
if(ui.selected.cards.length&&ui.selected.cards[0].name=='du') return 0;
if(!ui.selected.cards.length&&card.name=='du') return 20;
var player=get.owner(card);
var num=0;
var evt2=_status.event.getParent();
var num=0;
player.getHistory('lose',function(evt){
if(evt.getParent().skill=='bilibili_duoyangx_rende'&&evt.getParent(3)==evt2) num+=evt.cards.length;
});
if(player.hp==player.maxHp||num>1||player.countCards('h')<=1){
if(ui.selected.cards.length){
return -1;
}
if(player.countCards('h')>player.hp) return 10-get.value(card);
if(player.countCards('h')>2) return 6-get.value(card);
return -1;
}
return 10-get.value(card);
},
content:function(){
player.give(cards,target);
var evt2=event.getParent(3);
var num=0;
player.getHistory('lose',function(evt){
if(evt.getParent(2).name=='bilibili_duoyangx_rende'&&evt.getParent(5)==evt2) num+=evt.cards.length;
});
if(num<2&&num+cards.length>1) player.recover();
},
},
zhiheng:{
audio:'zhiheng',
inherit:'zhiheng',
filter:function(event,player){
return player.countCards('h',{name:'bilibili_duoyang_zhiheng'});
},
},
},
},
bilibili_liaoxing:{
trigger:{global:'gameDrawAfter'},
filter:function(event,player){
return event.name!='phase'||game.phaseNumber==0;
},
forced:true,
content:function(){
var players=game.filterPlayer(current=>current!=player);
player.line(players);
players.forEach(target=>target.addGaintag(target.getCards('h'),'bilibili_liaoxing_tag'));
},
group:['bilibili_liaoxing_lose','bilibili_liaoxing_draw'],
subSkill:{
tag:{},
lose:{
trigger:{global:['loseAfter','equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter']},
filter:function(event,player){
return lib.skill.bilibili_liaoxing.subSkill.lose.logTarget(event,player).length;
},
logTarget:function(event,player){
return game.filterPlayer(current=>{
var evt=event.getl(current);
if(!evt||!evt.cards2||!evt.cards2.length) return false;
if(event.name=='lose'){
for(var i in event.gaintag_map){
if(event.gaintag_map[i].contains('bilibili_liaoxing_tag')) return true;
}
return false;
}
return current.hasHistory('lose',function(evt){
if(event!=evt.getParent()) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].contains('bilibili_liaoxing_tag')) return true;
}
return false;
});
});
},
forced:true,
content:function(){
var targets=lib.skill.bilibili_liaoxing.subSkill.lose.logTarget(trigger,player).sortBySeat();
while(targets.length){
var target=targets.shift(),num=0;
if(trigger.name=='lose'){
for(var i in trigger.gaintag_map){
if(trigger.gaintag_map[i].contains('bilibili_liaoxing_tag')) num++;
}
}
else target.getHistory('lose',function(evt){
if(trigger!=evt.getParent()) return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].contains('bilibili_liaoxing_tag')) num++;
}
return false;
});
if(num) target.gain(lib.card.ying.getYing(num),'gain2');
}
},
},
draw:{
trigger:{global:['loseAfter','loseAsyncAfter']},
filter:function(event,player){
return game.hasPlayer2(current=>{
var evt=event.getl(current);
return evt&&evt.cards2&&evt.cards2.some(card=>card.name=='ying');
});
},
forced:true,
content:function(){
var num=0;
game.countPlayer2(current=>{
var evt=trigger.getl(current);
if(evt&&evt.cards2) num+=evt.cards2.filter(card=>card.name=='ying').length;
});
if(num) player.draw(num);
},
},
},
},
//萌新测试技能
bilibili_mx_kanpo:{
unique:true,
trigger:{global:['useSkillBegin','chooseTargetEnd','chooseCardTargetEnd','chooseToUseEnd','chooseToCompareEnd','choosePlayerCardEnd','discardPlayerCardEnd','gainPlayerCardEnd']},
filter:function(event,player){
if(event.bilibili_mx_kanpo||player==event.player) return false;
var targets,skill;
if(['chooseTarget','chooseCardTarget','chooseToUseEnd','chooseToCompareEnd',
'choosePlayerCardEnd','discardPlayerCardEnd','gainPlayerCardEnd'].includes(event.name)){
targets=event.result.targets;
skill=event.getParent().name;
}
else{
targets=event.targets;
skill=event.skill;
}
if(!skill||skill=='bilibili_mx_kanpo') return false;
var info=get.info(skill);
if(!info||info.charlotte||info.ruleSkill) return false;
return targets&&targets.includes(player);
},
prompt:()=>get.propmt('bilibili_mx_kanpo'),
prompt2:function(event,player){
var skill=['chooseTarget','chooseCardTarget','chooseToUseEnd','chooseToCompareEnd',
'choosePlayerCardEnd','discardPlayerCardEnd','gainPlayerCardEnd'].includes(event.name)?event.getParent().name:event.skill;
return get.translation(event.player)+'对你发动了'+'【'+get.translation(trigger.skill)+'】，是否令【'+get.translation(skill)+'】对你无效？';
},
check:function(event,player){
var att=get.sgn(get.attitude(player,event.player));
if(att<0) return true;
if(att==0) return get.attitude(event.player,player)<=0;
return false;
},
logTarget:'player',
content:function(){
trigger.bilibili_mx_kanpo=true;
var skills;
if(['chooseTarget','chooseCardTarget','chooseToUseEnd','chooseToCompareEnd',
'choosePlayerCardEnd','discardPlayerCardEnd','gainPlayerCardEnd'].includes(trigger.name)){
trigger.result.targets.remove(player);
skill=trigger.getParent().name;
}
else{
trigger.targets.remove(player);
skill=trigger.skill;
}
game.log(trigger.player,'的','#g【'+get.translation(skill)+'】','被',player,'无效了');
},
},
bilibili_xuxiang:{
audio:'bolNoAudio',
audioname2:{
vtb_xiaosha:'bilibili_xuxiang_xiaosha',
vtb_xiaotao:'bilibili_xuxiang_xiaotao',
vtb_xiaoshan:'bilibili_xuxiang_xiaoshan',
vtb_xiaojiu:'bilibili_xuxiang_xiaojiu',
vtb_xiaole:'bilibili_xuxiang_xiaole',
},
trigger:{player:'damageBefore'},
forced:true,
content:function(){
trigger.cancel();
},
ai:{
nofire:true,
nothunder:true,
nodamage:true,
effect:{
target:function(card,player,target,current){
if(!player.hasSkillTag('jueqing')&&get.tag(card,'damage')) return 0;
},
},
},
subSkill:{
xiaosha:{audio:'ext:活动武将/texiao/subaudio/xvxiang:true'},
xiaotao:{audio:'ext:活动武将/texiao/subaudio/xvxiang:true'},
xiaoshan:{audio:'ext:活动武将/texiao/subaudio/xvxiang:true'},
xiaojiu:{audio:'ext:活动武将/texiao/subaudio/xvxiang:true'},
xiaole:{audio:'ext:活动武将/texiao/subaudio/xvxiang:true'},
},
},
//TW神吕蒙
bolshelie:{
group:'bolshelie_shelie',
audio:'shelie',
trigger:{player:'phaseJieshuBegin'},
filter:function(event,player){
if(player.hasSkill('bolshelie_round')) return false;
var list=[];
player.getHistory('useCard',function(evt){
if(lib.suit.includes(get.suit(evt.card))&&!list.includes(get.suit(evt.card))) list.push(get.suit(evt.card));
});
return list.length>=4;
},
forced:true,
locked:false,
content:function(){
'step 0'
player.addTempSkill('bolshelie_round','roundStart');
if(typeof player.storage.bolshelie=='number') event._result={index:player.storage.bolshelie};
else player.chooseControl('摸牌阶段','出牌阶段').set('prompt','涉猎：请选择要执行的额外阶段');
'step 1'
player.storage.bolshelie=1-result.index;
if(result.index==0){
var next=player.phaseDraw();
event.next.remove(next);
trigger.getParent().next.push(next);
}
if(result.index==1){
var next=player.phaseUse();
event.next.remove(next);
trigger.getParent().next.push(next);
}
},
subSkill:{
shelie:{
audio:'shelie',
inherit:'shelie',
prompt2:()=>lib.translate.shelie_info,
},
round:{charlotte:true},
},
},
bolgongxin:{
audio:'gongxin',
enable:'phaseUse',
filter:function(event,player){
return game.hasPlayer(function(current){
return current!=player&&current.countCards('h');
});
},
filterTarget:function(card,player,target){
return target!=player&&target.countCards('h');
},
usable:1,
content:function(){
'step 0'
event.num=target.getCards('h').reduce(function(arr,card){
return arr.add(get.suit(card,target)),arr;
},[]).length;
'step 1'
var cards=target.getCards('h');
player.chooseButton(2,[
'攻心',
cards,
[['弃置此牌','置于牌堆顶'],'tdnodes'],
]).set('filterButton',function(button){
var type=typeof button.link;
if(ui.selected.buttons.length&&type==typeof ui.selected.buttons[0].link) return false;
return true;
}).set('ai',function(button){
var target=_status.event.target;
var type=typeof button.link;
if(type=='object') return get.value(button.link,target);
});
'step 2'
if(result.bool){
if(typeof result.links[0]!='string') result.links.reverse();
var card=result.links[1],choice=result.links[0];
if(choice=='弃置此牌') target.discard(card);
else {
player.showCards(card,get.translation(player)+'对'+get.translation(target)+'发动了【攻心】');
target.lose(card,ui.cardPile,'visible','insert');
game.log(card,'被置于了牌堆顶');
}
}
'step 3'
if(event.num>target.getCards('h').reduce(function(arr,card){
return arr.add(get.suit(card,target)),arr;
},[]).length){
player.line(target);
player.addTempSkill('bolgongxin3',{player:['bolgongxin3After','phaseAfter']});
player.markAuto('bolgongxin3',[target]);
}
},
ai:{
order:10,
expose:0.25,
result:{
target:function(player,target){
return -target.countCards('h');
},
},
},
},
bolgongxin3:{
charlotte:true,
onremove:true,
intro:{content:'$不可响应你本回合使用的下一张牌'},
trigger:{player:'useCard'},
forced:true,
popup:false,
content:function(){
'step 0'
game.delayx();
'step 1'
var targets=player.getStorage('bolgongxin3');
player.line(targets,'fire');
trigger.directHit.addArray(targets);
},
},
//Empty city°
bilibili_zhiyou:{
getList:function(player){
var list=[];
for(var target of game.filterPlayer2()){
if(player==target) continue;
target.getAllHistory('useSkill',function(evt){
if(evt.skill=='bilibili_zhiyou'||evt.type!='player'||!evt.sourceSkill) return false;
var skill=evt.sourceSkill||evt.skill;
if(!target.getStockSkills(true,true).includes(skill)) return false;
if(player.getStorage('bilibili_zhiyou').includes(skill)) return false;
if(get.skillCategoriesOf(skill,player).length) return false;
if(!list.includes(skill)) list.push(skill);
});
}
return list;
},
unique:true,
enable:'phaseUse',
filter:function(event,player){
if(player.hasSkill('bilibili_zhiyou_remove')) return false;
return lib.skill.bilibili_zhiyou.getList(player).length;
},
usable:1,
content:function(){
'step 0'
var list=lib.skill.bilibili_zhiyou.getList(player);
var skills=list.randomGets(Math.min(list.length,3));
skills.randomSort();
player.chooseControl(skills).set('choiceList',skills.map(function(i){
return '<div class="skill">【'+get.translation(lib.translate[i+'_ab']||get.translation(i).slice(0,2))+'】</div><div>'+get.skillInfoTranslation(i,player)+'</div>';
})).set('displayIndex',false).set('prompt','请选择你要获得的技能').set('ai',()=>{
var skills=_status.event.controls.slice();
return skills.sort((a,b)=>{
return get.skillRank(b,'in')-get.skillRank(a,'in');
})[0];
});
'step 1'
if(result.control){
player.addSkillLog(result.control);
//player.addSkill('bilibili_zhiyou_remove');
//player.markAuto('bilibili_zhiyou',[result.control]);
//player.storage.bilibili_zhiyou_remove=result.control;
}
},
ai:{
order:12,
result:{player:1},
},
subSkill:{
remove:{
charlotte:true,
onremove:true,
trigger:{player:['useSkill','logSkillBegin']},
filter:function(event,player){
var skills=[player.storage.bilibili_zhiyou_remove];
game.expandSkills(skills);
return skills.includes(event.skill);
},
direct:true,
firstDo:true,
content:function(){
player.removeSkill(player.storage.bilibili_zhiyou_remove);
player.removeSkill('bilibili_zhiyou_remove');
},
},
},
},
bilibili_guanli:{
mod:{
cardUsableTarget:function(card,player,target){
var targets=game.filterPlayer2(function(target){
return player.getStorage('bilibili_zhiyou').filter(function(skill){
return target.getStockSkills(true,true).includes(skill);
}).length;
});
if(target!=player&&!targets.includes(target)) return true;
},
targetInRange:function(card,player,target){
var targets=game.filterPlayer2(function(target){
return player.getStorage('bilibili_zhiyou').filter(function(skill){
return target.getStockSkills(true,true).includes(skill);
}).length;
});
if(target!=player&&!targets.includes(target)) return true;
},
},
unique:true,
trigger:{global:'phaseDrawBegin2'},
filter:function(event,player){
if(event.numFixed) return false;
var targets=game.filterPlayer2(function(target){
return player.getStorage('bilibili_zhiyou').filter(function(skill){
return target.getStockSkills(true,true).includes(skill);
}).length;
});
if(event.player==player) return targets.length;
return targets.includes(event.player);
},
forced:true,
logTarget:'player',
content:function(){
var targets=game.filterPlayer2(function(target){
return player.getStorage('bilibili_zhiyou').filter(function(skill){
return target.getStockSkills(true,true).includes(skill);
}).length;
});
if(trigger.player==player) trigger.num+=targets.length;
else{
trigger.num+=3;
player.addTempSkill('bilibili_guanli_gain','phaseDrawAfter');
if(!player.storage.bilibili_guanli_gain) player.storage.bilibili_guanli_gain={};
if(!player.storage.bilibili_guanli_gain[trigger.player.playerid]) player.storage.bilibili_guanli_gain[trigger.player.playerid]=0;
player.storage.bilibili_guanli_gain[trigger.player.playerid]+=2;
}
},
subSkill:{
gain:{
charlotte:true,
onremove:true,
trigger:{global:'phaseDrawEnd'},
filter:function(event,player){
return player.storage.bilibili_guanli_gain[event.player.playerid];
},
direct:true,
content:function(){
'step 0'
var num=player.storage.bilibili_guanli_gain[trigger.player.playerid];
delete player.storage.bilibili_guanli_gain[trigger.player.playerid];
var cards=trigger.player.getCards('he');
if(!cards.length) event.finish();
else if(cards.length<=num) event._result={bool:true,cards:cards};
else trigger.player.chooseCard('he','将'+get.cnNumber(num)+'张牌交给'+get.translation(player),num,true);
'step 1'
if(result.bool) player.gain(result.cards,trigger.player,'giveAuto');
},
},
},
},
//雷
bilibili_Thunder:{
unique:true,
nobracket:true,
group:['bilibili_Thunder_decade','bilibili_Thunder_meihua'],
trigger:{player:'phaseBegin'},
filter:function(event,player){
return player.hujia>0&&player.hujia!=3-player.countMark('bilibili_Thunder_count');
},
forced:true,
content:function(){
'step 0'
player.changeHujia(Math.max(3-player.countMark('bilibili_Thunder_count')-player.hujia,-player.hujia));
'step 1'
player.addMark('bilibili_Thunder_count',1,false);
},
subSkill:{
count:{charlotte:true,onremove:true},
//第一阶段————Thunder十周年武将
decade:{
trigger:{global:['useSkillAfter','logSkill']},
filter:function(event,player){
if(event.player==player||!player.hujia||event.type!='player') return false;
var skill=event.sourceSkill||event.skill;
if(_status.ThunderSkill&&_status.ThunderSkill.includes(skill)) return false;
return !get.skillCategoriesOf(skill,event.player).length;
},
forced:true,
content:function(){
game.addGlobalSkill('bilibili_Thunder_decadeSkill');
var skill=trigger.sourceSkill||trigger.skill;
if(!_status.ThunderSkill) _status.ThunderSkill=[];
_status.ThunderSkill.push(skill);
var card='bilibili_Thunder_decade'+skill;
lib.card[card]={
fullimage:true,
image:'ext:活动武将/image/character/bilibili_thunderlei.jpg',
enable:true,
toself:true,
filterTarget:function(card,player,target){
return target==player;
},
selectTarget:-1,
bilibili_ThunderSkill:skill,
content:function(){},
ai:{
basic:{
order:114514+1919810,
useful:114514+1919810,
value:114514+1919810,
},
result:{target:1},
},
};
lib.translate[card]='雷の制卡·'+lib.translate[skill];
lib.translate[card+'_info']='<li>使用此牌，获得技能【'+lib.translate[skill]+'】'+'<br><li>'+lib.translate[skill+'_info'];
player.gain(game.createCard2(card,lib.suit.randomGet(),get.rand(1,13)),'gain2');
},
},
decadeSkill:{
trigger:{player:'useCard'},
filter:function(event,player){
return lib.card[event.card.name].bilibili_ThunderSkill;
},
direct:true,
firstDo:true,
content:function(){
'step 0'
game.delay();
'step 1'
var skill=lib.card[trigger.card.name].bilibili_ThunderSkill;
if(!player.hasSkill(skill)) player.addSkillLog(skill);
else player.draw(3);
'step 2'
if(trigger.cards.filterInD()&&trigger.cards.filterInD().length){
if(!trigger.cards.filterInD()[0].decadeSkill){
trigger.cards.filterInD()[0].decadeSkill=true;
game.log(trigger.cards.filterInD(),'已被洗入牌堆');
ui.cardPile.insertBefore(trigger.cards.filterInD()[0],ui.cardPile.childNodes[get.rand(0,ui.cardPile.childNodes.length)]);
game.updateRoundNumber();
}
else{
game.log(trigger.cards.filterInD(),'已被移出游戏');
game.cardsGotoSpecial(trigger.cards);
}
}
},
},
//第二阶段————雷的花样美化————属性提升
meihua:{
trigger:{player:['useCard','drawBegin'],source:'damageBegin1'},
filter:function(event,player){
if(!_status.currentPhase||_status.currentPhase!=player||player.hujia) return false;
return event.name!='useCard'||(event.targets&&event.targets.length&&!['jiedao','tiesuo','wuxie'].includes(event.card.name));
},
forced:true,
content:function(){
if(trigger.name=='useCard') trigger.effectCount++;
else trigger.num+=trigger.num;
},
},
},
},
bilibili_qianxi:{
unique:true,
trigger:{player:'damageBegin4'},
forced:true,
content:function(){
if(trigger.num>1) trigger.num=1;
player.chat('钻研代码中，勿扰');
player.addTempSkill('bilibili_qianxi_zuanyan');//钻研
},
subSkill:{
zuanyan:{
mod:{
targetEnabled:function(card,player,target){
if(target!=player) return false;
},
},
group:'sbzhichi_egg',
mark:true,
intro:{content:'钻研代码中，勿扰'},
charlotte:true,
trigger:{player:'damageBefore'},
forced:true,
content:function(){
trigger.cancel();
},
ai:{
maixie:true,
maixie_hp:true,
nofire:true,
nothunder:true,
nodamage:true,
effect:{
target:function(card,player,target,current){
return 'zeroplayertarget';
},
},
},
},
},
},
//数学家
bolsidi:{
audio:'disordersidi',
trigger:{player:'useCardAfter'},
filter:function(event,player){
return get.type(event.card,false)!='delay'&&game.hasPlayer(function(current){
return player!=current&&(!player.storage.bolsidi||!player.storage.bolsidi.includes(current));
});
},
direct:true,
content:function(){
'step 0'
player.chooseTarget(get.prompt('bolsidi'),'选择一名角色，为其选择一名“司敌”目标角色',function(card,player,target){
return target!=player&&(!player.storage.bolsidi||!player.storage.bolsidi.includes(target));
}).set('ai',function(target){
var player=_status.event.player;
if(target.getEnemies().length==1) return 2+Math.random();
return 1+Math.random();
}).animate=false;
'step 1'
if(result.bool){
var target=result.targets[0];
event.target=target;
player.chooseTarget('为'+get.translation(target)+'选择一名“司敌”目标角色').set('ai',function(target){
var player=_status.event.player;
var targetx=_status.event.target;
if(targetx.getEnemies().includes(target)&&targetx.inRange(target)) return Math.random()+1.5;
return targetx==target?1:-1;
}).set('target',target).animate=false;
}
else event.finish();
'step 2'
if(result.bool){
result.targets.unshift();
player.logSkill('bolsidi',target);
if(!player.storage.bolsidi) player.storage.bolsidi=[];
if(!player.storage.bolsidi2) player.storage.bolsidi2=[];
player.storage.bolsidi.push(target);
player.storage.bolsidi2.push(result.targets[0]);
player.markSkill('bolsidi');
game.delayx();
}
},
intro:{
content:function(storage,player){
if((player==game.me||player.isUnderControl())&&!game.observe){
var storage2=player.storage.bolsidi2,str='';
for(var i=0;i<storage.length;i++){
str+=(get.translation(storage[i])+'=>'+get.translation(storage2[i]));
if(i<storage.length-1) str+='<br>';
}
return str;
}
return '已指定'+get.translation(storage)+'为目标';
},
},
onremove:function(player){
delete player.storage.bolsidi;
delete player.storage.bolsidi2;
},
group:['bolsidi_clear','bolsidi_exec'],
subSkill:{
clear:{
trigger:{global:['useCardToPlayered','die']},
filter:function(event,player){
if(!player.storage.bolsidi||!player.storage.bolsidi.includes(event.player)) return false;
if(event.name=='die') return true;
if(get.type(event.card,false)!='delay'){
var index=player.storage.bolsidi.indexOf(event.player);
return index!=-1&&(player.storage.bolsidi2[index]!=event.target||event.targets.length!=1);
}
return false;
},
forced:true,
locked:false,
popup:false,
content:function(){
player.storage.bolsidi2.splice(player.storage.bolsidi.indexOf(trigger.player),1);
player.unmarkAuto('bolsidi',[trigger.player]);
},
},
exec:{
audio:'disordersidi',
trigger:{global:'useCardToPlayered'},
filter:function(event,player){
if(get.type(event.card,false)=='delay'||!player.storage.bolsidi||event.targets.length!=1) return false;
var index=player.storage.bolsidi.indexOf(event.player);
return index!=-1&&player.storage.bolsidi2[index]==event.target;
},
logTarget:'player',
forced:true,
locked:false,
content:function(){
'step 0'
player.storage.bolsidi2.splice(player.storage.bolsidi.indexOf(trigger.player),1);
player.unmarkAuto('bolsidi',[trigger.player])
if(trigger.target==player){
player.draw();
event.finish();
return;
}
var target=trigger.player;
event.target=target;
player.chooseControl('cancel2').set('choiceList',[
'取消'+get.translation(trigger.card)+'的所有目标'+(_status.dying.length?'':'，然后对'+get.translation(target)+'造成1点伤害'),
'摸两张牌',
]).set('ai',function(){
var player=_status.event.player,evt=_status.event.getTrigger();
if(get.damageEffect(evt.player,player,player)>0&&get.effect(evt.target,evt.card,evt.player,player)<0) return 0;
return 1;
});
'step 1'
if(result.index==0){
trigger.cancel();
trigger.targets.length=0;
trigger.getParent().triggeredTargets1.length=0;
if(!_status.dying.length) target.damage();
}
else if(result.index==1) player.draw(2);
},
},
},
},
//群主
bilibili_meihua:{
group:'bilibili_meihua_unmark',
global:'bilibili_meihua_global',
init:function(player){
game.addGlobalSkill('bilibili_meihua_destroy');
for(var i=1;i<=5;i++){
if(player.isDisabled(i)) player.enableEquip(i);
}
},
trigger:{global:'gameStart',player:['enterGame','disableEquipBefore','chooseToDisableBefore']},
filter:function(event,player){
if(event.name=='disableEquip'||event.name=='chooseToDisable') return true;
return lib.inpile.filter((name)=>get.type(name)=='equip').length;
},
forced:true,
locked:false,
content:function(){
if(trigger.name=='disableEquip'||trigger.name=='chooseToDisable'){trigger.cancel();return;}
var cards=Array.from(ui.cardPile.childNodes).filter(function(card){
return get.type(card)=='equip';
});
//player.$gain2(cards,false);
player.loseToSpecial(cards,'bilibili_meihua').visible=true;
player.markSkill('bilibili_meihua');
game.updateRoundNumber();
},
intro:{
mark:function(dialog,storage,player){
dialog.addAuto(player.getCards('s',function(card){
return card.hasGaintag('bilibili_meihua');
}));
},
markcount:function(storage,player){
return player.getCards('s',function(card){
return card.hasGaintag('bilibili_meihua');
}).length;
},
onunmark:function(storage,player){
var cards=player.getCards('s',function(card){
return card.hasGaintag('bilibili_meihua');
});
if(cards.length){
player.lose(cards,ui.discardPile);
player.$throw(cards,1000);
game.log(cards,'进入了弃牌堆');
}
},
},
mod:{
cardRespondable:function(card,player){
if(get.itemtype(card)=='card'&&card.hasGaintag('bilibili_meihua')) return false;
},
cardEnabled2:function(card,player){
if(get.itemtype(card)=='card'&&card.hasGaintag('bilibili_meihua')){
if(player.getHistory('lose',function(evt){
if(evt.getParent().name!='useCard') return false;
for(var i in evt.gaintag_map){
if(evt.gaintag_map[i].includes('bilibili_meihua')) return evt.cards.length==1&&get.subtype(evt.cards[0])==get.subtype(card)&&!evt.getParent().skill;
}
return false;
}).length) return false;
}
},
},
subSkill:{
unmark:{
charlotte:true,
trigger:{player:'loseAfter'},
filter:function(event,player){
if(!event.ss||!event.ss.length) return false;
return !player.countCards('s',function(card){
return card.hasGaintag('bilibili_meihua');
});
},
direct:true,
content:function(){
player.unmarkSkill('bilibili_meihua');
},
},
global:{
audio:'wengua',
enable:'phaseUse',
filter:function(event,player){
if(player.hasSkill('bilibili_meihua')) return false;
if(!lib.inpile.filter((name)=>get.type(name)=='equip').length) return false;
return game.hasPlayer(function(current){
return current.hasSkill('bilibili_meihua');
})&&player.countCards('he')&&player.countCards('h');
},
prompt:()=>'交给拥有【美化】的一名角色第一张牌，将第二张牌（须为手牌）当作本局游戏牌堆组成的任意装备牌对自己使用',
filterTarget:function(card,player,target){
return target.hasSkill('bilibili_meihua');
},
selectTarget:function(){
if(game.countPlayer(function(current){
return current.hasSkill('bilibili_meihua');
})==1) return -1;
return 1;
},
filterCard:function(card,player){
return !ui.selected.cards.length||get.position(card)=='h';
},
selectCard:2,
check:function(card){
return 8-get.value(card);
},
direct:true,
delay:false,
discard:false,
lose:false,
position:'he',
usable:1,
content:function(){
'step 0'
target.gain(cards[0],player,'giveAuto');
'step 1'
var list=lib.inpile.filter((name)=>get.type(name)=='equip').map((i)=>['装备','',i]);
player.chooseButton(['请选择'+get.translation(cards[1])+'要转化的装备牌',[list,'vcard']],true).set('ai',function(button){
var player=_status.event.player;
var equip=button.link[2];
if(player.hasEmptySlot(get.subtype(equip))||get.equipValue({name:button.link[2]},player)>0) return get.equipValue({name:button.link[2]},player);
return (1+Math.random())/1145141919810;
});
'step 2'
if(!result.bool) return;
var name=result.links[0][2];
var MXcard='bilibili_meihua_'+name;
lib.card[MXcard]={
cardimage:name,
};
for(var i in lib.card[name]){
if(!lib.card[MXcard][i]) lib.card[MXcard][i]=lib.card[name][i];
}
lib.translate[MXcard]='仿卡·'+lib.translate[name].slice(0,2);
lib.translate[MXcard+'_info']=lib.translate[name+'_info']+'（由'+get.translation(cards[1])+'转化）'+'<br><br><span style="font-family:yuanli">by 群主高质量美化</span>';
var equip=game.createCard2(MXcard,get.suit(cards[1],false),get.number(cards[1],false));
equip.bilibili_meihua=cards[1];
player.lose(cards[1],ui.special)._triggered=null;
player.chooseUseTarget(equip,true,'nopopup');
},
ai:{
order:7,
expose:0,
result:{
player:function(player,target){
if(!player.hasEmptySlot()) return 0;
var target=game.findPlayer(function(current){
return current.hasSkill('bilibili_meihua');
});
if(target) return 2+get.sgn(get.attitude(player,target));
},
},
},
},
destroy:{
charlotte:true,
trigger:{player:['loseBefore','gainBefore','addJudgeBefore','addToExpansionBefore'],global:'loseAsyncBefore'},
filter:function(event,player){
if(event.name.indexOf('lose')==0){
var evt=event.getl(player);
return evt&&evt.player==player&&evt.cards&&evt.cards.filter(function(card){
return card.bilibili_meihua;
}).length;
}
return event.cards.filter(function(card){
return card.bilibili_meihua;
}).length;
},
direct:true,
firstDo:true,
priority:Infinity,
forceDie:true,
content:function(){
'step 0'
if(trigger.name.indexOf('lose')==0){
var news={
hs:[],
es:[],
js:[],
ss:[],
xs:[],
cards:[],
cards2:[],
};
var evt=trigger.getl(player);
var cards=evt.cards.slice(0);
event.cards=cards;
for(var i=0;i<cards.length;i++){
if(cards[i].bilibili_meihua){
player.addToExpansion([cards[i].bilibili_meihua]).gaintag.add('bilibili_meihua_destroy')._triggered=null;
//lose函数更改后不在角色五个区域内的牌会丢失，所以只能暂时用歪方addToExpansion[doge]，造成的些许停顿暂时无法解决，以后再想办法了
for(var j in news){
if(evt[j]&&evt[j].includes(cards[i])) news[j].push(cards[i].bilibili_meihua);
}
}
else{
for(var j in news){
if(evt[j]&&evt[j].includes(cards[i])) news[j].push(cards[i]);
}
}
}
for(var k in news) evt[k]=news[k];
if(trigger.cards) trigger.cards=news.cards;
if(trigger.cards2) trigger.cards2=news.cards2;
}
else{
var list=[];
var cards=trigger.cards.slice(0);
event.cards=cards;
for(var i=0;i<cards.length;i++){
if(cards[i].bilibili_meihua){
player.addToExpansion([cards[i].bilibili_meihua]).gaintag.add('bilibili_meihua_destroy')._triggered=null;
//lose函数更改后不在角色五个区域内的牌会丢失，所以只能暂时用歪方addToExpansion[doge]，造成的些许停顿暂时无法解决，以后再想办法了
list.push(cards[i].bilibili_meihua);
}
else list.push(cards[i]);
}
trigger.cards=list;
}
'step 1'
game.cardsGotoSpecial(cards.filter((card)=>card.bilibili_meihua));
},
},
},
},
bilibili_gongyou:{
derivation:['xiaoji','xuanfeng','feiying','mashu','olqizhou','reduanbing','reyingzi','fenwei','lanjiang'],
init:function(player){
lib.skill.olqizhou.direct=true;
lib.skill.olqizhou.init=function(player){
if(lib.skill.olqizhou.getSuitNum(player)!=player.countMark('olqizhou')) lib.skill.olqizhou.applyChange(player);
};
if(lib.skill.bilibili_gongyou.findDiffierence(player)) player.addAdditionalSkill('bilibili_gongyou',lib.skill.bilibili_gongyou.getList());
},
getList:function(){
var list=[];
if(game.countPlayer(function(current){
return current.getEquips(1).length;
})>=Math.ceil(game.countPlayer()/2)) list.push('xiaoji');
if(game.countPlayer(function(current){
return current.getEquips(2).length;
})>=Math.ceil(game.countPlayer()/2)) list.push('xuanfeng');
if(game.countPlayer(function(current){
return current.getEquips(3).length;
})>=Math.ceil(game.countPlayer()/2)) list.push('feiying');
if(game.countPlayer(function(current){
return current.getEquips(4).length;
})>=Math.ceil(game.countPlayer()/2)) list.push('mashu');
if(!list.length) list.push('olqizhou');
return list;
},
findDiffierence:function(player){
var skills=player.additionalSkills.bilibili_gongyou||[];
var list=lib.skill.bilibili_gongyou.getList();
if(skills.length!=list.length) return true;
for(var i=0;i<skills.length;i++){
if(!list.includes(skills[i])) return true;
}
return false;
},
onremove:true,
trigger:{global:['loseAfter','equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter','addToExpansionAfter','phaseBefore','dieAfter']},
filter:function(event,player){
if(event.name!='phase'&&event.name!='die'){
var bool=false;
game.countPlayer(function(current){
var evt=event.getl(current);
if(evt&&evt.es) bool=true;
});
if(event.name=='equip') bool=true;
if(!bool) return false;
}
return lib.skill.bilibili_gongyou.findDiffierence(player);
},
direct:true,
locked:false,
priority:11+45+14,
content:function(){
player.addAdditionalSkill('bilibili_gongyou',lib.skill.bilibili_gongyou.getList());
},
},
bilibili_qianyin:{
trigger:{global:'roundStart',player:'phaseBefore'},
filter:function(event,player){
return event.name!='phase'||!event.skill;
},
direct:true,
locked:false,
content:function(){
if(trigger.name!='phase'){
player.logSkill('bilibili_qianyin');
player.insertPhase();
var evt=trigger._trigger;
if(evt.player!=player&&!evt._finished){
evt.finish();
evt.untrigger(true);
evt._triggered=5;
var evtx=evt.player.insertPhase();
delete evtx.skill;
}
}
else trigger.cancel();
},
},
//仁望值
bilibili_renwang:{
changeMark:function(player,num){
if(num==0) return;
if(num>0){
if(player.countMark('bilibili_renwang')>=5) return;
num=Math.min(5-player.countMark('bilibili_renwang'),num);
player.addMark('bilibili_renwang',num,false);
game.log(player,'获得了','#g'+num,'点<span class="bluetext">仁望值</span>');
}
else{
if(!player.hasMark('bilibili_renwang')) return;
num=-Math.max(-player.countMark('bilibili_renwang'),num);
player.removeMark('bilibili_renwang',num,false);
game.log(player,'消耗了','#y'+num,'点<span class="bluetext">仁望值</span>');
}
},
getNum:function(event,player){
var sum=0;
if(game.hasPlayer2(function(current){
var num=0;
current.getHistory('gain',function(evt){
if(evt.getParent('phaseUse')==event) num+=evt.cards.length;
});
return num>=2;
})) sum++;
if(game.getGlobalHistory('changeHp',function(evt){
return evt.getParent().name=='recover'&&evt.getParent('phaseUse')==event;
}).length) sum++;
if(!player.getHistory('sourceDamage',function(evt){
return evt.player!=player&&evt.getParent('phaseUse')==event;
}).length) sum++;
return sum;
},
ruleSkill:true,
charlotte:true,
trigger:{global:'phaseBefore',player:['phaseUseEnd','enterGame']},
filter:function(event,player){
if(!player.hasSkillTag('renwang_gain')||player.countMark('bilibili_renwang')>=5) return false;
if(event.name=='phaseUse') return lib.skill.bilibili_renwang.getNum(event,player)>0;
return event.name!='phase'||game.phaseNumber==0;
},
direct:true,
content:function(){
var num=(trigger.name=='phaseUse'?lib.skill.bilibili_renwang.getNum(trigger,player):1);
lib.skill.bilibili_renwang.changeMark(player,num);
},
intro:{content:'当前共有#点仁望值'},
},
//华歆
bolyuanqing:{
audio:'yuanqing',
enable:'phaseUse',
filter:function(event,player){
return player.countCards('h');
},
check:function(card){
var player=_status.event.player;
var map={red:0,black:0,none:0};
for(var target of game.filterPlayer()){
if(target==player||!target.countDiscardableCards(target,'h')) continue;
for(var i in map){
if(target.countCards('h',{color:i})) map[i]+=get.sgn(get.attitude(player,target));
}
}
var colors=Object.keys(map).filter(color=>map[color]>=0);
return colors.includes(get.color(card,player))?(1+Math.random()):0;
},
usable:1,
position:'h',
filterCard:true,
discard:false,
lose:false,
delay:false,
content:function(){
'step 0'
event.cards=[];
event.color=get.color(cards[0],player);
event.targets=game.filterPlayer().sortBySeat(player);
event.targets.remove(player);
player.line(event.targets);
player.showCards(cards,get.translation(player)+'发动了【渊清】');
'step 1'
var target=event.targets.shift();
event.target=target;
target.chooseToDiscard('是否弃置一张'+get.translation(event.color)+'牌，然后摸一张牌？',{color:event.color}).set('ai',card=>lib.skill.zhiheng.check(card));
'step 2'
if(result.bool){
target.draw();
if(Array.isArray(result.cards)) event.cards.addArray(result.cards);
}
else{
target.chat('拒绝');
game.delayx();
}
'step 3'
if(event.targets.length) event.goto(1);
else if(!event.cards.length) event.finish();
else player.chooseToMove('渊清：是否将其中一张牌置于牌堆顶？').set('list',[
['弃置的牌',event.cards],
['牌堆顶'],
]).set('filterMove',function(from,to,moved){
if(moved[1].length&&to==1) return false;
return true;
}).set('filterOk',function(moved){
return moved[1].length==1;
}).set('processAI',function(list){
var cards=list[0][1].slice(0);
var cards2=cards.randomGet();
return [[],[cards2]];
});
'step 4'
if(result.bool){
var cardx=result.moved[1];
player.$throw(cardx,1000);
game.log(player,'将',cardx,'置于了牌堆顶');
while(cardx.length) ui.cardPile.insertBefore(cardx.pop().fix(),ui.cardPile.firstChild);
}
},
ai:{
order:9,
result:{
player:function(player){
var map={red:0,black:0,none:0};
for(var target of game.filterPlayer()){
if(target==player||!target.countDiscardableCards(target,'h')) continue;
for(var i in map){
if(target.countCards('h',{color:i})) map[i]+=get.sgn(get.attitude(player,target));
}
}
var colors=Object.keys(map).filter(color=>map[color]>=0);
return player.countCards('h',{color:colors});
},
},
},
},
bolshuchen:{
init:function(player){
game.addGlobalSkill('bilibili_renwang');
},
audio:'shuchen',
trigger:{global:'dying'},
filter:function(event,player){
return player.hasMark('bilibili_renwang');
},
direct:true,
content:function(){
'step 0'
var map={};
var list=[];
for(var i=1;i<=Math.min(player.countMark('bilibili_renwang'),3);i++){
var cn=get.cnNumber(i)+'张';
map[cn]=i;
list.push(cn);
}
list.push('cancel2');
event.map=map;
player.chooseControl(list).set('prompt',get.prompt('bolshuchen')).set('prompt2','消耗任意仁望值并摸等量的牌，然后你可以交给'+get.translation(trigger.player)+'至多等量的牌').set('ai',function(){
var player=_status.event.player;
var num=Math.min(player.countMark('bilibili_renwang'),3);
return get.cnNumber(num)+'张';
});
'step 1'
if(result.control!='cancel2'){
player.logSkill('bolshuchen');
var num=event.map[result.control]||1;
lib.skill.bilibili_renwang.changeMark(player,-num);
event.num=num;
player.draw(num);
if(trigger.player==player) event.finish();
}
else event.finish();
'step 2'
player.chooseCard('疏陈：是否交给'+get.translation(trigger.player)+'至多'+get.cnNumber(event.num)+'张牌',[1,event.num],'he').set('ai',function(card){
var player=_status.event.player;
var trigger=_status.event.getTrigger();
if(get.attitude(player,trigger.player)>0){
var save=((player.countCards('hs',{name:'tao'})+trigger.player.hp)>0);
if(save&&get.position(card)=='h') return get.value(card);
return 0;
}
return card.name=='du'?20:0;
});
'step 3'
if(result.bool){
player.line(trigger.player);
trigger.player.gain(result.cards,player,'giveAuto');
}
},
ai:{renwang_gain:true},
},
bolxiezheng:{
init:function(player){
game.addGlobalSkill('bilibili_renwang');
},
trigger:{player:'phaseDiscardEnd'},
filter:function(event,player){
var cards=[];
player.getHistory('lose',function(evt){
if(evt.type=='discard'&&evt.getParent('phaseDiscard')==event) cards.addArray(evt.cards2);
});
return cards.length&&game.hasPlayer(function(current){
return current.countCards('he');
})&&player.hasMark('bilibili_renwang');
},
direct:true,
content:function(){
'step 0'
var cards=[];
player.getHistory('lose',function(evt){
if(evt.type=='discard'&&evt.getParent('phaseDiscard')==trigger) cards.addArray(evt.cards2);
});
var num=cards.length;
event.num=num;
player.chooseTarget(get.prompt('bolxiezheng'),'消耗1点仁望值，令一名角色弃置'+get.cnNumber(num)+'张牌',function(card,player,target){
return target.countCards('he');
}).set('ai',function(target){
var player=_status.event.player;
return get.effect(target,{name:'guohe_copy2'},player,player)*Math.min(target.countCards('he'),_status.event.num);
}).set('num',num);
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('bolxiezheng',target);
lib.skill.bilibili_renwang.changeMark(player,-1);
target.chooseToDiscard(num,'he',true);
}
},
ai:{renwang_gain:true},
},
//张仲景
bolliaoyi:{
init:function(player){
//每个回合无论是否跳过都会有History，在此仅检测翻面
game.addGlobalSkill('bolliaoyi_check');
},
getList:function(player){
var types=[],history=player.actionHistory,bool=false;
for(var i=history.length-1;i>=0;i--){
if(history[i].isSkipped) continue;
for(var evt of history[i].lose){
var cards=evt.cards2.filter(cardx=>!types.includes(get.type2(cardx,player)));
if(!cards.length) continue;
for(var card of cards){
if(!types.includes(get.type2(card,player))) types.push(get.type2(card,player));
}
}
if(i<history.length-1&&history[i].isMe){
bool=true;
break;
}
}
return bool?types:[];
},
audio:'liaoyi',
trigger:{player:'phaseUseBegin'},
filter:function(event,player){
return game.hasPlayer(function(target){
return lib.skill.bolliaoyi.getList(target).length;
});
},
direct:true,
content:function(){
'step 0'
var func=function(){
for(var target of game.filterPlayer()){
var list=lib.skill.bolliaoyi.getList(target);
if(!list.length) continue;
list.sort(function(a,b){
var getNum=function(type){
var types=['basic','trick','equip'];
var num=types.indexOf(type);
if(num==-1) num=3;
return num;
};
return getNum(a)-getNum(b);
});
var str='';
for(var type of list){
str+=get.translation(type).slice(0,1);
str+=' ';
}
str=str.slice(0,-1);
target.prompt(str);
}
};
if(event.player==game.me) func();
else if(event.isOnline()) player.send(func);
player.chooseTarget(get.prompt2('bolliaoyi'),function(card,player,target){
return lib.skill.bolliaoyi.getList(target).length;
}).set('ai',function(target){
var player=_status.event.player;
return lib.skill.bolliaoyi.getList(target).length*get.sgn(get.attitude(player,target));
});
'step 1'
if(result.bool){
var target=result.targets[0];
player.logSkill('bolliaoyi',target);
var types=lib.skill.bolliaoyi.getList(target);
var cards=[];
for(var type of types){
var card=get.cardPile(function(card){
return get.type2(card)==type;
});
if(card) cards.push(card);
}
if(cards.length) target.gain(cards,'gain2');
}
},
ai:{expose:0.25},
subSkill:{
check:{
charlotte:true,
trigger:{player:['_turnoverEnd','phaseBeforeEnd']},
filter:function(event,player){
if(event.name=='_turnoverEnd') return player.phaseSkipped||player.isOut();
return player.isTurnedOver()&&!event._noTurnOver;
},
lastDo:true,
priority:-Infinity,
direct:true,
content:function(){
var players=game.players.slice(0).concat(game.dead);
players.forEach(target=>{
target.getHistory().isSkipped=true;
target.getStat().isSkipped=true;
});
},
},
},
},
bolbinglun:{
init:function(player){
game.addGlobalSkill('bilibili_renwang');
},
audio:'binglun',
enable:'phaseUse',
filter:function(event,player){
return player.hasMark('bilibili_renwang');
},
usable:1,
chooseButton:{
dialog:function(event,player){
var dialog=ui.create.dialog('###病论###'+lib.translate.bolbinglun_info);
dialog.add([[
['1','消耗至多3点仁望值，令等量角色各选择一项执行'],
['2','消耗至多3点仁望值，令一名角色选择等量项执行']
],'textbutton']);
return dialog;
},
filter:function(button,player){
return button.link=='2'||player.countMark('bilibili_renwang')>1;
},
check:function(button){
var player=_status.event.player;
if(player.countMark('bilibili_renwang')==1) return 1;
if(!player.hasFriend()){
if(button.link=='2') return 1;
return 0;
}
if(button.link=='1') return 1;
return 0;
},
backup:function(links){
return get.copy(lib.skill['bolbinglun_'+links[0]]);
},
prompt:function(links,player){
var num=Math.min(3,player.countMark('bilibili_renwang'));
if(links[0]=='1') return '请选择至多'+get.cnNumber(num)+'名角色，令这些角色各选择一项执行';
return '请选择一名角色，令一名角色选择至多'+get.cnNumber(num)+'项执行';
},
},
ai:{
renwang_gain:true,
order:1,
result:{player:1},
},
subSkill:{
damage:{
charlotte:true,
onremove:true,
trigger:{player:'damageBegin2'},
filter:function(event,player){
return player.hasMark('bolbinglun_damage');
},
forced:true,
content:function(){
trigger.cancel();
player.removeMark('bolbinglun_damage',1,false);
if(!player.countMark('bolbinglun_damage')) player.removeSkill('bolbinglun_damage');
},
intro:{content:'防止接下来的#次伤害'},
ai:{nofire:true,nothunder:true,nodamage:true},
},
backup:{audio:'binglun'},
'1':{
audio:'binglun',
filterTarget:true,
selectTarget:()=>[1,Math.min(3,_status.event.player.countMark('bilibili_renwang'))],
multitarget:true,
multiline:true,
complexTarget:true,
complexSelect:true,
content:function(){
'step 0'
lib.skill.bilibili_renwang.changeMark(player,-targets.length);
event.num=0;
event.map={
'摸牌':'将手牌补至与体力值相同（至多摸五张）',
'回血':'回复1点体力',
'防止伤害':'防止下一次受到的伤害直到回合开始',
};
event.targets.sortBySeat();
'step 1'
var target=event.targets[num];
event.target=target;
var choiceList=[];
for(var i in event.map) choiceList.push(event.map[i]);
if(!Object.keys(event.map).length){event.finish();return;}
target.chooseControl(Object.keys(event.map)).set('prompt','病论：请选择一项').set('ai',function(){
var list=_status.event.controls;
var player=_status.event.player;
var num1=player.getDamagedHp()*2;
var num2=Math.min(5,Math.max(0,player.maxHp-player.countCards('h')));
if(player.hasSkillTag('nogain')) num2=0;
if(list.includes('摸牌')&&num2>=num1) return '摸牌';
if(list.includes('回血')&&num1>0) return '回血';
if(list.includes('摸牌')&&num2>0) return '摸牌';
if(list.includes('防止伤害')) return '防止伤害';
return list.randomGet();
}).set('choiceList',choiceList);
'step 2'
game.log(target,'选择了','#g'+result.control);
delete event.map[result.control];
if(result.control=='摸牌') target.draw(Math.min(5,Math.max(0,target.maxHp-target.countCards('h'))));
if(result.control=='回血') target.recover();
if(result.control=='防止伤害'){
target.addTempSkill('bolbinglun_damage',{player:'phaseBegin'});
target.addMark('bolbinglun_damage',1,false);
}
'step 3'
if(num<targets.length){
event.num++;
event.goto(1);
}
},
ai:{
result:{
target:function(player,target){
var choice=['摸牌','回血','防止伤害'];
var maxEff=function(current){
var num1=current.getDamagedHp()*2;
var num2=Math.min(5,Math.max(0,current.maxHp-current.countCards('h')));
if(current.hasSkillTag('nogain')) num2=0;
if(num2>=num1&&choice.includes('摸牌')) return '摸牌';
if(num1>0&&choice.includes('回血')) return '回血';
if(num2>0&&choice.includes('摸牌')) return '摸牌';
if(choice.includes('防止伤害')) return '防止伤害';
return undefined;
};
var targets=ui.selected.targets;
if(targets.length){
for(var current of targets) choice.remove(maxEff(current));
}
if(maxEff(target)&&choice.includes(maxEff(target))) return choice.length-choice.indexOf(maxEff(target));
return 0;
},
},
},
},
'2':{
audio:'binglun',
filterTarget:true,
content:function(){
'step 0'
if(player.countMark('bilibili_renwang')>1){
var map={};
var list=[];
for(var i=1;i<=Math.min(3,player.countMark('bilibili_renwang'));i++){
var cn=(i+'点');
map[cn]=i;
list.push(cn);
}
event.map=map;
player.chooseControl(list).set('prompt','消耗至多'+Math.min(3,player.countMark('bilibili_renwang'))+'点仁望值，令'+get.translation(target)+'选择等量项执行').set('ai',function(){
var player=_status.event.player;
var target=_status.event.target;
var num=1;
if(target.maxHp-target.countCards('h')>0) num++;
if(target.isDamaged()) num++;
num=Math.min(num,Math.min(3,player.countMark('bilibili_renwang')));
return (num+'点');
}).set('target',target);
}
else{
event.map={'1点':1};
event._result={control:'1点'};
}
'step 1'
var num=event.map[result.control];
lib.skill.bilibili_renwang.changeMark(player,-num);
target.chooseButton([
'病论：请选择'+get.cnNumber(num)+'项',
[[
['摸牌','将手牌补至与体力值相同（至多摸五张）'],
['回血','回复1点体力'],
['防止伤害','防止下一次受到的伤害直到回合开始']
],'textbutton']
],num,true).set('ai',function(button){
var player=_status.event.player;
var num1=player.getDamagedHp()*2;
var num2=Math.min(5,Math.max(0,player.maxHp-player.countCards('h')));
if(player.hasSkillTag('nogain')) num2=0;
if(button.link=='摸牌'&&num2>=num1) return 4;
if(button.link=='回血'&&num1>0) return 3;
if(button.link=='摸牌'&&num2>0) return 2;
if(button.link=='防止伤害') return 1;
return 0.5;
});
'step 2'
var choice=['摸牌','回血','防止伤害'];
game.log(target,'选择了','#g'+result.links.sort((a,b)=>choice.indexOf(a)-choice.indexOf(b)));
if(result.links.includes('摸牌')) target.draw(Math.min(5,Math.max(0,target.maxHp-target.countCards('h'))));
if(result.links.includes('回血')) target.recover();
if(result.links.includes('防止伤害')){
target.addTempSkill('bolbinglun_damage',{player:'phaseBegin'});
target.addMark('bolbinglun_damage',1,false);
}
},
ai:{result:{target:1}},
},
},
},
//魏关羽
boldanji:{
derivation:['mashu','nuzhan'],
unique:true,
audio:'danji',
trigger:{player:'phaseZhunbeiBegin'},
filter:function(event,player){
var zhu=get.zhu(player);
if(zhu&&zhu.isZhu){
if(lib.translate[zhu.name].indexOf('刘备')!=-1||(zhu.name2&&lib.translate[zhu.name2].indexOf('刘备')!=-1)) return false;
}
return player.countCards('h')>player.hp;
},
forced:true,
juexingji:true,
skillAnimation:true,
animationColor:'water',
content:function(){
'step 0'
player.awakenSkill('boldanji');
player.loseMaxHp();
'step 1'
player.addSkillLog('mashu');
player.addSkillLog('nuzhan');
player.addSkill('boldanji_effect');
},
subSkill:{
effect:{
charlotte:true,
mark:true,
intro:{content:'每回合首次使用转化【杀】结算结束后摸一张牌'},
audio:'danji',
trigger:{player:'useCardAfter'},
filter:function(event,player){
return player.getHistory('useCard',function(evt){
return evt.card.name=='sha'&&evt.cards&&evt.cards.length&&!event.card.isCard;
}).indexOf(event)==0;
},
forced:true,
content:function(){
player.draw();
},
},
},
},
//贾南风
bolduliao:{
init:function(player){
var skill='bolduliao'+player.playerid;
lib.translate[skill]='毒獠·'+get.translation(player);
for(var target of game.players){
if(!target.hasCard('hs')) continue;
var history=game.getAllGlobalHistory('cardMove',function(evt){
if(!evt.cards.some(card=>target.getCard('hs').includes(card))) return false;
if(evt.name=='lose') return evt.position==ui.discardPile;
return evt.name=='cardsDiscard';
});
if(history.length){
var evt=history[history.length-1];
if(lib.skill.bolduliao.getBool(evt,player)){
target.addGaintag(target.getCard('hs',card=>evt.cards.includes(card)),skill);
}
}
}
},
onremove:function(player){
var skill='bolduliao'+player.playerid;
for(var i of game.players) i.removeGaintag(skill);
},
getBool:function(event,player){
if(event.name!='cardsDiscard') return event.type=='discard'&&event.player==player;
var evtx=event.getParent();
return evtx.name=='orderingDiscard'&&(evtx.relatedEvent||evtx.getParent()).player==player;
},
trigger:{global:'useCard'},
filter:function(event,player){
if(!event.cards||!event.cards.length) return false;
var history=game.getAllGlobalHistory('cardMove',function(evt){
if(!evt.cards.some(card=>event.cards.includes(card))) return false;
if(evt.name=='lose') return evt.position==ui.discardPile;
return evt.name=='cardsDiscard';
});
if(!history.length) return false;
var evt=history[history.length-1];
return lib.skill.bolduliao.getBool(evt,player);
},
forced:true,
logTarget:'player',
content:function(){
'step 0'
trigger.targets.length=0;
trigger.all_excluded=true;
game.log(trigger.card,'被无效了');
'step 1'
game.delayx();
'step 2'
trigger.player.line(player);
player.damage(1,trigger.player);
},
group:'bolduliao_mark',
subSkill:{
mark:{
charlotte:true,
trigger:{global:['gainAfter','loseAsyncAfter'],player:'die'},
filter:function(event,player){
if(event.name=='die') return true;
if(!player.isIn()) return false;
return game.hasPlayer(function(current){
if(!event.getg(current).length) return false;
var history=game.getAllGlobalHistory('cardMove',function(evt){
if(!evt.cards.some(card=>event.getg(current).includes(card))) return false;
if(evt.name=='lose') return evt.position==ui.discardPile;
return evt.name=='cardsDiscard';
});
if(!history.length) return false;
var evt=history[history.length-1];
return lib.skill.bolduliao.getBool(evt,player);
});
},
forceDie:true,
direct:true,
firstDo:true,
priority:114514,
content:function(){
if(trigger.name=='die') lib.skill.bolduliao.onremove(player);
else{
var skill='bolduliao'+player.playerid;
for(var current of game.players){
if(!trigger.getg(current).length) continue;
var history=game.getAllGlobalHistory('cardMove',function(evt){
if(!evt.cards.some(card=>trigger.getg(current).includes(card))) return false;
if(evt.name=='lose') return evt.position==ui.discardPile;
return evt.name=='cardsDiscard';
});
if(!history.length) continue;
var evt=history[history.length-1];
if(lib.skill.bolduliao.getBool(evt,player)) current.addGaintag(trigger.getg(current).filter(card=>evt.cards.includes(card)),skill);
}
}
},
},
},
},
bolhuidu:{
trigger:{player:'damageBegin4',source:'damageBegin3'},
filter:function(event,player){
return event.source&&event.source.isIn()&&event.source.countCards('he',function(card){
return event.source.canRecast(card);
})&&(event.source.hasSex('male')||event.source.hasSex('female'));
},
direct:true,
content:function(){
'step 0'
if(trigger.source.hasSex('male')){
trigger.source.chooseCard(get.prompt('bolhuidu'),'重铸任意张牌，防止对'+get.translation(player)+'造成的伤害',lib.filter.cardRecastable,[1,Infinity]).set('ai',function(card){
if(_status.event.goon) return lib.skill.zhiheng.check(card)+1;
return 0;
}).set('goon',get.damageEffect(player,trigger.source,trigger.source));
}
else event.goto(2);
'step 1'
if(result.bool){
player.logSkill('bolhuidu',trigger.source);
var cards=result.cards;
trigger.source.loseToDiscardpile(cards);
trigger.source.draw(cards.length);
trigger.cancel();
}
'step 2'
if(!trigger.source.hasSex('female')) event.finish();
'step 3'
player.chooseBool(get.prompt('bolhuidu',trigger.source),'重铸'+get.translation(trigger.source)+'一个区域的所有牌').set('choice',function(){
var att=get.attitude(player,trigger.source);
if(att==0) return false;
if(att<0) return !trigger.source.countCards('h',card=>trigger.source.canRecast(card));
for(var i of ['h','e']){
var cards=trigger.source.getCards(i,card=>trigger.source.canRecast(card)),value=0;
if(!cards.length) continue;
for(var j of cards) value+=get.value(j);
value=value/cards.length;
if(value<=5){
return true;
break;
}
}
return false;
});
'step 4'
if(result.bool){
var list=[];
if(trigger.source.countCards('h')) list.push('手牌区');
if(trigger.source.countCards('e')) list.push('装备区');
if(!list.length) event.finish();
else if(list.length==1) event._result={control:list[0]};
else player.chooseControl(list).set('target',trigger.source).set('ai',function(){
var player=_status.event.player;
var target=_status.event.target;
var list=_status.event.controls;
var att=get.attitude(player,target);
if(att==0) return list.randomGet();
if(att<0) return '装备区';
for(var i of ['h','e']){
var cards=trigger.source.getCards(i,card=>trigger.source.canRecast(card)),value=0;
if(!cards.length) continue;
for(var j of cards) value+=get.value(j);
value=value/cards.length;
if(value<=5){
return list[['h','e'].indexOf(i)];
break;
}
}
return list.randomGet();
}).set('prompt','令'+get.translation(trigger.source)+'重铸一个区域的所有牌');
}
else event.finish();
'step 5'
if(result.control){
player.logSkill('bolhuidu',trigger.source);
var position=['h','e'][['手牌区','装备区'].indexOf(result.control)];
var cards=trigger.source.getCards(position,card=>trigger.source.canRecast(card));
if(cards.length) trigger.source.recast(cards);
}
},
},
bolfushou:{
unique:true,
trigger:{global:'phaseEnd'},
filter:function(event,player){
return !player.isMaxHp();
},
juexingji:true,
forced:true,
skillAnimation:true,
animationColor:'thunder',
content:function(){
'step 0'
player.awakenSkill('bolfushou');
'step 1'
var cards=[];
game.countPlayer2(function(current){
current.getHistory('lose',function(evt){
if(evt.position==ui.discardPile) cards.addArray(evt.cards.filter(card=>!cards.includes(card)&&get.position(card,true)=='d'));
});
});
game.getGlobalHistory('cardMove',function(evt){
if(evt.name=='cardsDiscard') cards.addArray(evt.cards.filter(card=>!cards.includes(card)&&get.position(card,true)=='d'));
});
if(player.countCards('h')) player.loseToDiscardpile(player.getCards('h'))._triggered=null;
if(cards.length) player.gain(cards,'gain2')._triggered=null;
game.log(player,'交换了','#g手牌','和','#y本回合弃牌堆');
'step 2'
var cards1=Array.from(ui.cardPile.childNodes);
var cards2=Array.from(ui.discardPile.childNodes);
if(cards1.length) game.cardsDiscard(cards1);
while(cards2.length) ui.cardPile.insertBefore(cards2.pop(),ui.cardPile.firstChild);
game.log(player,'交换了','#g牌堆','和','#y弃牌堆');
game.updateRoundNumber();
'step 3'
var num1=player.maxHp-player.hp;
var num2=player.hp;
player.maxHp=num2;
if(num1>0) player.changeHujia(num1);
player.update();
game.log(player,'交换了','#g体力上限','和','#y体力值');
},
},
//新服22专属
boldingpan:{
audio:'dingpan',
inherit:'dingpan',
filter:function(event,player){
var target=game.findPlayer(function(x){
var num=x.getFriends().length;
return !game.hasPlayer(function(y){
return x!=y&&y.getFriends().length>num;
});
});
return (player.getStat().skill.boldingpan||0)<(target?target.getFriends(true).length:1);
},
},
bolfenxin:{
audio:'fenxin',
trigger:{global:'damageEnd'},
filter:function(event,player){
if(event.player==player||!['fenxin_fan','fenxin_zhong','fenxin_nei'].some(skill=>!player.hasSkill(skill))) return false;
return !player.getHistory('useSkill',evt=>evt.skill=='bolfenxin'&&evt.targets[0]==event.player).length;
},
forced:true,
logTarget:'player',
content:function(){
'step 0'
player.chooseButton([
'焚心：请选择〖竭缘〗的升级方式',
[[
['fenxin_fan','发动〖竭缘〗增加伤害无体力值限制'],
['fenxin_zhong','发动〖竭缘〗减少伤害无体力值限制'],
['fenxin_nei','将〖竭缘〗中的黑色手牌和红色手牌改为一张牌'],
].filter(list=>!player.hasSkill(list[0])),'textbutton']
],true).set('ai',function(button){
return ['fenxin_fan','fenxin_zhong','fenxin_nei'].indexOf(button.link)+1;
});
'step 1'
if(result.bool){
player.addSkill(result.links);
player.markSkill('bolfenxin');
}
},
onunmark:true,
intro:{
mark:function(dialog,content,player){
if(player.hasSkill('fenxin_fan')) dialog.addText('发动〖竭缘〗增加伤害无体力值限制');
if(player.hasSkill('fenxin_zhong')) dialog.addText('发动〖竭缘〗减少伤害无体力值限制');
if(player.hasSkill('fenxin_nei')) dialog.addText('将〖竭缘〗中的黑色手牌和红色手牌改为一张牌');
},
},
ai:{combo:'jieyuan'},
},
//贱·陈珪
bolyingtu:{
audio:'dcyingtu',
trigger:{global:['gainAfter','loseAsyncAfter']},
filter:function(event,player){
return lib.skill.dcyingtu.filterx(event,player,player.getPrevious());
},
logTarget:(evnet,player)=>player.getPrevious(),
check:function(event,player){
return lib.skill.dcyingtu.checkx(player,player.getPrevious());
},
content:function(){
'step 0'
var target=player.getPrevious();
var num=trigger.getg(target).length;
event.num=num;
player.gainPlayerCard(target,true,'he',num);
'step 1'
var he=player.getCards('he');
if(he.length){
var target=player.getNext();
event.target=target;
if(he.length<=num) event._result={bool:true,cards:he};
else player.chooseCard('he',true,num,'交给'+get.translation(target)+get.cnNumber(num)+'张牌');
}
else event.finish();
'step 2'
if(result.bool){
player.line(target);
player.give(result.cards,target);
}
},
group:'bolyingtu_next',
global:'bolyingtu_ai',
subSkill:{
next:{
audio:'dcyingtu',
trigger:{global:'useCardToPlayer'},
filter:function(event,player){
if(event.player!=player.getNext()||!event.isFirstTarget) return false;
if(event.card.name!='sha'&&event.card.name!='juedou') return false;
return !event.targets.includes(player)&&!event.targets.includes(player.getPrevious())&&event.player.canUse(event.card,player.getPrevious(),false);
},
logTarget:(evnet,player)=>player.getNext(),
line:false,
check:function(event,player){
var sum=event.targets.reduce((num,target)=>{
return num+get.effect(target,event.card,event.player,player);
},0);
return sum<get.effect(player.getPrevious(),event.card,event.player,player);
},
prompt2:function(event,player){
return '将'+get.translation(event.card)+'转移给'+get.translation(player.getPrevious());
},
content:function(){
'step 0'
var targets=trigger.targets.slice();
player.line2([player.getNext(),player.getPrevious()]);
trigger.targets.removeArray(targets);
trigger.getParent().triggeredTargets1.removeArray(targets);
trigger.untrigger();
trigger.targets.push(player.getPrevious());
'step 1'
game.delayx();
},
},
ai:{
ai:{
effect:{
player_use:function(card,player,target){
if(!player.getPrevious().hasSkill('bolyingtu')) return;
if(card.name!='sha'&&card.name!='juedou') return;
var range;
var select=get.copy(get.info(card).selectTarget);
if(select==undefined){
if(get.info(card).filterTarget==undefined) return false;
range=[1,1];
}
else if(typeof select=='number') range=[select,select];
else if(get.itemtype(select)=='select') range=select;
else if(typeof select=='function') range=select(card,player);
game.checkMod(card,player,range,'selectTarget',player);
var targets=game.filterPlayer(targetx=>player.canUse(card,targetx));
if(range[1]!=-1){
targets=targets.filter(targetx=>get.effect(targetx,card,player,player)>0);
targets.sort((a,b)=>get.effect(b,card,player,player)-get.effect(a,card,player,player));
targets=targets.slice(0,range[1]);
}
if(targets.includes(player.getPrevious().getPrevious())) return;
var sum=targets.reduce((num,targetx)=>{
return num+get.effect(targetx,card,player,player.getPrevious());
},0);
if(sum<get.effect(player.getPrevious().getPrevious(),card,player,player.getPrevious())) return 'zeroplayertarget';
},
},
},
},
},
},
bolcongshi:{
global:'bolcongshi_use',
audio:'dccongshi',
trigger:{global:'damageSource'},
filter:function(event,player){
if(!event.card||!event.card.bolcongshi||player.isHealthy()) return false;
return event.card.bolcongshi[player.playerid]&&event.card.bolcongshi[player.playerid].includes(event.player);
},
forced:true,
content:function(){
player.recover();
},
subSkill:{
use:{
mod:{
targetInRange:function(card,player,target){
if(_status.CongShiCheck||!player.isMaxHp()) return;
if(!target.getPrevious().hasSkill('bolcongshi')&&!target.getNext().hasSkill('bolcongshi')) return;
return true;
},
},
trigger:{player:'useCard1'},
filter:function(event,player){
if(!event.targets||!event.targets.length||!player.isMaxHp()) return false;
var targets=event.targets.filter(target=>target.getPrevious().hasSkill('bolcongshi')||target.getNext().hasSkill('bolcongshi'));
if(!targets.length) return false;
return targets.some(target=>{
if(!player.canUse(event.card,target)) return false;
_status.CongShiCheck=true;
if(!player.canUse(event.card,target)){
delete _status.CongShiCheck;
return true;
}
else{
delete _status.CongShiCheck;
return false;
}
});
},
firstDo:true,
priority:11+45+14,
forced:true,
popup:false,
content:function(){
var targetx=trigger.targets.filter(target=>{
if(!target.getPrevious().hasSkill('bolcongshi')&&!target.getNext().hasSkill('bolcongshi')) return false;
if(!player.canUse(trigger.card,target)) return false;
_status.CongShiCheck=true;
if(!player.canUse(trigger.card,target)){
delete _status.CongShiCheck;
return true;
}
else{
delete _status.CongShiCheck;
return false;
}
});
var targets=game.filterPlayer(current=>{
if(!targetx.some(target=>current==target.getPrevious()||current==target.getNext())) return false;
return current.hasSkill('bolcongshi');
});
trigger.card.bolcongshi={};
targets.forEach(target=>trigger.card.bolcongshi[target.playerid]=targetx.filter(current=>current==target.getPrevious()||current==target.getNext()));
},
},
},
},
},
dynamicTranslate:{
bilibili_xueji:function(player){
var storage=player.storage.bilibili_xueji;
if(storage) return '转换技，新的一轮开始时。阴：你可以失去1点体力，令一名角色于本轮第一次造成的伤害+1。<span class="bluetext">阳：你可以失去1点体力上限，并视为使用一张【杀】，若此【杀】造成伤害，你摸两张牌</span>。';
return '转换技，新的一轮开始时。<span class="bluetext">阴：你可以失去1点体力，令一名角色于本轮第一次造成的伤害+1</span>。阳：你可以失去1点体力上限，并视为使用一张【杀】，若此【杀】造成伤害，你摸两张牌。';
},
BTdunshi:function(player){
var info=player.storage.BTdunshi;
var str='每回合限一次。你可以视为使用或打出一张';
var list=['sha','shan','tao','jiu'];
for(var i of list){
var strx='【'+get.translation(i)+'】';
if(!info||!info[0].includes(i)) strx=('<span style="text-decoration: line-through;">'+strx+'</span>');
str+=strx;
if(i!='jiu') str+='/';
}
str+='，然后当前回合角色于本回合内下一次造成伤害时，你选择两项：⒈防止此伤害，然后你从技能名中包含“仁/义/礼/智/信”字样的技能中选择一个当前回合角色未拥有的技能，令其获得你选择的技能；⒉从〖遁世〗中删除你本次使用或打出的牌名；⒊减1点体力上限并摸X张牌（X为你因〖遁世〗删除牌名数的牌）。';
return str;
},
BTxinsheng:function(player){
var num=player.countMark('BTxinsheng');
if(num==0) return lib.translate.BTxinsheng_info;
return lib.translate['BTxinsheng_'+num+'_info'];
},
old_lieshi:function(player){
var str='①受到1点火焰伤害；②弃置手牌中的所有【闪】；③弃置手牌中的所有【杀】';
if(player.storage.old_huanyin) str='①弃置手牌中的所有【杀】；②弃置手牌中的所有【闪】；③受到1点火焰伤害';
return '你可以将你场上的牌当作场上没有的延时锦囊牌使用并执行一项，然后令目标角色执行后一项：『 '+str+'』。';
},
old_dianzhan:function(player){
var str='①重铸此花色的一张手牌；②若此牌仅指定一个目标，你横置；③摸一张牌';
if(player.storage.old_huanyin) str='①摸一张牌；②若此牌仅指定一个目标，你横置；③重铸此花色的一张手牌';
return '锁定技，当你于每轮第一次使用一种花色的牌后，你依次执行以下选项直到你执行完所有选项或需要执行无法执行的选项：『'+str+'』。';
},
old_sankuang:function(player){
var str='',storage=player.storage.old_sankuang;
var list=['场上牌数','已损失体力值','手牌数与体力值之差'];
for(var i=0;i<list.length;i++){
if(storage[i]) str+=list[i];
else str+='<span style="opacity:0.5">'+list[i]+'</span>';
if(i<list.length-1) str+='，';
}
return '锁定技，当你于每轮第一次使用一种类型的牌后，你令一名其他角色获得此牌或交给你至少X张牌（X为该角色『'+str+'』之间的最小值，且X至多为3）。'
},
bilibili_yutai:function(player){
var bool=game.hasPlayer2(function(current){
return current.name1=='bilibili_suixingsifeng'||current.name2=='bilibili_suixingsifeng';
});
return '你可以将X张牌当作【奇正相生】使用（X为你本回合发动〖彧态〗的次数+1'+(bool?'<span style="text-decoration: line-through;">':'')+'，且X至多为3'+(bool?'</span>':'')+'）。一名角色打出【杀】或【闪】响应【奇正相生】时，你获得打出的牌。';
},
},
translate:{
CLongZhou:'龙舟武将',
CZHengHuo:'杂技团',
Chuodong:'<span style="font-family: yuanli">名人堂前言：</span>'+
'<br><span style="font-family: yuanli">萌新特设，旨在纪念在萌新的身</span>'+
'<br><span style="font-family: yuanli">边对活动武将群聊发展起到重要</span>'+
'<br><span style="font-family: yuanli">作用的人。</span>'+
'<br>'+
'活动群名人堂',
Cothers:'自嗨',
CDanJi:'彩蛋·千里走单骑',
CSCS:'彩蛋·十常侍存活版',
CSCS2:'彩蛋·十常侍死亡版',
huashen_unknown:' ',
bilibili_zhengxuan:'郑玄',
bilibili_zhengxuan_ab:'水果忍者',
bilibili_zhengjing:'整经',
bilibili_zhengjing_info:'出牌阶段，你可以整理一次经典。然后，你将整理出的卡牌中的至少一张作为“经”置于一名角色的武将牌上，然后获得其余的牌。该角色的准备阶段获得这些牌，且跳过此回合的判定和摸牌阶段。',
bilibili_chuyuan:'储元',
bilibili_chuyuan_info:'一名角色受到伤害后，你可以令其摸一张牌。然后其将一张手牌置于你的武将牌上，称为「储」。你的手牌上限+X（X为你武将牌上的「储」数）。',
bilibili_dengji:'登极',
bilibili_dengji_info:'觉醒技，准备阶段，若你武将牌上的「储」数不小于3，则你减1点体力上限并获得所有「储」，然后获得技能〖天行〗和〖奸雄〗。',
bilibili_tianxing:'天行',
bilibili_tianxing_info:'觉醒技，准备阶段，若你武将牌上的「储」数不小于3，则你减1点体力上限并获得所有「储」，然后失去技能〖储元〗，选择获得以下技能中的一个：〖仁德〗/〖制衡〗/〖乱击〗/〖放权〗。',
gz_huashen:'化身',
gz_huashen_info:'准备阶段，若你的“化身”牌数：小于2，你可以观看剩余武将牌堆中的五张牌，然后将其中至多两张武将牌置于武将牌上，称为“化身”牌；大于等于2，你可以用剩余武将牌堆顶的一张牌替换一张“化身”牌。你可以于相应的时机明置并发动“化身”牌的技能，然后你于技能结算完成后将此技能对应的“化身”牌放回剩余武将牌堆。',
gz_xinsheng:'新生',
gz_xinsheng_info:'当你受到1点伤害后，你可以获得一张新的“化身”牌。',
bilibili_jinfan:'锦帆',
bilibili_sheque:'射却',
bilibili_jinfan_info:'锁定技。①弃牌阶段开始时，你将一张与武将牌上的“铃”花色均不同的牌作为“铃”置于武将牌上。②每回合每种花色限一次，当你使用或打出与“铃”花色相同的牌时，你摸一张牌。',
bilibili_sheque_info:'当其他角色使用装备牌时，你可以将一张手牌当作【杀】对其使用，若此【杀】造成伤害，则该角色本回合不能再使用或打出手牌。',
xinzaiqi:'再起',
xinzaiqi_info:'弃牌阶段结束时，你可以令至多X名角色选择一项：1.摸一张牌，2.令你回复1点体力（X为本回合进入弃牌堆的红色牌数）',
old_tianzuo:'天佐',
old_tianzuo_info:'游戏开始时，你将8张【奇正相生】加入牌堆。当一名角色成为【奇正相生】的目标后，你可以观看其手牌，然后你可以更改其“奇兵”或“正兵”的选项。',
old_lingce:'灵策',
old_lingce_info:'锁定技，一名角色使用智囊牌名的锦囊或【奇正相生】时，你摸一张牌。',
old_dinghan:'定汉',
old_dinghan_info:'锁定技，每种牌名每轮限一次，当你成为伤害类卡牌的目标时，取消之。',
golden_zuoci:'仙人之怒',
BT_puyuan_ab:'能工巧匠',
BT_puyuan:'蒲元',
diy_liuhong:'刘宏',
bilibili_zhouxiaomei:'周小妹',
bilibili_zhangrang:'TW张让',
decade_huangwudie:'黄舞蝶',
decadexiwu:'习武',
decadexiwu_info:'锁定技，你使用【杀】无距离和次数限制且你使用【杀】造成的伤害+1。',
decadehongzhuang:'红妆',
decadehongzhuang_info:'当你使用或打出一张牌时，你可以摸X张牌（X为此牌点数）。',
olddulie:'笃烈',
olddulie_info:'锁定技。①游戏开始时，你令X名其他角色获得“围”（X为游戏人数的一半且向下取整）。②你对没有“围”的角色使用【杀】无距离限制。③当你成为【杀】的目标时，若使用者没有“围”，则你进行判定。若结果为红色，则取消此目标。',
oldpowei:'破围',
oldpowei_info:'使命技。①当你因使用【杀】而对有“围”的角色造成伤害时，你防止此伤害并移去该角色的“围”。②使命：当你使用【杀】结算完成后，若场上没有“围”，则你获得技能〖神著〗。③失败：当你进入濒死状态时，你弃置装备区的所有牌，然后将体力值回复至1点。',
old_shenzhu:'神著',
old_shenzhu_info:'锁定技，你使用【杀】无次数限制。当你使用有对应实体牌的非转化【杀】结算结束后，你摸一张牌。',
old_yingba:'英霸',
old_yingba_info:'出牌阶段限一次，你可令一名体力上限大于1的其他角色减少1点体力上限并获得“平定”标记，然后你减少1点体力上限。你对拥有“平定”标记的角色使用牌没有次数限制。',
old_fuhai:'覆海',
old_fuhai_info:'锁定技。当你使用牌指定目标后，若目标角色有“平定”标记，则其不可响应此牌。当你使用牌结算结束后，你移除所有目标角色的“平定”标记并增加等量的体力上限。拥有“平定”标记的角色死亡时，你增加X点体力上限并摸X张牌。（X为其拥有的“平定”标记数）。',
old_pinghe:'冯河',
old_pinghe_info:'你的手牌上限基数等于你已损失的体力值。当你受到其他角色造成的伤害时，若你的手牌数大于Y，则你可以防止此伤害，减Y点体力值上限并将Y张手牌交给一名其他角色，然后若你拥有〖英霸〗，则伤害来源获得Y个“平定”标记（Y为伤害值）。',
diy_lvmeng:'恐惧魔王',
BTkongju:'克己',
BThouqi:'后期',
BTkongju_info:'恐惧技，出牌阶段结束时，若你于此阶段没有使用或打出过【杀】，你可以跳过弃牌阶段并令所有其他角色获得1枚“恐惧”标记。',
BThouqi_info:'锁定技，准备阶段，若场上的“恐惧”标记数不少于100，你所属的阵营直接获得游戏胜利。',
bilibili_taoluan:'滔乱',
bilibili_taoluan4:'滔乱',
bilibili_taoluan5:'滔乱',
bilibili_taoluan_backup:'滔乱',
bilibili_taoluan_info:'你可以将一张牌当作任意一张基本牌或普通锦囊牌使用（此牌不得是本局游戏你以此法使用过的牌），然后你须获得一名其他角色的一张牌，若你未获得你以此法使用的牌的类别不同的牌，你失去1点体力且〖滔乱〗无效直到回合结束。',
old_jieying:'劫营',
old_jieying_info:'锁定技，游戏开始时，你令一号位角色获得【营】标记。有【营】标记的角色的回合结束或死亡后，将【营】移动至下家，然后你进行一个额外回合。',
old_tongling:'铜铃',
old_tongling_info:'锁定技，当你成为一名角色使用牌指定的唯一目标后，或其他角色对你使用技能结算完毕后，你摸两张牌。',
oldfanghun:'芳魂',
oldfanghun_info:'当你使用【杀】造成伤害后，你获得1枚「梅影」标记；你可以移去1枚「梅影」标记来发动〖龙胆〗并摸一张牌。',
oldfuhan:'扶汉',
oldfuhan_info:'限定技，回合开始时，你可以移去所有「梅影」标记并随机观看五名未登场的蜀势力角色，你将武将牌替换为其中一名角色，并将体力上限数调整为本局游戏中移去「梅影」标记的数量（至多为游戏开始时的人数），然后若你的体力值为全场最低，你回复1点体力。',
boljingjia:'精甲',
boljingjia_info:'锁定技，游戏开始时，将本局游戏加入的装备牌置于你的装备栏中。',
bolaozhan:'鏖战',
bolaozhan_info:'锁定技，若你装备区内有：武器牌，你可以多使用一张【杀】；防具牌，防止你受到的超过1点的伤害；坐骑牌，摸牌阶段多摸一张牌；宝物牌，跳过你的判定阶段。',
shenwei:'神威',
shenwei_info:'锁定技，摸牌阶段，你额外摸X张牌，你的手牌上限+X（X为场上其他角色的数目且至多为3）。',
xiuluo:'修罗',
xiuluo_info:'准备阶段，你可以弃置一张牌，然后弃置你判定区内一张同花色的牌。你可以重复此流程。',
shenqu:'神躯',
shenqu_info:'每名角色的准备阶段，若你的手牌数少于或等于你的体力上限数，你可以摸两张牌；当你受到伤害后，你可以使用一张【桃】。',
jiwu:'极武',
jiwu_info:'出牌阶段，你可以弃置一张牌，然后选择获得【强袭】、【铁骑】、【旋风】、【完杀】中的一项技能直到回合结束。',
bilibili_wangwang:'王桃王悦',
bilibili_guanning:'管宁',
bilibili_guanning_ab:'辟静归元',
BTdunshi:'遁世',
BTdunshi_info:'每回合限一次。你可以视为使用或打出一张【杀】/【闪】/【桃】/【酒】，然后当前回合角色于本回合内下一次造成伤害时，你选择两项：⒈防止此伤害，然后你从技能名中包含“仁/义/礼/智/信”字样的技能中选择一个当前回合角色未拥有的技能，令其获得你选择的技能；⒉从〖遁世〗中删除你本次使用或打出的牌名；⒊减1点体力上限并摸X张牌（X为你因〖遁世〗删除牌名数的牌）。',
BThuashen:'化身',
BThuashen_info:'游戏开始后，你随机获得两张未加入游戏的武将牌，然后选择一张置于你面前并声明该武将牌的一项技能，你视为拥有该技能且性别和势力视为与该武将相同直到该化身被替换。准备阶段和结束阶段，你可以选择一项：①弃置至多X张未展示的化身牌并重新获得等量化身牌（X为你的体力上限）；②更换所展示的化身牌或技能；③弃置一张化身牌并升级【新生】（至多升至3级）。（你不可声明限定技、觉醒技、隐匿技、使命技、主公技等特殊技能）。',
BTxinsheng:'新生',
BTxinsheng_info:'当你受到1点伤害后，你可以获得一张化身牌。',
BTxinsheng_1:'新生·2级',
BTxinsheng_1_info:'当你造成或受到1点伤害后，你可以获得一张化身牌。',
BTxinsheng_2:'新生·3级',
BTxinsheng_2_info:'当你造成或受到1点伤害后，你可以获得一张化身牌，然后若你的化身牌数不小于场上人数，你获得技能〖幻化〗。',
BThuanhua:'幻化',
BThuanhua_backup:'幻化',
BThuanhua_info:'出牌阶段限一次，你可以弃置一张未展示的化身牌，然后将一张手牌视为一张基本牌或普通锦囊牌使用。',
xinyangjie:'佯解',
xinyangjie_info:'出牌阶段限一次，你可以与一名其他角色A拼点。若你没赢，则你可以令另一名其他角色B视为对A使用一张火【杀】。',
xinjuxiang:'拒降',
xinjuxiang_info:'限定技，一名其他角色脱离濒死状态时，你可以对其造成1点伤害。',
xinmobilediaodu:'调度',
xinmobilediaodu_info:'准备阶段，你可以移动一名角色装备区内的一张牌（不能移动给自己），然后其摸一张牌。',
xindiancai:'典财',
xindiancai_info:'其他角色的出牌阶段阶段结束后，若你本阶段失去的牌数不小于你的体力值，则你可将手牌数补至体力上限。',
bilibili_huanggai:'谋黄盖',
bilibili_kurou:'苦肉',
bilibili_kurou_info:'出牌阶段，你可以失去1点体力，然后摸一张牌。',
bilibili_zhaxiang:'诈降',
bilibili_zhaxiang_info:'当你失去体力或受到伤害后，你可以弃置任意张手牌，然后摸等量张牌。',
bilibili_ekeshaoge:'俄何烧戈',
bilibili_xueji:'血激',
bilibili_xueji2:'血激',
bilibili_xueji_info:'转换技，新的一轮开始时。阴：你可以失去1点体力，令一名角色于本轮第一次造成的伤害+1。阳：你可以失去1点体力上限，并视为使用一张【杀】，若此【杀】造成伤害，你摸两张牌。',
bilibili_hanran:'悍然',
bilibili_hanran_info:'锁定技，当你对其他角色造成伤害时，若该角色体力上限大于你，你加1点体力上限。',
oldluanji:'乱击',
oldluanji_info:'你可以将两张与你本回合以此法转化的花色均不相同的手牌当【万箭齐发】使用。当一名已受伤的角色因响应此牌而打出【闪】时，该角色摸一张牌。',
oldshibei:'矢北',
oldshibei_info:'锁定技，当你受到伤害后，你进行一次判定，若此伤害为本回合第一次受到的伤害且判定结果为红色，你回复1点体力；若此伤害不为本回合第一次受到的伤害且判定结果为黑色，你失去1点体力。',
old_zhangzhongjing:'旧张机',
old_jishi:'济世',
old_jishi_info:'锁定技。①当你使用的牌结算完成后，若你未因此牌造成过伤害，则你将此牌对应的所有实体牌置于仁库中。②当有牌离开仁库时，你摸一张牌。',
old_tianyi:'天翊',
old_tianyi_info:'觉醒技，准备阶段，若场上的所有存活角色均于本局游戏内受到过伤害，则你加2点体力上限并回复1点体力，然后令一名角色获得技能〖佐幸〗。',
old_zuoxing:'佐幸',
old_zuoxing_info:'准备阶段，若令你获得〖佐幸〗的角色存活且体力上限大于1，则你可以令其减1点体力上限。若如此做，你于本回合获得如下效果：出牌阶段限一次，你可以视为使用一张普通锦囊牌。',
bilibili_zhenggong:'争功',
bilibili_zhenggong_info:'其他角色的回合开始前，若你的武将牌正面朝上，你可以获得一个额外的回合，此回合结束后，你将武将牌翻面。 ',
bilibili_toudu:'偷渡',
bilibili_toudu_info:'当你受到伤害后，若你的武将牌背面朝上，你可以弃置一张手牌，将你的武将牌翻面，然后视为使用一张无距离限制的【杀】。',
shen_sunquan_skill:'驭衡',
shen_sunquan_skill_info:'锁定技。①回合开始时/当你每回合使用第X张牌结算完成后，你随机获得吴势力角色的X个技能。②回合结束时/当你每回合使用第X张牌结算完成后，你随机失去你因〖废案〗获得的X个技能。（X为当前回合开始时你的体力值、已损失体力值和游戏轮数的中位数）',
bilibili_litiansuo:'李田所',
bilibili_litiansuo_ab:'李荣',
oldpingjian:'评荐',
oldpingjian_info:'结束阶段开始时/当你受到伤害后/出牌阶段限一次，你可以弃置一张牌，令系统随机检索出三张拥有发动时机为结束阶段开始时/当你受到伤害后/出牌阶段的技能的武将牌。然后你可以选择尝试发动其中一个技能。每个技能每局游戏只能选择一次。',
oldhongyi:'弘仪',
oldhongyi_info:'出牌阶段限一次，你可以弃置X张牌并选择一名其他角色（X为场上已阵亡角色数且至多为2）。你的下回合开始前，该角色造成伤害时进行判定，若结果为：黑色，此伤害-1。红色，受到伤害的角色摸一张牌。',
xinfanghun:'芳魂',
xinfanghun_info:'你可以将【杀】当作【闪】，或【闪】当作【杀】使用或打出，然后你获得1枚“梅影”标记。',
xinfuhan:'扶汉',
xinfuhan_info:'觉醒技，准备阶段，若你的“梅影”标记数不少于4，则你移去所有的“梅影”标记，增加1点体力上限并回复1点体力，然后你失去〖芳魂〗并获得〖龙胆〗，从〖武圣〗、〖咆哮〗、〖铁骑〗、〖烈弓〗、〖狂骨〗中选择一个获得之。',
old_jiebing:'借兵',
old_jiebing_info:'出牌阶段限一次，你可以获得一名有手牌的其他角色的三张手牌，然后受到1点伤害。若如此做，此阶段结束时，你交给其以此法获得的牌。',
old_kuzhan:'苦战',
old_kuzhan_info:'使命技。成功：准备阶段，若你本局游戏受到的伤害不少于5点，你获得技能〖退敌〗。失败：结束阶段，若你本回合和上回合均发动过〖借兵〗且均未于当前回合造成过伤害，则使命失败。',
old_tuidi:'退敌',
old_tuidi_info:'当你对一名其他角色造成伤害后，你可以随机废除其一种装备栏。',
old_qixi:'奇袭',
old_qixi_info:'你可以将一张黑色牌当作【过河拆桥】使用。你使用非转化非虚拟的【过河拆桥】可以改为：出牌阶段，对一名区域内有牌的角色使用，你弃置其区域内的所有牌。',
old_fenwei:'奋威',
old_fenwei_info:'限定技，当一名角色使用的锦囊牌指定了至少两名角色为目标时，你可以令此牌对其中任意名角色无效，然后你获得牌堆中的X张【过河拆桥】（X为你选择的角色数且X至多为4）。',
old_mansi:'蛮嗣',
old_mansi_info:'一名角色使用的【南蛮入侵】结算完成后，你可以摸X张牌（X为受到过此牌伤害的角色数）。',
old_souying:'薮影',
old_souying_info:'每回合限一次，当你对一名男性角色造成伤害（或一名男性角色对你造成伤害时），若此伤害是你对其（或其对你）本回合内造成的第二次伤害，你可以弃置一张手牌令此伤害+1（或-1）。',
old_zhanyuan:'战缘',
old_zhanyuan_info:'觉醒技，准备阶段，若你已因蛮嗣累计获得超过7张牌，你加1点体力上限，并可以选择一名男性角色，你与其获得技能〖系力〗，然后你失去技能〖蛮嗣〗。',
old_xili:'系力',
old_xili_info:'你的回合外，当其他拥有〖系力〗技能的角色在其回合内使用【杀】指定目标后，你可以弃置一张手牌，令此【杀】伤害+1。',
olddianhua:'点化',
olddianhua_info:'准备阶段或结束阶段，你可以观看牌堆顶的X张牌（X为你的「紫薇」「后土」「玉清」「勾陈」标记数的总和）。若如此做，你将这些牌以任意顺序放回牌堆顶。',
oldzhenyi:'真仪',
oldzhenyi_info:'你可以在以下时机弃置相应的标记来发动以下效果：一名角色的判定牌生效前，你可以弃置1枚「紫薇」，然后将判定结果改为黑桃5或红桃5；当你处于濒死状态时，你可以弃置1枚「后土」，然后将你的一张手牌当【桃】使用；当你造成伤害时，你可以弃置1枚「玉清」，然后你进行一次判定。若结果为黑色，此伤害+1；当你受到属性伤害后，你可以弃置一张「勾陈」，然后你从牌堆中随机获得三种类型的牌各一张。',
bilibili_fushi:'附势',
bilibili_fushi_info:'锁定技，若场上势力数：群大于魏，你视为拥有技能〖择主〗；魏大于群，你视为拥有技能〖逞功〗。',
bilibili_zezhu:'择主',
bilibili_zezhu_info:'出牌阶段限一次，你可以获得至多两名其他角色各一张牌，然后分别交给其一张牌（若你选择的角色中有人没有牌，则将获得其一张牌改为摸一张牌）。',
bilibili_chenggong:'逞功',
bilibili_chenggong_info:'一名角色使用牌指定目标后，若目标数不小于2，你可以令其摸一张牌。',
cxy_XiYing:'袭营',
cxy_XiYing_info:'出牌阶段开始时，你可以弃置一张牌并令所有其他角色选择一项：弃置一张牌；本回合内不能使用或打出牌。',
bilibili_sp_xuyou:'SP许攸',
bilibili_sp_xuyou_prefix:'SP',
ljxc:'两军相持',
ljxc_info:'若当前游戏轮数：小于等于4，所有角色的手牌上限+X（X为当前游戏轮数）；大于4，所有角色于其回合内使用的第一张【杀】造成的伤害+1。',
xthj:'徐图缓进',
xthj_yingzi:'徐图缓进',
xthj_info:'所有角色的出牌阶段结束时，若其于此阶段未使用或打出过【杀】，则其下个摸牌阶段多摸一张牌。',
jsdy:'坚守待援',
jsdy_info:'所有角色均可以将【杀】当作【闪】，【闪】当作【杀】使用或打出，然后其手牌上限-1直到其下一个弃牌阶段结束。',
hswc:'火烧乌巢',
hswc_info:'本局游戏内造成的无属性伤害均视为火属性。',
lckf:'粮草匮乏',
lckf_info:'所有角色摸牌阶段的额定摸牌数-1。当一名角色使用的牌结算完成后，若其因此牌造成了伤害，则其摸一张牌。',
zyzw:'斩颜良诛文丑',
zyzw_info:'所有角色的回合开始时，须选择一项：视为使用一张不可被【无懈可击】响应的【决斗】，或失去1点体力。',
sssb:'十胜十败',
sssb_info:'所有角色使用牌时，若此牌是整局游戏使用的第整十张牌且此牌不为延时锦囊牌或装备牌，则此牌所有目标角色再次成为此牌的目标角色。',
yssq:'以弱胜强',
yssq_info:'造成伤害时，若受伤角色体力值大于伤害来源，此伤害+1。',
scej:'恃宠而骄',
scej_info:'结束阶段，若你的体力值为全场唯一最多，你弃一张牌；若你的手牌数为全场最多，你失去1点体力。',
lz_sufei:'苏飞·龙舟',
lz_tangzi:'唐咨·龙舟',
lz_liuqi:'刘琦·龙舟',
lz_huangquan:'黄权·龙舟',
lzlianpian:'联翩',
lzlianpian_info:'友方角色于出牌阶段使用牌连续指定同一名角色为目标后，你可以令此牌的使用者摸一张牌。',
lztunjiang:'屯江',
lztunjiang_info:'友方角色的回合结束时，若其于本回合内未造成过伤害，则你可以令你或令其摸两张牌。',
lzdianhu:'点虎',
lzdianhu2:'点虎',
lzdianhu_info:'锁定技，游戏开始时，你选择一名其他角色。友方角色对其造成1点伤害后，摸一张牌。',
lzxingzhao:'兴棹',
lz_xunxun:'恂恂',
lzxingzhao_info:'锁定技，若本局游戏中所有友方角色（包含死亡的友方角色，其后同理）造成的伤害数合计为：<br><li>不少于友方角色数，所有友方角色视为拥有技能〖恂恂〗；<br><li>不少于友方角色数的两倍，所有友方角色使用装备牌时摸一张牌；<br><li>不少于友方角色数的三倍，所有友方角色跳过弃牌阶段；<br><li>不少于友方角色数的六倍，新的一轮开始时，你所属的阵营直接获得游戏胜利。',
boss_tz:'等阶特权·玩家方',
boss_tz_sha:'出杀',
boss_tz_sha_info:'出【杀】次数+1。',
boss_tz_draw:'摸牌',
boss_tz_draw_info:'摸牌阶段摸牌数+1。',
boss_tz_chongsheng:'重生',
boss_tz_chongsheng_info:'限定技，当你处于濒死状态时，你可以弃置判定区内的所有牌，然后复原你的武将牌，摸五张牌，将体力回复至体力上限（至多为5）。',
boss_yz:'等阶特权·神武方',
boss_yz_equip:'装备',
boss_yz_equip_info:'登场时随机从牌堆中使用一张装备牌。',
boss_yz_sha:'出杀',
boss_yz_sha_info:'出【杀】次数+1。',
boss_yz_shax:'出杀',
boss_yz_shax_info:'出【杀】次数+1。',
boss_yz_draw:'摸牌',
boss_yz_draw_info:'摸牌阶段摸牌数+1。',
boss_yz_kunshou:'困兽',
boss_yz_kunshou_info:'觉醒技，当你进入濒死状态时，你将体力回复至5，将手牌数补至5，然后获得技能〖崩坏〗。',
wzdanji:'单骑',
wzdanji_info:'觉醒技，准备阶段开始时，若你的手牌数大于你的体力值且本局游戏的主公为曹操，你减1点体力上限，然后获得技能〖马术〗。',
old_shenjun:'神君',
old_shenjun_info:'锁定技，一名角色使用【杀】或普通锦囊牌时，你展示你手牌中所有的同名牌，此阶段结束时，你须选择一项：①将X张牌当作你本阶段发动〖神君〗响应的牌名使用（X为你手牌中已展示的〖神君〗牌数）；②失去1点体力。',
old_balong:'八龙',
old_balong_info:'锁定技，当你的体力值于每回合首次次发生变化后，若你手牌中锦囊牌的数量为手牌中所有类型中唯一最多的，你展示所有手牌并将手牌摸至八张。',
old_sankuang:'三恇',
old_sankuang_info:'锁定技，当你于每轮第一次使用一种类型的牌后，你令一名其他角色获得此牌或交给你至少X张牌（X为该角色『场上牌数，已损失体力值，手牌数与体力值之差』之间的最小值，且X至多为3）。',
old_beishi:'卑势',
old_beishi_info:'锁定技，当你或第一次成为〖三恇〗的目标角色失去最后的手牌后，你选择移除或复原〖三恇〗描述『 』中的一个条件，然后回复1点体力。',
old_lieshi:'烈誓',
old_lieshi_info:'你可以将你场上的牌当作场上没有的延时锦囊牌使用并执行一项，然后令目标角色执行后一项：『①受到1点火焰伤害；②弃置手牌中的所有【闪】；③弃置手牌中的所有【杀】』。',
old_dianzhan:'点盏',
old_dianzhan_info:'锁定技，当你于每轮第一次使用一种花色的牌后，你依次执行以下选项直到你执行完所有选项或需要执行无法执行的选项：『①重铸此花色的一张手牌；②若此牌仅指定一个目标，你横置；③摸一张牌』。',
old_huanyin:'还阴',
old_huanyin_info:'锁定技，当你进入濒死状态时，你将〖烈誓〗和〖点盏〗描述『 』中的内容倒置，然后将手牌数补至四张。',
old_yunshen:'熨身',
old_yunshen_info:'出牌阶段各限一次，你可以令一名其他角色回复1点体力，然后你选择一项：①视为你对其使用一张冰【杀】；②视为其对你使用一张冰【杀】。',
old_shangshen:'伤神',
old_shangshen_info:'当一名角色受到属性伤害后，你可以选择下列两项：①获得你场上的所有牌；②将其一张牌当作随机一张延时锦囊牌对你使用；③令其将手牌数补至四张。',
old_fenchai:'分钗',
old_fenchai_info:'锁定技，你和首次成为你发动技能指定的异性角色的牌的花色均视为红桃。首次成为你发动技能指定的异性角色死亡时，其可以交给你至多一半手牌（向上取整）。',
bolyuheng:'驭衡',
bolyuheng_info:'锁定技。①回合开始时，你须弃置任意张花色不同的牌，随机获得等量吴势力角色的技能。②回合结束时，你失去所有因〖驭衡〗获得的技能，然后摸等量的牌。',
bolyuheng_faq:'FAQ',
bolyuheng_faq_info:'非全扩技能库如下：<br>制衡、缔盟、慎行、下书、弘援、观微、安恤、秉壹、兴学、澜疆、安国、戒训、调度、弼政、诱敌',
boldili:'帝力',
boldili_info:'觉醒技，当你拥有的技能数大于你的体力上限时，你减1点体力上限，选择失去任意个其他技能，然后获得〖圣质〗、〖权道〗、〖持纲〗的前等量个。',
bilibili_zhiyinxian:'机先',
bilibili_zhiyinxian_info:'其他角色的回合开始时，你可以令其跳过本回合的一个阶段（不能选择准备阶段和结束阶段和你已选择过的阶段）。当你杀死角色后，你可以选择一个你已选择过的时机，然后你视为未选择过此时机。',
bolhuanshi:'缓释',
bolhuanshi_info:'一名角色的判定牌生效前，你可令其观看你的手牌并选择其中一张牌替代此牌，然后你可以重铸任意张牌。',
oldx_lieshi:'烈誓',
oldx_lieshi_info:'出牌阶段，你可以执行其中一项：『受到1点火焰伤害并废除判定区；弃置手牌中的所有【闪】；弃置手牌中的所有【杀】』，然后你令一名其他角色选择执行另一项（不能选择无法执行的选项）。',
oldx_dianzhan:'点盏',
oldx_dianzhan_info:'锁定技，当你于每轮第一次使用一种花色的牌后，你横置此牌的唯一目标并重铸手牌中所有与此牌花色相同的牌。',
bollihuo:'疠火',
bollihuo_info:'当你使用普通【杀】时，可以将此牌改为火【杀】，且你本局游戏使用火【杀】可以额外指定一个目标。此牌第一次造成伤害时，你须弃置两张牌或失去1点体力。',
bolchunlao:'醇醪',
bolchunlao_info:'当一名与你距离为1以内的角色因弃置而失去【杀】后，其可以将此【杀】置于你的武将牌上，称为“醇”。当一名角色处于濒死状态时，你可以移去X张“醇”（X为你本轮发动此技能的次数），令其视为使用一张【酒】，然后将其下一个判定阶段改为摸牌阶段。',
bolkuangbi:'匡弼',
bolkuangbi2:'匡弼',
bolkuangbi_info:'出牌阶段限一次，你可以与一名其他角色将任意张牌置于其武将牌上。若如此做，当你进入濒死状态时或下X个回合开始时，你获得其武将牌上的“匡弼”牌，其摸X张牌（X为其武将牌上的“匡弼”牌数）。',
bol_shanshan:'闪闪',
bol_shanshan_info:'当一张基本牌或锦囊牌即将对你生效前，对此牌使用，抵消此牌的效果，然后获得此牌对应的所有实体牌。',
bol_sanshou:'三首',
bol_sanshou_skill:'三首',
bol_sanshou_info:'当你受到伤害时，你可以亮出牌堆顶三张牌。若其中有本回合未被使用过的牌的类型，防止此伤害。',
bol_sanshou_skill_info:'当你受到伤害时，你可以亮出牌堆顶三张牌。若其中有本回合未被使用过的牌的类型，防止此伤害。',
twxingbu:'星卜',
twxingbu_info:'结束阶段，你可以亮出牌堆顶的三张牌，然后可以根据这三张牌中红色牌的数量令一名其他角色获得对应的效果直到其下回合结束：三张，摸牌阶段多摸两张牌，使用【杀】的次数上限+1，跳过弃牌阶段；两张，出牌阶段使用的第一张牌结算完成后，弃置一张牌然后摸两张牌；少于两张，出牌阶段使用【杀】的次数上限-1。',
twxingbu_effect1:'荧惑守心',
twxingbu_effect2:'扶匡东柱',
twxingbu_effect3:'五星连珠',
old_rende_de:'仁德',
old_rende_wang:'仁望',
old_rende:'仁德',
old_rende_info:'①出牌阶段开始时，你可以选择一项：⒈移除场上的所有“德”标记，然后令一名其他角色获得1个“德”标记；⒉交给拥有“德”标记的角色X张牌，然后你获得X+1个“仁望”标记（X为该角色拥有的“德”标记数）。②拥有“德”标记的角色的准备阶段，其获得1个“德”标记。③你可以移去两个“仁望”标记，然后视为使用或打出一张基本牌。',
old_zhangwu:'章武',
old_zhangwu_info:'限定技，出牌阶段，你可以令本局游戏中获得过“德”标记的角色依次交给你两张牌，然后你增加1点体力上限并失去〖仁德〗。',
old_zhoufu:'咒缚',
old_zhoufu2:'咒缚',
old_zhoufu_info:'出牌阶段限一次，你可以将一张手牌置于一名武将牌旁没有“咒”的其他角色的武将牌旁，称为“咒”。当有“咒”的角色判定时，将“咒”作为判定牌。有“咒”的角色的回合结束时，你获得其武将牌旁的“咒”。',
old_yingbing:'影兵',
old_yingbing_info:'当一张“咒”成为判定牌后，你可以摸两张牌。',
bolhannan:'扞难',
bolhannan_info:'出牌阶段限一次，你可以与一名角色拼点，赢的角色对没赢的角色造成1点伤害。',
boljiaozong:'骄纵',
boljiaozong_info:'锁定技，其他角色出牌阶段使用的第一张红色牌无距离限制且目标必须为你。',
bolchouyou:'仇幽',
bolchouyou2:'仇幽',
bolchouyou_info:'当你成为【杀】的目标后，你可以令另一名可以成为此牌目标的其他角色选择一项：①其代替你成为此牌目标；②其发动非锁定技前需经过你同意直到其令你回复体力。',
bilibili_adong:'阿会喃董荼纳',
oldx_zhangzhongjing:'旧张机',
old_liaoyi:'疗疫',
old_liaoyi_info:'其他角色的回合开始时，你可选择一项：①令其从仁库中获得一张牌。②若其手牌数不小于2，则令其将X张手牌置入仁库（X为其手牌数与体力值之差，至少为1，至多为9）。',
bilibili_tannang:'探囊',
bilibili_tannang_info:'锁定技，你与其他角色计算距离-X（X为你已损失的体力值）。',
bilibili_yishi:'义释',
bilibili_yishi_info:'当你对其他角色造成伤害时，你可以防止此伤害，然后获得其装备区的一张牌。',
bilibili_zhengjun:'整军',
bilibili_zhengjun_info:'当你受到伤害时，你可以获得装备区里的牌，然后打出一张装备牌。若如此做，你防止此伤害。',
old_zuoci:'国战左慈',
old_zuoci_ab:'左慈',
bilibili_shengxunyu:'生熏鱼',
bilibili_jinyan:'禁言',
bilibili_jinyan_info:'锁定技，其他角色于你的回合内至多成为一次你使用非【奇正相生】牌的目标。',
bilibili_hehu:'呵护',
bilibili_hehu_info:'锁定技，其他角色的回合开始/回合结束时，其须交给你一/两张牌，然后摸两/一张牌（不能对你使用）。',
bilibili_yutai:'彧态',
bilibili_yutai_info:'你可以将X张牌当作【奇正相生】使用（X为你本回合发动〖彧态〗的次数+1，且X至多为3）。一名角色打出【杀】或【闪】响应【奇正相生】时，你获得打出的牌。',
bilibili_yutai_append:'<span style="font-family:yuanli">我是活动群团宠，我最爱的就是惹事然后被宵禁</span>',
bilibili_Firewin:'Fire.win',
bilibili_tixiang:'替像',
bilibili_tixiang_info:'锁定技。①新的一轮开始时，你按照[魏、蜀、吴、群、晋]的顺序获得当前势力的随机两张武将牌的所有无标签技能直至下一轮开始。②当你发动无标签技能结算结束后，你触发一次扩展内置彩蛋。',
bilibili_tixiang_append:'<span style="font-family:yuanli">我每个月都要换头像，我这儿有很多的鸟可以换</span>',
bolzenhui:'谮毁',
bolzenhui_info:'出牌阶段限一次，当你使用【杀】或黑色普通锦囊牌指定目标时，你可选择另一名能成为此牌目标的其他角色并选择一项：①令其也成为此牌的目标。②获得其区域里的一张牌，然后将此牌的使用者改为该角色。',
bolfuman:'抚蛮',
bolfuman2:'抚蛮',
bolfuman_info:'①出牌阶段每名角色限一次，你可以将一张手牌交给一名其他角色并标记为“抚蛮”且“抚蛮”牌的牌名视为【杀】。②一名角色使用或打出“抚蛮”牌结算结束后，你摸一张牌（若此牌造成过伤害，则改为摸两张牌）。',
bilibili_jinglingqiu:'精灵球',
bilibili_jinglingqiu_ab:'?',
bilibili_tiyi:'提议',
bilibili_tiyi_info:'出牌阶段，若你有牌，你可以记录一名有手牌的其他角色，然后与其议事。若议事有结果且为：红色，你与其各回复1点体力；黑色，你摸两张牌，其摸牌阶段多摸一张牌且手牌上限+1直到其下个回合结束。若议事无结果，你对其造成1点伤害。当你发动〖提议〗后，或场上有角色死亡后，若场上剩余存活的其他角色均已被〖提议〗记录，你清空〖提议〗角色记录且本回合不能发动〖提议〗。',
bilibili_zili:'资历',
bilibili_zili_info:'锁定技。①其他角色的摸牌阶段结束后，若该角色本阶段摸牌数A大于0，且你未记录X或X小于A，则你记录X为A。②其他角色的弃牌阶段结束后，若该角色的手牌上限B大于0，且你未记录Y或Y小于B，则你记录Y为B。③若你已有记录X，你的摸牌阶段摸牌基数视为X+1；若你已有记录Y，你的手牌上限视为Y+1。',
bilibili_zili_append:'<span style="font-family:yuanli">大佬你这么厉害，不如建一个群接纳喜欢你的扩展的人</span>',
bilibili_suixingsifeng:'随性似风',
bilibili_daili:'代理',
bilibili_daili_tag:'统',
bilibili_daili_info:'锁定技，新的一轮开始时，你移去所有“统”，然后若游戏轮数大于1，你随机获得场上所有其他游戏角色各一张于上一轮使用的所有排对应的实体牌的原类型为基本或普通锦囊牌的复制，称为“统”（“统”移动至其他区域时会被销毁）。',
bilibili_duoyang:'多样',
bilibili_duoyangx:'多样',
bilibili_duoyang_info:'锁定技，游戏开始时，你获得“曹操”、“刘备”、“孙权”卡牌各一张。',
bilibili_duoyang_append:'〖多样〗衍生武将卡功能：<br>衍生武将卡无主动使用方法，不计入手牌上限，当“曹操”/“刘备”/“孙权”处于你的手牌区时，你视为拥有技能〖奸雄〗/〖仁德〗/〖制衡〗。',
bilibili_duoyang_faq:'〖多样〗衍生武将卡功能',
bilibili_duoyang_faq_info:'<br>衍生武将卡无主动使用方法，不计入手牌上限，当“曹操”/“刘备”/“孙权”处于你的手牌区时，你视为拥有技能〖奸雄〗/〖仁德〗/〖制衡〗。',
bilibili_liaoxing:'瞭星',
bilibili_liaoxing_tag:'星',
bilibili_liaoxing_info:'锁定技。①分发起始手牌后，所有其他角色的手牌被标记为“星”。②一名角色失去“星”后，其获得等量的【影】。③一名角色失去【影】后，你摸等量的牌。',
bilibili_liaoxing_append:'<span style="font-family:yuanli">我是萌新（转型中），我也是个代更者，我还是萌新的朋友，我又是群机器人，所以我到底是...</span>',
bilibili_mx_kanpo:'看破',
bilibili_mx_kanpo_info:'其他角色指定你为技能目标时，你可以将自己移除目标。',
bilibili_xuxiang:'虚像',
bilibili_xuxiang_info:'锁定技，防止你受到的伤害。',
bilibili_Emptycity:'Empty city°',
bilibili_thunderlei:'雷',
bolshelie:'涉猎',
bolshelie_info:'摸牌阶段，你可以改为亮出牌堆顶的五张牌，然后选择获得其中花色不同的牌各一张。每轮限一次，结束阶段，若你本回合使用的花色数不小于4，你执行一个额外的摸牌阶段或出牌阶段（不能连续选择执行相同项）。',
bolgongxin:'攻心',
bolgongxin3:'攻心',
bolgongxin_info:'出牌阶段限一次，你可以观看一名其他角色的手牌，然后你可以展示其中一张牌并选择一项：1.弃置此牌；2.将此牌置于牌堆顶。若该角色手牌中的花色数因此减少，其不能响应你本回合使用的下一张牌。',
bilibili_zhiyou:'致优',
bilibili_zhiyou_info:'出牌阶段限一次，若你未拥有因〖致优〗获得的技能，你可以从其他游戏角色已发动过但未你未因〖致优〗选择的随机三个武将牌上的无标签技能中选择获得其中一个。',
bilibili_guanli:'管理',
bilibili_guanli_info:'锁定技。①你对未因〖致优〗获得过其武将牌上的技能的角色使用牌无距离和次数限制。②摸牌阶段，你多摸X张牌（X为你因〖致优〗获得过其武将牌上的技能的游戏角色数）③你因〖致优〗获得过其武将牌上的技能的角色于摸牌阶段多摸三张牌，然后交给你两张牌。',
bilibili_guanli_append:'<span style="font-family:yuanli">你高考复习要暂时退坑了，这次肯定要整一个大的</span>',
bilibili_Thunder:'Thunder',
bilibili_Thunder_info:'锁定技。①回合开始时，若你的护甲值不等于3-X，你将护甲值调整至3-X（X为你此前发动〖Thunder①〗的次数，且护甲值至少调整至0）。②若你的护甲值大于0，其他角色发动无标签技能后，若本局游戏未因〖Thunder②〗制作过此技能的卡牌，则你制作一张此技能的卡牌并获得之，使用此牌可获得此牌对应的技能（若有此技能则改为摸三张牌），然后若此牌是第一次被使用，则将此牌洗入牌堆，否则将此牌移出游戏。③若你没有护甲值，你使用的有指定目标的非【铁索连环】【借刀杀人】牌结算两次，摸牌时摸牌数翻倍，造成伤害时伤害值翻倍。',
bilibili_qianxi:'潜习',
bilibili_qianxi_info:'锁定技，当你受到伤害时，你将伤害值调整为1，然后防止你本回合后续受到的伤害，且其他角色使用牌不能指定你为目标。',
bilibili_qianxi_append:'<span style="font-family:yuanli">千幻雷音的密码是thunder，不是什么“Thunder”、“thunder，憋问了。”不带符号，不带空格。小雷音寺已解散，Thunder小游戏扩展的密码是thunderXYX，求求你们不要私信问我密码为什么不对了，憋问了。</span>',
bilibili_lonelypatients:'lonely patients',
bolsidi:'司敌',
bolsidi_info:'当你使用非延时锦囊牌结算完毕后，你可以选择一名未指定“司敌”目标的其他角色，并为其指定一名“司敌”目标角色（仅你可见）。其使用的下一张非延时锦囊牌指定目标后，清除你为其指定的“司敌”目标角色，若此时其使用此牌仅指定“司敌”目标为唯一目标，且目标：为你，你摸一张牌；不为你，你可以选择一项：⒈取消此牌目标，然后若场上没有处于濒死的角色，你对其造成1点伤害；⒉摸两张牌。',
bilibili_meihua:'美化',
bilibili_meihua_info:'分发起始手牌前，你将牌堆中的所有装备牌置于武将牌上（这些牌可如手牌般使用，且每回合每种副类别的牌限使用一次）。你的装备栏不会被废除。没有〖美化〗的角色的出牌阶段限一次，其可以交给拥有〖美化〗的一名角色并将一张手牌当作本局游戏牌堆组成的一张装备牌对自己使用。',
bilibili_gongyou:'攻优',
bilibili_gongyou_info:'锁定技。若场上存活角色的一半（向上取整）的装备区里有：武器牌，你视为拥有技能〖枭姬〗；防具牌，你视为拥有技能〖旋风〗；防御马，你视为拥有技能〖飞影〗；攻击马，你视为拥有技能〖马术〗。若均不满足，你视为拥有技能〖绮冑〗。',
bilibili_qianyin:'潜隐',
bilibili_qianyin_info:'锁定技。你不执行你的常规回合。每轮开始时，你进行一个额外回合。',
bilibili_qianyin_append:'<span style="font-family:yuanli">之前你说的，我把所有图抠好了给我管理的哈</span>',
bilibili_renwang:'仁望值',
bolyuanqing:'渊清',
bolyuanqing_info:'出牌阶段限一次，你可以展示一张手牌，然后其他角色可依次选择是否弃置其中一张颜色与此牌相同的牌并摸一张牌。然后你可以将其中一张弃置的牌置于牌堆顶。',
bolshuchen:'疏陈',
bolshuchen_info:'当一名角色进入濒死状态时，你可以消耗至多3点'+get.RenWangInform()+'并摸等量张牌，然后你可以交给其至多等量张牌。',
bolxiezheng:'挟政',
bolxiezheng_info:'弃牌阶段结束时，你可以消耗1点'+get.RenWangInform()+'并令一名角色弃置X张牌（X为本阶段你弃置的牌数）。',
bol_zhangzhongjing:'TW张机',
bolliaoyi:'疗疫',
bolliaoyi_info:'出牌阶段开始时，你可以令一名角色获得从牌堆或弃牌堆中获得其上个回合开始至现在失去过的牌的类型的牌各一张。',
bolbinglun:'病论',
bolbinglun_info:'出牌阶段限一次，你可以失去至多3点'+get.RenWangInform()+'，令：⒈等量名角色各选择执行以下一项；⒉一名角色执行以下等量项。①将手牌数补至体力上限（至多摸五张）；②回复1点体力；③防止下一次受到的伤害直到回合开始。',
boldanji:'单骑',
boldanji_info:'觉醒技，准备阶段，若你的手牌数大于你的体力值且本局游戏的主公不为刘备，你减1点体力上限，然后获得〖马术〗和〖怒斩〗，且本局游戏中你每回合使用的第一张转化【杀】结算完毕后，你摸一张牌。',
bolduliao:'毒獠',
bolduliao_info:'锁定技，一名角色使用牌时，若此牌上次进入弃牌堆前在你的区域，则你令此牌无效，然后其对你造成1点伤害。',
bolhuidu:'秽妒',
bolhuidu_info:'当你造成或受到伤害时，若伤害来源为：男性，其可以重铸任意张牌并防止此伤害；女性，你可以选择一个区域，令其重铸此区域的所有牌。',
bolfushou:'覆手',
bolfushou_info:'觉醒技，一名角色的回合结束时，若你的体力值不为全场最高，则交换你的手牌和本回合进入且位于弃牌堆的牌，然后交换牌堆和弃牌堆，最后交换你的体力值和体力上限（溢出的体力值改为增加等量护甲）。',
//千里走单骑
DJ_caiyang:'蔡阳',
DJ_pujing:'普净',
DJ_huban:'胡班',
//十常侍·存活
biliscs_zhangrang:'张让',
biliscs_zhaozhong:'赵忠',
biliscs_sunzhang:'孙璋',
biliscs_bilan:'毕岚',
biliscs_xiayun:'夏恽',
biliscs_hankui:'韩悝',
biliscs_lisong:'栗嵩',
biliscs_duangui:'段珪',
biliscs_guosheng:'郭胜',
biliscs_gaowang:'高望',
//十常侍·死亡
biliscsx_zhangrang:'张让',
biliscsx_zhaozhong:'赵忠',
biliscsx_sunzhang:'孙璋',
biliscsx_bilan:'毕岚',
biliscsx_xiayun:'夏恽',
biliscsx_hankui:'韩悝',
biliscsx_lisong:'栗嵩',
biliscsx_duangui:'段珪',
biliscsx_guosheng:'郭胜',
biliscsx_gaowang:'高望',
boldingpan:'定叛',
boldingpan_info:'出牌阶段限X次，你可以令一名装备区里有牌的角色摸一张牌，然后其选择一项：1.令你弃置其装备区里的一张牌；2.获得其装备区里的所有牌，然后你对其造成1点伤害。（X为场上存活的最大阵营角色数）',
bolfenxin:'焚心',
bolfenxin_info:'锁定技，一名其他角色首次受到伤害后，你须选择未选择过的一项：1.你发动〖竭缘〗减少伤害时无视体力值限制；2.你发动〖竭缘〗增加伤害时无视体力值限制；3.你发动〖竭缘〗选择的牌时无颜色限制，且可以选择装备区的牌。',
bolyingtu:'营图',
bolyingtu_info:'①当你的上家于摸牌阶段外获得牌后，你可以获得其等量的牌，然后将等量的牌交给你的下家。②当你的下家使用【杀】或【决斗】指定第一个目标时，若目标角色不包含你和你的上家，则你可以取消此牌的所有目标，然后将此牌目标改为你的上家。',
bolcongshi:'从势',
bolcongshi_info:'锁定技。①体力值最大的角色对你的上家和下家使用牌无距离限制。②有角色使用因〖从势①〗增加距离的牌对你的上家或下家造成伤害后，你回复1点体力。',
bol_fuhuanghou:'TW伏寿',
},
};
for(var i in huodongcharacter.character){
if(huodongcharacter.characterSort.huodongcharacter.Cothers.includes(i)) huodongcharacter.character[i][4].push('unseen');
huodongcharacter.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/image/character/'+i+'.jpg');
if(!lib.config.extension_活动配件_DanJi&&i.indexOf('DJ_')==0) delete huodongcharacter.character[i];
if(!lib.config.extension_活动配件_SCS&&i.indexOf('biliscs_')+i.indexOf('biliscsx_')!=-2) delete huodongcharacter.character[i];
}
return huodongcharacter;
});
lib.config.all.characters.push('huodongcharacter');
lib.config.all.sgscharacters.push('huodongcharacter');
if(!lib.config.characters.includes('huodongcharacter')) lib.config.characters.remove('huodongcharacter');
lib.translate['huodongcharacter_character_config']='<span style="font-family: xingkai">其他武将</span>';
//卡包
};
/*
模板
//简易武将包模板(不可关闭)
game.addCharacterPack({
character:{
},
characterIntro:{
},
skill:{
},
translate:{
},
},'武将包中文名');
//简易卡包模板(不可关闭)
game.addCardPack({
card:{
},
skill:{
},
translate:{
},
list:[]
},'卡包中文名');
//复杂武将包模板(可关闭)
game.import('character',function(){
var 武将包英文名={
name:'武将包英文名',
connect:true,
characterSort:{
武将包英文名:{
},
},
character:{
},
skill:{
},
translate:{
},
};
for(var i in 武将包英文名.character){
武将包英文名.character[i][4].push(((lib.device||lib.node)?'ext:':'db:extension-')+'活动武将/'+i+'.jpg');
}
return 武将包英文名;
});
lib.config.all.characters.push('武将包英文名');
lib.config.all.sgscharacters.push('武将包英文名');
if(!lib.config.characters.includes('武将包英文名')) lib.config.characters.remove('武将包英文名');
lib.translate['武将包英文名_character_config']='武将包中文名';
//复杂卡包模板(可关闭)
game.import('card',function(){
return {
name:'卡包英文名',
connect:true,
card:{
},
skill:{
},
translate:{
},
list:[],
};
});
lib.config.all.cards.push('卡包英文名');
if(!lib.config.cards.includes('卡包英文名')) lib.config.cards.remove('卡包英文名');
lib.translate['卡包英文名_card_config']='卡包中文名';
*/
},help:{
'活动武将':
'<li>韵律技：<br>三国杀微服机制，和转换技类似，韵律技分为平和仄两种状态，韵律技初始默认状态为平，满足转韵条件时韵律技会转成另一种状态并重置技能的发动次数'+
'<br>'+
'<li>仁望值：<br>三国杀外服机制（已废弃），拥有涉及仁望值技能的角色于游戏开始时获得1点仁望值，且其出牌阶段结束时，其根据以下满足的条件数增加等量的仁望值：①本阶段有角色获得过累计两张牌；②本阶段有角色回复过体力；③本阶段未对其他角色造成过伤害。一名角色的仁望值上限为5。'+
'<br>',
},get:{
},config:{
/*
//总有一天会维护好的功能
FenJieXianE:{
clear:true,
name:'<li>在线更新',
},
Huodong_Update: {
clear:true,
intro:'点击检查扩展更新',
name:'<button type="button">检查扩展更新</button>',
onclick:function(){
},
},
*/
FenJieXianA:{
clear:true,
name:'<li>功能杂项',
},
keymove:{
name:'key社角色移动',
intro:'将神武将包中的键社武将和国战多势力武将冈崎汐移至DIY包（重启生效）',
init:true,
},
HD_shanshan:{
name:'闪闪节特殊卡牌',
intro:'将牌堆中的一张方片5，一张方片6，一张方片7的【闪】替换为OL闪闪节特殊卡牌【闪闪】（重启生效，【闪闪】视为特殊卡牌，不视为牌堆的组成部分）',
init:false,
},
ShenZhangJiao:{
name:'神张角184彩蛋',
intro:'打开此选项后，神张角【异兆】“黄”标记上限为184',
init:true,
},
ShenSunQuan:{
name:'神孙权全扩技能池',
intro:'打开此选项后，神孙权【驭衡】获得的技能池扩大为全扩（实时生效）',
init:false,
onclick:function(bool){
game.saveConfig('extension_活动武将_ShenSunQuan',bool);
game.uncheck();
game.check();
},
},
edit_PingJianName:{
name:'编辑欢杀【评鉴】将池',
clear:true,
onclick:function(){
var container=ui.create.div('.popup-container.editor');
var node=container;
var map=lib.config.extension_活动武将_PingJianName||lib.skill.minipingjian.getList();
var str='//编辑欢杀【评鉴】将池';
str+='\nPingJianName=[\n';
for(var i=0;i<map.length;i++){
str+='"'+map[i]+'",';
if(i+1<map.length&&(i+1)%5==0) str+='\n';
}
str+='\n];';
node.code=str;
ui.window.classList.add('shortcutpaused');
ui.window.classList.add('systempaused');
var saveInput=function(){
var code;
if(container.editor) code=container.editor.getValue();
else if(container.textarea) code=container.textarea.value;
try{
var PingJianName=null;
eval(code);
if(!Array.isArray(PingJianName)){
throw('err');
}
}
catch(e){
var tip=lib.getErrorTip(e)||'';
alert('代码语法有错误，请仔细检查（'+e+'）'+tip);
window.focus();
if(container.editor) container.editor.focus();
else if(container.textarea) container.textarea.focus();
return;
}
game.saveConfig('extension_活动武将_PingJianName',PingJianName);
ui.window.classList.remove('shortcutpaused');
ui.window.classList.remove('systempaused');
container.delete();
container.code=code;
delete window.saveNonameInput;
};
window.saveNonameInput=saveInput;
var editor=ui.create.editor(container,saveInput);
if(node.aced){
ui.window.appendChild(node);
node.editor.setValue(node.code,1);
}
else if(lib.device=='ios'){
ui.window.appendChild(node);
if(!node.textarea){
var textarea=document.createElement('textarea');
editor.appendChild(textarea);
node.textarea=textarea;
lib.setScroll(textarea);
}
node.textarea.value=node.code;
}
else{
if(!window.CodeMirror){
lib.init.js(lib.assetURL+'game','codemirror',()=>lib.codeMirrorReady(node,editor));
lib.init.css(lib.assetURL+'layout/default','codemirror');
}
else lib.codeMirrorReady(node,editor);
}
},
},
reset_PingJianName:{
name:'重置欢杀【评鉴】将池',
clear:true,
onclick:function(){
if(confirm('是否重置已编辑的欢杀【评鉴】将池？')){
if(confirm('该操作不可撤销！是否确认重置？')){
game.saveConfig('extension_活动武将_PingJianName',null);
alert('自定义欢杀【评鉴】将池已重置');
}
}
},
},
HD_zhengsu:{
name:'整肃优化',
intro:'开启此选项后，吕范，皇甫嵩，朱儁整肃技能会获得优化（重启生效）',
init:true,
},
HD_renku:{
name:'仁库优化',
intro:'开启此选项后，仁库展示会获得优化（重启生效）',
init:true,
},
ShowSeatNum:{
name:'座位号显示',
intro:'开启此选项后，游戏开始时，所有角色显示号位（实时生效）',
init:true,
},
HD_REname:{
name:'名称还原',
intro:'开启此选项后，游戏内部分武将的名称翻译将调整为和官服一致（重启生效）',
init:false,
},
Boss_TZ_level:{
name:'挑战模式玩家等阶',
intro:'设置玩家在挑战模式中的等阶（重启生效）'+
'<br><li>一阶：无特权。'+
'<br><li>二阶：起始手牌+1。'+
'<br><li>三阶：体力上限+1，起始手牌+1，出【杀】次数+1。'+
'<br><li>四阶：体力上限+1，起始手牌+2，出【杀】次数+1，摸牌阶段摸牌数+1。'+
'<br><li>五阶：体力上限+2，起始手牌+2，出【杀】次数+1，摸牌阶段摸牌数+1，获得技能【重生】。',
init:'1',
item:{
'1':'一阶',
'2':'二阶',
'3':'三阶',
'4':'四阶',
'5':'五阶',
},
},
Boss_YZ_level:{
name:'挑战模式神武再世BOSS等阶',
intro:'设置神武再世BOSS在挑战模式中的等阶（重启生效）'+
'<br><li>一阶：无特权。'+
'<br><li>二阶：体力上限+1，起始手牌+1，登场时随机使用一张装备牌。'+
'<br><li>三阶：体力上限+2，起始手牌+1，出【杀】次数+2。'+
'<br><li>四阶：体力上限+3，起始手牌+2，出【杀】次数+1，摸牌阶段摸牌数+1。'+
'<br><li>五阶：体力上限+5，起始手牌+2，出【杀】次数+1，获得技能【困兽】。',
init:'1',
item:{
'1':'一阶',
'2':'二阶',
'3':'三阶',
'4':'四阶',
'5':'五阶',
},
},
KQShiJian:{
name:'抗秦事件',
intro:'选择不同事件，于游戏开始时令本局游戏进行本事件（挑战模式无效）（重启生效）',
init:'off',
item:{
off:'关闭',
bftq:'变法图强',
hzlh:'合纵连横',
cpzz:'长平之战',
hslh:'横扫六合',
lscq:'吕氏春秋',
sqzb:'沙丘之变',
zjzl:'赵姬之乱',
scth:'始称太后',
},
},
GDShiJian:{
name:'官渡事件',
intro:'选择不同事件，于游戏开始时令本局游戏进行本事件（挑战模式无效）（重启生效）',
init:'off',
item:{
off:'关闭',
hswc:'火烧乌巢',
lckf:'粮草匮乏',
zyzw:'斩颜良诛文丑',
sssb:'十胜十败',
xthj:'徐图缓进',
ljxc:'两军相持',
jsdy:'坚守待援',
yssq:'以弱胜强',
scej:'恃宠而骄',
},
},
clearFavoriteCharacter:{
name:'一键清除已收藏武将',
clear:true,
onclick:function(){
if(this.innerHTML=='<span>确认清除</span>'){
var list=[];
for(var i=0;i<lib.config.favouriteCharacter.length;i++){
var favname=lib.config.favouriteCharacter[i];
if(lib.character[favname]) list.push(favname);
}
lib.config.favouriteCharacter.removeArray(list);
game.saveConfig('favouriteCharacter',lib.config.favouriteCharacter);
game.uncheck();
game.check();
alert('已清除所有收藏武将');
}
else{
this.innerHTML='<span>确认清除</span>';
var that=this;
setTimeout(function(){
that.innerHTML='<span>一键清除已收藏武将</span>';
},1000);
}
},
},
clearRecentCharacter:{
name:'一键清除最近使用武将记录',
clear:true,
onclick:function(){
if(this.innerHTML=='<span>确认清除</span>'){
game.saveConfig('recentCharacter',[],true);
game.uncheck();
game.check();
alert('已清除本模式所有最近使用武将记录');
}
else{
this.innerHTML='<span>确认清除</span>';
var that=this;
setTimeout(function(){
that.innerHTML='<span>清除最近使用武将记录</span>';
},1000);
}
},
},
FenJieXianB:{
clear:true,
name:'<li>关于特效',
},
HDdamageAudio:{
name:'受击音效',
intro:'打开此选项后，受到属性伤害/受伤失去护甲/失去体力上限均会播放特定音效（实时生效）',
init:true,
},
HDfightAudio:{
name:'游戏播报',
intro:'游戏播报包括以下内容（实时生效）'+
'<br><li>游戏开始播报(让步十周年UI)'+
'<br><li>癫狂屠戮，万军取首播报'+
'<br><li>医术高超，妙手回春播报',
init:true,
},
HDkillAudio:{
name:'击杀播报',
intro:'击杀角色时播放对应配音',
init:'old',
item:{
off:'关闭',
old:'旧版',
new:'新版',
},
},
HDskillAnimateAudio:{
name:'skillAnimation技能音效',
intro:'打开此选项后，含skillAnimation标签的技能发动时将会播放对应的音效',
init:true,
},
HD_bgmPlay:{
name:'OL互通版专属BGM',
intro:'打开此选项后，普通身份局将会播放OL互通版专属BGM'+
'<br>具体如下：'+
'<br><li>游戏选将专属BGM'+
'<br><li>初始主公势力bgm'+
'<br><li>游戏正常对局bgm'+
'<br><li>进入残局激昂bgm',
init:false,
},
FenJieXianD:{
clear:true,
name:'<li>关于国战',
},
HD_gzfazheng:{
name:'法正修改',
intro:'开启此选项后，国战法正【眩惑】调整为OL/手杀版本（重启生效）',
init:false,
},
HD_gzbianfuren:{
name:'卞夫人修改',
intro:'开启此选项后，国战卞夫人【挽危】调整为OL/十周年版本（重启生效）',
init:false,
},
FenJieXianZ:{
clear:true,
name:'<li>关于扩展',
},
DaoRuPeiJian:{
name:'导入【活动配件】',
clear:true,
onclick:function(){
alert('导入配件中');
window.HuoDongOpenLoading=function(){
var dialog=ui.create.div('.HuoDong-loading',document.body);
var text=ui.create.div('.HuoDong-loading-text',dialog);
dialog.subViews={text};
return dialog;
};
game.DaoRuPeiJian=function(){
var loading=window.HuoDongOpenLoading();
loading.subViews.text.innerHTML='正在导入配件，请稍后。。。。。。';
var fileToLoad='extension/活动武将/活动配件.zip';
if(game.readFile){
game.readFile(fileToLoad,function(data){
game.importExtension(data,function(){
alert('配件导入完成，游戏即将重启');
game.reload();
});
});
}
};
setTimeout(function(){
game.DaoRuPeiJian();
},1000);
},
},
DeleteHuoDong:{
name:'删除扩展',
clear:true,
onclick:function(){
if(this.innerHTML=='<span>确认删除</span>'){
game.removeExtension('活动武将');
game.removeExtension('活动配件');
game.reload();
}
else{
this.innerHTML='<span>确认删除</span>';
var that=this;
setTimeout(function(){
that.innerHTML='<span>删除扩展</span>';
},1000);
}
},
},
},package:{
intro:'新人制作扩展，希望大家支持。'+
'<br>新人技术不足，希望大家包涵。'+
'<br><a href="https://github.com/mengxinzxz/HuoDong-update.git">点击前往活动武将Github仓库</a>'+
'<br>本扩展需同活动配件一起使用，进入游戏后，若没有此扩展/配件版本不同于现版本则会自动导入。若无法导入请万能导入活动配件。'+
//'<br><li>欢迎大家进群支持活动武将'+
//入群二维码图片
//'<br><img style=width:238px src='+lib.assetURL+'extension/活动武将/HuoDong_QQ.png>',
'',
author:'萌新（转型中）',
diskURL:'',
forumURL:'',
version:'0.0.9',
//新人制作扩展，希望大家支持。
//新人技术不足，希望大家包涵。
//壹、贰、叁、肆、伍、陆、柒、捌、玖、拾
},files:{'character':[],'card':[],'skill':[]}}})